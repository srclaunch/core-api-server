var Pl=Object.defineProperty;var Ui=Object.getOwnPropertySymbols;var yl=Object.prototype.hasOwnProperty,Fl=Object.prototype.propertyIsEnumerable;var Le=(a,B,N)=>B in a?Pl(a,B,{enumerable:!0,configurable:!0,writable:!0,value:N}):a[B]=N,qe=(a,B)=>{for(var N in B||(B={}))yl.call(B,N)&&Le(a,N,B[N]);if(Ui)for(var N of Ui(B))Fl.call(B,N)&&Le(a,N,B[N]);return a};var Wa=(a=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(a,{get:(B,N)=>(typeof require!="undefined"?require:B)[N]}):a)(function(a){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+a+'" is not supported')});var ga=(a,B,N)=>(Le(a,typeof B!="symbol"?B+"":B,N),N);var Ni;(function(a){a.Comment="comment",a.Create="create",a.Delete="delete",a.Edit="edit",a.Invoice="invoice",a.Message="message",a.PageView="pageView",a.Paid="paid",a.Payment="payment",a.Purchase="purchase",a.Referral="referral",a.Renewal="renewal",a.Signup="signup",a.Subscription="subscription",a.Upgrade="upgrade"})(Ni||(Ni={}));var Di;(function(a){a.Business="business",a.Engineering="engineering",a.Exception="exception",a.LogMessage="log-message",a.Marketing="marketing",a.PageLeave="page-leave",a.PageView="page-view",a.Product="product",a.QualityManagement="quality-management",a.UserAccess="user-access",a.UserLogin="user-login",a.UserLogout="user-logout",a.UserSignup="user-signup",a.UserPreferencesChanged="user-preferences-changed",a.WebsiteVisit="website-visit"})(Di||(Di={}));var Pi;(function(a){a.CloseTab="close-tab",a.ExternalLink="external-link",a.NavigateAway="navigate-away",a.Unknown="unknown"})(Pi||(Pi={}));var yi;(function(a){a.Ecs="Ecs"})(yi||(yi={}));var Fi;(function(a){a.Finished="Finished",a.Queued="Queued",a.Running="Running",a.Started="Started"})(Fi||(Fi={}));var ki;(function(a){a.Mobile="mobile",a.TV="tv",a.Watch="watch",a.Web="web"})(ki||(ki={}));var Mi;(function(a){a.Development="Development",a.NonProduction="NonProduction",a.Production="Production"})(Mi||(Mi={}));var Li;(function(a){a.Completed="completed",a.Started="started",a.Uncompleted="uncompleted"})(Li||(Li={}));var qi;(function(a){a.Build="Build",a.Deployment="Deployment",a.Test="Test"})(qi||(qi={}));var Gi;(function(a){a.Canceled="Canceled",a.Completed="Completed",a.Failed="Failed",a.Running="Running",a.Queued="Queued",a.Waiting="Waiting"})(Gi||(Gi={}));var wi;(function(a){a.Canceled="Canceled",a.Completed="Completed",a.Failed="Failed",a.Running="Running",a.Queued="Queued",a.Waiting="Waiting"})(wi||(wi={}));var Ki;(function(a){a.ForgotPassword="forgot_password",a.Index="index",a.Login="login",a.PageNotFound="404",a.Signup="signup",a.VerifyCode="verify_code"})(Ki||(Ki={}));var xi;(function(a){a.Info="info",a.Warning="warning",a.Error="error",a.Success="success"})(xi||(xi={}));var Oi;(function(a){a.Details="details",a.Dialog="dialog"})(Oi||(Oi={}));var ji;(function(a){a.Info="info",a.Warning="warning",a.Error="error",a.Success="success"})(ji||(ji={}));var Hi;(function(a){a.AccountBalance="AccountBalance",a.UserAssets="UserAssets",a.UserCreditCardDebt="UserCreditCardDebt",a.UserCreditLimit="UserCreditLimit",a.UserCreditUtilization="UserCreditUtilization",a.UserDebt="UserDebt",a.UserInvestments="UserInvestments",a.UserRetirement="UserRetirement",a.UserSavings="UserSavings"})(Hi||(Hi={}));var Wi;(function(a){a.DateTime="date_time",a.True="true",a.False="false",a.UniqueId="unique_id"})(Wi||(Wi={}));var zi;(function(a){a.DomainModel="domain_entity",a.GenericModel="generic_entity"})(zi||(zi={}));var Vi;(function(a){a.AirportCode="airport-code",a.BankIDCode="bank-id-code",a.BitcoinAddress="bitcoin-address",a.Boolean="boolean",a.City="city",a.Color="color",a.CountryCode="country-code",a.CreditCard="credit-card",a.CurrencyAmount="currency-amount",a.CurrencyCode="currency-code",a.DataURI="data-uri",a.Date="date",a.DateRange="date-range",a.DateTime="date-time",a.DayOfMonth="day-of-month",a.DomainName="domain-name",a.EmailAddress="email-address",a.EthereumAddress="ethereum-address",a.EAN="european-article-number",a.EIN="employer-identification-number",a.Float="float",a.GeographicCoordinate="geographic-coordinate",a.GeographicCoordinates="geographic-coordinates",a.GitRepositoryURL="git-repository-url",a.HSLColor="hsl-color",a.HexColor="hex-color",a.Hexadecimal="hexadecimal",a.IBAN="international-bank-account-number",a.IMEI="international-mobile-equipment-identifier",a.IPAddress="ip-address",a.IPAddressRange="ip-address-range",a.ISBN="international-standard-book-number",a.ISIN="international-stock-number",a.ISMN="international-standard-music-number",a.ISSN="international-standard-serial-number",a.ISO8601="iso-8601",a.ISO31661Alpha2="iso-31661-alpha-2",a.ISO31661Alpha3="iso-31661-alpha-3",a.ISO4217="iso-4217",a.Image="image",a.Integer="integer",a.JSON="json",a.LanguageCode="language-code",a.LicensePlateNumber="license-plate-number",a.LongText="long-text",a.MD5="md5",a.Markdown="markdown",a.Menu="menu",a.Number="number",a.MACAddress="mac-address",a.MagnetURI="magnet-uri",a.MimeType="mime-type",a.Month="month",a.Password="password",a.PassportNumber="passport-number",a.Percent="percent",a.PhoneNumber="phone-number",a.Port="port",a.PostalCode="postal-code",a.Province="province",a.RFC3339="rfc-3339",a.RGBColor="rgb-color",a.SemanticVersion="semantic-version",a.SSN="social-security-number",a.State="state",a.StreetAddress="street-address",a.String="string",a.Tags="tags",a.TaxIDNumber="tax-id-number",a.Time="time",a.TimeOfDay="time-of-day",a.TimeRange="time-range",a.TimezoneRegion="timezone-region",a.URL="url",a.URLPath="url-path",a.UUID="uuid",a.VATIDNumber="value-added-tax-id-number",a.VerificationCode="verification-code",a.Video="video",a.Weekday="weekday",a.Year="year"})(Vi||(Vi={}));var Ri;(function(a){a.Critical="Critical",a.Error="Error",a.Fatal="Fatal",a.Warning="Warning"})(Ri||(Ri={}));var n;(function(a){a.Contains="contains",a.HasCharacterCount="has-character-count",a.HasNumberCount="has-number-count",a.HasLetterCount="has-letter-count",a.HasLowercaseCount="has-lowercase-count",a.HasSpacesCount="has-spaces-count",a.HasSymbolCount="has-symbol-count",a.HasUppercaseCount="has-uppercase-count",a.IsAfter="is-after",a.IsAfterOrEqual="is-after-or-equal",a.IsAirport="is-airport",a.IsAlpha="is-alpha",a.IsAlphanumeric="is-alphanumeric",a.IsAlgorithmHash="is-algorithm-hash",a.IsAscii="is-ascii",a.IsBase64="is-base-64",a.IsBefore="is-before",a.IsBeforeOrAfter="is-before-or-after",a.IsBeforeOrEqual="is-before-or-equal",a.IsBetween="is-between",a.IsBIC="is-bic",a.IsBitcoinAddress="is-bitcoin-address",a.IsBoolean="is-boolean",a.IsColor="is-color",a.IsComplexEnough="is-complex-enough",a.IsCountry="is-country",a.IsCreditCard="is-credit-card",a.IsCurrency="is-currency",a.IsDataURI="is-data-uri",a.IsDate="is-date",a.IsDateRange="is-date-range",a.IsDateTime="is-date-time",a.IsDayOfMonth="is-day-of-month",a.IsDecimal="is-decimal",a.IsDivisibleBy="is-divisible-by",a.IsDomainName="is-domain-name",a.IsEmailAddress="is-email-address",a.IsEthereumAddress="is-ethereum-address",a.IsEAN="is-ean",a.IsEIN="is-ein",a.IsEqual="is-equal",a.IsEvenNumber="is-even-number",a.IsFloat="is-float",a.IsIBAN="is-iban",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsHSLColor="is-hsl-color",a.IsHexColor="is-hex-color",a.IsHexadecimal="is-hexadecimal",a.IsIdentityCardCode="is-identity-card-code",a.IsIMEI="is-imei",a.IsInIPAddressRange="is-in-ip-address-range",a.IsInList="is-in-list",a.IsInTheLast="is-in-the-last",a.IsInteger="is-integer",a.IsIPAddress="is-ip-address",a.IsIPAddressRange="is-ip-address-range",a.IsISBN="is-isbn",a.IsISIN="is-isin",a.IsISMN="is-ismn",a.IsISRC="is-isrc",a.IsISSN="is-issn",a.IsISO4217="is-iso-4217",a.IsISO8601="is-iso-8601",a.IsISO31661Alpha2="is-iso-31661-alpha-2",a.IsISO31661Alpha3="is-iso-31661-alpha-3",a.IsJSON="is-json",a.IsLanguage="is-language",a.IsLatitude="is-latitude",a.IsLongitude="is-longitude",a.IsLengthEqual="is-length-equal",a.IsLengthGreaterThan="is-length-greater-than",a.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",a.IsLengthLessThan="is-length-less-than",a.IsLengthLessThanOrEqual="is-length-less-than-or-equal",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsLicensePlateNumber="is-license-plate-number",a.IsLowercase="is-lowercase",a.IsOctal="is-octal",a.IsMACAddress="is-mac-address",a.IsMD5="is-md5",a.IsMagnetURI="is-magnet-uri",a.IsMarkdown="is-markdown",a.IsMimeType="is-mime-type",a.IsMonth="is-month",a.IsNegativeNumber="is-negative-number",a.IsNotDate="is-not-date",a.IsNotEqual="is-not-equal",a.IsNotInIPAddressRange="is-not-in-ip-address-range",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsNotRegexMatch="is-not-regex-match",a.IsNotToday="is-not-today",a.IsNumber="is-number",a.IsNumeric="is-numeric",a.IsOddNumber="is-odd-number",a.IsPassportNumber="is-passport-number",a.IsPhoneNumber="is-phone-number",a.IsPort="is-port",a.IsPositiveNumber="is-positive-number",a.IsPostalCode="is-postal-code",a.IsProvince="is-province",a.IsRGBColor="is-rgb-color",a.IsRegexMatch="is-regex-match",a.IsRequired="is-required",a.IsSemanticVersion="is-semantic-version",a.IsSlug="is-slug",a.IsSSN="is-ssn",a.IsState="is-state",a.IsStreetAddress="is-street-address",a.IsString="is-string",a.IsStrongPassword="is-strong-password",a.IsTags="is-tags",a.IsTaxIDNumber="is-tax-id-number",a.IsThisMonth="is-this-month",a.IsThisQuarter="is-this-quarter",a.IsThisWeek="is-this-week",a.IsThisWeekend="is-this-weekend",a.IsThisYear="is-this-year",a.IsTime="is-time",a.IsTimeOfDay="is-time-of-day",a.IsTimeRange="is-time-range",a.IsToday="is-today",a.IsURL="is-url",a.IsUUID="is-uuid",a.IsUppercase="is-uppercase",a.IsUsernameAvailable="is-username-available",a.IsValidStreetAddress="is-valid-street-address",a.IsVATIDNumber="is-vat-id-number",a.IsWeekday="is-weekday",a.IsWeekend="is-weekend",a.IsYear="is-year"})(n||(n={}));var Ji;(function(a){a.IsAuthenticated="is-authenticated",a.IsNotAuthenticated="is-not-authenticated",a.IsUsernameAvailable="is-username-available",a.PasswordMismatch="password-mismatch"})(Ji||(Ji={}));var Yi;(function(a){a[a.IsHSLColor=n.IsHSLColor]="IsHSLColor",a[a.IsHexColor=n.IsHexColor]="IsHexColor",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsRGBColor=n.IsRGBColor]="IsRGBColor",a[a.IsString=n.IsString]="IsString"})(Yi||(Yi={}));var Zi;(function(a){a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsCurrency=n.IsCurrency]="IsCurrency",a[a.IsDecimal=n.IsDecimal]="IsDecimal",a[a.IsDivisibleBy=n.IsDivisibleBy]="IsDivisibleBy",a[a.IsEvenNumber=n.IsEvenNumber]="IsEvenNumber",a[a.IsFloat=n.IsFloat]="IsFloat",a[a.IsGreaterThan=n.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=n.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=n.IsInteger]="IsInteger",a[a.IsISO8601=n.IsISO8601]="IsISO8601",a[a.IsLessThan=n.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=n.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNegativeNumber=n.IsNegativeNumber]="IsNegativeNumber",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsOddNumber=n.IsOddNumber]="IsOddNumber",a[a.IsPositiveNumber=n.IsPositiveNumber]="IsPositiveNumber"})(Zi||(Zi={}));var $i;(function(a){a[a.IsBitcoinAddress=n.IsBitcoinAddress]="IsBitcoinAddress",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull"})($i||($i={}));var Qi;(function(a){a[a.IsEthereumAddress=n.IsEthereumAddress]="IsEthereumAddress",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull"})(Qi||(Qi={}));var Xi;(function(a){a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsJSON=n.IsJSON]="IsJSON",a[a.IsLanguage=n.IsLanguage]="IsLanguage",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull"})(Xi||(Xi={}));var Ci;(function(a){a[a.IsAlpha=n.IsAlpha]="IsAlpha",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(Ci||(Ci={}));var au;(function(a){a[a.IsAlpha=n.IsAlpha]="IsAlpha",a[a.IsCountry=n.IsCountry]="IsCountry",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(au||(au={}));var eu;(function(a){a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsFloat=n.IsFloat]="IsFloat",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNumeric=n.IsNumeric]="IsNumeric"})(eu||(eu={}));var iu;(function(a){a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsFloat=n.IsFloat]="IsFloat",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNumeric=n.IsNumeric]="IsNumeric"})(iu||(iu={}));var uu;(function(a){a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsPostalCode=n.IsPostalCode]="IsPostalCode",a[a.IsNotNull=n.IsNotNull]="IsNotNull"})(uu||(uu={}));var nu;(function(a){a[a.IsAlpha=n.IsAlpha]="IsAlpha",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsProvince=n.IsProvince]="IsProvince",a[a.IsString=n.IsString]="IsString"})(nu||(nu={}));var su;(function(a){a[a.IsAlpha=n.IsAlpha]="IsAlpha",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsState=n.IsState]="IsState",a[a.IsString=n.IsString]="IsString"})(su||(su={}));var ru;(function(a){a[a.IsAlphanumeric=n.IsAlphanumeric]="IsAlphanumeric",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a[a.IsStreetAddress=n.IsStreetAddress]="IsStreetAddress"})(ru||(ru={}));var tu;(function(a){a[a.IsAirport=n.IsAirport]="IsAirport",a[a.IsAlpha=n.IsAlpha]="IsAlpha",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(tu||(tu={}));var lu;(function(a){a[a.IsAlgorithmHash=n.IsAlgorithmHash]="IsAlgorithmHash",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(lu||(lu={}));var mu;(function(a){a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsSemanticVersion=n.IsSemanticVersion]="IsSemanticVersion",a[a.IsString=n.IsString]="IsString"})(mu||(mu={}));var cu;(function(a){a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a[a.IsUUID=n.IsUUID]="IsUUID"})(cu||(cu={}));var ou;(function(a){a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsMD5=n.IsMD5]="IsMD5",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(ou||(ou={}));var Au;(function(a){a[a.IsBoolean=n.IsBoolean]="IsBoolean",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull"})(Au||(Au={}));var du;(function(a){a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsAfterOrEqual=n.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=n.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsDate=n.IsDate]="IsDate",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotDate=n.IsNotDate]="IsNotDate",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNotToday=n.IsNotToday]="IsNotToday",a[a.IsThisWeek=n.IsThisWeek]="IsThisWeek",a[a.IsThisMonth=n.IsThisMonth]="IsThisMonth",a[a.IsThisQuarter=n.IsThisQuarter]="IsThisQuarter",a[a.IsThisYear=n.IsThisYear]="IsThisYear",a[a.IsToday=n.IsToday]="IsToday",a[a.IsWeekend=n.IsWeekend]="IsWeekend"})(du||(du={}));var fu;(function(a){a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=n.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsDate=n.IsDate]="IsDate",a[a.IsDateRange=n.IsDateRange]="IsDateRange",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull"})(fu||(fu={}));var Iu;(function(a){a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsAfterOrEqual=n.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=n.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsDate=n.IsDate]="IsDate",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotDate=n.IsNotDate]="IsNotDate",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNotToday=n.IsNotToday]="IsNotToday",a[a.IsThisWeek=n.IsThisWeek]="IsThisWeek",a[a.IsThisMonth=n.IsThisMonth]="IsThisMonth",a[a.IsThisQuarter=n.IsThisQuarter]="IsThisQuarter",a[a.IsThisYear=n.IsThisYear]="IsThisYear",a[a.IsToday=n.IsToday]="IsToday",a[a.IsWeekend=n.IsWeekend]="IsWeekend"})(Iu||(Iu={}));var _u;(function(a){a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsAfterOrEqual=n.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=n.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsDayOfMonth=n.IsDayOfMonth]="IsDayOfMonth",a[a.IsEvenNumber=n.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsGreaterThan=n.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=n.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=n.IsInteger]="IsInteger",a[a.IsLessThan=n.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=n.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsOddNumber=n.IsOddNumber]="IsOddNumber",a[a.IsToday=n.IsToday]="IsToday",a[a.IsWeekday=n.IsWeekday]="IsWeekday",a[a.IsWeekend=n.IsWeekend]="IsWeekend"})(_u||(_u={}));var hu;(function(a){a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsAfterOrEqual=n.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=n.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsEvenNumber=n.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsGreaterThan=n.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=n.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=n.IsInteger]="IsInteger",a[a.IsLessThan=n.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=n.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsMonth=n.IsMonth]="IsMonth",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsOddNumber=n.IsOddNumber]="IsOddNumber",a[a.IsThisMonth=n.IsThisMonth]="IsThisMonth"})(hu||(hu={}));var gu;(function(a){a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsAfterOrEqual=n.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=n.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsTime=n.IsTime]="IsTime"})(gu||(gu={}));var Eu;(function(a){a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=n.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsTime=n.IsTime]="IsTime",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsTimeRange=n.IsTimeRange]="IsTimeRange"})(Eu||(Eu={}));var Su;(function(a){a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=n.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsTimeOfDay=n.IsTimeOfDay]="IsTimeOfDay",a[a.IsTimeRange=n.IsTimeRange]="IsTimeRange"})(Su||(Su={}));var Tu;(function(a){a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsAfterOrEqual=n.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=n.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsEvenNumber=n.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsGreaterThan=n.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=n.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=n.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=n.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsOddNumber=n.IsOddNumber]="IsOddNumber",a[a.IsWeekday=n.IsWeekday]="IsWeekday",a[a.IsWeekend=n.IsWeekend]="IsWeekend"})(Tu||(Tu={}));var pu;(function(a){a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsAfterOrEqual=n.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=n.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsEvenNumber=n.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsGreaterThan=n.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=n.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=n.IsInteger]="IsInteger",a[a.IsLessThan=n.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=n.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsOddNumber=n.IsOddNumber]="IsOddNumber",a[a.IsThisYear=n.IsThisYear]="IsThisYear",a[a.IsYear=n.IsYear]="IsYear"})(pu||(pu={}));var vu;(function(a){a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsHexadecimal=n.IsHexadecimal]="IsHexadecimal",a[a.IsLengthEqual=n.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=n.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=n.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=n.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=n.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(vu||(vu={}));var bu;(function(a){a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsJSON=n.IsJSON]="IsJSON",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull"})(bu||(bu={}));var Bu;(function(a){a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsMarkdown=n.IsMarkdown]="IsMarkdown",a[a.IsString=n.IsString]="IsString"})(Bu||(Bu={}));var Uu;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull"})(Uu||(Uu={}));var Nu;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull"})(Nu||(Nu={}));var Du;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsDataURI=n.IsDataURI]="IsDataURI",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(Du||(Du={}));var Pu;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsDomainName=n.IsDomainName]="IsDomainName",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(Pu||(Pu={}));var yu;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsEmailAddress=n.IsEmailAddress]="IsEmailAddress",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(yu||(yu={}));var Fu;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsIPAddress=n.IsIPAddress]="IsIPAddress",a[a.IsInIPAddressRange=n.IsInIPAddressRange]="IsInIPAddressRange",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotInIPAddressRange=n.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(Fu||(Fu={}));var ku;(function(a){a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsIPAddressRange=n.IsIPAddressRange]="IsIPAddressRange",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotInIPAddressRange=n.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(ku||(ku={}));var Mu;(function(a){a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsGreaterThan=n.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=n.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=n.IsInteger]="IsInteger",a[a.IsLessThan=n.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=n.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull"})(Mu||(Mu={}));var Lu;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsMACAddress=n.IsMACAddress]="IsMACAddress",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(Lu||(Lu={}));var qu;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsMagnetURI=n.IsMagnetURI]="IsMagnetURI",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(qu||(qu={}));var Gu;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsMimeType=n.IsMimeType]="IsMimeType",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(Gu||(Gu={}));var wu;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a[a.IsSlug=n.IsSlug]="IsSlug"})(wu||(wu={}));var Ku;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a[a.IsURL=n.IsURL]="IsURL"})(Ku||(Ku={}));var xu;(function(a){a[a.IsAfter=n.IsAfter]="IsAfter",a[a.IsAfterOrEqual=n.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=n.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=n.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=n.IsBetween]="IsBetween",a[a.IsDecimal=n.IsDecimal]="IsDecimal",a[a.IsDivisibleBy=n.IsDivisibleBy]="IsDivisibleBy",a[a.IsEAN=n.IsEAN]="IsEAN",a[a.IsEIN=n.IsEIN]="IsEIN",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsEvenNumber=n.IsEvenNumber]="IsEvenNumber",a[a.IsFloat=n.IsFloat]="IsFloat",a[a.IsGreaterThan=n.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=n.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInt=n.IsInteger]="IsInt",a[a.IsISBN=n.IsISBN]="IsISBN",a[a.IsISMN=n.IsISMN]="IsISMN",a[a.IsISSN=n.IsISSN]="IsISSN",a[a.IsLatitude=n.IsLatitude]="IsLatitude",a[a.IsLongitude=n.IsLongitude]="IsLongitude",a[a.IsLessThan=n.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=n.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsMACAddress=n.IsMACAddress]="IsMACAddress",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsNegativeNumber=n.IsNegativeNumber]="IsNegativeNumber",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsOddNumber=n.IsOddNumber]="IsOddNumber",a[a.IsPassportNumber=n.IsPassportNumber]="IsPassportNumber",a[a.IsPhoneNumber=n.IsPhoneNumber]="IsPhoneNumber",a[a.IsPort=n.IsPort]="IsPort",a[a.IsPositiveNumber=n.IsPositiveNumber]="IsPositiveNumber",a[a.IsPostalCode=n.IsPostalCode]="IsPostalCode",a[a.IsSemanticVersion=n.IsSemanticVersion]="IsSemanticVersion",a[a.IsSSN=n.IsSSN]="IsSSN",a[a.IsTaxIDNumber=n.IsTaxIDNumber]="IsTaxIDNumber",a[a.IsUUID=n.IsUUID]="IsUUID",a[a.IsVATIDNumber=n.IsVATIDNumber]="IsVATIDNumber"})(xu||(xu={}));var Ou;(function(a){a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsFloat=n.IsFloat]="IsFloat",a[a.IsGreaterThan=n.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=n.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=n.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=n.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsNumeric=n.IsNumeric]="IsNumeric"})(Ou||(Ou={}));var ju;(function(a){a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInteger=n.IsInteger]="IsInteger",a[a.IsGreaterThan=n.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=n.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=n.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=n.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsNumeric=n.IsNumeric]="IsNumeric"})(ju||(ju={}));var Hu;(function(a){a[a.IsCreditCard=n.IsCreditCard]="IsCreditCard",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsLengthEqual=n.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=n.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=n.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=n.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=n.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsRegexMatch=n.IsRegexMatch]="IsRegexMatch",a[a.IsNotRegexMatch=n.IsNotRegexMatch]="IsNotRegexMatch"})(Hu||(Hu={}));var Wu;(function(a){a[a.isEmailAddress=n.IsEmailAddress]="isEmailAddress",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsLengthEqual=n.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=n.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=n.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=n.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=n.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsRegexMatch=n.IsRegexMatch]="IsRegexMatch",a[a.IsNotRegexMatch=n.IsNotRegexMatch]="IsNotRegexMatch"})(Wu||(Wu={}));var zu;(function(a){a[a.IsLicensePlateNumber=n.IsLicensePlateNumber]="IsLicensePlateNumber",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=n.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsString=n.IsString]="IsString",a[a.IsRegexMatch=n.IsRegexMatch]="IsRegexMatch"})(zu||(zu={}));var Vu;(function(a){a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsPassportNumber=n.IsPassportNumber]="IsPassportNumber",a[a.IsString=n.IsString]="IsString",a[a.IsRegexMatch=n.IsRegexMatch]="IsRegexMatch"})(Vu||(Vu={}));var Ru;(function(a){a[a.IsComplexEnough=n.IsComplexEnough]="IsComplexEnough",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=n.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsLengthGreaterThan=n.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=n.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=n.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=n.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsStrongPassword=n.IsStrongPassword]="IsStrongPassword",a[a.IsString=n.IsString]="IsString",a[a.IsRegexMatch=n.IsRegexMatch]="IsRegexMatch"})(Ru||(Ru={}));var Ju;(function(a){a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=n.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsPhoneNumber=n.IsPhoneNumber]="IsPhoneNumber",a[a.IsRegexMatch=n.IsRegexMatch]="IsRegexMatch"})(Ju||(Ju={}));var Yu;(function(a){a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsSSN=n.IsSSN]="IsSSN",a[a.IsString=n.IsString]="IsString",a[a.IsRegexMatch=n.IsRegexMatch]="IsRegexMatch"})(Yu||(Yu={}));var Zu;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsBIC=n.IsBIC]="IsBIC",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(Zu||(Zu={}));var $u;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsEAN=n.IsEAN]="IsEAN",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})($u||($u={}));var Qu;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsEIN=n.IsEIN]="IsEIN",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(Qu||(Qu={}));var Xu;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsIBAN=n.IsIBAN]="IsIBAN",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(Xu||(Xu={}));var Cu;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsISBN=n.IsISBN]="IsISBN",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(Cu||(Cu={}));var an;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsISIN=n.IsISIN]="IsISIN",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(an||(an={}));var en;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsISMN=n.IsISMN]="IsISMN",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(en||(en={}));var un;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsISSN=n.IsISSN]="IsISSN",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString"})(un||(un={}));var nn;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a[a.IsTaxIDNumber=n.IsTaxIDNumber]="IsTaxIDNumber"})(nn||(nn={}));var sn;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsInList=n.IsInList]="IsInList",a[a.IsNotEqual=n.IsNotEqual]="IsNotEqual",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsString=n.IsString]="IsString",a[a.IsVATIDNumber=n.IsVATIDNumber]="IsVATIDNumber"})(sn||(sn={}));var rn;(function(a){a[a.Contains=n.Contains]="Contains",a[a.HasNumberCount=n.HasNumberCount]="HasNumberCount",a[a.HasLowercaseCount=n.HasLowercaseCount]="HasLowercaseCount",a[a.HasLetterCount=n.HasLetterCount]="HasLetterCount",a[a.HasSpacesCount=n.HasSpacesCount]="HasSpacesCount",a[a.HasSymbolCount=n.HasSymbolCount]="HasSymbolCount",a[a.HasUppercaseCount=n.HasUppercaseCount]="HasUppercaseCount",a[a.IsAlpha=n.IsAlpha]="IsAlpha",a[a.IsAlphanumeric=n.IsAlphanumeric]="IsAlphanumeric",a[a.IsAscii=n.IsAscii]="IsAscii",a[a.IsBase64=n.IsBase64]="IsBase64",a[a.IsColor=n.IsColor]="IsColor",a[a.IsComplexEnough=n.IsComplexEnough]="IsComplexEnough",a[a.IsCreditCard=n.IsCreditCard]="IsCreditCard",a[a.IsDataURI=n.IsDataURI]="IsDataURI",a[a.IsDomainName=n.IsDomainName]="IsDomainName",a[a.IsEmailAddress=n.IsEmailAddress]="IsEmailAddress",a[a.IsEthereumAddress=n.IsEthereumAddress]="IsEthereumAddress",a[a.IsEAN=n.IsEAN]="IsEAN",a[a.IsEIN=n.IsEIN]="IsEIN",a[a.IsEqual=n.IsEqual]="IsEqual",a[a.IsIBAN=n.IsIBAN]="IsIBAN",a[a.IsHSLColor=n.IsHSLColor]="IsHSLColor",a[a.IsHexColor=n.IsHexColor]="IsHexColor",a[a.IsHexadecimal=n.IsHexadecimal]="IsHexadecimal",a[a.IsIdentityCardCode=n.IsIdentityCardCode]="IsIdentityCardCode",a[a.IsIMEI=n.IsIMEI]="IsIMEI",a[a.IsInList=n.IsInList]="IsInList",a[a.IsIPAddress=n.IsIPAddress]="IsIPAddress",a[a.IsInIPAddressRange=n.IsInIPAddressRange]="IsInIPAddressRange",a[a.IsISBN=n.IsISBN]="IsISBN",a[a.IsISIN=n.IsISIN]="IsISIN",a[a.IsISMN=n.IsISMN]="IsISMN",a[a.IsISRC=n.IsISRC]="IsISRC",a[a.IsISSN=n.IsISSN]="IsISSN",a[a.IsLanguage=n.IsLanguage]="IsLanguage",a[a.IsLatitude=n.IsLatitude]="IsLatitude",a[a.IsLongitude=n.IsLongitude]="IsLongitude",a[a.IsLengthEqual=n.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=n.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=n.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=n.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=n.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsLicensePlateNumber=n.IsLicensePlateNumber]="IsLicensePlateNumber",a[a.IsLowercase=n.IsLowercase]="IsLowercase",a[a.IsOctal=n.IsOctal]="IsOctal",a[a.IsMACAddress=n.IsMACAddress]="IsMACAddress",a[a.IsMD5=n.IsMD5]="IsMD5",a[a.IsMagnetURI=n.IsMagnetURI]="IsMagnetURI",a[a.IsMarkdown=n.IsMarkdown]="IsMarkdown",a[a.IsMimeType=n.IsMimeType]="IsMimeType",a[a.IsMonth=n.IsMonth]="IsMonth",a[a.IsNotInIPAddressRange=n.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNotNull=n.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=n.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsNumber=n.IsNumber]="IsNumber",a[a.IsNumeric=n.IsNumeric]="IsNumeric",a[a.IsPassportNumber=n.IsPassportNumber]="IsPassportNumber",a[a.IsPhoneNumber=n.IsPhoneNumber]="IsPhoneNumber",a[a.IsPort=n.IsPort]="IsPort",a[a.IsPostalCode=n.IsPostalCode]="IsPostalCode",a[a.IsProvince=n.IsProvince]="IsProvince",a[a.IsRegexMatch=n.IsRegexMatch]="IsRegexMatch",a[a.IsSemanticVersion=n.IsSemanticVersion]="IsSemanticVersion",a[a.IsSlug=n.IsSlug]="IsSlug",a[a.IsSSN=n.IsSSN]="IsSSN",a[a.IsState=n.IsState]="IsState",a[a.IsStreetAddress=n.IsStreetAddress]="IsStreetAddress",a[a.IsString=n.IsString]="IsString",a[a.IsTaxIDNumber=n.IsTaxIDNumber]="IsTaxIDNumber",a[a.IsURL=n.IsURL]="IsURL",a[a.IsUUID=n.IsUUID]="IsUUID",a[a.IsUppercase=n.IsUppercase]="IsUppercase",a[a.IsVATIDNumber=n.IsVATIDNumber]="IsVATIDNumber",a[a.IsWeekday=n.IsWeekday]="IsWeekday",a[a.IsWeekend=n.IsWeekend]="IsWeekend",a[a.IsYear=n.IsYear]="IsYear"})(rn||(rn={}));var tn;(function(a){a[a.Contains=n.Contains]="Contains",a[a.IsAlpha=n.IsAlpha]="IsAlpha",a[a.IsAlphanumeric=n.IsAlphanumeric]="IsAlphanumeric",a[a.IsInList=n.IsInList]="IsInList",a[a.IsMarkdown=n.IsMarkdown]="IsMarkdown",a[a.IsNotInList=n.IsNotInList]="IsNotInList",a[a.IsNumeric=n.IsNumeric]="IsNumeric",a[a.IsLowercase=n.IsLowercase]="IsLowercase",a[a.IsString=n.IsString]="IsString",a[a.IsUppercase=n.IsUppercase]="IsUppercase"})(tn||(tn={}));var ln;(function(a){a.InvalidCharacters="invalid-characters",a.InvalidPattern="invalid-pattern",a.NotComplexEnough="not-complex-enough",a.NotUnique="not-unique",a.NotValidEmail="not-valid-email",a.TooLong="too-long",a.TooShort="too-short",a.Required="required"})(ln||(ln={}));var mn;(function(a){a[a.Allowed=0]="Allowed",a[a.Blocked=1]="Blocked"})(mn||(mn={}));var cn;(function(a){a.Canceled="Canceled",a.Completed="Completed",a.Created="Created",a.Faulted="Faulted",a.Queued="Queued",a.Running="Running",a.Waiting="Waiting"})(cn||(cn={}));var on;(function(a){a.Archived="ARCHIVED",a.Compromised="COMPROMISED",a.Confirmed="CONFIRMED",a.ForcePasswordChange="FORCE_CHANGE_PASSWORD",a.ResetRequired="RESET_REQUIRED",a.Unconfirmed="UNCONFIRMED",a.Unknown="UNKNOWN"})(on||(on={}));var An;(function(a){a.Code="code",a.Link="link"})(An||(An={}));var dn;(function(a){a.Owner="Owner",a.Admin="Admin",a.User="User",a.Visitor="Visitor"})(dn||(dn={}));var fn;(function(a){a.RequiresPaymentMethod="requires_payment_method",a.RequiresConfirmation="requires_confirmation",a.RequiresAction="requires_action",a.Processing="processing",a.RequiresCapture="requires_capture",a.Canceled="canceled",a.Succeeded="succeeded"})(fn||(fn={}));var In;(function(a){a.Incomplete="incomplete",a.IncompleteExpired="incomplete_expired",a.Trialing="trialing",a.Active="active",a.PastDue="past_due",a.Canceled="canceled",a.Unpaid="unpaid"})(In||(In={}));var _n;(function(a){a.Monthly="monthly",a.Quarterly="quarterly",a.Yearly="yearly",a.Lifetime="lifetime"})(_n||(_n={}));var hn;(function(a){a.Delivered="delivered",a.Read="read",a.Sending="sending",a.Sent="sent"})(hn||(hn={}));var gn;(function(a){a.Audio="audio",a.File="file",a.Image="image",a.Text="text",a.Video="video"})(gn||(gn={}));var En;(function(a){a.Audio="audio",a.File="file",a.Image="image",a.Video="video"})(En||(En={}));var Sn;(function(a){a.Angry="angry",a.Laugh="laugh",a.Like="like",a.Love="love",a.Sad="sad",a.Wow="wow",a.Wink="wink",a.Yay="yay"})(Sn||(Sn={}));var Tn;(function(a){a.Email="email",a.PhoneNumber="phone_number"})(Tn||(Tn={}));var Se;(function(a){a.Analytics="analytics",a.Critical="critical",a.Debug="debug",a.Exception="exception",a.Http="http",a.Info="info",a.Warning="warning"})(Se||(Se={}));var Ga;(function(a){a.Delete="delete",a.Get="get",a.Head="head",a.Patch="patch",a.Post="post",a.Put="put"})(Ga||(Ga={}));var pn;(function(a){a[a.CONTINUE=100]="CONTINUE",a[a.SWITCHING_PROTOCOLS=101]="SWITCHING_PROTOCOLS",a[a.PROCESSING=102]="PROCESSING",a[a.OK=200]="OK",a[a.CREATED=201]="CREATED",a[a.ACCEPTED=202]="ACCEPTED",a[a.NON_AUTHORITATIVE_INFORMATION=203]="NON_AUTHORITATIVE_INFORMATION",a[a.NO_CONTENT=204]="NO_CONTENT",a[a.RESET_CONTENT=205]="RESET_CONTENT",a[a.PARTIAL_CONTENT=206]="PARTIAL_CONTENT",a[a.MULTI_STATUS=207]="MULTI_STATUS",a[a.ALREADY_REPORTED=208]="ALREADY_REPORTED",a[a.IM_USED=226]="IM_USED",a[a.MULTIPLE_CHOICES=300]="MULTIPLE_CHOICES",a[a.MOVED_PERMANENTLY=301]="MOVED_PERMANENTLY",a[a.FOUND=302]="FOUND",a[a.SEE_OTHER=303]="SEE_OTHER",a[a.NOT_MODIFIED=304]="NOT_MODIFIED",a[a.USE_PROXY=305]="USE_PROXY",a[a.SWITCH_PROXY=306]="SWITCH_PROXY",a[a.TEMPORARY_REDIRECT=307]="TEMPORARY_REDIRECT",a[a.PERMANENT_REDIRECT=308]="PERMANENT_REDIRECT",a[a.BAD_REQUEST=400]="BAD_REQUEST",a[a.UNAUTHORIZED=401]="UNAUTHORIZED",a[a.PAYMENT_REQUIRED=402]="PAYMENT_REQUIRED",a[a.FORBIDDEN=403]="FORBIDDEN",a[a.NOT_FOUND=404]="NOT_FOUND",a[a.METHOD_NOT_ALLOWED=405]="METHOD_NOT_ALLOWED",a[a.NOT_ACCEPTABLE=406]="NOT_ACCEPTABLE",a[a.PROXY_AUTHENTICATION_REQUIRED=407]="PROXY_AUTHENTICATION_REQUIRED",a[a.REQUEST_TIMEOUT=408]="REQUEST_TIMEOUT",a[a.CONFLICT=409]="CONFLICT",a[a.GONE=410]="GONE",a[a.LENGTH_REQUIRED=411]="LENGTH_REQUIRED",a[a.PRECONDITION_FAILED=412]="PRECONDITION_FAILED",a[a.PAYLOAD_TOO_LARGE=413]="PAYLOAD_TOO_LARGE",a[a.URI_TOO_LONG=414]="URI_TOO_LONG",a[a.UNSUPPORTED_MEDIA_TYPE=415]="UNSUPPORTED_MEDIA_TYPE",a[a.RANGE_NOT_SATISFIABLE=416]="RANGE_NOT_SATISFIABLE",a[a.EXPECTATION_FAILED=417]="EXPECTATION_FAILED",a[a.I_AM_A_TEAPOT=418]="I_AM_A_TEAPOT",a[a.MISDIRECTED_REQUEST=421]="MISDIRECTED_REQUEST",a[a.UNPROCESSABLE_ENTITY=422]="UNPROCESSABLE_ENTITY",a[a.LOCKED=423]="LOCKED",a[a.FAILED_DEPENDENCY=424]="FAILED_DEPENDENCY",a[a.TOO_EARLY=425]="TOO_EARLY",a[a.UPGRADE_REQUIRED=426]="UPGRADE_REQUIRED",a[a.PRECONDITION_REQUIRED=428]="PRECONDITION_REQUIRED",a[a.TOO_MANY_REQUESTS=429]="TOO_MANY_REQUESTS",a[a.REQUEST_HEADER_FIELDS_TOO_LARGE=431]="REQUEST_HEADER_FIELDS_TOO_LARGE",a[a.UNAVAILABLE_FOR_LEGAL_REASONS=451]="UNAVAILABLE_FOR_LEGAL_REASONS",a[a.INTERNAL_SERVER_ERROR=500]="INTERNAL_SERVER_ERROR",a[a.NOT_IMPLEMENTED=501]="NOT_IMPLEMENTED",a[a.BAD_GATEWAY=502]="BAD_GATEWAY",a[a.SERVICE_UNAVAILABLE=503]="SERVICE_UNAVAILABLE",a[a.GATEWAY_TIMEOUT=504]="GATEWAY_TIMEOUT",a[a.HTTP_VERSION_NOT_SUPPORTED=505]="HTTP_VERSION_NOT_SUPPORTED",a[a.VARIANT_ALSO_NEGOTIATES=506]="VARIANT_ALSO_NEGOTIATES",a[a.INSUFFICIENT_STORAGE=507]="INSUFFICIENT_STORAGE",a[a.LOOP_DETECTED=508]="LOOP_DETECTED",a[a.BANDWIDTH_LIMIT_EXCEEDED=509]="BANDWIDTH_LIMIT_EXCEEDED",a[a.NOT_EXTENDED=510]="NOT_EXTENDED",a[a.NETWORK_AUTHENTICATION_REQUIRED=511]="NETWORK_AUTHENTICATION_REQUIRED"})(pn||(pn={}));var _;(function(a){a.Afghanistan="AF",a.Albania="AL",a.Algeria="DZ",a.AmericanSamoa="AS",a.Andorra="AD",a.Angola="AO",a.Anguilla="AI",a.Antarctica="AQ",a.AntiguaAndBarbuda="AG",a.Argentina="AR",a.Armenia="AM",a.Aruba="AW",a.Australia="AU",a.Austria="AT",a.Azerbaijan="AZ",a.Bahamas="BS",a.Bahrain="BH",a.Bangladesh="BD",a.Barbados="BB",a.Belarus="BY",a.Belgium="BE",a.Belize="BZ",a.Benin="BJ",a.Bermuda="BM",a.Bhutan="BT",a.Bolivia="BO",a.BosniaAndHerzegovina="BA",a.Botswana="BW",a.BouvetIsland="BV",a.Brazil="BR",a.BritishIndianOceanTerritory="IO",a.Brunei="BN",a.Bulgaria="BG",a.BurkinaFaso="BF",a.Burundi="BI",a.Cambodia="KH",a.Cameroon="CM",a.Canada="CA",a.CapeVerde="CV",a.CaymanIslands="KY",a.CentralAfricanRepublic="CF",a.Chad="TD",a.Chile="CL",a.China="CN",a.ChristmasIsland="CX",a.CocosKeelingIslands="CC",a.Colombia="CO",a.Comoros="KM",a.Congo="CG",a.CongoTheDemocraticRepublicOfThe="CD",a.CookIslands="CK",a.CostaRica="CR",a.CoteDIvoire="CI",a.Croatia="HR",a.Cuba="CU",a.Cyprus="CY",a.CzechRepublic="CZ",a.Denmark="DK",a.Djibouti="DJ",a.Dominica="DM",a.DominicanRepublic="DO",a.Ecuador="EC",a.Egypt="EG",a.ElSalvador="SV",a.EquatorialGuinea="GQ",a.Eritrea="ER",a.Estonia="EE",a.Ethiopia="ET",a.FalklandIslands="FK",a.FaroeIslands="FO",a.Fiji="FJ",a.Finland="FI",a.France="FR",a.FrenchGuiana="GF",a.FrenchPolynesia="PF",a.FrenchSouthernTerritories="TF",a.Gabon="GA",a.Gambia="GM",a.Georgia="GE",a.Germany="DE",a.Ghana="GH",a.Gibraltar="GI",a.Greece="GR",a.Greenland="GL",a.Grenada="GD",a.Guadeloupe="GP",a.Guam="GU",a.Guatemala="GT",a.Guernsey="GG",a.Guinea="GN",a.GuineaBissau="GW",a.Guyana="GY",a.Haiti="HT",a.HeardIslandMcdonaldIslands="HM",a.HolySeeVaticanCityState="VA",a.Honduras="HN",a.HongKong="HK",a.Hungary="HU",a.Iceland="IS",a.India="IN",a.Indonesia="ID",a.Iran="IR",a.Iraq="IQ",a.Ireland="IE",a.IsleOfMan="IM",a.Israel="IL",a.Italy="IT",a.Jamaica="JM",a.Japan="JP",a.Jersey="JE",a.Jordan="JO",a.Kazakhstan="KZ",a.Kenya="KE",a.Kiribati="KI",a.Kuwait="KW",a.Kyrgyzstan="KG",a.Laos="LA",a.Latvia="LV",a.Lebanon="LB",a.Lesotho="LS",a.Liberia="LR",a.Libya="LY",a.Liechtenstein="LI",a.Lithuania="LT",a.Luxembourg="LU",a.Macau="MO",a.Madagascar="MG",a.Malawi="MW",a.Malaysia="MY",a.Maldives="MV",a.Mali="ML",a.Malta="MT",a.MarshallIslands="MH",a.Martinique="MQ",a.Mauritania="MR",a.Mauritius="MU",a.Mayotte="YT",a.Mexico="MX",a.MicronesiaFederatedStatesOf="FM",a.Moldova="MD",a.Monaco="MC",a.Mongolia="MN",a.Montenegro="ME",a.Montserrat="MS",a.Morocco="MA",a.Mozambique="MZ",a.Myanmar="MM",a.Namibia="NA",a.Nauru="NR",a.Nepal="NP",a.Netherlands="NL",a.NetherlandsAntilles="AN",a.NewCaledonia="NC",a.NewZealand="NZ",a.NorthKorea="KP",a.Nicaragua="NI",a.Niger="NE",a.Nigeria="NG",a.Niue="NU",a.NorfolkIsland="NF",a.NorthMacedonia="MK",a.NorthernMarianaIslands="MP",a.Norway="NO",a.Oman="OM",a.Pakistan="PK",a.Palau="PW",a.PalestinianTerritoryOccupied="PS",a.Panama="PA",a.PapuaNewGuinea="PG",a.Paraguay="PY",a.Peru="PE",a.Philippines="PH",a.Pitcairn="PN",a.Poland="PL",a.Portugal="PT",a.PuertoRico="PR",a.Qatar="QA",a.Reunion="RE",a.Romania="RO",a.RussianFederation="RU",a.Rwanda="RW",a.SaintBarthelemy="BL",a.SaintHelena="SH",a.SaintKittsAndNevis="KN",a.SaintLucia="LC",a.SaintMartin="MF",a.SaintPierreAndMiquelon="PM",a.SaintVincentAndTheGrenadines="VC",a.Samoa="WS",a.SanMarino="SM",a.SaoTomeAndPrincipe="ST",a.SaudiArabia="SA",a.Senegal="SN",a.Serbia="RS",a.SerbiaAndMontenegro="CS",a.Seychelles="SC",a.SierraLeone="SL",a.Singapore="SG",a.Slovakia="SK",a.Slovenia="SI",a.SolomonIslands="SB",a.Somalia="SO",a.SouthAfrica="ZA",a.SouthGeorgiaAndTheSouthSandwichIslands="GS",a.SouthKorea="KR",a.Spain="ES",a.SriLanka="LK",a.Sudan="SD",a.Suriname="SR",a.SvalbardAndJanMayen="SJ",a.Swaziland="SZ",a.Sweden="SE",a.Switzerland="CH",a.Syria="SY",a.Taiwan="TW",a.Tajikistan="TJ",a.Tanzania="TZ",a.Thailand="TH",a.TimorLeste="TL",a.Togo="TG",a.Tokelau="TK",a.Tonga="TO",a.TrinidadAndTobago="TT",a.Tunisia="TN",a.Turkey="TR",a.Turkmenistan="TM",a.TurksAndCaicosIslands="TC",a.Tuvalu="TV",a.Uganda="UG",a.Ukraine="UA",a.UnitedArabEmirates="AE",a.UnitedKingdom="GB",a.UnitedStates="US",a.UnitedStatesMinorOutlyingIslands="UM",a.Uruguay="UY",a.Uzbekistan="UZ",a.Vanuatu="VU",a.Venezuela="VE",a.Vietnam="VN",a.VirginIslandsBritish="VG",a.VirginIslandsUS="VI",a.WallisAndFutuna="WF",a.WesternSahara="EH",a.Yemen="YE",a.Zambia="ZM",a.Zimbabwe="ZW"})(_||(_={}));var D;(function(a){a.AfghanistanAfghani="AFN",a.AlbaniaLek="ALL",a.ArmeniaDram="AMD",a.AlgeriaDinar="DZD",a.AmericanSamoaTala="WST",a.AngolaKwanza="AOA",a.ArgentinaPeso="ARS",a.AustraliaDollar="AUD",a.ArubaFlorin="AWG",a.AzerbaijanNewManat="AZN",a.BosniaAndHerzegovinaConvertibleMark="BAM",a.BahrainDinar="BHD",a.BarbadosDollar="BBD",a.BangladeshTaka="BDT",a.BelgiumFranc="BGN",a.BermudaDollar="BMD",a.BruneiDollar="BND",a.BoliviaBoliviano="BOB",a.BrazilReal="BRL",a.BahamasDollar="BSD",a.BhutanNgultrum="BTN",a.BotswanaPula="BWP",a.BelarusRuble="BYN",a.BelizeDollar="BZD",a.BulgariaLev="BGN",a.BurundiFranc="BIF",a.BritishPound="GBP",a.CanadaDollar="CAD",a.CambodiaRiel="KHR",a.ComorosFranc="KMF",a.CaymanIslandsDollar="KYD",a.ChilePeso="CLP",a.ChinaYuan="CNY",a.ColombiaPeso="COP",a.CostaRicaColon="CRC",a.CroatiaKuna="HRK",a.CubaConvertiblePeso="CUC",a.CubaPeso="CUP",a.CapeVerdeEscudo="CVE",a.CyprusPound="CYP",a.CzechRepublicKoruna="CZK",a.DjiboutiFranc="DJF",a.DenmarkKrone="DKK",a.DominicaDollar="XCD",a.DominicanRepublicPeso="DOP",a.EastCaribbeanDollar="XCD",a.EgyptPound="EGP",a.ElSalvadorColon="SVC",a.EquatorialGuineaEkwele="GQE",a.EritreaNakfa="ERN",a.EstoniaKroon="EEK",a.EthiopiaBirr="ETB",a.Euro="EUR",a.FijiDollar="FJD",a.FalklandIslandsPound="FKP",a.GambiaDalasi="GMD",a.GabonFranc="GMD",a.GeorgiaLari="GEL",a.GhanaCedi="GHS",a.GibraltarPound="GIP",a.GuatemalaQuetzal="GTQ",a.GuernseyPound="GGP",a.GuineaBissauPeso="GWP",a.GuyanaDollar="GYD",a.HongKongDollar="HKD",a.HondurasLempira="HNL",a.HaitiGourde="HTG",a.HungaryForint="HUF",a.IndonesiaRupiah="IDR",a.IsleOfManPound="IMP",a.IsraelNewShekel="ILS",a.IndiaRupee="INR",a.IraqDinar="IQD",a.IranRial="IRR",a.IcelandKrona="ISK",a.JamaicaDollar="JMD",a.JapanYen="JPY",a.JerseyPound="JEP",a.JordanDinar="JOD",a.KazakhstanTenge="KZT",a.KenyaShilling="KES",a.KyrgyzstanSom="KGS",a.NorthKoreaWon="KPW",a.SouthKoreaWon="KRW",a.KuwaitDinar="KWD",a.LaosKip="LAK",a.LebanonPound="LBP",a.LiberiaDollar="LRD",a.LesothoLoti="LSL",a.LibyanDinar="LYD",a.LithuaniaLitas="LTL",a.LatviaLats="LVL",a.LibyaDinar="LYD",a.MacauPataca="MOP",a.MaldivesRufiyaa="MVR",a.MalawiKwacha="MWK",a.MaltaLira="MTL",a.MauritiusRupee="MUR",a.MongoliaTughrik="MNT",a.MoroccoDirham="MAD",a.MoldovaLeu="MDL",a.MozambiqueMetical="MZN",a.MadagascarAriary="MGA",a.MacedoniaDenar="MKD",a.MexicoPeso="MXN",a.MalaysiaRinggit="MYR",a.MyanmarKyat="MMK",a.MicronesiaFederatedStatesDollar="USD",a.NicaraguaCordoba="NIO",a.NamibiaDollar="NAD",a.NetherlandsAntillesGuilder="ANG",a.NewCaledoniaFranc="XPF",a.NigeriaNaira="NGN",a.NicaraguaCordobaOro="NIO",a.NigerCFAFranc="XOF",a.NorwayKrone="NOK",a.NepalRupee="NPR",a.NewZealandDollar="NZD",a.OmanRial="OMR",a.PanamaBalboa="PAB",a.PeruNuevoSol="PEN",a.PapuaNewGuineaKina="PGK",a.PhilippinesPeso="PHP",a.PakistanRupee="PKR",a.PeruNuevo="PEN",a.PolandZloty="PLN",a.ParaguayGuarani="PYG",a.QatarRial="QAR",a.RomaniaNewLeu="RON",a.SerbiaDinar="RSD",a.SriLankaRupee="LKR",a.RussiaRuble="RUB",a.RwandaFranc="RWF",a.SaudiArabiaRiyal="SAR",a.SlovakiaKoruna="SKK",a.SloveniaTolar="SIT",a.SolomonIslandsDollar="SBD",a.SeychellesRupee="SCR",a.SudanPound="SDG",a.SwedenKrona="SEK",a.SingaporeDollar="SGD",a.SaintHelenaPound="SHP",a.SierraLeoneLeone="SLL",a.SomaliaShilling="SOS",a.SurinameDollar="SRD",a.SintMaartenPound="SXD",a.SyriaPound="SYP",a.SwazilandLilangeni="SZL",a.SwitzerlandFranc="CHF",a.ThailandBaht="THB",a.TajikistanSomoni="TJS",a.TurkmenistanManat="TMT",a.TunisiaDinar="TND",a.TongaPaanga="TOP",a.TurkeyLira="TRY",a.TrinidadAndTobagoDollar="TTD",a.TaiwanNewDollar="TWD",a.TanzaniaShilling="TZS",a.UnitedArabEmiratesDirham="AED",a.UkraineHryvnia="UAH",a.UgandaShilling="UGX",a.UnitedKingdomPound="GBP",a.UnitedStatesDollar="USD",a.UruguayPeso="UYU",a.UzbekistanSom="UZS",a.VenezuelaBolivar="VEF",a.VietnamDong="VND",a.VanuatuVatu="VUV",a.SamoaTala="WST",a.YemenRial="YER",a.SouthAfricaRand="ZAR",a.ZambiaKwacha="ZMW",a.ZimbabweDollar="ZWL"})(D||(D={}));var wc={AfghanistanAfghani:{code:D.AfghanistanAfghani,countries:[_.Afghanistan],decimal_digits:2,decimal_separator:".",name:"Afghan Afghani",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u060B",symbol_native:"\u060B",symbol_placement:"before",thousands_separator:","},AlbaniaLek:{code:D.AlbaniaLek,countries:[_.Albania],decimal_digits:2,decimal_separator:",",name:"Albanian Lek",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Lek",symbol_native:"Lek",symbol_placement:"before",thousands_separator:"."},AlgeriaDinar:{code:D.AlgeriaDinar,countries:[_.Algeria],decimal_digits:2,decimal_separator:".",name:"Algerian Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u062F.\u062C",symbol_native:"\u062F.\u062C",symbol_placement:"before",thousands_separator:","},ArgentinaPeso:{code:D.ArgentinaPeso,countries:[_.Argentina],decimal_digits:2,decimal_separator:".",name:"Argentine Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ArmeniaDram:{code:D.ArmeniaDram,countries:[_.Armenia],decimal_digits:2,decimal_separator:",",name:"Armenian Dram",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0564\u0580.",symbol_native:"\u0564\u0580.",symbol_placement:"before",thousands_separator:"."},ArubaFlorin:{code:D.ArubaFlorin,countries:[_.Aruba],decimal_digits:2,decimal_separator:".",name:"Aruban Florin",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0192",symbol_native:"\u0192",symbol_placement:"before",thousands_separator:","},AustraliaDollar:{code:D.AustraliaDollar,countries:[_.Australia],decimal_digits:2,decimal_separator:".",name:"Australian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},AzerbaijanManat:{code:D.AzerbaijanNewManat,countries:[_.Azerbaijan],decimal_digits:2,decimal_separator:".",name:"Azerbaijani Manat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u043C\u0430\u043D",symbol_native:"\u043C\u0430\u043D",symbol_placement:"before",thousands_separator:","},BahrainDinar:{code:D.BahrainDinar,countries:[_.Bahrain],decimal_digits:3,decimal_separator:".",name:"Bahraini Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:".\u062F.\u0628",symbol_native:".\u062F.\u0628",symbol_placement:"before",thousands_separator:","},BangladeshTaka:{code:D.BangladeshTaka,countries:[_.Bangladesh],decimal_digits:2,decimal_separator:".",name:"Bangladeshi Taka",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u09F3",symbol_native:"\u09F3",symbol_placement:"before",thousands_separator:","},BarbadosDollar:{code:D.BarbadosDollar,countries:[_.Barbados],decimal_digits:2,decimal_separator:".",name:"Barbadian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},BelarusRuble:{code:D.BelarusRuble,countries:[_.Belarus],decimal_digits:2,decimal_separator:".",name:"Belarusian Ruble",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Br",symbol_native:"Br",symbol_placement:"before",thousands_separator:"."},BelizeDollar:{code:D.BelizeDollar,countries:[_.Belize],decimal_digits:2,decimal_separator:".",name:"Belize Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"BZ$",symbol_native:"BZ$",symbol_placement:"before",thousands_separator:","},BermudaDollar:{code:D.BermudaDollar,countries:[_.Bermuda],decimal_digits:2,decimal_separator:".",name:"Bermudian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},BoliviaBoliviano:{code:D.BoliviaBoliviano,countries:[_.Bolivia],decimal_digits:2,decimal_separator:".",name:"Bolivian Boliviano",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$b",symbol_native:"$b",symbol_placement:"before",thousands_separator:","},BosniaAndHerzegovinaConvertibleMarka:{code:D.BosniaAndHerzegovinaConvertibleMark,countries:[_.BosniaAndHerzegovina],decimal_digits:2,decimal_separator:",",name:"Bosnia and Herzegovina Convertible Marka",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KM",symbol_native:"KM",symbol_placement:"before",thousands_separator:"."},BotswanaPula:{code:D.BotswanaPula,countries:[_.Botswana],decimal_digits:2,decimal_separator:".",name:"Botswana Pula",negative_sign:"-",positive_sign:"",rounding:0,symbol:"P",symbol_native:"P",symbol_placement:"before",thousands_separator:","},BrazilReal:{code:D.BrazilReal,countries:[_.Brazil],decimal_digits:2,decimal_separator:",",name:"Brazilian Real",negative_sign:"-",positive_sign:"",rounding:0,symbol:"R$",symbol_native:"R$",symbol_placement:"before",thousands_separator:"."},BruneiDollar:{code:D.BruneiDollar,countries:[_.Brunei],decimal_digits:2,decimal_separator:".",name:"Brunei Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},BulgariaLev:{code:D.BulgariaLev,countries:[_.Bulgaria],decimal_digits:2,decimal_separator:".",name:"Bulgarian Lev",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u043B\u0432",symbol_native:"\u043B\u0432",symbol_placement:"before",thousands_separator:"."},BurundiFranc:{code:D.BurundiFranc,countries:[_.Burundi],decimal_digits:0,decimal_separator:".",name:"Burundian Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"FBu",symbol_native:"FBu",symbol_placement:"before",thousands_separator:","},CambodiaRiel:{code:D.CambodiaRiel,countries:[_.Cambodia],decimal_digits:2,decimal_separator:",",name:"Cambodian Riel",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u17DB",symbol_native:"\u17DB",symbol_placement:"before",thousands_separator:"."},CanadaDollar:{code:D.CanadaDollar,countries:[_.Canada],decimal_digits:2,decimal_separator:".",name:"Canadian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},CapeVerdeEscudo:{code:D.CapeVerdeEscudo,countries:[_.CapeVerde],decimal_digits:2,decimal_separator:".",name:"Cape Verde Escudo",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Esc",symbol_native:"Esc",symbol_placement:"before",thousands_separator:","},CaymanIslandsDollar:{code:D.CaymanIslandsDollar,countries:[_.CaymanIslands],decimal_digits:2,decimal_separator:".",name:"Cayman Islands Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ChilePeso:{code:D.ChilePeso,countries:[_.Chile],decimal_digits:0,decimal_separator:".",name:"Chilean Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ChinaYuanRenminbi:{code:D.ChinaYuan,countries:[_.China],decimal_digits:2,decimal_separator:".",name:"Chinese Yuan",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA5",symbol_native:"\xA5",symbol_placement:"before",thousands_separator:","},ColombiaPeso:{code:D.ColombiaPeso,countries:[_.Colombia],decimal_digits:2,decimal_separator:".",name:"Colombian Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ComorosFranc:{code:D.ComorosFranc,countries:[_.Comoros],decimal_digits:0,decimal_separator:".",name:"Comoros Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"CF",symbol_native:"CF",symbol_placement:"before",thousands_separator:","},CostaRicaColon:{code:D.CostaRicaColon,countries:[_.CostaRica],decimal_digits:2,decimal_separator:".",name:"Costa Rican Colon",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A1",symbol_native:"\u20A1",symbol_placement:"before",thousands_separator:","},CroatiaKuna:{code:D.CroatiaKuna,countries:[_.Croatia],decimal_digits:2,decimal_separator:",",name:"Croatian Kuna",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kn",symbol_native:"kn",symbol_placement:"before",thousands_separator:"."},CubaConvertiblePeso:{code:D.CubaConvertiblePeso,countries:[_.Cuba],decimal_digits:2,decimal_separator:",",name:"Cuba Convertible Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},CubaPeso:{code:D.CubaPeso,countries:[_.Cuba],decimal_digits:2,decimal_separator:",",name:"Cuba Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},CyprusPound:{code:D.CyprusPound,countries:[_.Cyprus],decimal_digits:2,decimal_separator:",",name:"Cyprus Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},CzechRepublicKoruna:{code:D.CzechRepublicKoruna,countries:[_.CzechRepublic],decimal_digits:2,decimal_separator:",",name:"Czech Republic Koruna",negative_sign:"-",positive_sign:"",rounding:0,symbol:"K\u010D",symbol_native:"K\u010D",symbol_placement:"before",thousands_separator:"."},DenmarkKrone:{code:D.DenmarkKrone,countries:[_.Denmark],decimal_digits:2,decimal_separator:",",name:"Denmark Krone",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},DjiboutiFranc:{code:D.DjiboutiFranc,countries:[_.Djibouti],decimal_digits:0,decimal_separator:".",name:"Djibouti Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Fdj",symbol_native:"Fdj",symbol_placement:"before",thousands_separator:","},DominicanRepublicPeso:{code:D.DominicanRepublicPeso,countries:[_.DominicanRepublic],decimal_digits:2,decimal_separator:",",name:"Dominican Republic Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"RD$",symbol_native:"RD$",symbol_placement:"before",thousands_separator:"."},EastCaribbeanDollar:{code:D.EastCaribbeanDollar,countries:[_.AntiguaAndBarbuda,_.Dominica,_.Grenada,_.SaintKittsAndNevis,_.SaintLucia,_.SaintVincentAndTheGrenadines],decimal_digits:2,decimal_separator:".",name:"East Caribbean Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},EgyptPound:{code:D.EgyptPound,countries:[_.Egypt],decimal_digits:2,decimal_separator:".",name:"Egypt Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:","},ElSalvadorColon:{code:D.ElSalvadorColon,countries:[_.ElSalvador],decimal_digits:2,decimal_separator:",",name:"El Salvador Colon",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A1",symbol_native:"\u20A1",symbol_placement:"before",thousands_separator:"."},EquatorialGuineaEkwele:{code:D.EquatorialGuineaEkwele,countries:[_.EquatorialGuinea],decimal_digits:0,decimal_separator:".",name:"Equatorial Guinea Ekwele",negative_sign:"-",positive_sign:"",rounding:0,symbol:"GQE",symbol_native:"GQE",symbol_placement:"before",thousands_separator:","},EritreaNakfa:{code:D.EritreaNakfa,countries:[_.Eritrea],decimal_digits:2,decimal_separator:",",name:"Eritrea Nakfa",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Nfk",symbol_native:"Nfk",symbol_placement:"before",thousands_separator:"."},EstoniaKroon:{code:D.EstoniaKroon,countries:[_.Estonia],decimal_digits:2,decimal_separator:",",name:"Estonia Kroon",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},EthiopiaBirr:{code:D.EthiopiaBirr,countries:[_.Ethiopia],decimal_digits:2,decimal_separator:",",name:"Ethiopia Birr",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Br",symbol_native:"Br",symbol_placement:"before",thousands_separator:"."},Euro:{code:D.Euro,countries:[_.Andorra,_.Austria,_.Belgium,_.Cyprus,_.Estonia,_.Finland,_.France,_.Germany,_.Greece,_.Ireland,_.Italy,_.Latvia,_.Lithuania,_.Luxembourg,_.Malta,_.Monaco,_.Netherlands,_.Portugal,_.Spain,_.Sweden,_.UnitedKingdom],decimal_digits:2,decimal_separator:",",name:"Euro",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AC",symbol_native:"\u20AC",symbol_placement:"before",thousands_separator:"."},FalklandIslandsPound:{code:D.FalklandIslandsPound,countries:[_.FalklandIslands],decimal_digits:2,decimal_separator:",",name:"Equatorial Guinea Ekwele",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},FijiDollar:{code:D.FijiDollar,countries:[_.Fiji],decimal_digits:2,decimal_separator:",",name:"Fiji Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},GambiaDalasi:{code:D.GambiaDalasi,countries:[_.Gambia],decimal_digits:2,decimal_separator:",",name:"Gambia Dalasi",negative_sign:"-",positive_sign:"",rounding:0,symbol:"D",symbol_native:"D",symbol_placement:"before",thousands_separator:"."},GeorgiaLari:{code:D.GeorgiaLari,countries:[_.Georgia],decimal_digits:2,decimal_separator:",",name:"Georgia Lari",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20BE",symbol_native:"\u20BE",symbol_placement:"before",thousands_separator:"."},GhanaCedi:{code:D.GhanaCedi,countries:[_.Ghana],decimal_digits:2,decimal_separator:",",name:"Ghana Cedi",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B5",symbol_native:"\u20B5",symbol_placement:"before",thousands_separator:"."},GibraltarPound:{code:D.GibraltarPound,countries:[_.Gibraltar],decimal_digits:2,decimal_separator:",",name:"Gibraltar Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},GuatemalaQuetzal:{code:D.GuatemalaQuetzal,countries:[_.Guatemala],decimal_digits:2,decimal_separator:",",name:"Guatemala Quetzal",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Q",symbol_native:"Q",symbol_placement:"before",thousands_separator:"."},GuernseyPound:{code:D.GuernseyPound,countries:[_.Guernsey],decimal_digits:2,decimal_separator:",",name:"Guernsey Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},GuineaBissauPeso:{code:D.GuineaBissauPeso,countries:[_.GuineaBissau],decimal_digits:2,decimal_separator:",",name:"Guinea-Bissau Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B5",symbol_native:"\u20B5",symbol_placement:"before",thousands_separator:"."},GuyanaDollar:{code:D.GuyanaDollar,countries:[_.Guyana],decimal_digits:2,decimal_separator:",",name:"Guyana Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},HaitiGourde:{code:D.HaitiGourde,countries:[_.Haiti],decimal_digits:2,decimal_separator:",",name:"Haiti Gourde",negative_sign:"-",positive_sign:"",rounding:0,symbol:"G",symbol_native:"G",symbol_placement:"before",thousands_separator:"."},HondurasLempira:{code:D.HondurasLempira,countries:[_.Honduras],decimal_digits:2,decimal_separator:",",name:"Honduras Lempira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"L",symbol_native:"L",symbol_placement:"before",thousands_separator:"."},HongKongDollar:{code:D.HongKongDollar,countries:[_.HongKong],decimal_digits:2,decimal_separator:",",name:"Hong Kong Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},HungaryForint:{code:D.HungaryForint,countries:[_.Hungary],decimal_digits:2,decimal_separator:",",name:"Hungary Forint",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Ft",symbol_native:"Ft",symbol_placement:"before",thousands_separator:"."},IcelandKrona:{code:D.IcelandKrona,countries:[_.Iceland],decimal_digits:0,decimal_separator:",",name:"Iceland Krona",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},IndianRupee:{code:D.IndiaRupee,countries:[_.India,_.Bhutan],decimal_digits:2,decimal_separator:",",name:"Indian Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B9",symbol_native:"\u20B9",symbol_placement:"before",thousands_separator:"."},IndonesiaRupiah:{code:D.IndonesiaRupiah,countries:[_.Indonesia],decimal_digits:0,decimal_separator:",",name:"Indonesia Rupiah",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Rp",symbol_native:"Rp",symbol_placement:"before",thousands_separator:"."},IranRial:{code:D.IranRial,countries:[_.Iran],decimal_digits:0,decimal_separator:",",name:"Iran Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},IsleOfManPound:{code:D.IsleOfManPound,countries:[_.IsleOfMan],decimal_digits:2,decimal_separator:",",name:"Isle of Man Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},IsraeliShekel:{code:D.IsraelNewShekel,countries:[_.Israel],decimal_digits:2,decimal_separator:",",name:"Israeli Shekel",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AA",symbol_native:"\u20AA",symbol_placement:"before",thousands_separator:"."},JamaicaDollar:{code:D.JamaicaDollar,countries:[_.Jamaica],decimal_digits:2,decimal_separator:",",name:"Jamaica Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"J$",symbol_native:"J$",symbol_placement:"before",thousands_separator:"."},JapanYen:{code:D.JapanYen,countries:[_.Japan],decimal_digits:0,decimal_separator:",",name:"Japan Yen",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA5",symbol_native:"\uFFE5",symbol_placement:"before",thousands_separator:"."},JerseyPound:{code:D.JerseyPound,countries:[_.Jersey],decimal_digits:2,decimal_separator:",",name:"Jersey Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},JordanDinar:{code:D.JordanDinar,countries:[_.Jordan],decimal_digits:3,decimal_separator:",",name:"Jordan Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"JD",symbol_native:"JD",symbol_placement:"before",thousands_separator:"."},KazakhstanTenge:{code:D.KazakhstanTenge,countries:[_.Kazakhstan],decimal_digits:2,decimal_separator:",",name:"Kazakhstan Tenge",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B8",symbol_native:"\u20B8",symbol_placement:"before",thousands_separator:"."},KenyaShilling:{code:D.KenyaShilling,countries:[_.Kenya],decimal_digits:2,decimal_separator:",",name:"Kenya Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KSh",symbol_native:"KSh",symbol_placement:"before",thousands_separator:"."},KuwaitDinar:{code:D.KuwaitDinar,countries:[_.Kuwait],decimal_digits:3,decimal_separator:",",name:"Kuwait Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KD",symbol_native:"KD",symbol_placement:"before",thousands_separator:"."},KyrgyzstanSom:{code:D.KyrgyzstanSom,countries:[_.Kyrgyzstan],decimal_digits:2,decimal_separator:",",name:"Kyrgyzstan Som",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KGS",symbol_native:"KGS",symbol_placement:"before",thousands_separator:"."},LaosKip:{code:D.LaosKip,countries:[_.Laos],decimal_digits:0,decimal_separator:",",name:"Laos Kip",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AD",symbol_native:"\u20AD",symbol_placement:"before",thousands_separator:"."},LatviaLats:{code:D.LatviaLats,countries:[_.Latvia],decimal_digits:2,decimal_separator:",",name:"Latvia Lat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Ls",symbol_native:"Ls",symbol_placement:"before",thousands_separator:"."},LebanonPound:{code:D.LebanonPound,countries:[_.Lebanon],decimal_digits:0,decimal_separator:",",name:"Lebanon Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},LesothoLoti:{code:D.LesothoLoti,countries:[_.Lesotho],decimal_digits:2,decimal_separator:",",name:"Lesotho Loti",negative_sign:"-",positive_sign:"",rounding:0,symbol:"M",symbol_native:"M",symbol_placement:"before",thousands_separator:"."},LiberiaDollar:{code:D.LiberiaDollar,countries:[_.Liberia],decimal_digits:2,decimal_separator:",",name:"Liberia Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},LibyanDinar:{code:D.LibyanDinar,countries:[_.Libya],decimal_digits:3,decimal_separator:",",name:"Libyan Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"LD",symbol_native:"LD",symbol_placement:"before",thousands_separator:"."},LithuaniaLitas:{code:D.LithuaniaLitas,countries:[_.Lithuania],decimal_digits:2,decimal_separator:",",name:"Lithuania Litas",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Lt",symbol_native:"Lt",symbol_placement:"before",thousands_separator:"."},MacauPataca:{code:D.MacauPataca,countries:[_.Macau],decimal_digits:2,decimal_separator:",",name:"Macau Pataca",negative_sign:"-",positive_sign:"",rounding:0,symbol:"MOP$",symbol_native:"MOP$",symbol_placement:"before",thousands_separator:"."},MacedoniaDenar:{code:D.MacedoniaDenar,countries:[_.NorthMacedonia],decimal_digits:2,decimal_separator:",",name:"Macedonia Denar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0434\u0435\u043D",symbol_native:"\u0434\u0435\u043D",symbol_placement:"before",thousands_separator:"."},MadagascarAriary:{code:D.MadagascarAriary,countries:[_.Madagascar],decimal_digits:0,decimal_separator:",",name:"Madagascar Ariary",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Ar",symbol_native:"Ar",symbol_placement:"before",thousands_separator:"."},MalawiKwacha:{code:D.MalawiKwacha,countries:[_.Malawi],decimal_digits:2,decimal_separator:",",name:"Malawi Kwacha",negative_sign:"-",positive_sign:"",rounding:0,symbol:"MK",symbol_native:"MK",symbol_placement:"before",thousands_separator:"."},MalaysiaRinggit:{code:D.MalaysiaRinggit,countries:[_.Malaysia],decimal_digits:2,decimal_separator:",",name:"Malaysia Ringgit",negative_sign:"-",positive_sign:"",rounding:0,symbol:"RM",symbol_native:"RM",symbol_placement:"before",thousands_separator:"."},MaldivesRufiyaa:{code:D.MaldivesRufiyaa,countries:[_.Maldives],decimal_digits:2,decimal_separator:",",name:"Maldives Rufiyaa",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Rf",symbol_native:"Rf",symbol_placement:"before",thousands_separator:"."},MaltaLira:{code:D.MaltaLira,countries:[_.Malta],decimal_digits:2,decimal_separator:",",name:"Malta Lira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Lm",symbol_native:"Lm",symbol_placement:"before",thousands_separator:"."},MauritiusRupee:{code:D.MauritiusRupee,countries:[_.Mauritius],decimal_digits:2,decimal_separator:",",name:"Mauritius Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},MexicoPeso:{code:D.MexicoPeso,countries:[_.Mexico],decimal_digits:2,decimal_separator:",",name:"Mexico Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},MoldovaLeu:{code:D.MoldovaLeu,countries:[_.Moldova],decimal_digits:2,decimal_separator:",",name:"Moldova Leu",negative_sign:"-",positive_sign:"",rounding:0,symbol:"L",symbol_native:"L",symbol_placement:"before",thousands_separator:"."},MongoliaTughrik:{code:D.MongoliaTughrik,countries:[_.Mongolia],decimal_digits:2,decimal_separator:",",name:"Mongolia Tughrik",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AE",symbol_native:"\u20AE",symbol_placement:"before",thousands_separator:"."},MoroccoDirham:{code:D.MoroccoDirham,countries:[_.Morocco],decimal_digits:2,decimal_separator:",",name:"Morocco Dirham",negative_sign:"-",positive_sign:"",rounding:0,symbol:"DH",symbol_native:"DH",symbol_placement:"before",thousands_separator:"."},MozambiqueMetical:{code:D.MozambiqueMetical,countries:[_.Mozambique],decimal_digits:2,decimal_separator:",",name:"Mozambique Metical",negative_sign:"-",positive_sign:"",rounding:0,symbol:"MT",symbol_native:"MT",symbol_placement:"before",thousands_separator:"."},MyanmarKyat:{code:D.MyanmarKyat,countries:[_.Myanmar],decimal_digits:0,decimal_separator:",",name:"Myanmar Kyat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"K",symbol_native:"K",symbol_placement:"before",thousands_separator:"."},NamibiaDollar:{code:D.NamibiaDollar,countries:[_.Namibia],decimal_digits:2,decimal_separator:",",name:"Namibia Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},NepalRupee:{code:D.NepalRupee,countries:[_.Nepal],decimal_digits:2,decimal_separator:",",name:"Nepal Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},NetherlandsAntillesGuilder:{code:D.NetherlandsAntillesGuilder,countries:[_.NetherlandsAntilles],decimal_digits:2,decimal_separator:",",name:"Netherlands Antilles Guilder",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0192",symbol_native:"\u0192",symbol_placement:"before",thousands_separator:"."},NewCaledoniaFranc:{code:D.NewCaledoniaFranc,countries:[_.NewCaledonia],decimal_digits:0,decimal_separator:",",name:"New Caledonia Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A3",symbol_native:"\u20A3",symbol_placement:"before",thousands_separator:"."},NewZealandDollar:{code:D.NewZealandDollar,countries:[_.NewZealand],decimal_digits:2,decimal_separator:",",name:"New Zealand Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},NicaraguaCordoba:{code:D.NicaraguaCordoba,countries:[_.Nicaragua],decimal_digits:2,decimal_separator:",",name:"Nicaragua Cordoba",negative_sign:"-",positive_sign:"",rounding:0,symbol:"C$",symbol_native:"C$",symbol_placement:"before",thousands_separator:"."},NigerCFAFranc:{code:D.NigerCFAFranc,countries:[_.Niger],decimal_digits:0,decimal_separator:",",name:"Niger CFA Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"CFA",symbol_native:"CFA",symbol_placement:"before",thousands_separator:"."},NigeriaNaira:{code:D.NigeriaNaira,countries:[_.Nigeria],decimal_digits:2,decimal_separator:",",name:"Nigeria Naira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A6",symbol_native:"\u20A6",symbol_placement:"before",thousands_separator:"."},NorthKoreaWon:{code:D.NorthKoreaWon,countries:[_.NorthKorea],decimal_digits:0,decimal_separator:",",name:"North Korea Won",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A9",symbol_native:"\u20A9",symbol_placement:"before",thousands_separator:"."},NorwayKrone:{code:D.NorwayKrone,countries:[_.Norway],decimal_digits:2,decimal_separator:",",name:"Norway Krone",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},OmanRial:{code:D.OmanRial,countries:[_.Oman],decimal_digits:3,decimal_separator:",",name:"Oman Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},PakistanRupee:{code:D.PakistanRupee,countries:[_.Pakistan],decimal_digits:2,decimal_separator:",",name:"Pakistan Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},PanamaBalboa:{code:D.PanamaBalboa,countries:[_.Panama],decimal_digits:2,decimal_separator:",",name:"Panama Balboa",negative_sign:"-",positive_sign:"",rounding:0,symbol:"B/.",symbol_native:"B/.",symbol_placement:"before",thousands_separator:"."},ParaguayGuarani:{code:D.ParaguayGuarani,countries:[_.Paraguay],decimal_digits:0,decimal_separator:",",name:"Paraguay Guarani",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Gs",symbol_native:"Gs",symbol_placement:"before",thousands_separator:"."},PeruvianNuevo:{code:D.PeruNuevo,countries:[_.Peru],decimal_digits:2,decimal_separator:",",name:"Peruvian Nuevo",negative_sign:"-",positive_sign:"",rounding:0,symbol:"S/.",symbol_native:"S/.",symbol_placement:"before",thousands_separator:"."},PhilippinesPeso:{code:D.PhilippinesPeso,countries:[_.Philippines],decimal_digits:2,decimal_separator:",",name:"Philippines Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B1",symbol_native:"\u20B1",symbol_placement:"before",thousands_separator:"."},PolandZloty:{code:D.PolandZloty,countries:[_.Poland],decimal_digits:2,decimal_separator:",",name:"Poland Zloty",negative_sign:"-",positive_sign:"",rounding:0,symbol:"z\u0142",symbol_native:"z\u0142",symbol_placement:"before",thousands_separator:"."},QatarRial:{code:D.QatarRial,countries:[_.Qatar],decimal_digits:2,decimal_separator:",",name:"Qatar Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},RomaniaNewLeu:{code:D.RomaniaNewLeu,countries:[_.Romania],decimal_digits:2,decimal_separator:",",name:"Romania New Leu",negative_sign:"-",positive_sign:"",rounding:0,symbol:"lei",symbol_native:"lei",symbol_placement:"before",thousands_separator:"."},RussiaRuble:{code:D.RussiaRuble,countries:[_.RussianFederation],decimal_digits:2,decimal_separator:",",name:"Russia Ruble",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20BD",symbol_native:"\u20BD",symbol_placement:"before",thousands_separator:"."},RwandaFranc:{code:D.RwandaFranc,countries:[_.Rwanda],decimal_digits:0,decimal_separator:",",name:"Rwanda Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"RF",symbol_native:"RF",symbol_placement:"before",thousands_separator:"."},SaudiArabiaRiyal:{code:D.SaudiArabiaRiyal,countries:[_.SaudiArabia],decimal_digits:2,decimal_separator:",",name:"Saudi Arabia Riyal",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},SerbiaDinar:{code:D.SerbiaDinar,countries:[_.Serbia],decimal_digits:0,decimal_separator:",",name:"Serbia Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0414\u0438\u043D.",symbol_native:"\u0414\u0438\u043D.",symbol_placement:"before",thousands_separator:"."},SeychellesRupee:{code:D.SeychellesRupee,countries:[_.Seychelles],decimal_digits:2,decimal_separator:",",name:"Seychelles Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},SingaporeDollar:{code:D.SingaporeDollar,countries:[_.Singapore],decimal_digits:2,decimal_separator:",",name:"Singapore Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},SlovakiaKoruna:{code:D.SlovakiaKoruna,countries:[_.Slovakia],decimal_digits:2,decimal_separator:",",name:"Slovakia Koruna",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Sk",symbol_native:"Sk",symbol_placement:"before",thousands_separator:"."},SloveniaTolar:{code:D.SloveniaTolar,countries:[_.Slovenia],decimal_digits:2,decimal_separator:",",name:"Slovenia Tolar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"SIT",symbol_native:"SIT",symbol_placement:"before",thousands_separator:"."},SolomonIslandsDollar:{code:D.SolomonIslandsDollar,countries:[_.SolomonIslands],decimal_digits:2,decimal_separator:",",name:"Solomon Islands Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},SomaliaShilling:{code:D.SomaliaShilling,countries:[_.Somalia],decimal_digits:0,decimal_separator:",",name:"Somalia Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"S",symbol_native:"S",symbol_placement:"before",thousands_separator:"."},SouthAfricaRand:{code:D.SouthAfricaRand,countries:[_.SouthAfrica],decimal_digits:2,decimal_separator:",",name:"South Africa Rand",negative_sign:"-",positive_sign:"",rounding:0,symbol:"R",symbol_native:"R",symbol_placement:"before",thousands_separator:"."},SouthKoreaWon:{code:D.SouthKoreaWon,countries:[_.SouthKorea],decimal_digits:0,decimal_separator:",",name:"South Korea Won",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A9",symbol_native:"\u20A9",symbol_placement:"before",thousands_separator:"."},SriLankaRupee:{code:D.SriLankaRupee,countries:[_.SriLanka],decimal_digits:2,decimal_separator:",",name:"Sri Lanka Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},SudanPound:{code:D.SudanPound,countries:[_.Sudan],decimal_digits:2,decimal_separator:",",name:"Sudan Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},SurinameDollar:{code:D.SurinameDollar,countries:[_.Suriname],decimal_digits:2,decimal_separator:",",name:"Suriname Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},SwazilandLilangeni:{code:D.SwazilandLilangeni,countries:[_.Swaziland],decimal_digits:2,decimal_separator:",",name:"Swaziland Lilangeni",negative_sign:"-",positive_sign:"",rounding:0,symbol:"E",symbol_native:"E",symbol_placement:"before",thousands_separator:"."},SwedenKrona:{code:D.SwedenKrona,countries:[_.Sweden],decimal_digits:2,decimal_separator:",",name:"Sweden Krona",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},SwitzerlandFranc:{code:D.SwitzerlandFranc,countries:[_.Switzerland],decimal_digits:2,decimal_separator:",",name:"Switzerland Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"CHF",symbol_native:"CHF",symbol_placement:"before",thousands_separator:"."},SyriaPound:{code:D.SyriaPound,countries:[_.Syria],decimal_digits:2,decimal_separator:",",name:"Syria Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},TaiwanNewDollar:{code:D.TaiwanNewDollar,countries:[_.Taiwan],decimal_digits:2,decimal_separator:",",name:"Taiwan New Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"NT$",symbol_native:"NT$",symbol_placement:"before",thousands_separator:"."},TajikistanSomoni:{code:D.TajikistanSomoni,countries:[_.Tajikistan],decimal_digits:2,decimal_separator:",",name:"Tajikistan Somoni",negative_sign:"-",positive_sign:"",rounding:0,symbol:"TJS",symbol_native:"TJS",symbol_placement:"before",thousands_separator:"."},TanzaniaShilling:{code:D.TanzaniaShilling,countries:[_.Tanzania],decimal_digits:2,decimal_separator:",",name:"Tanzania Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"TSh",symbol_native:"TSh",symbol_placement:"before",thousands_separator:"."},ThailandBaht:{code:D.ThailandBaht,countries:[_.Thailand],decimal_digits:2,decimal_separator:",",name:"Thailand Baht",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0E3F",symbol_native:"\u0E3F",symbol_placement:"before",thousands_separator:"."},TunisiaDinar:{code:D.TunisiaDinar,countries:[_.Tunisia],decimal_digits:3,decimal_separator:",",name:"Tunisia Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u062F.\u062A",symbol_native:"\u062F.\u062A",symbol_placement:"before",thousands_separator:"."},TurkeyLira:{code:D.TurkeyLira,countries:[_.Turkey],decimal_digits:2,decimal_separator:",",name:"Turkey Lira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20BA",symbol_native:"\u20BA",symbol_placement:"before",thousands_separator:"."},TurkmenistanManat:{code:D.TurkmenistanManat,countries:[_.Turkmenistan],decimal_digits:2,decimal_separator:",",name:"Turkmenistan Manat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"m",symbol_native:"m",symbol_placement:"before",thousands_separator:"."},UgandaShilling:{code:D.UgandaShilling,countries:[_.Uganda],decimal_digits:0,decimal_separator:",",name:"Uganda Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"USh",symbol_native:"USh",symbol_placement:"before",thousands_separator:"."},UkraineHryvnia:{code:D.UkraineHryvnia,countries:[_.Ukraine],decimal_digits:2,decimal_separator:",",name:"Ukraine Hryvnia",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B4",symbol_native:"\u20B4",symbol_placement:"before",thousands_separator:"."},UnitedArabEmiratesDirham:{code:D.UnitedArabEmiratesDirham,countries:[_.UnitedArabEmirates],decimal_digits:2,decimal_separator:",",name:"United Arab Emirates Dirham",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u062F.\u0625",symbol_native:"\u062F.\u0625",symbol_placement:"before",thousands_separator:"."},UnitedKingdomPound:{code:D.UnitedKingdomPound,countries:[_.UnitedKingdom],decimal_digits:2,decimal_separator:",",name:"United Kingdom Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},UnitedStatesDollar:{code:D.UnitedStatesDollar,countries:[_.UnitedStates],decimal_digits:2,decimal_separator:",",name:"United States Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},UruguayPeso:{code:D.UruguayPeso,countries:[_.Uruguay],decimal_digits:2,decimal_separator:",",name:"Uruguay Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$U",symbol_native:"$U",symbol_placement:"before",thousands_separator:"."},UzbekistanSom:{code:D.UzbekistanSom,countries:[_.Uzbekistan],decimal_digits:2,decimal_separator:",",name:"Uzbekistan Som",negative_sign:"-",positive_sign:"",rounding:0,symbol:"UZS",symbol_native:"UZS",symbol_placement:"before",thousands_separator:"."},VanuatuVatu:{code:D.VanuatuVatu,countries:[_.Vanuatu],decimal_digits:0,decimal_separator:",",name:"Vanuatu Vatu",negative_sign:"-",positive_sign:"",rounding:0,symbol:"VT",symbol_native:"VT",symbol_placement:"before",thousands_separator:"."},VenezuelaBolivar:{code:D.VenezuelaBolivar,countries:[_.Venezuela],decimal_digits:2,decimal_separator:",",name:"Venezuela Bolivar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Bs. F",symbol_native:"Bs. F",symbol_placement:"before",thousands_separator:"."},VietnamDong:{code:D.VietnamDong,countries:[_.Vietnam],decimal_digits:0,decimal_separator:",",name:"Vietnam Dong",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AB",symbol_native:"\u20AB",symbol_placement:"before",thousands_separator:"."},YemenRial:{code:D.YemenRial,countries:[_.Yemen],decimal_digits:2,decimal_separator:",",name:"Yemen Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},ZambiaKwacha:{code:D.ZambiaKwacha,countries:[_.Zambia],decimal_digits:2,decimal_separator:",",name:"Zambia Kwacha",negative_sign:"-",positive_sign:"",rounding:0,symbol:"ZK",symbol_native:"ZK",symbol_placement:"before",thousands_separator:"."},ZimbabweDollar:{code:D.ZimbabweDollar,countries:[_.Zimbabwe],decimal_digits:2,decimal_separator:",",name:"Zimbabwe Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AB",symbol_native:"\u20AB",symbol_placement:"before",thousands_separator:"."}},vn;(function(a){a.Bitcoin="BTC",a.Ethereum="ETH",a.Litecoin="LTC",a.Ripple="XRP",a.Dash="DASH",a.Zcash="ZEC",a.Dogecoin="DOGE",a.Monero="XMR",a.BitcoinCash="BCH",a.EOS="EOS",a.Binance="BNB",a.Stellar="XLM",a.Cardano="ADA",a.IOTA="IOTA",a.Tezos="XTZ",a.NEO="NEO",a.TRON="TRX",a.EOSClassic="EOSC",a.Ontology="ONT",a.VeChain="VEN",a.QTUM="QTUM",a.Lisk="LSK",a.Waves="WAVES",a.OmiseGO="OMG",a.Zilliqa="ZIL",a.BitcoinGold="BTG",a.Decred="DCR",a.Stratis="STRAT",a.Populous="PPT",a.Augur="REP",a.Golem="GNT",a.Siacoin="SC",a.BasicAttentionToken="BAT",a.ZCoin="XZC",a.StratisHedged="SNT",a.VeChainHedged="VEN",a.PowerLedger="POWR",a.WavesHedged="WAVE",a.ZilliqaHedged="ZRX",a.BitcoinDiamond="BCD",a.DigiByte="DGB",a.DigiByteHedged="DGB",a.Bytecoin="BCN",a.BytecoinHedged="BCN"})(vn||(vn={}));var T;(function(a){a.Afrikaans="af",a.Albanian="sq",a.Amharic="am",a.Arabic="ar",a.Armenian="hy",a.Azerbaijani="az",a.Bashkir="ba",a.Basque="eu",a.Belarusian="be",a.Bengali="bn",a.Berber="ber",a.Bhutani="dz",a.Bihari="bh",a.Bislama="bi",a.Bosnian="bs",a.Breten="br",a.Bulgarian="bg",a.Burmese="my",a.Cantonese="yue",a.Catalan="ca",a.Chinese="zh",a.Chuvash="cv",a.Corsican="co",a.Croatian="hr",a.Czech="cs",a.Danish="da",a.Dari="prs",a.Divehi="dv",a.Dutch="nl",a.English="en",a.Esperanto="eo",a.Estonian="et",a.Faroese="fo",a.Farsi="fa",a.Filipino="fil",a.Finnish="fi",a.French="fr",a.Frisian="fy",a.Galician="gl",a.Georgian="ka",a.German="de",a.Greek="el",a.Greenlandic="kl",a.Gujarati="gu",a.Haitian="ht",a.Hausa="ha",a.Hebrew="he",a.Hindi="hi",a.Hungarian="hu",a.Icelandic="is",a.Igbo="ig",a.Indonesian="id",a.Irish="ga",a.Italian="it",a.Japanese="ja",a.Javanese="jv",a.Kannada="kn",a.Karelian="krl",a.Kazakh="kk",a.Khmer="km",a.Komi="kv",a.Konkani="kok",a.Korean="ko",a.Kurdish="ku",a.Kyrgyz="ky",a.Lao="lo",a.Latin="la",a.Latvian="lv",a.Lithuanian="lt",a.Luxembourgish="lb",a.Ossetian="os",a.Macedonian="mk",a.Malagasy="mg",a.Malay="ms",a.Malayalam="ml",a.Maltese="mt",a.Maori="mi",a.Marathi="mr",a.Mari="mhr",a.Mongolian="mn",a.Montenegrin="me",a.Nepali="ne",a.NorthernSotho="nso",a.Norwegian="no",a.NorwegianBokmal="nb",a.NorwegianNynorsk="nn",a.Oriya="or",a.Pashto="ps",a.Persian="fa",a.Polish="pl",a.Portuguese="pt",a.Punjabi="pa",a.Quechua="qu",a.Romanian="ro",a.Russian="ru",a.Sakha="sah",a.Sami="se",a.Samoan="sm",a.Sanskrit="sa",a.Scots="gd",a.Serbian="sr",a.SerbianCyrillic="sr-Cyrl",a.Sesotho="st",a.Shona="sn",a.Sindhi="sd",a.Sinhala="si",a.Slovak="sk",a.Slovenian="sl",a.Somali="so",a.Spanish="es",a.Sudanese="su",a.Sutu="sx",a.Swahili="sw",a.Swedish="sv",a.Syriac="syr",a.Tagalog="tl",a.Tajik="tg",a.Tamazight="tmh",a.Tamil="ta",a.Tatar="tt",a.Telugu="te",a.Thai="th",a.Tibetan="bo",a.Tsonga="ts",a.Tswana="tn",a.Turkish="tr",a.Turkmen="tk",a.Ukrainian="uk",a.Urdu="ur",a.Uzbek="uz",a.Vietnamese="vi",a.Welsh="cy",a.Xhosa="xh",a.Yiddish="yi",a.Yoruba="yo",a.Zulu="zu"})(T||(T={}));var e;(function(a){a.Afrikaans="af",a.AfrikaansSouthAfrica="af-ZA",a.Albanian="sq",a.AlbanianAlbania="sq-AL",a.Amharic="am",a.AmharicEthiopia="am-ET",a.Arabic="ar",a.ArabicAlgeria="ar-DZ",a.ArabicBahrain="ar-BH",a.ArabicEgypt="ar-EG",a.ArabicIraq="ar-IQ",a.ArabicJordan="ar-JO",a.ArabicKuwait="ar-KW",a.ArabicLebanon="ar-LB",a.ArabicLibya="ar-LY",a.ArabicMorocco="ar-MA",a.ArabicOman="ar-OM",a.ArabicQatar="ar-QA",a.ArabicSaudiArabia="ar-SA",a.ArabicSyria="ar-SY",a.ArabicTunisia="ar-TN",a.ArabicUnitedArabEmirates="ar-AE",a.ArabicYemen="ar-YE",a.Armenian="hy",a.ArmenianArmenia="hy-AM",a.Azerbaijani="az",a.AzerbaijaniAzerbaijan="az-AZ",a.AzerbaijaniCyrillicAzerbaijan="az-Cyrl-AZ",a.Bashkir="ba",a.Basque="eu",a.BasqueSpain="eu-ES",a.Belarusian="be",a.BelarusianBelarus="be-BY",a.Bengali="bn",a.BengaliBangladesh="bn-BD",a.BengaliIndia="bn-IN",a.Berber="ber",a.Bhutani="dz",a.BhutaniBhutan="dz-BT",a.Bosnian="bs",a.BosnianBosniaAndHerzegovina="bs-BA",a.Breton="br",a.Bulgarian="bg",a.BulgarianBosniaAndHerzegovina="bg-BG",a.BulgarianBulgaria="bg-BG",a.Burmese="my",a.BurmeseMyanmar="my-MM",a.Cantonese="yue",a.CantoneseHongKong="yue-HK",a.Catalan="ca",a.CatalanSpain="ca-ES",a.Chechen="ce",a.Cherokee="chr",a.Chinese="zh",a.ChineseSimplified="zh-Hans",a.ChineseSimplifiedChina="zh-Hans-CN",a.ChineseSimplifiedHongKong="zh-Hans-HK",a.ChineseSimplifiedMacau="zh-Hans-MO",a.ChineseSimplifiedSingapore="zh-Hans-SG",a.ChineseTraditional="zh-Hant",a.ChineseTraditionalHongKong="zh-Hant-HK",a.ChineseTraditionalMacau="zh-Hant-MO",a.ChineseTraditionalSingapore="zh-Hant-SG",a.ChineseTraditionalTaiwan="zh-Hant-TW",a.Chuvash="cv",a.CorsicanFrance="co-FR",a.Croatian="hr",a.CroatianBosniaAndHerzegovina="hr-BA",a.CroatianCroatia="hr-HR",a.Czech="cs",a.CzechCzechRepublic="cs-CZ",a.Danish="da",a.DanishDenmark="da-DK",a.Dari="prs",a.DariAfghanistan="prs-AF",a.Divehi="dv",a.DivehiMaldives="dv-MV",a.Dutch="nl",a.DutchBelgium="nl-BE",a.DutchNetherlands="nl-NL",a.English="en",a.EnglishAustralia="en-AU",a.EnglishBelgium="en-BE",a.EnglishBelize="en-BZ",a.EnglishCanada="en-CA",a.EnglishCaribbean="en-029",a.EnglishIreland="en-IE",a.EnglishJamaica="en-JM",a.EnglishNewZealand="en-NZ",a.EnglishPhilippines="en-PH",a.EnglishSingapore="en-SG",a.EnglishSouthAfrica="en-ZA",a.EnglishTrinidadAndTobago="en-TT",a.EnglishUnitedKingdom="en-GB",a.EnglishUnitedStates="en-US",a.EnglishZimbabwe="en-ZW",a.Esperanto="eo",a.Estonian="et",a.EstonianEstonia="et-EE",a.Faroese="fo",a.FaroeseFaroeIslands="fo-FO",a.Farsi="fa",a.FarsiIran="fa-IR",a.Filipino="fil",a.FilipinoPhilippines="fil-PH",a.Finnish="fi",a.FinnishFinland="fi-FI",a.French="fr",a.FrenchBelgium="fr-BE",a.FrenchCanada="fr-CA",a.FrenchFrance="fr-FR",a.FrenchLuxembourg="fr-LU",a.FrenchMonaco="fr-MC",a.FrenchReunion="fr-RE",a.FrenchSwitzerland="fr-CH",a.Frisian="fy",a.FrisianNetherlands="fy-NL",a.Galician="gl",a.GalicianSpain="gl-ES",a.Georgian="ka",a.GeorgianGeorgia="ka-GE",a.German="de",a.GermanAustria="de-AT",a.GermanBelgium="de-BE",a.GermanGermany="de-DE",a.GermanLiechtenstein="de-LI",a.GermanLuxembourg="de-LU",a.GermanSwitzerland="de-CH",a.Greenlandic="kl",a.GreenlandicGreenland="kl-GL",a.Greek="el",a.GreekGreece="el-GR",a.Gujarati="gu",a.GujaratiIndia="gu-IN",a.Haitian="ht",a.Hausa="ha",a.HausaGhana="ha-GH",a.HausaNiger="ha-NE",a.HausaNigeria="ha-NG",a.Hebrew="he",a.HebrewIsrael="he-IL",a.Hindi="hi",a.HindiIndia="hi-IN",a.Hungarian="hu",a.HungarianHungary="hu-HU",a.Icelandic="is",a.IcelandicIceland="is-IS",a.Igbo="ig",a.IgboNigeria="ig-NG",a.Indonesian="id",a.IndonesianIndonesia="id-ID",a.Irish="ga",a.IrishIreland="ga-IE",a.Italian="it",a.ItalianItaly="it-IT",a.ItalianSwitzerland="it-CH",a.Japanese="ja",a.JapaneseJapan="ja-JP",a.Javanese="jv",a.Kannada="kn",a.KannadaIndia="kn-IN",a.Karelian="krl",a.Kazakh="kk",a.KazakhKazakhstan="kk-KZ",a.Khmer="km",a.KhmerCambodia="km-KH",a.KinyarwandaRwanda="rw-RW",a.Komi="kv",a.Konkani="kok",a.KonkaniIndia="kok-IN",a.Korean="ko",a.KoreanSouthKorea="ko-KR",a.Kurdish="ku",a.KurdishIraq="ku-IQ",a.KurdishTurkey="ku-TR",a.Kyrgyz="ky",a.KyrgyzKyrgyzstan="ky-KG",a.Lao="lo",a.LaoLaos="lo-LA",a.Latin="la",a.Latvian="lv",a.LatvianLatvia="lv-LV",a.Lithuanian="lt",a.LithuanianLithuania="lt-LT",a.Luxembourgish="lb",a.LuxembourgishBelgium="lb-LU",a.LuxembourgishLuxembourg="lb-LU",a.Macedonian="mk",a.MacedonianNorthMacedonia="mk-MK",a.Malagasy="mg",a.Malay="ms",a.MalayBrunei="ms-BN",a.MalayIndia="ms-IN",a.MalayMalaysia="ms-MY",a.MalaySingapore="ms-SG",a.Malayalam="ml",a.MalayalamIndia="ml-IN",a.Maltese="mt",a.MalteseMalta="mt-MT",a.Maori="mi",a.MaoriNewZealand="mi-NZ",a.Marathi="mr",a.MarathiIndia="mr-IN",a.Mari="chm",a.Mongolian="mn",a.MongolianMongolia="mn-MN",a.Montenegrin="me",a.MontenegrinMontenegro="me-ME",a.Nepali="ne",a.NepaliNepal="ne-NP",a.NorthernSotho="ns",a.NorthernSothoSouthAfrica="ns-ZA",a.Norwegian="nb",a.NorwegianBokmalNorway="nb-NO",a.NorwegianNynorskNorway="nn-NO",a.Oriya="or",a.OriyaIndia="or-IN",a.Ossetian="os",a.Pashto="ps",a.PashtoAfghanistan="ps-AF",a.Persian="fa",a.PersianIran="fa-IR",a.Polish="pl",a.PolishPoland="pl-PL",a.Portuguese="pt",a.PortugueseBrazil="pt-BR",a.PortuguesePortugal="pt-PT",a.Punjabi="pa",a.PunjabiIndia="pa-IN",a.PunjabiPakistan="pa-PK",a.Quechua="qu",a.QuechuaBolivia="qu-BO",a.QuechuaEcuador="qu-EC",a.QuechuaPeru="qu-PE",a.Romanian="ro",a.RomanianRomania="ro-RO",a.Russian="ru",a.RussianKazakhstan="ru-KZ",a.RussianKyrgyzstan="ru-KG",a.RussianRussia="ru-RU",a.RussianUkraine="ru-UA",a.Sakha="sah",a.Sanskrit="sa",a.SanskritIndia="sa-IN",a.Sami="se",a.SamiNorway="se-NO",a.SamiSweden="se-SE",a.SamiFinland="se-FI",a.Samoan="sm",a.SamoanSamoa="sm-WS",a.Scots="gd",a.Serbian="sr",a.SerbianBosniaAndHerzegovina="sr-BA",a.SerbianSerbiaAndMontenegro="sr-SP",a.SerbianCyrillic="sr-SP-Cyrl",a.SerbianCyrillicBosniaAndHerzegovina="sr-Cyrl-BA",a.SerbianCyrillicSerbiaAndMontenegro="sr-Cyrl-SP",a.Sesotho="st",a.SesothoSouthAfrica="st-ZA",a.Shona="sn",a.ShonaZimbabwe="sn-ZW",a.Sindhi="sd",a.SindhiPakistan="sd-PK",a.Sinhala="si",a.SinhalaSriLanka="si-LK",a.Slovak="sk",a.SlovakSlovakia="sk-SK",a.Slovenian="sl",a.SlovenianSlovenia="sl-SI",a.Somali="so",a.SomaliSomalia="so-SO",a.Spanish="es",a.SpanishArgentina="es-AR",a.SpanishBolivia="es-BO",a.SpanishChile="es-CL",a.SpanishColombia="es-CO",a.SpanishCostaRica="es-CR",a.SpanishCuba="es-CU",a.SpanishDominicanRepublic="es-DO",a.SpanishEcuador="es-EC",a.SpanishEquatorialGuinea="es-GQ",a.SpanishElSalvador="es-SV",a.SpanishGuatemala="es-GT",a.SpanishHonduras="es-HN",a.SpanishMexico="es-MX",a.SpanishNicaragua="es-NI",a.SpanishPanama="es-PA",a.SpanishParaguay="es-PY",a.SpanishPeru="es-PE",a.SpanishPuertoRico="es-PR",a.SpanishSpain="es-ES",a.SpanishUnitedStates="es-US",a.SpanishUruguay="es-UY",a.SpanishVenezuela="es-VE",a.Sudanese="su",a.Sutu="st",a.SutuSouthAfrica="st-ZA",a.Swahili="sw",a.SwahiliKenya="sw-KE",a.Swedish="sv",a.SwedishFinland="sv-FI",a.SwedishSweden="sv-SE",a.Syriac="syr",a.SyriacSyria="syr-SY",a.Tajik="tg",a.TajikTajikistan="tg-TJ",a.Tagalog="tl",a.TagalogPhilippines="tl-PH",a.Tamazight="tmh",a.Tamil="ta",a.TamilIndia="ta-IN",a.Tatar="tt",a.Telugu="te",a.TeluguIndia="te-IN",a.Thai="th",a.ThaiThailand="th-TH",a.Tibetan="bo",a.TibetanBhutan="bo-BT",a.TibetanChina="bo-CN",a.TibetanIndia="bo-IN",a.Tsonga="ts",a.Tswana="tn",a.TswanaSouthAfrica="tn-ZA",a.Turkish="tr",a.TurkishTurkey="tr-TR",a.Turkmen="tk",a.Ukrainian="uk",a.UkrainianUkraine="uk-UA",a.Urdu="ur",a.UrduAfghanistan="ur-AF",a.UrduIndia="ur-IN",a.UrduPakistan="ur-PK",a.Uzbek="uz",a.UzbekCyrillic="uz-Cyrl-UZ",a.UzbekLatin="uz-Latn-UZ",a.UzbekUzbekistan="uz-UZ",a.Vietnamese="vi",a.VietnameseVietnam="vi-VN",a.Welsh="cy",a.WelshUnitedKingdom="cy-GB",a.Xhosa="xh",a.XhosaSouthAfrica="xh-ZA",a.Yiddish="yi",a.Yoruba="yo",a.YorubaNigeria="yo-NG",a.ZhuyinMandarinChina="yue-Hant-CN",a.Zulu="zu",a.ZuluSouthAfrica="zu-ZA"})(e||(e={}));var d;(function(a){a.AfricaAbidjan="Africa/Abidjan",a.AfricaAccra="Africa/Accra",a.AfricaAddisAbaba="Africa/Addis_Ababa",a.AfricaAlgiers="Africa/Algiers",a.AfricaAsmara="Africa/Asmara",a.AfricaBamako="Africa/Bamako",a.AfricaBangui="Africa/Bangui",a.AfricaBanjul="Africa/Banjul",a.AfricaBissau="Africa/Bissau",a.AfricaBlantyre="Africa/Blantyre",a.AfricaBrazzaville="Africa/Brazzaville",a.AfricaBujumbura="Africa/Bujumbura",a.AfricaCairo="Africa/Cairo",a.AfricaCasablanca="Africa/Casablanca",a.AfricaCeuta="Africa/Ceuta",a.AfricaConakry="Africa/Conakry",a.AfricaDakar="Africa/Dakar",a.AfricaDarEsSalaam="Africa/Dar_es_Salaam",a.AfricaDjibouti="Africa/Djibouti",a.AfricaDouala="Africa/Douala",a.AfricaElAaiun="Africa/El_Aaiun",a.AfricaFreetown="Africa/Freetown",a.AfricaGaborone="Africa/Gaborone",a.AfricaHarare="Africa/Harare",a.AfricaJohannesburg="Africa/Johannesburg",a.AfricaJuba="Africa/Juba",a.AfricaKampala="Africa/Kampala",a.AfricaKhartoum="Africa/Khartoum",a.AfricaKigali="Africa/Kigali",a.AfricaKinshasa="Africa/Kinshasa",a.AfricaLagos="Africa/Lagos",a.AfricaLibreville="Africa/Libreville",a.AfricaLome="Africa/Lome",a.AfricaLuanda="Africa/Luanda",a.AfricaLubumbashi="Africa/Lubumbashi",a.AfricaLusaka="Africa/Lusaka",a.AfricaMalabo="Africa/Malabo",a.AfricaMaputo="Africa/Maputo",a.AfricaMaseru="Africa/Maseru",a.AfricaMbabane="Africa/Mbabane",a.AfricaMogadishu="Africa/Mogadishu",a.AfricaMonrovia="Africa/Monrovia",a.AfricaNairobi="Africa/Nairobi",a.AfricaNdjamena="Africa/Ndjamena",a.AfricaNiamey="Africa/Niamey",a.AfricaNouakchott="Africa/Nouakchott",a.AfricaOuagadougou="Africa/Ouagadougou",a.AfricaPortoNovo="Africa/Porto-Novo",a.AfricaSaoTome="Africa/Sao_Tome",a.AfricaTripoli="Africa/Tripoli",a.AfricaTunis="Africa/Tunis",a.AfricaWindhoek="Africa/Windhoek",a.AmericaAdak="America/Adak",a.AmericaAnchorage="America/Anchorage",a.AmericaAnguilla="America/Anguilla",a.AmericaAntigua="America/Antigua",a.AmericaAraguaina="America/Araguaina",a.AmericaArgentinaBuenosAires="America/Argentina/Buenos_Aires",a.AmericaArgentinaCatamarca="America/Argentina/Catamarca",a.AmericaArgentinaCordoba="America/Argentina/Cordoba",a.AmericaArgentinaJujuy="America/Argentina/Jujuy",a.AmericaArgentinaLaRioja="America/Argentina/La_Rioja",a.AmericaArgentinaMendoza="America/Argentina/Mendoza",a.AmericaArgentinaRioGallegos="America/Argentina/Rio_Gallegos",a.AmericaArgentinaSalta="America/Argentina/Salta",a.AmericaArgentinaSanJuan="America/Argentina/San_Juan",a.AmericaArgentinaSanLuis="America/Argentina/San_Luis",a.AmericaArgentinaTucuman="America/Argentina/Tucuman",a.AmericaArgentinaUshuaia="America/Argentina/Ushuaia",a.AmericaAruba="America/Aruba",a.AmericaAsuncion="America/Asuncion",a.AmericaAtikokan="America/Atikokan",a.AmericaAtka="America/Atka",a.AmericaBahia="America/Bahia",a.AmericaBahiaBanderas="America/Bahia_Banderas",a.AmericaBarbados="America/Barbados",a.AmericaBelem="America/Belem",a.AmericaBelize="America/Belize",a.AmericaBlancSablon="America/Blanc-Sablon",a.AmericaBoaVista="America/Boa_Vista",a.AmericaBogota="America/Bogota",a.AmericaBoise="America/Boise",a.AmericaCambridgeBay="America/Cambridge_Bay",a.AmericaCampoGrande="America/Campo_Grande",a.AmericaCancun="America/Cancun",a.AmericaCaracas="America/Caracas",a.AmericaCayenne="America/Cayenne",a.AmericaCayman="America/Cayman",a.AmericaChicago="America/Chicago",a.AmericaChihuahua="America/Chihuahua",a.AmericaCoralHarbour="America/Coral_Harbour",a.AmericaCordoba="America/Cordoba",a.AmericaCostaRica="America/Costa_Rica",a.AmericaCreston="America/Creston",a.AmericaCuiaba="America/Cuiaba",a.AmericaCuracao="America/Curacao",a.AmericaDanmarkshavn="America/Danmarkshavn",a.AmericaDawson="America/Dawson",a.AmericaDawsonCreek="America/Dawson_Creek",a.AmericaDenver="America/Denver",a.AmericaDetroit="America/Detroit",a.AmericaDominica="America/Dominica",a.AmericaEdmonton="America/Edmonton",a.AmericaEirunepe="America/Eirunepe",a.AmericaElSalvador="America/El_Salvador",a.AmericaFortaleza="America/Fortaleza",a.AmericaGlaceBay="America/Glace_Bay",a.AmericaGodthab="America/Godthab",a.AmericaGooseBay="America/Goose_Bay",a.AmericaGrandTurk="America/Grand_Turk",a.AmericaGrenada="America/Grenada",a.AmericaGuadeloupe="America/Guadeloupe",a.AmericaGuatemala="America/Guatemala",a.AmericaGuayaquil="America/Guayaquil",a.AmericaGuyana="America/Guyana",a.AmericaHalifax="America/Halifax",a.AmericaHavana="America/Havana",a.AmericaHermosillo="America/Hermosillo",a.AmericaIndianaIndianapolis="America/Indiana/Indianapolis",a.AmericaIndianaKnox="America/Indiana/Knox",a.AmericaIndianaMarengo="America/Indiana/Marengo",a.AmericaIndianaPetersburg="America/Indiana/Petersburg",a.AmericaIndianaTellCity="America/Indiana/Tell_City",a.AmericaIndianaVevay="America/Indiana/Vevay",a.AmericaIndianaVincennes="America/Indiana/Vincennes",a.AmericaIndianaWinamac="America/Indiana/Winamac",a.AmericaInuvik="America/Inuvik",a.AmericaIqaluit="America/Iqaluit",a.AmericaJamaica="America/Jamaica",a.AmericaJuneau="America/Juneau",a.AmericaKentuckyLouisville="America/Kentucky/Louisville",a.AmericaKentuckyMonticello="America/Kentucky/Monticello",a.AmericaKralendijk="America/Kralendijk",a.AmericaLaPaz="America/La_Paz",a.AmericaLima="America/Lima",a.AmericaLosAngeles="America/Los_Angeles",a.AmericaLouisville="America/Louisville",a.AmericaLowerPrinces="America/Lower_Princes",a.AmericaMaceio="America/Maceio",a.AmericaManagua="America/Managua",a.AmericaManaus="America/Manaus",a.AmericaMarigot="America/Marigot",a.AmericaMartinique="America/Martinique",a.AmericaMatamoros="America/Matamoros",a.AmericaMazatlan="America/Mazatlan",a.AmericaMenominee="America/Menominee",a.AmericaMerida="America/Merida",a.AmericaMetlakatla="America/Metlakatla",a.AmericaMexicoCity="America/Mexico_City",a.AmericaMiquelon="America/Miquelon",a.AmericaMoncton="America/Moncton",a.AmericaMonterrey="America/Monterrey",a.AmericaMontevideo="America/Montevideo",a.AmericaMontserrat="America/Montserrat",a.AmericaMontreal="America/Montreal",a.AmericaNassau="America/Nassau",a.AmericaNewYork="America/New_York",a.AmericaNipigon="America/Nipigon",a.AmericaNome="America/Nome",a.AmericaNoronha="America/Noronha",a.AmericaNorthDakotaBeulah="America/North_Dakota/Beulah",a.AmericaNorthDakotaCenter="America/North_Dakota/Center",a.AmericaNorthDakotaNewSalem="America/North_Dakota/New_Salem",a.AmericaOjinaga="America/Ojinaga",a.AmericaPanama="America/Panama",a.AmericaPangnirtung="America/Pangnirtung",a.AmericaParamaribo="America/Paramaribo",a.AmericaPhoenix="America/Phoenix",a.AmericaPortAuPrince="America/Port-au-Prince",a.AmericaPortOfSpain="America/Port_of_Spain",a.AmericaPortoVelho="America/Porto_Velho",a.AmericaPuertoRico="America/Puerto_Rico",a.AmericaRainyRiver="America/Rainy_River",a.AmericaRankinInlet="America/Rankin_Inlet",a.AmericaRecife="America/Recife",a.AmericaRegina="America/Regina",a.AmericaResolute="America/Resolute",a.AmericaRioBranco="America/Rio_Branco",a.AmericaSantaIsabel="America/Santa_Isabel",a.AmericaSantarem="America/Santarem",a.AmericaSantiago="America/Santiago",a.AmericaSantoDomingo="America/Santo_Domingo",a.AmericaSaoPaulo="America/Sao_Paulo",a.AmericaScoresbysund="America/Scoresbysund",a.AmericaShiprock="America/Shiprock",a.AmericaSitka="America/Sitka",a.AmericaStBarthelemy="America/St_Barthelemy",a.AmericaStJohns="America/St_Johns",a.AmericaStKitts="America/St_Kitts",a.AmericaStLucia="America/St_Lucia",a.AmericaStThomas="America/St_Thomas",a.AmericaStVincent="America/St_Vincent",a.AmericaSwiftCurrent="America/Swift_Current",a.AmericaTegucigalpa="America/Tegucigalpa",a.AmericaThule="America/Thule",a.AmericaThunderBay="America/Thunder_Bay",a.AmericaTijuana="America/Tijuana",a.AmericaToronto="America/Toronto",a.AmericaTortola="America/Tortola",a.AmericaVancouver="America/Vancouver",a.AmericaWhitehorse="America/Whitehorse",a.AmericaWinnipeg="America/Winnipeg",a.AmericaYakutat="America/Yakutat",a.AmericaYellowknife="America/Yellowknife",a.AntarcticaCasey="Antarctica/Casey",a.AntarcticaDavis="Antarctica/Davis",a.AntarcticaDumontDUrville="Antarctica/DumontDUrville",a.AntarcticaMacquarie="Antarctica/Macquarie",a.AntarcticaMawson="Antarctica/Mawson",a.AntarcticaMcMurdo="Antarctica/McMurdo",a.AntarcticaPalmer="Antarctica/Palmer",a.AntarcticaRothera="Antarctica/Rothera",a.AntarcticaSyowa="Antarctica/Syowa",a.AntarcticaTroll="Antarctica/Troll",a.AntarcticaVostok="Antarctica/Vostok",a.ArcticLongyearbyen="Arctic/Longyearbyen",a.AsiaAden="Asia/Aden",a.AsiaAlmaty="Asia/Almaty",a.AsiaAmman="Asia/Amman",a.AsiaAnadyr="Asia/Anadyr",a.AsiaAqtau="Asia/Aqtau",a.AsiaAqtobe="Asia/Aqtobe",a.AsiaAshgabat="Asia/Ashgabat",a.AsiaBaghdad="Asia/Baghdad",a.AsiaBahrain="Asia/Bahrain",a.AsiaBaku="Asia/Baku",a.AsiaBangkok="Asia/Bangkok",a.AsiaBarnaul="Asia/Barnaul",a.AsiaBeirut="Asia/Beirut",a.AsiaBishkek="Asia/Bishkek",a.AsiaBrunei="Asia/Brunei",a.AsiaChita="Asia/Chita",a.AsiaChoibalsan="Asia/Choibalsan",a.AsiaColombo="Asia/Colombo",a.AsiaDamascus="Asia/Damascus",a.AsiaDhaka="Asia/Dhaka",a.AsiaDili="Asia/Dili",a.AsiaDubai="Asia/Dubai",a.AsiaDushanbe="Asia/Dushanbe",a.AsiaFamagusta="Asia/Famagusta",a.AsiaGaza="Asia/Gaza",a.AsiaHebron="Asia/Hebron",a.AsiaHoChiMinh="Asia/Ho_Chi_Minh",a.AsiaHongKong="Asia/Hong_Kong",a.AsiaHovd="Asia/Hovd",a.AsiaIrkutsk="Asia/Irkutsk",a.AsiaJakarta="Asia/Jakarta",a.AsiaJayapura="Asia/Jayapura",a.AsiaJerusalem="Asia/Jerusalem",a.AsiaKabul="Asia/Kabul",a.AsiaKamchatka="Asia/Kamchatka",a.AsiaKarachi="Asia/Karachi",a.AsiaKathmandu="Asia/Kathmandu",a.AsiaKhandyga="Asia/Khandyga",a.AsiaKolkata="Asia/Kolkata",a.AsiaKrasnoyarsk="Asia/Krasnoyarsk",a.AsiaKualaLumpur="Asia/Kuala_Lumpur",a.AsiaKuching="Asia/Kuching",a.AsiaKuwait="Asia/Kuwait",a.AsiaMacau="Asia/Macau",a.AsiaMagadan="Asia/Magadan",a.AsiaMakassar="Asia/Makassar",a.AsiaManila="Asia/Manila",a.AsiaMuscat="Asia/Muscat",a.AsiaNicosia="Asia/Nicosia",a.AsiaNovokuznetsk="Asia/Novokuznetsk",a.AsiaNovosibirsk="Asia/Novosibirsk",a.AsiaOmsk="Asia/Omsk",a.AsiaOral="Asia/Oral",a.AsiaPhnomPenh="Asia/Phnom_Penh",a.AsiaPontianak="Asia/Pontianak",a.AsiaPyongyang="Asia/Pyongyang",a.AsiaQatar="Asia/Qatar",a.AsiaQyzylorda="Asia/Qyzylorda",a.AsiaRangoon="Asia/Rangoon",a.AsiaRiyadh="Asia/Riyadh",a.AsiaSakhalin="Asia/Sakhalin",a.AsiaSamarkand="Asia/Samarkand",a.AsiaSeoul="Asia/Seoul",a.AsiaShanghai="Asia/Shanghai",a.AsiaSingapore="Asia/Singapore",a.AsiaSrednekolymsk="Asia/Srednekolymsk",a.AsiaTaipei="Asia/Taipei",a.AsiaTashkent="Asia/Tashkent",a.AsiaTbilisi="Asia/Tbilisi",a.AsiaTehran="Asia/Tehran",a.AsiaThimphu="Asia/Thimphu",a.AsiaTokyo="Asia/Tokyo",a.AsiaTomsk="Asia/Tomsk",a.AsiaUlaanbaatar="Asia/Ulaanbaatar",a.AsiaUrumqi="Asia/Urumqi",a.AsiaUstNera="Asia/Ust-Nera",a.AsiaVientiane="Asia/Vientiane",a.AsiaVladivostok="Asia/Vladivostok",a.AsiaYakutsk="Asia/Yakutsk",a.AsiaYekaterinburg="Asia/Yekaterinburg",a.AsiaYerevan="Asia/Yerevan",a.AtlanticAzores="Atlantic/Azores",a.AtlanticBermuda="Atlantic/Bermuda",a.AtlanticCanary="Atlantic/Canary",a.AtlanticCapeVerde="Atlantic/Cape_Verde",a.AtlanticFaroe="Atlantic/Faroe",a.AtlanticMadeira="Atlantic/Madeira",a.AtlanticReykjavik="Atlantic/Reykjavik",a.AtlanticSouthGeorgia="Atlantic/South_Georgia",a.AtlanticStHelena="Atlantic/St_Helena",a.AtlanticStanley="Atlantic/Stanley",a.AustraliaAdelaide="Australia/Adelaide",a.AustraliaBrisbane="Australia/Brisbane",a.AustraliaBrokenHill="Australia/Broken_Hill",a.AustraliaCanberra="Australia/Canberra",a.AustraliaCurrie="Australia/Currie",a.AustraliaDarwin="Australia/Darwin",a.AustraliaEucla="Australia/Eucla",a.AustraliaHobart="Australia/Hobart",a.AustraliaLindeman="Australia/Lindeman",a.AustraliaLordHowe="Australia/Lord_Howe",a.AustraliaMelbourne="Australia/Melbourne",a.AustraliaPerth="Australia/Perth",a.AustraliaSydney="Australia/Sydney",a.EuropeAmsterdam="Europe/Amsterdam",a.EuropeAndorra="Europe/Andorra",a.EuropeAthens="Europe/Athens",a.EuropeBelgrade="Europe/Belgrade",a.EuropeBerlin="Europe/Berlin",a.EuropeBratislava="Europe/Bratislava",a.EuropeBrussels="Europe/Brussels",a.EuropeBucharest="Europe/Bucharest",a.EuropeBudapest="Europe/Budapest",a.EuropeBusingen="Europe/Busingen",a.EuropeChisinau="Europe/Chisinau",a.EuropeCopenhagen="Europe/Copenhagen",a.EuropeDublin="Europe/Dublin",a.EuropeGibraltar="Europe/Gibraltar",a.EuropeGuernsey="Europe/Guernsey",a.EuropeHelsinki="Europe/Helsinki",a.EuropeIsleOfMan="Europe/Isle_of_Man",a.EuropeIstanbul="Europe/Istanbul",a.EuropeJersey="Europe/Jersey",a.EuropeKaliningrad="Europe/Kaliningrad",a.EuropeKiev="Europe/Kiev",a.EuropeKirov="Europe/Kirov",a.EuropeLisbon="Europe/Lisbon",a.EuropeLjubljana="Europe/Ljubljana",a.EuropeLondon="Europe/London",a.EuropeLuxembourg="Europe/Luxembourg",a.EuropeMadrid="Europe/Madrid",a.EuropeMalta="Europe/Malta",a.EuropeMariehamn="Europe/Mariehamn",a.EuropeMinsk="Europe/Minsk",a.EuropeMonaco="Europe/Monaco",a.EuropeMoscow="Europe/Moscow",a.EuropeOslo="Europe/Oslo",a.EuropeParis="Europe/Paris",a.EuropePodgorica="Europe/Podgorica",a.EuropePrague="Europe/Prague",a.EuropeRiga="Europe/Riga",a.EuropeRome="Europe/Rome",a.EuropeSamara="Europe/Samara",a.EuropeSanMarino="Europe/San_Marino",a.EuropeSarajevo="Europe/Sarajevo",a.EuropeSimferopol="Europe/Simferopol",a.EuropeSkopje="Europe/Skopje",a.EuropeSofia="Europe/Sofia",a.EuropeStockholm="Europe/Stockholm",a.EuropeTallinn="Europe/Tallinn",a.EuropeTirane="Europe/Tirane",a.EuropeUzhgorod="Europe/Uzhgorod",a.EuropeVaduz="Europe/Vaduz",a.EuropeVatican="Europe/Vatican",a.EuropeVienna="Europe/Vienna",a.EuropeVilnius="Europe/Vilnius",a.EuropeVolgograd="Europe/Volgograd",a.EuropeWarsaw="Europe/Warsaw",a.EuropeZagreb="Europe/Zagreb",a.EuropeZaporozhye="Europe/Zaporozhye",a.EuropeZurich="Europe/Zurich",a.GMT="GMT",a.IndianAntananarivo="Indian/Antananarivo",a.IndianChagos="Indian/Chagos",a.IndianChristmas="Indian/Christmas",a.IndianCocos="Indian/Cocos",a.IndianComoro="Indian/Comoro",a.IndianKerguelen="Indian/Kerguelen",a.IndianMahe="Indian/Mahe",a.IndianMaldives="Indian/Maldives",a.IndianMauritius="Indian/Mauritius",a.IndianMayotte="Indian/Mayotte",a.IndianReunion="Indian/Reunion",a.PacificApia="Pacific/Apia",a.PacificAuckland="Pacific/Auckland",a.PacificBougainville="Pacific/Bougainville",a.PacificChatham="Pacific/Chatham",a.PacificChuuk="Pacific/Chuuk",a.PacificEaster="Pacific/Easter",a.PacificEfate="Pacific/Efate",a.PacificEnderbury="Pacific/Enderbury",a.PacificFakaofo="Pacific/Fakaofo",a.PacificFiji="Pacific/Fiji",a.PacificFunafuti="Pacific/Funafuti",a.PacificGalapagos="Pacific/Galapagos",a.PacificGambier="Pacific/Gambier",a.PacificGuadalcanal="Pacific/Guadalcanal",a.PacificGuam="Pacific/Guam",a.PacificHonolulu="Pacific/Honolulu",a.PacificJohnston="Pacific/Johnston",a.PacificKiritimati="Pacific/Kiritimati",a.PacificKosrae="Pacific/Kosrae",a.PacificKwajalein="Pacific/Kwajalein",a.PacificMajuro="Pacific/Majuro",a.PacificMarquesas="Pacific/Marquesas",a.PacificMidway="Pacific/Midway",a.PacificNauru="Pacific/Nauru",a.PacificNiue="Pacific/Niue",a.PacificNorfolk="Pacific/Norfolk",a.PacificNoumea="Pacific/Noumea",a.PacificPagoPago="Pacific/Pago_Pago",a.PacificPalau="Pacific/Palau",a.PacificPitcairn="Pacific/Pitcairn",a.PacificPohnpei="Pacific/Pohnpei",a.PacificPonape="Pacific/Ponape",a.PacificPortMoresby="Pacific/Port_Moresby",a.PacificRarotonga="Pacific/Rarotonga",a.PacificSaipan="Pacific/Saipan",a.PacificSamoa="Pacific/Samoa",a.PacificTahiti="Pacific/Tahiti",a.PacificTarawa="Pacific/Tarawa",a.PacificTongatapu="Pacific/Tongatapu",a.PacificTruk="Pacific/Truk",a.PacificWake="Pacific/Wake",a.PacificWallis="Pacific/Wallis",a.PacificYap="Pacific/Yap"})(d||(d={}));var t;(function(a){a.UTC_MINUS_12="UTC-12",a.UTC_MINUS_11_30="UTC-11:30",a.UTC_MINUS_11="UTC-11",a.UTC_MINUS_10_30="UTC-10:30",a.UTC_MINUS_10="UTC-10",a.UTC_MINUS_9_30="UTC-9:30",a.UTC_MINUS_9="UTC-09",a.UTC_MINUS_8_45="UTC-8:45",a.UTC_MINUS_8="UTC-08",a.UTC_MINUS_7="UTC-07",a.UTC_MINUS_6_30="UTC-6:30",a.UTC_MINUS_6="UTC-06",a.UTC_MINUS_5_45="UTC-5:45",a.UTC_MINUS_5_30="UTC-5:30",a.UTC_MINUS_5="UTC-05",a.UTC_MINUS_4_30="UTC-4:30",a.UTC_MINUS_4="UTC-04",a.UTC_MINUS_3_30="UTC-3:30",a.UTC_MINUS_3="UTC-03",a.UTC_MINUS_2_30="UTC-2:30",a.UTC_MINUS_2="UTC-02",a.UTC_MINUS_1="UTC-01",a.UTC_0="UTC+00",a.UTC_PLUS_1="UTC+01",a.UTC_PLUS_2="UTC+02",a.UTC_PLUS_3="UTC+03",a.UTC_PLUS_3_30="UTC+3:30",a.UTC_PLUS_4="UTC+04",a.UTC_PLUS_4_30="UTC+4:30",a.UTC_PLUS_5="UTC+05",a.UTC_PLUS_5_30="UTC+5:30",a.UTC_PLUS_5_45="UTC+5:45",a.UTC_PLUS_6="UTC+06",a.UTC_PLUS_6_30="UTC+6:30",a.UTC_PLUS_7="UTC+07",a.UTC_PLUS_8="UTC+08",a.UTC_PLUS_8_45="UTC+8:45",a.UTC_PLUS_9="UTC+09",a.UTC_PLUS_9_30="UTC+9:30",a.UTC_PLUS_10="UTC+10",a.UTC_PLUS_10_30="UTC+10:30",a.UTC_PLUS_11="UTC+11",a.UTC_PLUS_11_30="UTC+11:30",a.UTC_PLUS_12="UTC+12",a.UTC_PLUS_12_45="UTC+12:45",a.UTC_PLUS_13="UTC+13",a.UTC_PLUS_13_45="UTC+13:45",a.UTC_PLUS_14="UTC+14"})(t||(t={}));var l;(function(a){a.AcreTime="ACT",a.AfghanistanTime="AFT",a.AIXCentralEuropeanTime="DFT",a.AlaskaDaylightTime="AKDT",a.AlaskaStandardTime="AKST",a.AlmaAtaTime="ALMT",a.AmazonSummerTime="AMST",a.AmazonTime="AMT",a.AnadyrTime="ANAT",a.AqtobeTime="AQTT",a.ArabiaStandardTime="AST",a.ArgentinaTime="ART",a.ArmeniaTime="AMT",a.ASEANCommonTime="ASEAN",a.AtlanticDaylightTime="ADT",a.AtlanticStandardTime="AST",a.AustralianCentralDaylightSavingTime="ACDT",a.AustralianCentralStandardTime="ACST",a.AustralianCentralWesternStandardTime="ACWST",a.AustralianEasternDaylightSavingTime="AEDT",a.AustralianEasternStandardTime="AEST",a.AustralianEasternTime="AET",a.AustralianWesternStandardTime="AWST",a.AzerbaijanTime="AZT",a.AzoresStandardTime="AZOT",a.AzoresSummerTime="AZOST",a.BakerIslandTime="BIT",a.BangladeshStandardTime="BST",a.BhutanTime="BTT",a.BoliviaTime="BOT",a.BougainvilleStandardTime="BST",a.BrasiliaSummerTime="BRST",a.BrasiliaTime="BRT",a.BritishIndianOceanTime="BIOT",a.BritishSummerTime="BST",a.BruneiTime="BNT",a.CapeVerdeTime="CVT",a.CentralAfricaTime="CAT",a.CentralDaylightTime="CDT",a.CentralEuropeanSummerTime="CEST",a.CentralEuropeanTime="CET",a.CentralIndonesiaTime="WITA",a.CentralStandardTime="CST",a.CentralTime="CT",a.CentralWesternStandardTime="CWST",a.ChamorroStandardTime="CHST",a.ChathamDaylightTime="CHADT",a.ChathamStandardTime="CHAST",a.ChileStandardTime="CLT",a.ChileSummerTime="CLST",a.ChinaStandardTime="CST",a.ChoibalsanStandardTime="CHOT",a.ChoibalsanSummerTime="CHOST",a.ChristmasIslandTime="CXT",a.ChuukTime="CHUT",a.ClipptertonIslandStandardTime="CIST",a.CocosIslandsTime="CCT",a.ColombiaSummerTime="COST",a.ColombiaTime="COT",a.CookIslandTime="CKT",a.CoordinatedUniversalTime="UTC",a.CubaDaylightTime="CDT",a.CubaStandardTime="CST",a.DavisTime="DAVT",a.DumontDUrvilleTime="DDUT",a.EastAfricaTime="EAT",a.EasterIslandStandardTime="EAST",a.EasterIslandSummerTime="EASST",a.EasternCaribbeanTime="ECT",a.EasternDaylightTime="EDT",a.EasternEuropeanSummerTime="EEST",a.EasternEuropeanTime="EET",a.EasternGreenlandSummerTime="EGST",a.EasternGreenlandTime="EGT",a.EasternIndonesianTime="WIT",a.EasternStandardTime="EST",a.EasternTime="ET",a.EcuadorTime="ECT",a.FalklandIslandsSummerTime="FKST",a.FalklandIslandsTime="FKT",a.FernandoDeNoronhaTime="FNT",a.FijiTime="FJT",a.FrenchGuianaTime="GFT",a.FrenchSouthernAndAntarcticTime="TFT",a.FurtherEasternEuropeanTime="FET",a.GalapagosTime="GALT",a.GambierIslandTime="GIT",a.GambierIslandsTime="GAMT",a.GeorgiaStandardTime="GET",a.GilbertIslandTime="GILT",a.GreenwichMeanTime="GMT",a.GulfStandardTime="GST",a.GuyanaTime="GYT",a.HawaiiAleutianDaylightTime="HDT",a.HawaiiAleutianStandardTime="HST",a.HeardAndMcDonaldIslandsTime="HMT",a.HeureAvanceeDEuropeCentraleTime="HAEC",a.HongKongTime="HKT",a.HovdSummerTime="HOVST",a.HovdTime="HOVT",a.IndianOceanTime="IOT",a.IndianStandardTime="IST",a.IndochinaTime="ICT",a.InternationalDayLineWestTime="IDLW",a.IranDaylightTime="IRDT",a.IranStandardTime="IRST",a.IrishStandardTime="IST",a.IrkutskSummerTime="IRKST",a.IrkutskTime="IRKT",a.IsraelDaylightTime="IDT",a.IsraelStandardTime="IST",a.JapanStandardTime="JST",a.KaliningradTime="KALT",a.KamchatkaTime="KAMT",a.KoreaStandardTime="KST",a.KosraeTime="KOST",a.KrasnoyarskSummerTime="KRAST",a.KrasnoyarskTime="KRAT",a.KyrgyzstanTime="KGT",a.LineIslandsTime="LINT",a.KazakhstanStandardTime="KAST",a.LordHoweStandardTime="LHST",a.LordHoweSummerTime="LHST",a.MacquarieIslandStationTime="MIST",a.MagadanTime="MAGT",a.MalaysiaStandardTime="MST",a.MalaysiaTime="MYT",a.MaldivesTime="MVT",a.MarquesasIslandsTime="MART",a.MarshallIslandsTime="MHT",a.MauritiusTime="MUT",a.MawsonStationTime="MAWT",a.MiddleEuropeanSummerTime="MEDT",a.MiddleEuropeanTime="MET",a.MoscowTime="MSK",a.MountainDaylightTime="MDT",a.MountainStandardTime="MST",a.MyanmarStandardTime="MMT",a.NepalTime="NCT",a.NauruTime="NRT",a.NewCaledoniaTime="NCT",a.NewZealandDaylightTime="NZDT",a.NewZealandStandardTime="NZST",a.NewfoundlandDaylightTime="NDT",a.NewfoundlandStandardTime="NST",a.NewfoundlandTime="NT",a.NiueTime="NUT",a.NorfolkIslandTime="NFT",a.NovosibirskTime="NOVT",a.OmskTime="OMST",a.OralTime="ORAT",a.PacificDaylightTime="PDT",a.PacificStandardTime="PST",a.PakistanStandardTime="PKT",a.PalauTime="PWT",a.PapuaNewGuineaTime="PGT",a.ParaguaySummerTime="PYST",a.ParaguayTime="PYT",a.PeruTime="PET",a.PhilippineStandardTime="PHST",a.PhilippineTime="PHT",a.PhoenixIslandTime="PHOT",a.PitcairnTime="PST",a.PohnpeiStandardTime="PONT",a.ReunionTime="RET",a.RotheraResearchStationTime="ROTT",a.SaintPierreAndMiquelonDaylightTime="PMDT",a.SaintPierreAndMiquelonStandardTime="PMST",a.SakhalinIslandTime="SAKT",a.SamaraTime="SAMT",a.SamoaDaylightTime="SDT",a.SamoaStandardTime="SST",a.SeychellesTime="SCT",a.ShowaStationTime="SYOT",a.SingaporeStandardTime="SST",a.SingaporeTime="SGT",a.SolomonIslandsTime="SBT",a.SouthAfricanStandardTime="SAST",a.SouthGeorgiaAndTheSouthSandwichIslandsTime="GST",a.SrednekolymskTime="SRET",a.SriLankaStandardTime="SLST",a.SurinameTime="SRT",a.TahitiTime="TAHT",a.TajikistanTime="TJT",a.ThailandStandardTime="THA",a.TimorLesteTime="TLT",a.TokelauTime="TKT",a.TongaTime="TOT",a.TurkeyTime="TRT",a.TurkmenistanTime="TMT",a.TuvaluTime="TVT",a.UlaanbaatarStandardTime="ULAT",a.UlaanbaatarSummerTime="ULAST",a.UruguayStandardTime="UYT",a.UruguaySummerTime="UYST",a.UzbekistanTime="UZT",a.VanuatuTime="VUT",a.VenezuelaStandardTime="VET",a.VladivostokTime="VLAT",a.VolgogradTime="VOLT",a.VostokStationTime="VOST",a.WakeIslandTime="WAKT",a.WestAfricaSummerTime="WAST",a.WestAfricaTime="WAT",a.WestGreenlandSummerTime="WGST",a.WestGreenlandTime="WGT",a.WestKazakhstanTime="WKT",a.WesternEuropeanSummerTime="WEDT",a.WesternEuropeanTime="WET",a.WesternIndonesianTime="WIT",a.WesternStandardTime="WST",a.YakutskTime="YAKT",a.YekaterinburgTime="YEKT"})(l||(l={}));var Kc={dst:{is:!1,uses:!0},id:l.AcreTime,name:"Acre Time",offset:t.UTC_MINUS_5},xc={dst:{is:!1,uses:!0},id:l.AfghanistanTime,name:"Afghanistan Time",offset:t.UTC_PLUS_4_30},Oc={dst:{is:!1,uses:!0},id:l.AIXCentralEuropeanTime,name:"AIX Central European Time",offset:t.UTC_PLUS_1},jc={dst:{is:!0,uses:!0},id:l.AlaskaDaylightTime,name:"Alaska Daylight Time",offset:t.UTC_MINUS_8},Hc={dst:{is:!1,uses:!0},id:l.AlaskaStandardTime,name:"Alaska Standard Time",offset:t.UTC_MINUS_9},Wc={dst:{is:!1,uses:!0},id:l.AlmaAtaTime,name:"Alma-Ata Time",offset:t.UTC_PLUS_6},zc={dst:{is:!1,uses:!0},id:l.AmazonSummerTime,name:"Amazon Summer Time",offset:t.UTC_MINUS_3},Vc={dst:{is:!1,uses:!0},id:l.AmazonTime,name:"Amazon Time",offset:t.UTC_MINUS_4},Rc={dst:{is:!1,uses:!0},id:l.AnadyrTime,name:"Anadyr Time",offset:t.UTC_PLUS_12},Jc={dst:{is:!1,uses:!0},id:l.AqtobeTime,name:"Aqtobe Time",offset:t.UTC_PLUS_5},Yc={dst:{is:!1,uses:!0},id:l.ArabiaStandardTime,name:"Arabia Standard Time",offset:t.UTC_PLUS_3},Zc={dst:{is:!1,uses:!0},id:l.ArgentinaTime,name:"Argentina Time",offset:t.UTC_MINUS_3},$c={dst:{is:!1,uses:!0},id:l.ArmeniaTime,name:"Armenia Time",offset:t.UTC_PLUS_4},Qc={dst:{is:!0,uses:!0},id:l.AtlanticDaylightTime,name:"Atlantic Daylight Time",offset:t.UTC_MINUS_3},Xc={dst:{is:!1,uses:!0},id:l.AtlanticStandardTime,name:"Atlantic Standard Time",offset:t.UTC_MINUS_4},Cc={dst:{is:!0,uses:!0},id:l.AustralianCentralDaylightSavingTime,name:"Australian Central Daylight Saving Time",offset:t.UTC_PLUS_10_30},ao={dst:{is:!1,uses:!0},id:l.AustralianCentralStandardTime,name:"Australian Central Standard Time",offset:t.UTC_PLUS_9_30},eo={dst:{is:!1,uses:!0},id:l.AustralianCentralWesternStandardTime,name:"Australian Central Western Standard Time",offset:t.UTC_PLUS_8_45},io={dst:{is:!0,uses:!0},id:l.AustralianEasternDaylightSavingTime,name:"Australian Eastern Daylight Saving Time",offset:t.UTC_PLUS_11},uo={dst:{is:!1,uses:!0},id:l.AustralianEasternStandardTime,name:"Australian Eastern Standard Time",offset:t.UTC_PLUS_10},no={dst:{is:!1,uses:!0},id:l.AustralianEasternTime,name:"Australian Eastern Time",offset:t.UTC_PLUS_10},so={dst:{is:!1,uses:!0},id:l.AustralianWesternStandardTime,name:"Australian Western Standard Time",offset:t.UTC_PLUS_8},ro={dst:{is:!1,uses:!0},id:l.AzerbaijanTime,name:"Azerbaijan Time",offset:t.UTC_PLUS_4},to={dst:{is:!1,uses:!0},id:l.AzoresStandardTime,name:"Azores Standard Time",offset:t.UTC_MINUS_1},lo={dst:{is:!0,uses:!0},id:l.AzoresSummerTime,name:"Azores Summer Time",offset:t.UTC_0},mo={dst:{is:!1,uses:!0},id:l.BakerIslandTime,name:"Baker Island Time",offset:t.UTC_MINUS_12},co={dst:{is:!1,uses:!0},id:l.BangladeshStandardTime,name:"Bangladesh Standard Time",offset:t.UTC_PLUS_6},oo={dst:{is:!1,uses:!0},id:l.BhutanTime,name:"Bhutan Time",offset:t.UTC_PLUS_6},Ao={dst:{is:!1,uses:!0},id:l.BoliviaTime,name:"Bolivia Time",offset:t.UTC_MINUS_4},fo={dst:{is:!1,uses:!0},id:l.BougainvilleStandardTime,name:"Bougainville Standard Time",offset:t.UTC_PLUS_11},Io={dst:{is:!0,uses:!0},id:l.BrasiliaSummerTime,name:"Brasilia Summer Time",offset:t.UTC_MINUS_2},_o={dst:{is:!1,uses:!0},id:l.BrasiliaTime,name:"Brasilia Time",offset:t.UTC_MINUS_3},ho={dst:{is:!1,uses:!0},id:l.BritishIndianOceanTime,name:"British Indian Ocean Time",offset:t.UTC_PLUS_6},go={dst:{is:!0,uses:!0},id:l.BritishSummerTime,name:"British Summer Time",offset:t.UTC_PLUS_1},Eo={dst:{is:!1,uses:!0},id:l.BruneiTime,name:"Brunei Time",offset:t.UTC_PLUS_8},So={dst:{is:!1,uses:!0},id:l.CapeVerdeTime,name:"Cape Verde Time",offset:t.UTC_MINUS_1},To={dst:{is:!1,uses:!0},id:l.CentralAfricaTime,name:"Central Africa Time",offset:t.UTC_PLUS_2},po={dst:{is:!0,uses:!0},id:l.CentralDaylightTime,name:"Central Daylight Time",offset:t.UTC_MINUS_5},vo={dst:{is:!0,uses:!0},id:l.CentralEuropeanSummerTime,name:"Central European Summer Time",offset:t.UTC_PLUS_2},bo={dst:{is:!1,uses:!0},id:l.CentralEuropeanTime,name:"Central European Time",offset:t.UTC_PLUS_1},Bo={dst:{is:!1,uses:!0},id:l.CentralIndonesiaTime,name:"Central Indonesia Time",offset:t.UTC_PLUS_8},Uo={dst:{is:!1,uses:!0},id:l.CentralStandardTime,name:"Central Standard Time",offset:t.UTC_MINUS_6},No={dst:{is:!1,uses:!0},id:l.CentralTime,name:"Central Time",offset:t.UTC_MINUS_5},Do={dst:{is:!1,uses:!0},id:l.CentralWesternStandardTime,name:"Central Western Standard Time",offset:t.UTC_PLUS_8_45},Po={dst:{is:!1,uses:!0},id:l.ChamorroStandardTime,name:"Chamorro Standard Time",offset:t.UTC_PLUS_10},yo={dst:{is:!0,uses:!0},id:l.ChathamDaylightTime,name:"Chatham Daylight Time",offset:t.UTC_PLUS_13_45},Fo={dst:{is:!1,uses:!0},id:l.ChathamStandardTime,name:"Chatham Standard Time",offset:t.UTC_PLUS_12_45},ko={dst:{is:!1,uses:!0},id:l.ChileStandardTime,name:"Chile Standard Time",offset:t.UTC_MINUS_4},Mo={dst:{is:!0,uses:!0},id:l.ChileSummerTime,name:"Chile Summer Time",offset:t.UTC_MINUS_3},Lo={dst:{is:!1,uses:!0},id:l.ChinaStandardTime,name:"China Standard Time",offset:t.UTC_PLUS_8},qo={dst:{is:!1,uses:!0},id:l.ChoibalsanStandardTime,name:"Choibalsan Standard Time",offset:t.UTC_PLUS_8},Go={dst:{is:!0,uses:!0},id:l.ChoibalsanSummerTime,name:"Choibalsan Summer Time",offset:t.UTC_PLUS_9},wo={dst:{is:!1,uses:!0},id:l.ChristmasIslandTime,name:"Christmas Island Time",offset:t.UTC_PLUS_7},Ko={dst:{is:!1,uses:!0},id:l.ChuukTime,name:"Chuuk Time",offset:t.UTC_PLUS_10},xo={dst:{is:!1,uses:!0},id:l.ClipptertonIslandStandardTime,name:"Clippterton Island Standard Time",offset:t.UTC_MINUS_8},Oo={dst:{is:!1,uses:!0},id:l.CocosIslandsTime,name:"Cocos Standard Time",offset:t.UTC_PLUS_6_30},jo={dst:{is:!0,uses:!0},id:l.ColombiaSummerTime,name:"Colombia Summer Time",offset:t.UTC_MINUS_4},Ho={dst:{is:!1,uses:!0},id:l.ColombiaTime,name:"Colombia Time",offset:t.UTC_MINUS_5},Wo={dst:{is:!1,uses:!0},id:l.CookIslandTime,name:"Cook Island Time",offset:t.UTC_MINUS_10},zo={dst:{is:!1,uses:!0},id:l.CoordinatedUniversalTime,name:"Coordinated Universal Time",offset:t.UTC_0},Vo={dst:{is:!0,uses:!0},id:l.CubaDaylightTime,name:"Cuba Daylight Time",offset:t.UTC_MINUS_4},Ro={dst:{is:!1,uses:!0},id:l.CubaStandardTime,name:"Cuba Standard Time",offset:t.UTC_MINUS_5},Jo={dst:{is:!1,uses:!0},id:l.DavisTime,name:"Davis Time",offset:t.UTC_PLUS_7},Yo={dst:{is:!1,uses:!0},id:l.DumontDUrvilleTime,name:"Dumont D'Urville Time",offset:t.UTC_PLUS_10},Zo={dst:{is:!1,uses:!0},id:l.EastAfricaTime,name:"East Africa Time",offset:t.UTC_PLUS_3},$o={dst:{is:!1,uses:!0},id:l.EasterIslandStandardTime,name:"Easter Island Standard Time",offset:t.UTC_MINUS_6},Qo={dst:{is:!0,uses:!0},id:l.EasterIslandSummerTime,name:"Easter Island Summer Time",offset:t.UTC_MINUS_5},Xo={dst:{is:!1,uses:!0},id:l.EasternCaribbeanTime,name:"Eastern Caribbean Time",offset:t.UTC_MINUS_4},Co={dst:{is:!0,uses:!0},id:l.EasternDaylightTime,name:"Eastern Daylight Time",offset:t.UTC_MINUS_4},aA={dst:{is:!0,uses:!0},id:l.EasternEuropeanSummerTime,name:"Eastern European Summer Time",offset:t.UTC_PLUS_3},eA={dst:{is:!1,uses:!0},id:l.EasternEuropeanTime,name:"Eastern European Time",offset:t.UTC_PLUS_2},iA={dst:{is:!0,uses:!0},id:l.EasternGreenlandSummerTime,name:"Eastern Greenland Summer Time",offset:t.UTC_0},uA={dst:{is:!1,uses:!0},id:l.EasternGreenlandTime,name:"Eastern Greenland Time",offset:t.UTC_MINUS_1},nA={dst:{is:!1,uses:!0},id:l.EasternIndonesianTime,name:"Eastern Indonesian Time",offset:t.UTC_PLUS_9},sA={dst:{is:!1,uses:!0},id:l.EasternStandardTime,name:"Eastern Standard Time",offset:t.UTC_MINUS_5},rA={dst:{is:!1,uses:!0},id:l.EasternTime,name:"Eastern Time",offset:t.UTC_MINUS_5},tA={dst:{is:!1,uses:!0},id:l.EcuadorTime,name:"Ecuador Time",offset:t.UTC_MINUS_5},lA={dst:{is:!0,uses:!0},id:l.FalklandIslandsSummerTime,name:"Falkland Islands Summer Time",offset:t.UTC_MINUS_3},mA={dst:{is:!1,uses:!0},id:l.FalklandIslandsTime,name:"Falkland Islands Time",offset:t.UTC_MINUS_4},cA={dst:{is:!1,uses:!0},id:l.FernandoDeNoronhaTime,name:"Fernando de Noronha Time",offset:t.UTC_MINUS_2},oA={dst:{is:!1,uses:!0},id:l.FijiTime,name:"Fiji Time",offset:t.UTC_PLUS_12},AA={dst:{is:!1,uses:!0},id:l.FrenchGuianaTime,name:"French Guiana Time",offset:t.UTC_MINUS_3},dA={dst:{is:!1,uses:!0},id:l.FrenchSouthernAndAntarcticTime,name:"French Southern and Antarctic Time",offset:t.UTC_PLUS_5},fA={dst:{is:!1,uses:!0},id:l.FurtherEasternEuropeanTime,name:"Further Eastern European Time",offset:t.UTC_PLUS_3},IA={dst:{is:!1,uses:!0},id:l.GalapagosTime,name:"Galapagos Time",offset:t.UTC_MINUS_6},_A={dst:{is:!1,uses:!0},id:l.GambierIslandTime,name:"Gambier Island Time",offset:t.UTC_MINUS_9},hA={dst:{is:!1,uses:!0},id:l.GambierIslandsTime,name:"Gambier Islands Time",offset:t.UTC_MINUS_9},gA={dst:{is:!1,uses:!0},id:l.GeorgiaStandardTime,name:"Georgia Standard Time",offset:t.UTC_PLUS_4},EA={dst:{is:!1,uses:!0},id:l.GilbertIslandTime,name:"Gilbert Island Time",offset:t.UTC_PLUS_12},SA={dst:{is:!1,uses:!0},id:l.GreenwichMeanTime,name:"Greenwich Mean Time",offset:t.UTC_0},TA={dst:{is:!1,uses:!0},id:l.GulfStandardTime,name:"Gulf Standard Time",offset:t.UTC_PLUS_4},pA={dst:{is:!1,uses:!0},id:l.GuyanaTime,name:"Guyana Time",offset:t.UTC_MINUS_4},vA={dst:{is:!0,uses:!0},id:l.HawaiiAleutianDaylightTime,name:"Hawaii-Aleutian Daylight Time",offset:t.UTC_MINUS_9},bA={dst:{is:!1,uses:!0},id:l.HawaiiAleutianStandardTime,name:"Hawaii-Aleutian Standard Time",offset:t.UTC_MINUS_10},BA={dst:{is:!1,uses:!0},id:l.HeardAndMcDonaldIslandsTime,name:"Heard and McDonald Islands Time",offset:t.UTC_PLUS_5},UA={dst:{is:!1,uses:!0},id:l.HongKongTime,name:"Hong Kong Time",offset:t.UTC_PLUS_8},NA={dst:{is:!0,uses:!0},id:l.HovdSummerTime,name:"Hovd Summer Time",offset:t.UTC_PLUS_8},DA={dst:{is:!1,uses:!0},id:l.HovdTime,name:"Hovd Time",offset:t.UTC_PLUS_7},PA={dst:{is:!1,uses:!0},id:l.IndianOceanTime,name:"Indian Ocean Time",offset:t.UTC_PLUS_3},yA={dst:{is:!1,uses:!0},id:l.IndianStandardTime,name:"Indian Standard Time",offset:t.UTC_PLUS_5_30},FA={dst:{is:!1,uses:!0},id:l.IndochinaTime,name:"Indochina Time",offset:t.UTC_PLUS_7},kA={dst:{is:!1,uses:!0},id:l.InternationalDayLineWestTime,name:"International Day Line West Time",offset:t.UTC_MINUS_12},MA={dst:{is:!0,uses:!0},id:l.IranDaylightTime,name:"Iran Daylight Time",offset:t.UTC_PLUS_4_30},LA={dst:{is:!1,uses:!0},id:l.IranStandardTime,name:"Iran Standard Time",offset:t.UTC_PLUS_3_30},qA={dst:{is:!1,uses:!0},id:l.IrishStandardTime,name:"Irish Standard Time",offset:t.UTC_PLUS_1},GA={dst:{is:!1,uses:!0},id:l.IrkutskTime,name:"Irkutsk Time",offset:t.UTC_PLUS_8},wA={dst:{is:!0,uses:!0},id:l.IsraelDaylightTime,name:"Israel Daylight Time",offset:t.UTC_PLUS_3},KA={dst:{is:!1,uses:!0},id:l.IsraelStandardTime,name:"Israel Standard Time",offset:t.UTC_PLUS_2},xA={dst:{is:!1,uses:!0},id:l.JapanStandardTime,name:"Japan Standard Time",offset:t.UTC_PLUS_9},OA={dst:{is:!1,uses:!0},id:l.KaliningradTime,name:"Kaliningrad Time",offset:t.UTC_PLUS_2},jA={dst:{is:!1,uses:!0},id:l.KamchatkaTime,name:"Kamchatka Time",offset:t.UTC_PLUS_12},HA={dst:{is:!1,uses:!0},id:l.KoreaStandardTime,name:"Korea Standard Time",offset:t.UTC_PLUS_9},WA={dst:{is:!1,uses:!0},id:l.KosraeTime,name:"Kosrae Time",offset:t.UTC_PLUS_11},zA={dst:{is:!1,uses:!0},id:l.KrasnoyarskTime,name:"Krasnoyarsk Time",offset:t.UTC_PLUS_7},VA={dst:{is:!1,uses:!0},id:l.KyrgyzstanTime,name:"Kyrgyzstan Time",offset:t.UTC_PLUS_6},RA={dst:{is:!1,uses:!0},id:l.LineIslandsTime,name:"Line Islands Time",offset:t.UTC_PLUS_14},JA={dst:{is:!1,uses:!0},id:l.LordHoweStandardTime,name:"Lord Howe Standard Time",offset:t.UTC_PLUS_10_30},YA={dst:{is:!1,uses:!0},id:l.LordHoweSummerTime,name:"Lord Howe Summer Time",offset:t.UTC_PLUS_11},ZA={dst:{is:!1,uses:!0},id:l.MacquarieIslandStationTime,name:"Macquarie Island Station Time",offset:t.UTC_PLUS_11},$A={dst:{is:!1,uses:!0},id:l.MagadanTime,name:"Magadan Time",offset:t.UTC_PLUS_12},QA={dst:{is:!1,uses:!0},id:l.MalaysiaStandardTime,name:"Malaysia Standard Time",offset:t.UTC_PLUS_8},XA={dst:{is:!1,uses:!0},id:l.MalaysiaTime,name:"Malaysia Time",offset:t.UTC_PLUS_8},CA={dst:{is:!1,uses:!0},id:l.MaldivesTime,name:"Maldives Time",offset:t.UTC_PLUS_5},ad={dst:{is:!1,uses:!0},id:l.MarquesasIslandsTime,name:"Marquesas Islands Time",offset:t.UTC_PLUS_9_30},ed={dst:{is:!1,uses:!0},id:l.MarshallIslandsTime,name:"Marshall Islands Time",offset:t.UTC_PLUS_12},id={dst:{is:!1,uses:!0},id:l.MauritiusTime,name:"Mauritius Time",offset:t.UTC_PLUS_4},ud={dst:{is:!1,uses:!0},id:l.MawsonStationTime,name:"Mawson Station Time",offset:t.UTC_PLUS_5},nd={dst:{is:!1,uses:!0},id:l.MiddleEuropeanSummerTime,name:"Middle European Summer Time",offset:t.UTC_PLUS_2},sd={dst:{is:!1,uses:!0},id:l.MiddleEuropeanTime,name:"Middle European Time",offset:t.UTC_PLUS_1},rd={dst:{is:!1,uses:!0},id:l.MoscowTime,name:"Moscow Time",offset:t.UTC_PLUS_3},td={dst:{is:!1,uses:!0},id:l.MountainDaylightTime,name:"Mountain Daylight Time",offset:t.UTC_MINUS_6},ld={dst:{is:!1,uses:!0},id:l.MountainStandardTime,name:"Mountain Standard Time",offset:t.UTC_MINUS_7},md={dst:{is:!1,uses:!0},id:l.MyanmarStandardTime,name:"Myanmar Standard Time",offset:t.UTC_PLUS_6_30},cd={dst:{is:!1,uses:!0},id:l.NepalTime,name:"Nepal Time",offset:t.UTC_PLUS_5_45},od={dst:{is:!1,uses:!0},id:l.NauruTime,name:"Nauru Time",offset:t.UTC_PLUS_12},Ad={dst:{is:!1,uses:!0},id:l.NewCaledoniaTime,name:"New Caledonia Time",offset:t.UTC_PLUS_11},dd={dst:{is:!1,uses:!0},id:l.NewZealandDaylightTime,name:"New Zealand Daylight Time",offset:t.UTC_PLUS_13},fd={dst:{is:!1,uses:!0},id:l.NewZealandStandardTime,name:"New Zealand Standard Time",offset:t.UTC_PLUS_12},Id={dst:{is:!1,uses:!0},id:l.NewfoundlandDaylightTime,name:"Newfoundland Daylight Time",offset:t.UTC_MINUS_2_30},_d={dst:{is:!1,uses:!0},id:l.NewfoundlandTime,name:"Newfoundland Time",offset:t.UTC_MINUS_3_30},hd={dst:{is:!1,uses:!0},id:l.NiueTime,name:"Niue Time",offset:t.UTC_MINUS_11},gd={dst:{is:!1,uses:!0},id:l.NorfolkIslandTime,name:"Norfolk Island Time",offset:t.UTC_PLUS_11},Ed={dst:{is:!1,uses:!0},id:l.NovosibirskTime,name:"Novosibirsk Time",offset:t.UTC_PLUS_7},Sd={dst:{is:!1,uses:!0},id:l.OmskTime,name:"Omsk Time",offset:t.UTC_PLUS_6},Td={dst:{is:!1,uses:!0},id:l.OralTime,name:"Oral Time",offset:t.UTC_PLUS_5},pd={dst:{is:!1,uses:!0},id:l.PacificDaylightTime,name:"Pacific Daylight Time",offset:t.UTC_MINUS_7},vd={dst:{is:!1,uses:!0},id:l.PacificStandardTime,name:"Pacific Standard Time",offset:t.UTC_MINUS_8},bd={dst:{is:!1,uses:!0},id:l.PakistanStandardTime,name:"Pakistan Standard Time",offset:t.UTC_PLUS_5},Bd={dst:{is:!1,uses:!0},id:l.PalauTime,name:"Palau Time",offset:t.UTC_PLUS_9},Ud={dst:{is:!1,uses:!0},id:l.PapuaNewGuineaTime,name:"Papua New Guinea Time",offset:t.UTC_PLUS_10},Nd={dst:{is:!1,uses:!0},id:l.ParaguaySummerTime,name:"Paraguay Summer Time",offset:t.UTC_MINUS_3},Dd={dst:{is:!1,uses:!0},id:l.ParaguayTime,name:"Paraguay Time",offset:t.UTC_MINUS_4},Pd={dst:{is:!1,uses:!0},id:l.PeruTime,name:"Peru Time",offset:t.UTC_MINUS_5},yd={dst:{is:!1,uses:!0},id:l.PhilippineStandardTime,name:"Philippine Standard Time",offset:t.UTC_PLUS_8},Fd={dst:{is:!1,uses:!0},id:l.PhilippineTime,name:"Philippine Time",offset:t.UTC_PLUS_8},kd={dst:{is:!1,uses:!0},id:l.PhoenixIslandTime,name:"Phoenix Island Time",offset:t.UTC_PLUS_13},Md={dst:{is:!1,uses:!0},id:l.PitcairnTime,name:"Pitcairn Time",offset:t.UTC_MINUS_8},Ld={dst:{is:!1,uses:!0},id:l.PohnpeiStandardTime,name:"Pohnpei Standard Time",offset:t.UTC_PLUS_11},qd={dst:{is:!1,uses:!0},id:l.ReunionTime,name:"Reunion Time",offset:t.UTC_PLUS_4},Gd={dst:{is:!1,uses:!0},id:l.RotheraResearchStationTime,name:"Rothera Research Station Time",offset:t.UTC_MINUS_3},wd={dst:{is:!1,uses:!0},id:l.SaintPierreAndMiquelonDaylightTime,name:"Saint Pierre and Miquelon Daylight Time",offset:t.UTC_MINUS_2},Kd={dst:{is:!1,uses:!0},id:l.SaintPierreAndMiquelonStandardTime,name:"Saint Pierre and Miquelon Standard Time",offset:t.UTC_MINUS_3},xd={dst:{is:!1,uses:!0},id:l.SakhalinIslandTime,name:"Sakhalin Island Time",offset:t.UTC_PLUS_11},Od={dst:{is:!1,uses:!0},id:l.SamaraTime,name:"Samara Time",offset:t.UTC_PLUS_4},jd={dst:{is:!1,uses:!0},id:l.SamoaDaylightTime,name:"Samoa Daylight Time",offset:t.UTC_MINUS_10},Hd={dst:{is:!1,uses:!0},id:l.SamoaStandardTime,name:"Samoa Standard Time",offset:t.UTC_MINUS_11},Wd={dst:{is:!1,uses:!0},id:l.SeychellesTime,name:"Seychelles Time",offset:t.UTC_PLUS_4},zd={dst:{is:!1,uses:!0},id:l.ShowaStationTime,name:"Showa Station Time",offset:t.UTC_PLUS_3},Vd={dst:{is:!1,uses:!0},id:l.SingaporeStandardTime,name:"Singapore Standard Time",offset:t.UTC_PLUS_8},Rd={dst:{is:!1,uses:!0},id:l.SingaporeTime,name:"Singapore Time",offset:t.UTC_PLUS_8},Jd={dst:{is:!1,uses:!0},id:l.SolomonIslandsTime,name:"Solomon Islands Time",offset:t.UTC_PLUS_11},Yd={dst:{is:!1,uses:!0},id:l.SouthAfricanStandardTime,name:"South African Standard Time",offset:t.UTC_PLUS_2},Zd={dst:{is:!1,uses:!0},id:l.SouthGeorgiaAndTheSouthSandwichIslandsTime,name:"South Georgia and the South Sandwich Islands Time",offset:t.UTC_MINUS_2},$d={dst:{is:!1,uses:!0},id:l.SrednekolymskTime,name:"Srednekolymsk Time",offset:t.UTC_PLUS_11},Qd={dst:{is:!1,uses:!0},id:l.SriLankaStandardTime,name:"Sri Lanka Standard Time",offset:t.UTC_PLUS_5_30},Xd={dst:{is:!1,uses:!0},id:l.SurinameTime,name:"Suriname Time",offset:t.UTC_MINUS_3},Cd={dst:{is:!1,uses:!0},id:l.TahitiTime,name:"Tahiti Time",offset:t.UTC_MINUS_10},af={dst:{is:!1,uses:!0},id:l.TajikistanTime,name:"Tajikistan Time",offset:t.UTC_PLUS_5},ef={dst:{is:!1,uses:!0},id:l.ThailandStandardTime,name:"Thailand Standard Time",offset:t.UTC_PLUS_7},uf={dst:{is:!1,uses:!0},id:l.TimorLesteTime,name:"Timor-Leste Time",offset:t.UTC_PLUS_9},nf={dst:{is:!1,uses:!0},id:l.TokelauTime,name:"Tokelau Time",offset:t.UTC_PLUS_13},sf={dst:{is:!1,uses:!0},id:l.TongaTime,name:"Tonga Time",offset:t.UTC_PLUS_13},rf={dst:{is:!1,uses:!0},id:l.TurkeyTime,name:"Turkey Time",offset:t.UTC_PLUS_3},tf={dst:{is:!1,uses:!0},id:l.TurkmenistanTime,name:"Turkmenistan Time",offset:t.UTC_PLUS_5},lf={dst:{is:!1,uses:!0},id:l.TuvaluTime,name:"Tuvalu Time",offset:t.UTC_PLUS_12},mf={dst:{is:!1,uses:!0},id:l.UlaanbaatarStandardTime,name:"Ulaanbaatar Standard Time",offset:t.UTC_PLUS_8},cf={dst:{is:!1,uses:!0},id:l.UlaanbaatarSummerTime,name:"Ulaanbaatar Summer Time",offset:t.UTC_PLUS_9},of={dst:{is:!1,uses:!0},id:l.UruguayStandardTime,name:"Uruguay Standard Time",offset:t.UTC_MINUS_3},Af={dst:{is:!1,uses:!0},id:l.UruguaySummerTime,name:"Uruguay Summer Time",offset:t.UTC_MINUS_2},df={dst:{is:!1,uses:!0},id:l.UzbekistanTime,name:"Uzbekistan Time",offset:t.UTC_PLUS_5},ff={dst:{is:!1,uses:!0},id:l.VanuatuTime,name:"Vanuatu Time",offset:t.UTC_PLUS_11},If={dst:{is:!1,uses:!0},id:l.VenezuelaStandardTime,name:"Venezuela Standard Time",offset:t.UTC_MINUS_4},_f={dst:{is:!1,uses:!0},id:l.VladivostokTime,name:"Vladivostok Time",offset:t.UTC_PLUS_10},hf={dst:{is:!1,uses:!0},id:l.VolgogradTime,name:"Volgograd Time",offset:t.UTC_PLUS_4},gf={dst:{is:!1,uses:!0},id:l.VostokStationTime,name:"Vostok Station Time",offset:t.UTC_PLUS_6},Ef={dst:{is:!1,uses:!0},id:l.WakeIslandTime,name:"Wake Island Time",offset:t.UTC_PLUS_12},Sf={dst:{is:!1,uses:!0},id:l.WestAfricaSummerTime,name:"West Africa Summer Time",offset:t.UTC_PLUS_2},Tf={dst:{is:!1,uses:!0},id:l.WestAfricaTime,name:"West Africa Time",offset:t.UTC_PLUS_1},pf={dst:{is:!1,uses:!0},id:l.WestGreenlandSummerTime,name:"West Greenland Summer Time",offset:t.UTC_MINUS_2},vf={dst:{is:!1,uses:!0},id:l.WestGreenlandTime,name:"West Greenland Time",offset:t.UTC_MINUS_3},bf={dst:{is:!1,uses:!0},id:l.WestKazakhstanTime,name:"West Kazakhstan Time",offset:t.UTC_PLUS_5},Bf={dst:{is:!1,uses:!0},id:l.WesternEuropeanSummerTime,name:"Western European Summer Time",offset:t.UTC_PLUS_1},Uf={dst:{is:!1,uses:!0},id:l.WesternEuropeanTime,name:"Western European Time",offset:t.UTC_0},Nf={dst:{is:!1,uses:!0},id:l.WesternIndonesianTime,name:"Western Indonesian Time",offset:t.UTC_PLUS_7},Df={dst:{is:!1,uses:!0},id:l.WesternStandardTime,name:"Western Standard Time",offset:t.UTC_PLUS_8},Pf={dst:{is:!1,uses:!0},id:l.YakutskTime,name:"Yakutsk Time",offset:t.UTC_PLUS_9},yf={dst:{is:!1,uses:!0},id:l.YekaterinburgTime,name:"Yekaterinburg Time",offset:t.UTC_PLUS_5},za;(function(a){a.Africa="Africa",a.Americas="Americas",a.Asia="Asia",a.Europe="Europe",a.Oceania="Oceania",a.Polar="Polar"})(za||(za={}));var Va;(function(a){a.CentralAmerica="Central America",a.EasternAsia="Eastern Asia",a.EasternEurope="Eastern Europe",a.EasternAfrica="Eastern Africa",a.MiddleAfrica="Middle Africa",a.MiddleEast="Middle East",a.NorthernAfrica="Northern Africa",a.NorthernAmerica="Northern America",a.NorthernEurope="Northern Europe",a.Polynesia="Polynesia",a.SouthAmerica="South America",a.SouthernAfrica="Southern Africa",a.SouthernAsia="Southern Asia",a.SouthernEurope="Southern Europe",a.WesternAfrica="Western Africa",a.WesternAsia="Western Asia",a.WesternEurope="Western Europe",a.WesternAustralia="Western Australia"})(Va||(Va={}));var Ff={Afghanistan:{i18n:{calling_codes:[93],currencies:[D.AfghanistanAfghani],languages:[e.Pashto,e.Dari,e.Turkmen,e.Uzbek],tz:{offsets:[t.UTC_PLUS_4_30],regions:[d.AsiaKabul],timezones:[l.AfghanistanTime]}},id:_.Afghanistan,info:{flag:{emoji:"\u{1F1E6}\u{1F1EB}",emoji_unicode:"U+1F1E6 U+1F1EB",svg:"https://www.countryflags.io/af/flat/64.svg"},tld:[".af"]},iso:{alpha2:_.Afghanistan,alpha3:"AFG",numeric:"004"},name:{alt_spellings:["AF","Af\u0121\u0101nist\u0101n"],demonym:"Afghan",native:{endonym:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},official:"Islamic Republic of Afghanistan",short:"Afghanistan",translations:{[e.Afrikaans]:"Afghanistan",[e.Albanian]:"Shqip\xEBri",[e.Amharic]:"\u12A0\u134D\u130B\u1295",[e.Arabic]:"\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Armenian]:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Basque]:"Afganist\xE1n",[e.Belarusian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Bengali]:"\u0986\u09AB\u0997\u09BE\u09A8\u09BF\u09B8\u09CD\u09A4\u09BE\u09A8",[e.Berber]:"\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Bhutani]:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F51\u0F7C\u0F53\u0F0B\u0F63\u0F7A\u0F0B\u0F66\u0F90\u0F51\u0F0B\u0F46\u0F0D",[e.Bosnian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Breton]:"Afganistan",[e.Bulgarian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Burmese]:"\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A",[e.Catalan]:"Afganistan",[e.Chinese]:"\u963F\u5BCC\u6C57",[e.Croatian]:"Afganistan",[e.Czech]:"Afganistan",[e.Danish]:"Afghanistan",[e.Dutch]:"Afghanistan",[e.English]:"Afghanistan",[e.Esperanto]:"Afganistan",[e.Estonian]:"Afganistan",[e.Finnish]:"Afghanistan",[e.French]:"Afghanistan",[e.Frisian]:"Afghanistan",[e.Galician]:"Afganist\xE1n",[e.Georgian]:"\u10D0\u10D5\u10E6\u10D0\u10DC\u10D4\u10D7\u10D8",[e.German]:"Afghanistan",[e.Greenlandic]:"Afghanistan",[e.Greek]:"\u0391\u03C6\u03B3\u03B1\u03BD\u03B9\u03C3\u03C4\u03AC\u03BD",[e.Gujarati]:"\u0A85\u0AAB\u0A97\u0ABE\u0AA8\u0ABF\u0AB8\u0ACD\u0AA4\u0ABE\u0AA8",[e.Haitian]:"Afghanistan",[e.Hausa]:"Afghanistan",[e.Hebrew]:"\u05D0\u05E4\u05D2\u05E0\u05D9\u05E1\u05D8\u05DF",[e.Hindi]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Hungarian]:"Afganistan",[e.Icelandic]:"Afghanistan",[e.Igbo]:"Afghanistan",[e.Indonesian]:"Afghanistan",[e.Irish]:"Afghanistan",[e.Italian]:"Afghanistan",[e.Japanese]:"\u30A2\u30D5\u30AC\u30CB\u30B9\u30BF\u30F3",[e.Javanese]:"Afghanistan",[e.Kannada]:"\u0C85\u0CAB\u0C97\u0CBE\u0CA8\u0CBF\u0CB8\u0CCD\u0CA4\u0CBE\u0CA8",[e.Kazakh]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Khmer]:"\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17B7\u1780",[e.Korean]:"\uC544\uD504\uAC00\uB2C8\uC2A4\uD0C4",[e.Kurdish]:"Afghanistan",[e.Kyrgyz]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Lao]:"\u0EAD\u0EB2\u0E9F\u0EB2\u0EA5\u0EBD\u0E99",[e.Latin]:"Afghanistan",[e.Latvian]:"Afghanistan",[e.Lithuanian]:"Afganistanas",[e.Luxembourgish]:"Afghanistan",[e.Macedonian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Malagasy]:"Afghanistan",[e.Malay]:"Afghanistan",[e.Malayalam]:"\u0D05\u0D2B\u0D17\u0D3E\u0D28\u0D3F\u0D38\u0D4D\u0D24\u0D3E\u0D28",[e.Maltese]:"Afghanistan",[e.Maori]:"Afghanistan",[e.Marathi]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Mongolian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Nepali]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Norwegian]:"Afghanistan",[e.Pashto]:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Persian]:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Polish]:"Afganistan",[e.Portuguese]:"Afghanistan",[e.Punjabi]:"Afghanistan",[e.Romanian]:"Afghanistan",[e.Polish]:"Afganistan",[e.Russian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Samoan]:"Afghanistan",[e.Sanskrit]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Scots]:"Afghanistan",[e.Serbian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Sesotho]:"Afghanistan",[e.Shona]:"Afghanistan",[e.Sindhi]:"Afghanistan",[e.Sinhala]:"\u0D86\u0D9C\u0DCA\u200D\u0DBB\u0DDC\u0D9A\u0DCA\u0D9A\u0DD2\u0DBA\u0DCF\u0DC0",[e.Slovak]:"Afganistan",[e.Slovenian]:"Afganistan",[e.Somali]:"Afghanistan",[e.Spanish]:"Afganist\xE1n",[e.Sudanese]:"Afghanistan",[e.Swahili]:"Afghanistan",[e.Swedish]:"Afghanistan",[e.Tagalog]:"Afghanistan",[e.Tajik]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Tatar]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Tamil]:"\u0B86\u0BAA\u0BCD\u0BAA\u0B95\u0BBE\u0BA9\u0BBF\u0BB8\u0BCD\u0BA4\u0BBE\u0BA9\u0BCD",[e.Telugu]:"\u0C06\u0C2B\u0C4D\u0C18\u0C28\u0C3F\u0C38\u0C4D\u0C24\u0C3E\u0C28\u0C4D",[e.Thai]:"\u0E2D\u0E31\u0E1F\u0E01\u0E32\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19",[e.Tibetan]:"\u0F68\u0F55\u0F0B\u0F42\u0F7A\u0F0B\u0F53\u0F72\u0F66\u0F72\u0F0B\u0F4F\u0F7A\u0F53\u0F66\u0F72\u0F0D",[e.Turkish]:"Afganistan",[e.Ukrainian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Urdu]:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Uzbek]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Vietnamese]:"Afghanistan",[e.Welsh]:"Afghanistan",[e.Xhosa]:"Afghanistan",[e.Yiddish]:"Afghanistan",[e.Yoruba]:"Afghanistan",[e.Zulu]:"Afghanistan"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Kabul",total:341e5}},geography:{area:652230,region:za.Asia,sub_region:Va.SouthernAsia},government:{capital:"Kabul",type:"Islamic Emirate"}}},Albania:{i18n:{calling_codes:[355],currencies:[D.AlbaniaLek],languages:[e.Albanian,e.Greek,e.Turkish],tz:{offsets:[t.UTC_PLUS_1],regions:[d.EuropeBrussels],timezones:[l.CentralEuropeanTime]}},id:_.Albania,info:{flag:{emoji:"\u{1F1E6}\u{1F1F1}",emoji_unicode:"U+1F1E6 U+1F1F1",svg:"https://www.countryflags.io/al/flat/64.svg"},tld:[".al"]},iso:{alpha2:_.Albania,alpha3:"ALB",numeric:"008"},name:{alt_spellings:["AL","Shqip\xEBri","Shqip\xEBria","Shqipnia"],demonym:"Albanian",native:{endonym:"Shqip\xEBri"},official:"Republic of Albania",short:"Albania",translations:{[e.Afrikaans]:"Albania",[e.Albanian]:"Albania",[e.Amharic]:"\u12A0\u120D\u1263\u1295\u12EB",[e.Arabic]:"\u0623\u0644\u0628\u0627\u0646\u064A\u0627",[e.Armenian]:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Basque]:"Albania",[e.Belarusian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Bengali]:"\u0986\u09B2\u09AC\u09BE\u09A8\u09BF\u09AF\u09BC\u09BE",[e.Berber]:"\u0623\u0644\u0628\u0627\u0646\u064A\u0627",[e.Bhutani]:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B",[e.Bosnian]:"Albanija",[e.Breton]:"Albania",[e.Bulgarian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Burmese]:"\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A",[e.Catalan]:"Alb\xE0nia",[e.Chinese]:"\u963F\u5C14\u5DF4\u5C3C\u4E9A",[e.Croatian]:"Albanija",[e.Czech]:"Alb\xE1nie",[e.Danish]:"Albanien",[e.Dutch]:"Albani\xEB",[e.English]:"Albania",[e.Esperanto]:"Albanio",[e.Estonian]:"Albaania",[e.Finnish]:"Albania",[e.French]:"Albanie",[e.Frisian]:"Albani\xEB",[e.Galician]:"Alb\xE2nia",[e.Georgian]:"\u10D0\u10DA\u10D1\u10D0\u10DC\u10D8\u10D0",[e.German]:"Albanien",[e.Greenlandic]:"Albania",[e.Greek]:"\u0391\u03BB\u03B2\u03B1\u03BD\u03AF\u03B1",[e.Gujarati]:"\u0A85\u0AB2\u0AAC\u0AA8\u0ABF\u0AAF\u0ABE",[e.Haitian]:"Albanais",[e.Hausa]:"Albania",[e.Hebrew]:"\u05D0\u05DC\u05D1\u05E0\u05D9\u05D4",[e.Hindi]:"\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E",[e.Hungarian]:"Alb\xE1nia",[e.Icelandic]:"Alb\xFAnir",[e.Igbo]:"Albania",[e.Indonesian]:"Albania",[e.Irish]:"Alb\xE1in",[e.Italian]:"Albania",[e.Japanese]:"\u30A2\u30EB\u30D0\u30CB\u30A2",[e.Javanese]:"Albania",[e.Kannada]:"\u0C85\u0CB2\u0CCD\u0CAC\u0CBE\u0CA8\u0CBF\u0CAF\u0CBE",[e.Kazakh]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Khmer]:"\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17C1\u179F\u17CA\u17B8",[e.Korean]:"\uC54C\uBC14\uB2C8\uC544",[e.Kurdish]:"\u0622\u0644\u0628\u0627\u0646\u06CC\u0627",[e.Kyrgyz]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Lao]:"\u0EAD\u0EB2\u0EA5\u0EB2\u0E99\u0EB5",[e.Latin]:"Albania",[e.Latvian]:"Alb\u0101nija",[e.Lithuanian]:"Albanija",[e.Luxembourgish]:"Albani\xEB",[e.Macedonian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430",[e.Malagasy]:"Albania",[e.Malay]:"Albania",[e.Malayalam]:"\u0D05\u0D32\u0D4D\u0D2C\u0D3E\u0D28\u0D3F\u0D2F\u0D3E",[e.Maltese]:"Albania",[e.Maori]:"Albania",[e.Marathi]:"\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E",[e.Mongolian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Nepali]:"\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E",[e.Norwegian]:"Albania",[e.Pashto]:"\u0627\u0627\u0644\u0628\u0627\u0646\u06CC",[e.Persian]:"\u0622\u0644\u0628\u0627\u0646\u06CC",[e.Polish]:"Albania",[e.Portuguese]:"Alb\xE2nia",[e.Punjabi]:"\u0A05\u0A32\u0A2C\u0A28\u0A40\u0A06",[e.Romanian]:"Alb\u0103n",[e.Russian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Samoan]:"Albania",[e.Sanskrit]:"Albani",[e.Scots]:"Alb\xE0inia",[e.Serbian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430",[e.Sesotho]:"Albania",[e.Shona]:"Albania",[e.Sindhi]:"Albania",[e.Sinhala]:"\u0D87\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA",[e.Slovak]:"Alb\xE1nsko",[e.Slovenian]:"Albanija",[e.Somali]:"Albania",[e.Spanish]:"Albania",[e.Sudanese]:"Albania",[e.Swahili]:"Albania",[e.Swedish]:"Albanien",[e.Tagalog]:"Albania",[e.Tajik]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Tamil]:"\u0B85\u0BB2\u0BCD\u0BAA\u0BBE\u0BA9\u0BBF\u0BAF\u0BBE",[e.Tatar]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Telugu]:"\u0C05\u0C32\u0C4D\u0C2C\u0C3E\u0C28\u0C3F\u0C2F\u0C3E",[e.Thai]:"\u0E2D\u0E31\u0E25\u0E41\u0E1A\u0E19\u0E34\u0E19\u0E35",[e.Tibetan]:"\u0F68\u0F63\u0F0B\u0F56\u0F72\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F72",[e.Turkish]:"Albaniye",[e.Ukrainian]:"\u0410\u043B\u0431\u0430\u043D\u0456\u044F",[e.Urdu]:"\u0622\u0644\u0628\u0627\u0646\u06CC",[e.Uzbek]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Vietnamese]:"Albanie",[e.Welsh]:"Albania",[e.Xhosa]:"Albania",[e.Yiddish]:"\u05D0\u05DC\u05D1\u05E0\u05D9\u05E9",[e.Yoruba]:"Albania",[e.Zulu]:"Albania"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Tirana",total:2853e3}},geography:{area:28748,region:za.Europe,sub_region:Va.SouthernEurope},government:{capital:"Tirana",type:"Republic"}}},Algeria:{i18n:{calling_codes:[213],currencies:[D.AlgeriaDinar],languages:[e.Arabic,e.French,e.Berber,e.Tamazight],tz:{offsets:[t.UTC_PLUS_1,t.UTC_PLUS_2],regions:[d.AfricaAlgiers],timezones:[l.CentralEuropeanTime]}},id:_.Algeria,info:{flag:{emoji:"\u{1F1E9}\u{1F1FF}",emoji_unicode:"U+1F1E9 U+1F1FF",svg:"https://www.countryflags.io/dz/flat/64.svg"},tld:[".dz",".\u062C\u0632\u0627\u0626\u0631"]},iso:{alpha2:_.Algeria,alpha3:"DZA",numeric:"012"},name:{alt_spellings:["DZ","Dzayer","Alg\xE9rie"],demonym:"Algerian",native:{endonym:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631"},official:"People's Democratic Republic of Algeria",short:"Algeria",translations:{[e.Afrikaans]:"Algerije",[e.Albanian]:"Algeria",[e.Amharic]:"\u12A0\u120D\u1300\u122D\u1235",[e.Arabic]:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631",[e.Armenian]:"\u0531\u056C\u0563\u0578\u0580\u056B\u0561",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043B\u0436\u0438\u0440",[e.Basque]:"Algeria",[e.Belarusian]:"\u0410\u043B\u0436\u0438\u0440",[e.Bengali]:"\u0986\u09B2\u099C\u09C7\u09B0",[e.Berber]:"\u062C\u0632\u0627\u0626\u0631",[e.Bhutani]:"\u0F62\u0FAB\u0F7C\u0F44\u0F0B\u0F41",[e.Bosnian]:"Al\u017Eir",[e.Breton]:"Algeria",[e.Bulgarian]:"\u0410\u043B\u0436\u0438\u0440",[e.Burmese]:"\u1021\u102C\u101B\u1015\u103A",[e.Catalan]:"Alg\xE8ria",[e.Chinese]:"\u963F\u5C14\u53CA\u5229\u4E9A",[e.Croatian]:"Al\u017Eir",[e.Czech]:"Al\u017E\xEDrsko",[e.Danish]:"Algeriet",[e.Dutch]:"Algerije",[e.English]:"Algeria",[e.Esperanto]:"Al\u011Derio",[e.Estonian]:"Al\u017Eira",[e.Finnish]:"Algeria",[e.French]:"Alg\xE9rie",[e.Frisian]:"Algeri\xEB",[e.Galician]:"Alxeria",[e.Georgian]:"\u10D0\u10DA\u10D2\u10D8\u10E3\u10E0\u10D8",[e.German]:"Algerien",[e.Greenlandic]:"Algeria",[e.Greek]:"\u0391\u03BB\u03B3\u03B5\u03C1\u03AF\u03B1",[e.Gujarati]:"\u0A86\u0AB2\u0AC7\u0A97\u0AB0\u0ABF\u0AAF\u0ABE",[e.Haitian]:"Alg\xE9rie",[e.Hausa]:"Algeria",[e.Hebrew]:"\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4",[e.Hindi]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Hungarian]:"Alg\xE1r",[e.Icelandic]:"Alg\xFAra",[e.Igbo]:"Algeria",[e.Indonesian]:"Aljir",[e.Irish]:"Alg\xE9rie",[e.Italian]:"Algeria",[e.Japanese]:"\u30A2\u30EB\u30B8\u30A7\u30EA\u30A2",[e.Javanese]:"Aljir",[e.Kannada]:"\u0C86\u0CB2\u0CCD\u0C97\u0CC7\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD",[e.Kazakh]:"\u0410\u043B\u0436\u0438\u0440",[e.Khmer]:"\u17A2\u17B6\u179B\u17CB\u1794\u17B6\u1793\u17B8",[e.Korean]:"\uC54C\uC81C\uB9AC",[e.Kurdish]:"\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u062C\u0632\u0627\u06CC\u0631",[e.Kyrgyz]:"\u0410\u043B\u0436\u0438\u0440",[e.Lao]:"\u0EAD\u0EB2\u0EA5\u0EB2\u0E88\u0EB5\u0E99",[e.Latin]:"Algeria",[e.Latvian]:"Al\u017E\u012Brija",[e.Lithuanian]:"Al\u017Eyras",[e.Luxembourgish]:"Algeria",[e.Macedonian]:"\u0410\u043B\u0436\u0438\u0440",[e.Malagasy]:"Alg\xE9rie",[e.Malay]:"Aljir",[e.Malayalam]:"\u0D06\u0D32\u0D02\u0D17\u0D47\u0D30\u0D3F\u0D2F\u0D7B",[e.Maltese]:"Alg\xE9rie",[e.Maori]:"Algeria",[e.Marathi]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Mongolian]:"\u0410\u043B\u0436\u0438\u0440",[e.Nepali]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Norwegian]:"Algeria",[e.Pashto]:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631",[e.Persian]:"\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u0639\u0631\u0628",[e.Polish]:"Algieria",[e.Portuguese]:"Alg\xE9ria",[e.Punjabi]:"\u0A06\u0A32\u0A47\u0A17\u0A40\u0A06",[e.Romanian]:"Algeria",[e.Russian]:"\u0410\u043B\u0436\u0438\u0440",[e.Samoan]:"Algeria",[e.Sanskrit]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Scots]:"Algeria",[e.Serbian]:"\u0410\u043B\u0436\u0438\u0440",[e.Sesotho]:"Algeria",[e.Shona]:"Algeria",[e.Sindhi]:"Algeria",[e.Sinhala]:"\u0D86\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA",[e.Slovak]:"Al\u017E\xEDrsko",[e.Slovenian]:"Al\u017Eir",[e.Somali]:"Algeria",[e.Spanish]:"Algeria",[e.Sudanese]:"Aljir",[e.Swahili]:"Aljir",[e.Swedish]:"Algeriet",[e.Tagalog]:"Algeria",[e.Tajik]:"\u0410\u043B\u0436\u0438\u0440",[e.Tamil]:"\u0B86\u0BB2\u0BCD\u0B95\u0BC7\u0BB0\u0BBF\u0BAF\u0BBE",[e.Tatar]:"\u0410\u043B\u0436\u0438\u0440",[e.Telugu]:"\u0C06\u0C32\u0C4D\u0C17\u0C47\u0C30\u0C3F\u0C2F\u0C3E",[e.Thai]:"\u0E2D\u0E32\u0E23\u0E32\u0E01\u0E2D\u0E19",[e.Tibetan]:"\u0F68\u0F63\u0F9F\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F61\u0F72",[e.Turkish]:"Cezayir",[e.Ukrainian]:"\u0410\u043B\u0436\u0438\u0440",[e.Urdu]:"\u0622\u0644\u062C\u06CC\u0631",[e.Uzbek]:"\u0410\u043B\u0436\u0438\u0440",[e.Vietnamese]:"\u1EA2\u0301\u1EA1\u1EA3\u1EAD\u1EB5",[e.Welsh]:"Algeria",[e.Xhosa]:"Algeria",[e.Yiddish]:"\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4",[e.Yoruba]:"Algeria",[e.Zulu]:"Algeria"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Oran",total:371e5}},geography:{area:2381740,region:za.Africa,sub_region:Va.NorthernAfrica},government:{capital:"Algiers",type:"Republic"}}},AmericanSamoa:{i18n:{calling_codes:[1684],currencies:[D.AmericanSamoaTala],languages:[e.English,e.Samoan],tz:{offsets:[t.UTC_MINUS_11],regions:[d.PacificSamoa],timezones:[l.SamoaStandardTime]}},id:_.AmericanSamoa,info:{flag:{emoji:"\u{1F1E6}\u{1F1F8}",emoji_unicode:"U+1F1E6 U+1F1F8",svg:"https://www.countryflags.io/as/flat/64.svg"},tld:[".as"]},iso:{alpha2:_.AmericanSamoa,alpha3:"ASM",numeric:"016"},name:{alt_spellings:["AS","Amerika S\u0101moa","Amelika S\u0101moa","S\u0101moa Amelika"],demonym:"American Samoan",native:{endonym:"American Samoa"},official:"American Samoa",short:"American Samoa",translations:{[e.Afrikaans]:"Amerikaans Samoa",[e.Albanian]:"Samoa Amerikane",[e.Amharic]:"\u1233\u121E\u12A0\u122D",[e.Arabic]:"\u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629",[e.Armenian]:"\u054D\u0561\u0570\u0561\u0574\u0561\u056C\u056B\u0561",[e.Azerbaijani]:"Samoa Amerikana",[e.Bashkir]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0421\u0430\u043C\u043E\u0430",[e.Basque]:"Samoa Amerikana",[e.Belarusian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430",[e.Bengali]:"\u0986\u09AE\u09C7\u09B0\u09BF\u0995\u09BE\u09A8 \u09B8\u09BE\u09AE\u09CB\u09AF\u09BC\u09BE",[e.Berber]:"\u062C\u0632\u0631 \u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629",[e.Bhutani]:"\u0F68\u0F62\u0F92\u0FB1\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F58\u0F44\u0F66\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F66\u0F90\u0F56\u0F66\u0F0B\u0F62\u0F92\u0FB1\u0F74\u0F51\u0F0B\u0F46\u0F7A\u0F53\u0F0B\u0F54\u0F7C\u0F0D",[e.Bosnian]:"Ameri\u010Dka Samoa",[e.Breton]:"Samoa Amerikan",[e.Bulgarian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Burmese]:"\u1021\u1019\u1039\u1038\u1019\u101B\u102D\u102F\u1018\u102C\u101E\u102C",[e.Catalan]:"Samoa Americana",[e.Chinese]:"\u7F8E\u5C5E\u8428\u6469\u4E9A",[e.Croatian]:"Ameri\u010Dka Samoa",[e.Czech]:"Americk\xE1 Samoa",[e.Danish]:"Amerikansk Samoa",[e.Dutch]:"Amerikaans Samoa",[e.English]:"American Samoa",[e.Esperanto]:"Samoa Amerika",[e.Estonian]:"Ameerika Samoa",[e.Finnish]:"Amerikka Samoa",[e.French]:"American Samoa",[e.Frisian]:"Amerikaans Samoa",[e.Galician]:"Samoa Americana",[e.Georgian]:"\u10D0\u10DB\u10D4\u10E0\u10D8\u10D9\u10D8\u10E1 \u10E1\u10D0\u10DB\u10DD\u10D0",[e.German]:"Amerikanisch-Samoa",[e.Greenlandic]:"Amerikaans Samoa",[e.Greek]:"\u0391\u03BC\u03B5\u03C1\u03B9\u03BA\u03B1\u03BD\u03B9\u03BA\u03AE \u03A3\u03B1\u03BC\u03CC\u03B1",[e.Gujarati]:"\u0A86\u0AAE\u0AC7\u0AB0\u0ABF\u0A95\u0AA8 \u0AB8\u0ABE\u0AAE\u0ACB\u0AAF\u0ABE",[e.Haitian]:"Amerikaans Samoa",[e.Hausa]:"Amerikaans Samoa",[e.Hebrew]:"\u05D0\u05DE\u05E8\u05D9\u05E7\u05E0\u05D9\u05D4 \u05E1\u05DE\u05D5\u05D0\u05D4",[e.Hindi]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Hungarian]:"Amerikai Szamoa",[e.Icelandic]:"Amerikai Szamoa",[e.Igbo]:"Ikina Amerika",[e.Indonesian]:"Samoa Amerika",[e.Irish]:"Samoa Amerikana",[e.Italian]:"Samoa Americane",[e.Japanese]:"\u30A2\u30E1\u30EA\u30AB\u9818\u30B5\u30E2\u30A2",[e.Javanese]:"Samoa Amerika",[e.Kannada]:"\u0C85\u0CAE\u0CC7\u0CB0\u0CBF\u0C95\u0CA8\u0CCD \u0CB8\u0CAE\u0CCB\u0C86",[e.Kazakh]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430",[e.Khmer]:"\u17A2\u17B6\u1798\u17C9\u17B6\u179A\u17B8\u179F\u17D2\u178F\u1784\u17CB",[e.Korean]:"\uC544\uBA54\uB9AC\uCE74 \uC0AC\uBAA8\uC544",[e.Kurdish]:"Amerikaans Samoa",[e.Kyrgyz]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430",[e.Lao]:"\u0EAD\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94",[e.Latin]:"Samoa Amerikana",[e.Latvian]:"Amerikas Samoa",[e.Lithuanian]:"Amerikos Samoa",[e.Luxembourgish]:"Amerikaans Samoa",[e.Macedonian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Malagasy]:"Samoa Amerika",[e.Malay]:"Amerika Samo",[e.Malayalam]:"\u0D05\u0D2E\u0D47\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D28\u0D4D\u0D31\u0D4D \u0D38\u0D2E\u0D4B\u0D06",[e.Maltese]:"Samoa Amerika",[e.Maori]:"Samoa Amerika",[e.Marathi]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Mongolian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430",[e.Nepali]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Norwegian]:"Amerikansk Samoa",[e.Pashto]:"\u0627\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627",[e.Persian]:"\u0622\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627",[e.Polish]:"Samoa Ameryka\u0144skie",[e.Portuguese]:"Samoa Americana",[e.Punjabi]:"\u0A05\u0A2E\u0A30\u0A40\u0A15\u0A40 \u0A38\u0A3E\u0A2E\u0A4B\u0A06",[e.Romanian]:"Samoa americane",[e.Russian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430",[e.Samoan]:"Samoa Amerika",[e.Sanskrit]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Scots]:"Amerikaans Samoa",[e.Serbian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Sesotho]:"Amerikaans Samoa",[e.Shona]:"Amerikaans Samoa",[e.Sindhi]:"Amerikaans Samoa",[e.Sinhala]:"\u0D86\u0DBB\u0DCA\u0DA2\u0DD2\u0DB1\u0DCF\u0DB1\u0DD4 \u0DC3\u0DD0\u0DB8\u0DD0\u0DBD\u0DCA\u0DC0",[e.Slovak]:"Amerikaans Samoa",[e.Slovenian]:"Amerikaans Samoa",[e.Somali]:"Amerikaans Samoa",[e.Spanish]:"Samoa Americana",[e.Sudanese]:"Amerikaans Samoa",[e.Swahili]:"Amerikaans Samoa",[e.Swedish]:"Amerikansk Samoa",[e.Tagalog]:"Amerikaans Samoa",[e.Tajik]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430",[e.Tamil]:"\u0B85\u0BAE\u0BC6\u0BB0\u0BBF\u0B95\u0BCD \u0B9A\u0BAE\u0BCB\u0BB5\u0BBE",[e.Tatar]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430",[e.Telugu]:"\u0C05\u0C2E\u0C46\u0C30\u0C3F\u0C15\u0C4D \u0C38\u0C2E\u0C4B\u0C35\u0C3E",[e.Thai]:"\u0E2A\u0E2B\u0E23\u0E32\u0E0A\u0E2D\u0E32\u0E13\u0E32\u0E08\u0E31\u0E01\u0E23\u0E41\u0E2D\u0E1F\u0E23\u0E34\u0E01\u0E32",[e.Tibetan]:"\u0F68\u0F7A\u0F0B\u0F62\u0F72\u0F0B\u0F40\u0F0B\u0F68\u0F7A\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F74\u0F0B\u0F61\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F40",[e.Turkish]:"Amerikan Samoas\u0131",[e.Ukrainian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u044C\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Urdu]:"\u0627\u0645\u0631\u06CC\u06A9\u06CC \u0633\u0645\u0648\u0627",[e.Uzbek]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430",[e.Vietnamese]:"Amerikaans Samoa",[e.Welsh]:"Amerikaans Samoa",[e.Xhosa]:"Amerikaans Samoa",[e.Yiddish]:"Amerikaans Samoa",[e.Yoruba]:"Amerikaans Samoa",[e.Zulu]:"Amerikaans Samoa"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Pago Pago",total:558e3}},geography:{area:199,region:za.Oceania,sub_region:Va.Polynesia},government:{capital:"Pago Pago",type:"Nonmetropolitan Territory of the US"}}},Andorra:{i18n:{calling_codes:[376],currencies:[D.Euro],languages:[e.Catalan,e.Spanish],tz:{offsets:[t.UTC_PLUS_1,t.UTC_PLUS_2],regions:[d.EuropeAndorra],timezones:[l.CentralEuropeanTime]}},id:_.Andorra,info:{flag:{emoji:"\u{1F1E6}\u{1F1F4}",emoji_unicode:"U+1F1E6 U+1F1F4",svg:"https://www.countryflags.io/ad/flat/64.svg"},tld:[".ad"]},iso:{alpha2:_.Andorra,alpha3:"AND",numeric:"020"},name:{alt_spellings:["AD","Principality of Andorra","Principat d'Andorra"],demonym:"Andorran",native:{endonym:"Andorra"},official:"Principality of Andorra",short:"Andorra",translations:{[e.Afrikaans]:"Andorra",[e.Albanian]:"Andorra",[e.Amharic]:"\u12A0\u1295\u12F6\u122B",[e.Arabic]:"\u0623\u0646\u062F\u0648\u0631\u0627",[e.Armenian]:"\u0540\u0561\u0576\u0564\u0561\u0580\u0561\u057E\u0561\u0575\u0584",[e.Azerbaijani]:"Andorra",[e.Bashkir]:"\u0410\u043D\u0434\u043E\u0440\u0430",[e.Basque]:"Andorra",[e.Belarusian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Bengali]:"\u0985\u09A8\u09CD\u09A1\u09CB\u09B0\u09BE",[e.Berber]:"\u0623\u0646\u062F\u0648\u0631\u0627",[e.Bhutani]:"\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B",[e.Bosnian]:"Andora",[e.Breton]:"Andorra",[e.Bulgarian]:"\u0410\u043D\u0434\u043E\u0440\u0430",[e.Burmese]:"\u1021\u1014\u1039\u1010\u102C\u101B\u102D\u102F\u1038",[e.Catalan]:"Andorra",[e.Chinese]:"\u5B89\u9053\u5C14",[e.Croatian]:"Andora",[e.Czech]:"Andorra",[e.Danish]:"Andorra",[e.Dutch]:"Andorra",[e.English]:"Andorra",[e.Esperanto]:"Andora",[e.Estonian]:"Andorra",[e.Finnish]:"Andorra",[e.French]:"Andorra",[e.Frisian]:"Andorra",[e.Galician]:"Andorra",[e.Georgian]:"\u12A0\u1295\u12F6\u122B",[e.German]:"Andorra",[e.Greek]:"\u0391\u03BD\u03B4\u03CC\u03C1\u03B1",[e.Hebrew]:"\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4",[e.Hindi]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Hungarian]:"Andorra",[e.Icelandic]:"Andorra",[e.Igbo]:"Andorra",[e.Indonesian]:"Andorra",[e.Irish]:"Andorra",[e.Italian]:"Andorra",[e.Japanese]:"\u30A2\u30F3\u30C9\u30E9",[e.Javanese]:"Andorra",[e.Kannada]:"\u0C85\u0C82\u0CA1\u0CCB\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD",[e.Kazakh]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Khmer]:"\u17A2\u1784\u17CB\u178A\u17B6\u179A\u17B6",[e.Korean]:"\uC548\uB3C4\uB77C",[e.Kurdish]:"Andorra",[e.Kyrgyz]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Lao]:"\u0EAD\u0EB1\u0E99\u0EC2\u0E94\u0EA3\u0EB2",[e.Latin]:"Andorra",[e.Latvian]:"Andora",[e.Lithuanian]:"Andora",[e.Luxembourgish]:"Andorra",[e.Macedonian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Malagasy]:"Andorra",[e.Malay]:"Andorra",[e.Malayalam]:"\u0D05\u0D02\u0D21\u0D4B\u0D30\u0D3F\u0D2F\u0D28\u0D4D",[e.Maltese]:"Andorra",[e.Maori]:"Andorra",[e.Marathi]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Mongolian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Nepali]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Norwegian]:"Andorra",[e.Pashto]:"\u0622\u0646\u062F\u0648\u0631\u0627",[e.Persian]:"\u0622\u0646\u062F\u0648\u0631\u0627",[e.Polish]:"Andora",[e.Portuguese]:"Andorra",[e.Punjabi]:"\u0A05\u0A70\u0A21\u0A4B\u0A30\u0A3E",[e.Romanian]:"Andorra",[e.Russian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Samoan]:"Andorra",[e.Sanskrit]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Scots]:"Andorra",[e.Serbian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Sesotho]:"Andorra",[e.Shona]:"Andorra",[e.Sindhi]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Sinhala]:"\u0D86\u0DB1\u0DCA\u0DAF\u0DDA",[e.Slovak]:"Andorra",[e.Slovenian]:"Andora",[e.Somali]:"Andorra",[e.Spanish]:"Andorra",[e.Sudanese]:"Andorra",[e.Swahili]:"Andorra",[e.Swedish]:"Andorra",[e.Tagalog]:"Andorra",[e.Tajik]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Tamil]:"\u0B85\u0BA9\u0BCB\u0BB0\u0BCD\u0B9F\u0BBE",[e.Tatar]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Telugu]:"\u0C05\u0C02\u0C21\u0C4B\u0C30\u0C4D\u0C30\u0C3E",[e.Thai]:"\u0E2D\u0E31\u0E19\u0E14\u0E2D\u0E23\u0E4C\u0E23\u0E32",[e.Tibetan]:"\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B",[e.Turkish]:"Andora",[e.Ukrainian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Urdu]:"\u0622\u0646\u062F\u0648\u0631\u0627",[e.Uzbek]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Vietnamese]:"Andorra",[e.Welsh]:"Andorra",[e.Xhosa]:"Andorra",[e.Yiddish]:"\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4",[e.Yoruba]:"Andorra",[e.Zulu]:"Andorra"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Andorra la Vella",total:78e3}},geography:{area:468,region:za.Europe,sub_region:Va.SouthernEurope},government:{capital:"Andorra la Vella",type:"Constitutional Monarchy"}}},Angola:{i18n:{calling_codes:[244],currencies:[D.AngolaKwanza],languages:[e.Portuguese,e.Spanish,e.French,e.Italian,e.German,e.English],tz:{offsets:[t.UTC_0,t.UTC_PLUS_1,t.UTC_PLUS_2],regions:[d.AfricaLuanda],timezones:[l.WestAfricaTime]}},id:_.Angola,info:{flag:{emoji:"\u{1F1E6}\u{1F1EC}",emoji_unicode:"U+1F1E6 U+1F1EC",svg:"https://www.countryflags.io/ao/flat/64.svg"},tld:[".ao"]},iso:{alpha2:_.Angola,alpha3:"AGO",numeric:"024"},name:{alt_spellings:["AO","Rep\xFAblica de Angola","\u0281\u025Bpublika de an"],demonym:"Angolan",native:{endonym:"Angola"},official:"Republic of Angola",short:"Angola",translations:{[e.Afrikaans]:"Angola",[e.Albanian]:"Ang\xF2la",[e.Amharic]:"\u12A0\u1295\u130E\u120A\u12EB",[e.Arabic]:"\u0623\u0646\u063A\u0648\u0644\u0627",[e.Armenian]:"\u0540\u0561\u0576\u0563\u0561\u056C\u0561\u056F\u0561",[e.Azerbaijani]:"Ang\u0259l",[e.Bashkir]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Basque]:"Angola",[e.Belarusian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Bengali]:"\u0985\u0999\u09CD\u0997\u09B2\u09BE",[e.Berber]:"Angola",[e.Bhutani]:"\u0F60\u0F56\u0FB2\u0F74\u0F42",[e.Bosnian]:"Angola",[e.Breton]:"Angola",[e.Bulgarian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Burmese]:"\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A",[e.Catalan]:"Angola",[e.Chinese]:"\u5B89\u54E5\u62C9",[e.Croatian]:"Angola",[e.Czech]:"Angola",[e.Danish]:"Angola",[e.Dutch]:"Angola",[e.English]:"Angola",[e.Esperanto]:"Angolo",[e.Estonian]:"Angola",[e.Finnish]:"Angola",[e.French]:"Angola",[e.Frisian]:"Angola",[e.Galician]:"Angola",[e.Georgian]:"\u10D0\u10DC\u10D2\u10DD\u10DA\u10D0",[e.German]:"Angola",[e.Greenlandic]:"Angola",[e.Greek]:"\u0391\u03B3\u03BA\u03CC\u03BB\u03B1",[e.Gujarati]:"\u0A85\u0A82\u0A97\u0ACB\u0AB2\u0ABE",[e.Haitian]:"Angola",[e.Hausa]:"Angola",[e.Hebrew]:"\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4",[e.Hindi]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Hungarian]:"Angola",[e.Icelandic]:"Angola",[e.Igbo]:"Angola",[e.Indonesian]:"Angola",[e.Irish]:"Angola",[e.Italian]:"Angola",[e.Japanese]:"\u30A2\u30F3\u30B4\u30E9",[e.Javanese]:"Anggol",[e.Kannada]:"\u0C85\u0C82\u0C97\u0CCB\u0CB2\u0CBE",[e.Kazakh]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Khmer]:"\u17A2\u1784\u17CB\u1780\u17B6\u179B\u17A2\u1784\u17CB\u1782\u17D2\u179B\u17C1\u179F",[e.Korean]:"\uC559\uACE8\uB77C",[e.Kurdish]:"Angola",[e.Kyrgyz]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Lao]:"\u0EAD\u0EB0\u0E99\u0EB2\u0E94\u0EB2",[e.Latin]:"Angola",[e.Latvian]:"Angola",[e.Lithuanian]:"Angola",[e.Luxembourgish]:"Angola",[e.Macedonian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Malagasy]:"Angola",[e.Malay]:"Angola",[e.Malayalam]:"\u0D05\u0D02\u0D17\u0D4B\u0D33\u0D3E",[e.Maltese]:"Angola",[e.Maori]:"Angola",[e.Marathi]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Mongolian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Nepali]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Norwegian]:"Angola",[e.Pashto]:"\u0627\u0646\u06AB\u0648\u0644\u0627",[e.Persian]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Polish]:"Angola",[e.Portuguese]:"Angola",[e.Punjabi]:"\u0A05\u0A19\u0A4D\u0A17\u0A4B\u0A32\u0A3E",[e.Romanian]:"Angole",[e.Russian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Samoan]:"Angola",[e.Sanskrit]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Scots]:"Angola",[e.Serbian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Sesotho]:"Angola",[e.Shona]:"Angola",[e.Sindhi]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Sinhala]:"\u0D86\u0D9C\u0DBD\u0DD2\u0DBA\u0DCF\u0DC0",[e.Slovak]:"Angola",[e.Slovenian]:"Angola",[e.Somali]:"Angola",[e.Spanish]:"Angola",[e.Sudanese]:"Angola",[e.Swahili]:"Angola",[e.Swedish]:"Angola",[e.Tagalog]:"Angola",[e.Tajik]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Tamil]:"\u0B85\u0B99\u0BCD\u0B95\u0BCB\u0BB2\u0BBE",[e.Tatar]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Telugu]:"\u0C05\u0C02\u0C17\u0C4B\u0C32\u0C3E",[e.Thai]:"\u0E2D\u0E07\u0E04\u0E4C\u0E01\u0E32\u0E23\u0E2D\u0E32\u0E19\u0E32\u0E21\u0E34\u0E2A\u0E16\u0E32\u0E19",[e.Tibetan]:"\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B",[e.Turkish]:"Angola",[e.Ukrainian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Urdu]:"\u0627\u0646\u06AF\u0648\u0644\u0627",[e.Uzbek]:"Angola",[e.Vietnamese]:"Angola",[e.Xhosa]:"Angola",[e.Welsh]:"Angola",[e.Yiddish]:"\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4",[e.Yoruba]:"Angola",[e.Zulu]:"Angola"}}},Anguilla:{i18n:{calling_codes:[1264],currencies:[D.DominicaDollar,D.EastCaribbeanDollar,D.Euro,D.UnitedStatesDollar,D.BritishPound],languages:[e.English,e.Spanish],tz:{offsets:[t.UTC_MINUS_4],regions:[d.AmericaAnguilla],timezones:[l.AtlanticStandardTime]}},id:_.Anguilla,info:{flag:{emoji:"\u{1F1E6}\u{1F1EC}",emoji_unicode:"U+1F1E6 U+1F1EC",svg:"https://www.countryflags.io/ai/flat/64.svg"},tld:[".ai"]},iso:{alpha2:_.Anguilla,alpha3:"AIA",numeric:"660"},name:{alt_spellings:["AI"],demonym:"Anguillian",native:{endonym:"Anguilla"},official:"Anguilla",short:"Anguilla",translations:{[e.Afrikaans]:"Anguilla",[e.Albanian]:"Anguilla",[e.Amharic]:"\u12A0\u1295\u1309\u120B",[e.Arabic]:"\u0623\u0646\u063A\u0648\u064A\u0644\u0627",[e.Armenian]:"\u0531\u0576\u0563\u056B\u056C\u0561",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Basque]:"Angila",[e.Belarusian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Bengali]:"\u0985\u0999\u09CD\u0997\u09C0\u09B2\u09BE",[e.Berber]:"\u0623\u0646\u063A\u0648\u064A\u0644\u0627",[e.Bhutani]:"\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B",[e.Bosnian]:"Angila",[e.Breton]:"Angila",[e.Bulgarian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Burmese]:"\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A",[e.Catalan]:"Angilla",[e.Chinese]:"\u5B89\u572D\u62C9",[e.Croatian]:"Angila",[e.Czech]:"Anguilla",[e.Danish]:"Anguilla",[e.Dutch]:"Anguilla",[e.English]:"Anguilla",[e.Esperanto]:"Angila",[e.Estonian]:"Anguilla",[e.Finnish]:"Anguilla",[e.French]:"Anguilla",[e.Frisian]:"Angila",[e.Galician]:"Anguilla",[e.Georgian]:"\u10D0\u10DC\u10D2\u10D8\u10DA\u10D0",[e.German]:"Anguilla",[e.Greenlandic]:"Anguilla",[e.Greek]:"\u0391\u03BD\u03B3\u03BA\u03C5\u03BB\u03AC",[e.Gujarati]:"\u0A85\u0A82\u0A97\u0ACD\u0AAF\u0ABE\u0AB2\u0ABE",[e.Haitian]:"Anguilla",[e.Hausa]:"Anguilla",[e.Hebrew]:"\u05D0\u05E0\u05D2\u05D5\u05D9\u05D0\u05DC\u05D4",[e.Hindi]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Hungarian]:"Anguilla",[e.Icelandic]:"Anguilla",[e.Igbo]:"Anguilla",[e.Indonesian]:"Anguilla",[e.Irish]:"Anguilla",[e.Italian]:"Anguilla",[e.Japanese]:"\u30A2\u30F3\u30AE\u30E9",[e.Javanese]:"Anguilla",[e.Kannada]:"\u0C85\u0C82\u0C97\u0CCD\u0CB5\u0CC7\u0CB2\u0CBE",[e.Kazakh]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Khmer]:"\u17A2\u1784\u17CB\u1780\u17B6\u179A\u17A0\u17D2\u1782\u17B8\u1798",[e.Korean]:"\uC575\uADC8\uB77C",[e.Kurdish]:"Anguilla",[e.Kyrgyz]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Lao]:"\u0EAD\u0EB0\u0E99\u0EB0\u0E88\u0EB3",[e.Latin]:"Anguilla",[e.Latvian]:"Anguilla",[e.Lithuanian]:"Anguilla",[e.Luxembourgish]:"Angilla",[e.Macedonian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Malagasy]:"Angila",[e.Malay]:"Anguilla",[e.Malayalam]:"\u0D05\u0D02\u0D17\u0D4D\u0D35\u0D47\u0D32\u0D3E",[e.Maltese]:"Anguilla",[e.Maori]:"Anguilla",[e.Marathi]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Mongolian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Nepali]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Norwegian]:"Anguilla",[e.Pashto]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Persian]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Polish]:"Anguilla",[e.Portuguese]:"Anguilla",[e.Punjabi]:"\u0A05\u0A02\u0A17\u0A40\u0A32\u0A3E",[e.Romanian]:"Anguilla",[e.Russian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Samoan]:"Anguilla",[e.Sanskrit]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Scots]:"Anguilla",[e.Serbian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Sesotho]:"Anguilla",[e.Shona]:"Anguilla",[e.Sindhi]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Sinhala]:"\u0D86\u0D82\u0D9C\u0DD2\u0DBD\u0DCF\u0DC0",[e.Slovak]:"Anguilla",[e.Slovenian]:"Anguilla",[e.Somali]:"Anguilla",[e.Spanish]:"Anguilla",[e.Sudanese]:"Anguilla",[e.Swahili]:"Anguilla",[e.Swedish]:"Anguilla",[e.Tagalog]:"Anguilla",[e.Tajik]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Tamil]:"\u0B85\u0B99\u0BCD\u0B95\u0BC8\u0BB2\u0BBE",[e.Tatar]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Telugu]:"\u0C05\u0C02\u0C17\u0C4D\u0C35\u0C47\u0C32\u0C3E",[e.Thai]:"\u0E2D\u0E31\u0E07\u0E01\u0E32\u0E25\u0E32",[e.Tibetan]:"\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B",[e.Turkish]:"Anguilla",[e.Ukrainian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Urdu]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Uzbek]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Vietnamese]:"Anguilla",[e.Welsh]:"Anguilla",[e.Xhosa]:"Anguilla",[e.Yiddish]:"Anguilla",[e.Yoruba]:"Anguilla",[e.Zulu]:"Anguilla"}}},Antarctica:{i18n:{calling_codes:[672],currencies:[D.UnitedStatesDollar,D.Euro],languages:[e.English,e.Spanish,e.French,e.Portuguese,e.Italian,e.Dutch,e.German,e.Swedish,e.Norwegian,e.Danish,e.Finnish],tz:{offsets:[t.UTC_PLUS_1,t.UTC_PLUS_2],regions:[d.AntarcticaCasey,d.AntarcticaDavis,d.AntarcticaMcMurdo,d.AntarcticaPalmer,d.AntarcticaRothera],timezones:[l.AtlanticStandardTime,l.CentralTime,l.EasternTime,l.AtlanticStandardTime,l.AzoresStandardTime,l.NewfoundlandStandardTime]}},id:_.Antarctica,info:{flag:{emoji:"\u{1F1E6}\u{1F1F6}",emoji_unicode:"U+1F1E6 U+1F1F6",svg:"https://www.countryflags.io/aq/flat/64.svg"},tld:[".aq"]},iso:{alpha2:_.Antarctica,alpha3:"ATA",numeric:"010"},name:{alt_spellings:["AQ"],demonym:"Antarctican",native:{endonym:"Antarctica"},official:"Antarctica",short:"Antarctica",translations:{[e.Afrikaans]:"Antarctica",[e.Albanian]:"Antarktika",[e.Amharic]:"\u12A0\u1295\u1272\u120D\u12AB\u1293",[e.Arabic]:"\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627",[e.Armenian]:"\u0540\u0561\u0576\u0561\u0580\u0561\u057F\u056F\u0578",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Basque]:"Antarktika",[e.Belarusian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Bengali]:"\u0985\u09A8\u09CD\u09A4\u09B0\u09BE\u09B6\u09CD\u09AC\u09C0",[e.Berber]:"\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627",[e.Bhutani]:"\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B",[e.Bosnian]:"Antarktika",[e.Breton]:"Antarktika",[e.Bulgarian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Burmese]:"\u1021\u1014\u1039\u1010\u102C\u101B\u102E\u1038\u101A\u102C\u1038",[e.Catalan]:"Ant\xE0rtida",[e.Chinese]:"\u5357\u6781\u6D32",[e.Croatian]:"Antarktika",[e.Czech]:"Antarktida",[e.Danish]:"Antarktis",[e.Dutch]:"Antarctica",[e.English]:"Antarctica",[e.Esperanto]:"Antarktika",[e.Estonian]:"Antarktika",[e.Finnish]:"Antarktis",[e.French]:"Antarctica",[e.Frisian]:"Antarktis",[e.Galician]:"Ant\xE1rtida",[e.Georgian]:"\u10D0\u10DC\u10E2\u10D0\u10E0\u10E5\u10E2\u10D8\u10D9\u10D0",[e.German]:"Antarktis",[e.Greenlandic]:"Antarktis",[e.Greek]:"\u0391\u03BD\u03C4\u03B1\u03C1\u03BA\u03C4\u03B9\u03BA\u03AE",[e.Gujarati]:"\u0A85\u0AA8\u0ACD\u0AA4\u0AB0\u0ABE\u0AB6\u0ACD\u0AB5\u0AC0",[e.Haitian]:"Antarctica",[e.Hausa]:"Antarktika",[e.Hebrew]:"\u05D0\u05E0\u05D8\u05E8\u05E7\u05D8\u05D9\u05E7\u05D4",[e.Hindi]:"\u0905\u0928\u094D\u0924\u0930\u0915\u094D\u0937\u0947\u0924\u094D\u0930",[e.Hungarian]:"Antarktika",[e.Icelandic]:"Antarktis",[e.Igbo]:"Antarktika",[e.Indonesian]:"Antarktika",[e.Irish]:"Antarktika",[e.Italian]:"Antartide",[e.Japanese]:"\u5357\u6975",[e.Javanese]:"Antarktika",[e.Kannada]:"\u0C85\u0CA8\u0CCD\u0CA4\u0CB0\u0CBE\u0CB6\u0CCD\u0CB5\u0CBF",[e.Kazakh]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Khmer]:"\u17A2\u1784\u17CB\u179F\u17D2\u1780\u179A\u17A2\u17B6\u1798\u17C9\u17BB\u1799",[e.Korean]:"\uC564\uD2F0\uCE74\uD1A0\uB2C9",[e.Kurdish]:"Antarktika",[e.Kyrgyz]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Lao]:"\u0EAD\u0EB0\u0E99\u0EAD\u0EA5\u0EB2\u0E81\u0EB4\u0EAA\u0EB0",[e.Latin]:"Antarctica",[e.Latvian]:"Antarktika",[e.Lithuanian]:"Antarktis",[e.Luxembourgish]:"Antarktis",[e.Macedonian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Malagasy]:"Antarctica",[e.Malay]:"Antarktika",[e.Malayalam]:"\u0D05\u0D28\u0D4D\u0D24\u0D30\u0D3E\u0D36\u0D4D\u0D35\u0D3F",[e.Maltese]:"Antarktika",[e.Maori]:"Antarktika",[e.Marathi]:"\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E",[e.Mongolian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Nepali]:"\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E",[e.Norwegian]:"Antarktis",[e.Pashto]:"\u0627\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627",[e.Persian]:"\u0622\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627",[e.Polish]:"Antarktyka",[e.Portuguese]:"Ant\xE1rtida",[e.Punjabi]:"\u0A05\u0A28\u0A4D\u0A24\u0A30\u0A3E\u0A36\u0A3F\u0A15\u0A3E",[e.Romanian]:"Antarctica",[e.Russian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Samoan]:"Antarktika",[e.Sanskrit]:"\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E",[e.Scots]:"Antarktika",[e.Serbian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Sesotho]:"Antarktika",[e.Shona]:"Antarktika",[e.Sindhi]:"Antarktika",[e.Sinhala]:"\u0D86\u0DB1\u0DCA\u0DA7\u0DCA\u0DA7\u0DD2\u0D9A\u0DCF\u0DC0",[e.Slovak]:"Antarktika",[e.Slovenian]:"Antarktika",[e.Somali]:"Antarktika",[e.Spanish]:"Ant\xE1rtida",[e.Sudanese]:"Antarktika",[e.Swahili]:"Antarktika",[e.Swedish]:"Antarktis",[e.Tagalog]:"Antarktika",[e.Tajik]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Tamil]:"\u0B85\u0BA9\u0BCD\u0BA4\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BBF\u0B95\u0BCD",[e.Tatar]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Telugu]:"\u0C05\u0C28\u0C4D\u0C24\u0C30\u0C3E\u0C36\u0C4D\u0C35\u0C3F\u0C15\u0C3E",[e.Thai]:"\u0E20\u0E39\u0E21\u0E34\u0E20\u0E32\u0E04\u0E2D\u0E32\u0E19\u0E31\u0E19\u0E15\u0E34\u0E01\u0E32",[e.Tibetan]:"\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72\u0F0B\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72",[e.Turkish]:"Antarktika",[e.Ukrainian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Urdu]:"\u0627\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627",[e.Uzbek]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Vietnamese]:"\u0110\u1EA5t Antarktik",[e.Welsh]:"Antarktika",[e.Xhosa]:"Antarktika",[e.Yiddish]:"Antarktika",[e.Yoruba]:"Antarktika",[e.Zulu]:"Antarktika"}}},Armenia:{i18n:{calling_codes:[374],currencies:[D.ArmeniaDram],languages:[e.Armenian],tz:{offsets:[t.UTC_PLUS_4],regions:[d.AsiaJakarta],timezones:[l.ArmeniaTime]}},id:_.Armenia,info:{flag:{emoji:"\u{1F1E6}\u{1F1F2}",emoji_unicode:"U+1F1E6 U+1F1F2",svg:"https://www.countryflags.io/am/flat/64.svg"},tld:[".am"]},iso:{alpha2:_.Armenia,alpha3:"ARM",numeric:"051"},name:{alt_spellings:["AM","Hayastan","Republic of Armenia","\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"],demonym:"Armenian",native:{endonym:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"},official:"Republic of Armenia",short:"Armenia",translations:{[e.Afrikaans]:"Armeni\xEB",[e.Albanian]:"Armenia",[e.Amharic]:"\u12A0\u121B\u122D\u129B",[e.Arabic]:"\u0623\u0631\u0645\u064A\u0646\u064A\u0627",[e.Armenian]:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Basque]:"Arm\xE9nia",[e.Belarusian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Bengali]:"\u0986\u09B0\u09CD\u09AE\u09C7\u09A8\u09BF",[e.Berber]:"\u0623\u0631\u0645\u064A\u0646\u064A\u0627",[e.Bhutani]:"\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42",[e.Bosnian]:"Armenija",[e.Breton]:"Armeni\xEB",[e.Bulgarian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Burmese]:"\u1021\u102C\u1019\u1010\u102D\u1010\u1039",[e.Catalan]:"Arm\xE8nia",[e.Chinese]:"\u4E9A\u7F8E\u5C3C\u4E9A",[e.Croatian]:"Armenija",[e.Czech]:"Arm\xE9nie",[e.Danish]:"Armenien",[e.Dutch]:"Armeni\xEB",[e.English]:"Armenia",[e.Esperanto]:"Armenia",[e.Estonian]:"Armeenia",[e.Finnish]:"Armenia",[e.French]:"Armenia",[e.Frisian]:"Armeenia",[e.Galician]:"Arm\xE9nia",[e.Georgian]:"\u10D0\u10E0\u10DB\u10DD\u10DC\u10D8",[e.German]:"Armenien",[e.Greenlandic]:"Armenia",[e.Greek]:"\u0391\u03C1\u03BC\u03B5\u03BD\u03AF\u03B1",[e.Gujarati]:"\u0A85\u0AB0\u0ACD\u0AAE\u0AC7\u0AA8\u0ABF",[e.Haitian]:"Armenia",[e.Hausa]:"Armenia",[e.Hebrew]:"\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4",[e.Hindi]:"\u0905\u05E8\u05DE\u05E0\u093F\u092F\u093E",[e.Hungarian]:"\xD6rm\xE9nyorsz\xE1g",[e.Icelandic]:"Armenia",[e.Igbo]:"Armenia",[e.Indonesian]:"Armenia",[e.Irish]:"Armenia",[e.Italian]:"Armenia",[e.Japanese]:"\u30A2\u30EB\u30E1\u30CB\u30A2",[e.Javanese]:"Armenia",[e.Kannada]:"\u0C85\u0CB0\u0CCD\u0CAE\u0CC7\u0CA8\u0CBF",[e.Kazakh]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Khmer]:"\u17A2\u17B6\u1798\u17C9\u17C1\u179A\u17B8",[e.Korean]:"\uC544\uB974\uBA54\uB2C8\uC544",[e.Kurdish]:"Armenia",[e.Kyrgyz]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Lao]:"\u0EAD\u0EB2\u0EAB\u0EBC\u0E99\u0EB2",[e.Latin]:"Armenia",[e.Latvian]:"Armeenia",[e.Lithuanian]:"Arm\u0117nija",[e.Luxembourgish]:"Armenien",[e.Macedonian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430",[e.Malagasy]:"Armenia",[e.Malay]:"Armenia",[e.Malayalam]:"\u0D05\u0D30\u0D4D\u200D\u0D2E\u0D47\u0D28\u0D3F",[e.Maltese]:"Armenia",[e.Maori]:"Armenia",[e.Marathi]:"\u0905\u0930\u094D\u092E\u0947\u0928\u093F",[e.Mongolian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Nepali]:"\u0905\u0930\u094D\u092E\u0947\u0928\u093F",[e.Norwegian]:"Armenia",[e.Pashto]:"\u0622\u0631\u0645\u06CC\u0646\u06CC\u0627",[e.Persian]:"\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646",[e.Polish]:"Armenia",[e.Portuguese]:"Armenia",[e.Punjabi]:"\u0A05\u0A30\u0A2E\u0A40\u0A28\u0A40",[e.Romanian]:"Armenia",[e.Russian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Samoan]:"Armenia",[e.Sanskrit]:"Armenia",[e.Scots]:"Armenia",[e.Serbian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430",[e.Sesotho]:"Armenia",[e.Shona]:"Armenia",[e.Sindhi]:"Armenia",[e.Sinhala]:"\u0D86\u0DBB\u0DCA\u0DB8\u0DD3\u0DB1\u0DD2",[e.Slovak]:"Armenia",[e.Slovenian]:"Armenija",[e.Somali]:"Armenia",[e.Spanish]:"Armenia",[e.Sudanese]:"Armenia",[e.Swahili]:"Armenia",[e.Swedish]:"Armenien",[e.Tagalog]:"Armenia",[e.Tajik]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Tamil]:"\u0B85\u0BB0\u0BCD\u0BAE\u0BC7\u0BA9\u0BBF\u0BAF\u0BA9\u0BCD",[e.Tatar]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Telugu]:"\u0C05\u0C30\u0C4D\u0C2E\u0C47\u0C28\u0C3F",[e.Thai]:"\u0E2D\u0E32\u0E23\u0E4C\u0E40\u0E21\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19",[e.Tibetan]:"\u0F68\u0F62\u0F0B\u0F58\u0F7A\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F74\u0F0D",[e.Turkish]:"Ermenistan",[e.Ukrainian]:"\u0410\u0440\u043C\u0435\u043D\u0456\u044F",[e.Urdu]:"\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646",[e.Uzbek]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Vietnamese]:"Armenia",[e.Welsh]:"Armenia",[e.Xhosa]:"Armenia",[e.Yiddish]:"\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4",[e.Yoruba]:"Armenia",[e.Zulu]:"Armenia"}}},SomeCountry:{i18n:{calling_codes:[],currencies:[],languages:[],tz:{offsets:[],regions:[],timezones:[]}},id:_.AmericanSamoa,info:{flag:{emoji:"",emoji_unicode:"",svg:""},tld:[]},iso:{alpha2:_.AmericanSamoa,alpha3:"",numeric:""},name:{alt_spellings:[],demonym:"",native:{endonym:""},official:"",short:"",translations:{[e.Afrikaans]:"",[e.Albanian]:"",[e.Amharic]:"",[e.Arabic]:"",[e.Armenian]:"",[e.Azerbaijani]:"",[e.Bashkir]:"",[e.Basque]:"",[e.Belarusian]:"",[e.Bengali]:"",[e.Berber]:"",[e.Bhutani]:"",[e.Bosnian]:"",[e.Breton]:"",[e.Bulgarian]:"",[e.Burmese]:"",[e.Catalan]:"",[e.Chinese]:"",[e.Croatian]:"",[e.Czech]:"",[e.Danish]:"",[e.Dutch]:"",[e.English]:"",[e.Esperanto]:"",[e.Estonian]:"",[e.Finnish]:"",[e.French]:"",[e.Frisian]:"",[e.Galician]:"",[e.Georgian]:"",[e.German]:"",[e.Greenlandic]:"",[e.Greek]:"",[e.Gujarati]:"",[e.Haitian]:"",[e.Hausa]:"",[e.Hebrew]:"",[e.Hindi]:"",[e.Hungarian]:"",[e.Icelandic]:"",[e.Igbo]:"",[e.Indonesian]:"",[e.Irish]:"",[e.Italian]:"",[e.Japanese]:"",[e.Javanese]:"",[e.Kannada]:"",[e.Kazakh]:"",[e.Khmer]:"",[e.Korean]:"",[e.Kurdish]:"",[e.Kyrgyz]:"",[e.Lao]:"",[e.Latin]:"",[e.Latvian]:"",[e.Lithuanian]:"",[e.Luxembourgish]:"",[e.Macedonian]:"",[e.Malagasy]:"",[e.Malay]:"",[e.Malayalam]:"",[e.Maltese]:"",[e.Maori]:"",[e.Marathi]:"",[e.Mongolian]:"",[e.Nepali]:"",[e.Norwegian]:"",[e.Pashto]:"",[e.Persian]:"",[e.Polish]:"",[e.Portuguese]:"",[e.Punjabi]:"",[e.Romanian]:"",[e.Russian]:"",[e.Samoan]:"",[e.Sanskrit]:"",[e.Scots]:"",[e.Serbian]:"",[e.Sesotho]:"",[e.Shona]:"",[e.Sindhi]:"",[e.Sinhala]:"",[e.Slovak]:"",[e.Slovenian]:"",[e.Somali]:"",[e.Spanish]:"",[e.Sudanese]:"",[e.Swahili]:"",[e.Swedish]:"",[e.Tagalog]:"",[e.Tajik]:"",[e.Tamil]:"",[e.Tatar]:"",[e.Telugu]:"",[e.Thai]:"",[e.Tibetan]:"",[e.Turkish]:"",[e.Ukrainian]:"",[e.Urdu]:"",[e.Uzbek]:"",[e.Vietnamese]:"",[e.Welsh]:"",[e.Xhosa]:"",[e.Yiddish]:"",[e.Yoruba]:"",[e.Zulu]:""}}}},kf={id:e.Afrikaans,language:{code:T.Afrikaans,name:"Afrikaans",native:"Afrikaans"},name:"Afrikaans",native_name:"Afrikaans",rtl:!1},Mf={country:{code:_.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.AfrikaansSouthAfrica,language:{code:T.Afrikaans,name:"Afrikaans",native:"Afrikaans"},name:"Afrikaans (South Africa)",native_name:"Afrikaans (Suid-Afrika)",rtl:!1},Lf={id:e.Albanian,language:{code:T.Albanian,name:"Albanian",native:"Shqip"},name:"Albanian",native_name:"Shqip",rtl:!1},qf={country:{code:_.Albania,name:"Albania",native:"Shqip\xEBria"},id:e.AlbanianAlbania,language:{code:T.Albanian,name:"Albanian",native:"Shqip"},name:"Albanian (Albania)",native_name:"Shqip (Shqip\xEBria)",rtl:!1},Gf={id:e.Amharic,language:{code:T.Amharic,name:"Amharic",native:"\u12A0\u121B\u122D\u129B"},name:"Amharic",native_name:"\u12A0\u121B\u122D\u129B",rtl:!1},wf={country:{code:_.Ethiopia,name:"Ethiopia",native:"\u12A2\u1275\u12EE\u1335\u12EB"},id:e.AmharicEthiopia,language:{code:T.Amharic,name:"Amharic",native:"\u12A0\u121B\u122D\u129B"},name:"Amharic (Ethiopia)",native_name:"\u12A0\u121B\u122D\u129B (\u12A2\u1275\u12EE\u1335\u12EB)",rtl:!1},Kf={id:e.Arabic,language:{code:T.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629",rtl:!0},xf={country:{code:_.Algeria,name:"Algeria",native:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631"},id:e.ArabicAlgeria,language:{code:T.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Algeria)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u062C\u0632\u0627\u0626\u0631)",rtl:!0},Of={country:{code:_.Bahrain,name:"Bahrain",native:"\u0627\u0644\u0628\u062D\u0631\u064A\u0646"},id:e.ArabicBahrain,language:{code:T.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Bahrain)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0628\u062D\u0631\u064A\u0646)",rtl:!0},jf={country:{code:_.Egypt,name:"Egypt",native:"\u0645\u0635\u0631"},id:e.ArabicEgypt,language:{code:T.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Egypt)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0645\u0635\u0631)",rtl:!0},Hf={country:{code:_.Iraq,name:"Iraq",native:"\u0627\u0644\u0639\u0631\u0627\u0642"},id:e.ArabicIraq,language:{code:T.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Iraq)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0639\u0631\u0627\u0642)",rtl:!0},Wf={country:{code:_.Jordan,name:"Jordan",native:"\u0627\u0644\u0623\u0631\u062F\u0646"},id:e.ArabicJordan,language:{code:T.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Jordan)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0623\u0631\u062F\u0646)",rtl:!0},zf={country:{code:_.Kuwait,name:"Kuwait",native:"\u0627\u0644\u0643\u0648\u064A\u062A"},id:e.ArabicKuwait,language:{code:T.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Kuwait)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0643\u0648\u064A\u062A)",rtl:!0},Vf={country:{code:_.Lebanon,name:"Lebanon",native:"\u0644\u0628\u0646\u0627\u0646"},id:e.ArabicLebanon,language:{code:T.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Lebanon)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u0628\u0646\u0627\u0646)",rtl:!0},Rf={country:{code:_.Libya,name:"Libya",native:"\u0644\u064A\u0628\u064A\u0627"},id:e.ArabicLibya,language:{code:T.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Libya)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u064A\u0628\u064A\u0627)",rtl:!0},Jf={country:{code:_.Morocco,name:"Morocco",native:"\u0627\u0644\u0645\u063A\u0631\u0628"},id:e.ArabicMorocco,language:{code:T.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Morocco)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u063A\u0631\u0628)",rtl:!0},Yf={country:{code:_.Oman,name:"Oman",native:"\u0639\u0645\u0627\u0646"},id:e.ArabicOman,language:{code:T.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Oman)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0639\u0645\u0627\u0646)",rtl:!0},Zf={country:{code:_.Qatar,name:"Qatar",native:"\u0642\u0637\u0631"},id:e.ArabicQatar,language:{code:T.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Qatar)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0642\u0637\u0631)",rtl:!0},$f={country:{code:_.SaudiArabia,name:"Saudi Arabia",native:"\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629"},id:e.ArabicSaudiArabia,language:{code:T.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Saudi Arabia)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629)",rtl:!0},Qf={country:{code:_.Tunisia,name:"Tunisia",native:"\u062A\u0648\u0646\u0633"},id:e.ArabicTunisia,language:{code:T.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Tunisia)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u062A\u0648\u0646\u0633)",rtl:!0},Xf={country:{code:_.UnitedArabEmirates,name:"United Arab Emirates",native:"\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629"},id:e.ArabicUnitedArabEmirates,language:{code:T.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (United Arab Emirates)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629)",rtl:!0},Cf={country:{code:_.Yemen,name:"Yemen",native:"\u0627\u0644\u064A\u0645\u0646"},id:e.ArabicYemen,language:{code:T.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Yemen)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u064A\u0645\u0646)",rtl:!0},aI={id:e.Armenian,language:{code:T.Armenian,name:"Armenian",native:"\u0540\u0561\u0575\u0565\u0580\u0565\u0576"},name:"Armenian",native_name:"\u0540\u0561\u0575\u0565\u0580\u0565\u0576",rtl:!1},eI={country:{code:_.Armenia,name:"Armenia",native:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"},id:e.ArmenianArmenia,language:{code:T.Armenian,name:"Armenian",native:"\u0570\u0561\u0575\u0565\u0580\u0565\u0576"},name:"Armenian (Armenia)",native_name:"\u0570\u0561\u0575\u0565\u0580\u0565\u0576 (\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576)",rtl:!1},iI={id:e.Azerbaijani,language:{code:T.Azerbaijani,name:"Azeribaijani",native:"Az\u0259rbaycan"},name:"Azeri",native_name:"Az\u0259rbaycan",rtl:!1},uI={country:{code:_.Azerbaijan,name:"Azerbaijan",native:"Az\u0259rbaycan"},id:e.AzerbaijaniAzerbaijan,language:{code:T.Azerbaijani,name:"Azerbaijani",native:"Az\u0259rbaycan"},name:"Azeri (Azerbaijan)",native_name:"Az\u0259rbaycan (Az\u0259rbaycan)",rtl:!1},nI={id:e.Basque,language:{code:T.Basque,name:"Basque",native:"Euskara"},name:"Basque",native_name:"Euskara",rtl:!1},sI={country:{code:_.Spain,name:"Spain",native:"Espa\xF1a"},id:e.BasqueSpain,language:{code:T.Basque,name:"Basque",native:"Euskara"},name:"Basque (Spain)",native_name:"Euskara (Espa\xF1a)",rtl:!1},rI={id:e.Belarusian,language:{code:T.Belarusian,name:"Belarusian",native:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F"},name:"Belarusian",native_name:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F",rtl:!1},tI={country:{code:_.Belarus,name:"Belarus",native:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C"},id:e.BelarusianBelarus,language:{code:T.Belarusian,name:"Belarusian",native:"\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F"},name:"Belarusian (Belarus)",native_name:"\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F (\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C)",rtl:!1},lI={id:e.Bengali,language:{code:T.Bengali,name:"Bengali",native:"\u09AC\u09BE\u0982\u09B2\u09BE"},name:"Bengali",native_name:"\u09AC\u09BE\u0982\u09B2\u09BE",rtl:!1},mI={country:{code:_.Bangladesh,name:"Bangladesh",native:"\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6"},id:e.BengaliBangladesh,language:{code:T.Bengali,name:"Bengali",native:"\u09AC\u09BE\u0982\u09B2\u09BE"},name:"Bengali (Bangladesh)",native_name:"\u09AC\u09BE\u0982\u09B2\u09BE (\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6)",rtl:!1},cI={id:e.Bhutani,language:{code:T.Bhutani,name:"Bhutani",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Bhutani",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42",rtl:!1},oI={country:{code:_.Bhutan,name:"Bhutan",native:"\u0F60\u0F56\u0FB2\u0F74\u0F42"},id:e.BhutaniBhutan,language:{code:T.Bhutani,name:"Bhutani",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Bhutani (Bhutan)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42)",rtl:!1},AI={id:e.Bulgarian,language:{code:T.Bulgarian,name:"Bulgarian",native:"\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438"},name:"Bulgarian",native_name:"\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438",rtl:!1},dI={country:{code:_.Bulgaria,name:"Bulgaria",native:"\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F"},id:e.BulgarianBulgaria,language:{code:T.Bulgarian,name:"Bulgarian",native:"\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438"},name:"Bulgarian (Bulgaria)",native_name:"\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438 (\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F)",rtl:!1},fI={id:e.Burmese,language:{code:T.Burmese,name:"Burmese",native:"\u1017\u1019\u102C\u1005\u102C"},name:"Burmese",native_name:"\u1017\u1019\u102C\u1005\u102C",rtl:!1},II={country:{code:_.Myanmar,name:"Myanmar",native:"\u1019\u103C\u1014\u103A\u1019\u102C"},id:e.BurmeseMyanmar,language:{code:T.Burmese,name:"Burmese",native:"\u1017\u1019\u102C\u1005\u102C"},name:"Burmese (Myanmar)",native_name:"\u1017\u1019\u102C\u1005\u102C (\u1019\u103C\u1014\u103A\u1019\u102C)",rtl:!1},_I={id:e.Cantonese,language:{code:T.Cantonese,name:"Cantonese",native:"\u5EE3\u6771\u8A71"},name:"Cantonese",native_name:"\u5EE3\u6771\u8A71",rtl:!1},hI={country:{code:_.HongKong,name:"Hong Kong",native:"\u9999\u6E2F"},id:e.CantoneseHongKong,language:{code:T.Cantonese,name:"Cantonese",native:"\u5EE3\u6771\u8A71"},name:"Cantonese (Hong Kong)",native_name:"\u5EE3\u6771\u8A71 (\u9999\u6E2F)",rtl:!1},gI={id:e.Catalan,language:{code:T.Catalan,name:"Catalan",native:"Catal\xE0"},name:"Catalan",native_name:"Catal\xE0",rtl:!1},EI={country:{code:_.Spain,name:"Spain",native:"Espa\xF1a"},id:e.CatalanSpain,language:{code:T.Catalan,name:"Catalan",native:"Catal\xE0"},name:"Catalan (Spain)",native_name:"Catal\xE0 (Espanya)",rtl:!1},SI={id:e.ChineseSimplified,language:{code:T.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified)",native_name:"\u4E2D\u6587",rtl:!1},TI={country:{code:_.China,name:"China",native:"\u4E2D\u56FD"},id:e.ChineseSimplifiedChina,language:{code:T.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/China)",native_name:"\u4E2D\u6587 (\u4E2D\u56FD)",rtl:!1},pI={country:{code:_.HongKong,name:"Hong Kong",native:"\u9999\u6E2F"},id:e.ChineseSimplifiedHongKong,language:{code:T.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/Hong Kong)",native_name:"\u4E2D\u6587 (\u9999\u6E2F)",rtl:!1},vI={country:{code:_.Macau,name:"Macau",native:"\u6FB3\u9580"},id:e.ChineseSimplifiedMacau,language:{code:T.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/Macau)",native_name:"\u4E2D\u6587 (\u6FB3\u9580)",rtl:!1},bI={country:{code:_.Singapore,name:"Singapore",native:"\u65B0\u52A0\u5761"},id:e.ChineseSimplifiedSingapore,language:{code:T.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/Singapore)",native_name:"\u4E2D\u6587 (\u65B0\u52A0\u5761)",rtl:!1},BI={id:e.ChineseTraditional,language:{code:T.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Traditional)",native_name:"\u4E2D\u6587",rtl:!1},UI={country:{code:_.HongKong,name:"Hong Kong",native:"\u9999\u6E2F"},id:e.ChineseTraditionalHongKong,language:{code:T.Chinese,name:"Chinese (Traditional/Hong Kong)",native:"\u4E2D\u6587"},name:"Chinese (Hong Kong)",native_name:"\u4E2D\u6587 (\u9999\u6E2F)",rtl:!1},NI={country:{code:_.Macau,name:"Macau",native:"\u6FB3\u9580"},id:e.ChineseTraditionalMacau,language:{code:T.Chinese,name:"Chinese (Traditional/Macau)",native:"\u4E2D\u6587"},name:"Chinese (Macau)",native_name:"\u4E2D\u6587 (\u6FB3\u9580)",rtl:!1},DI={country:{code:_.Singapore,name:"Singapore",native:"\u65B0\u52A0\u5761"},id:e.ChineseTraditionalSingapore,language:{code:T.Chinese,name:"Chinese (Traditional/Singapore)",native:"\u4E2D\u6587"},name:"Chinese (Singapore)",native_name:"\u4E2D\u6587 (\u65B0\u52A0\u5761)",rtl:!1},PI={id:e.Croatian,language:{code:T.Croatian,name:"Croatian",native:"Hrvatski"},name:"Croatian",native_name:"Hrvatski",rtl:!1},yI={country:{code:_.BosniaAndHerzegovina,name:"Bosnia and Herzegovina",native:"Bosna i Hercegovina"},id:e.CroatianBosniaAndHerzegovina,language:{code:T.Croatian,name:"Croatian",native:"Hrvatski"},name:"Croatian (Bosnia and Herzegovina)",native_name:"Hrvatski (Bosna i Hercegovina)",rtl:!1},FI={country:{code:_.Croatia,name:"Croatia",native:"Hrvatska"},id:e.CroatianCroatia,language:{code:T.Croatian,name:"Croatian",native:"Hrvatski"},name:"Croatian (Croatia)",native_name:"Hrvatski (Hrvatska)",rtl:!1},kI={id:e.Czech,language:{code:T.Czech,name:"Czech",native:"\u010Ce\u0161tina"},name:"Czech",native_name:"\u010Ce\u0161tina",rtl:!1},MI={country:{code:_.CzechRepublic,name:"Czech Republic",native:"\u010Cesk\xE1 republika"},id:e.CzechCzechRepublic,language:{code:T.Czech,name:"Czech",native:"\u010Ce\u0161tina"},name:"Czech (Czech Republic)",native_name:"\u010Ce\u0161tina (\u010Cesk\xE1 republika)",rtl:!1},LI={id:e.Danish,language:{code:T.Danish,name:"Danish",native:"Dansk"},name:"Danish",native_name:"Dansk",rtl:!1},qI={country:{code:_.Denmark,name:"Denmark",native:"Danmark"},id:e.DanishDenmark,language:{code:T.Danish,name:"Danish",native:"Dansk"},name:"Danish (Denmark)",native_name:"Dansk (Danmark)",rtl:!1},GI={id:e.Divehi,language:{code:T.Divehi,name:"Divehi",native:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0"},name:"Divehi",native_name:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0",rtl:!0},wI={country:{code:_.Maldives,name:"Maldives",native:"\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC"},id:e.DivehiMaldives,language:{code:T.Divehi,name:"Divehi",native:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0"},name:"Divehi (Maldives)",native_name:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0 (\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC)",rtl:!0},KI={id:e.Dutch,language:{code:T.Dutch,name:"Dutch",native:"Nederlands"},name:"Dutch",native_name:"Nederlands",rtl:!1},xI={country:{code:_.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.DutchBelgium,language:{code:T.Dutch,name:"Dutch",native:"Nederlands"},name:"Dutch (Belgium)",native_name:"Nederlands (Belgi\xEB)",rtl:!1},OI={country:{code:_.Netherlands,name:"Netherlands",native:"Nederland"},id:e.DutchNetherlands,language:{code:T.Dutch,name:"Dutch",native:"Nederlands"},name:"Dutch (Netherlands)",native_name:"Nederlands (Nederland)",rtl:!1},jI={id:e.English,language:{code:T.English,name:"English",native:"English"},name:"English",native_name:"English",rtl:!1},HI={country:{code:_.Australia,name:"Australia",native:"Australia"},id:e.EnglishAustralia,language:{code:T.English,name:"English",native:"English"},name:"English (Australia)",native_name:"English (Australia)",rtl:!1},WI={country:{code:_.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.EnglishBelgium,language:{code:T.English,name:"English",native:"English"},name:"English (Belgium)",native_name:"English (Belgi\xEB)",rtl:!1},zI={country:{code:_.Canada,name:"Canada",native:"Canada"},id:e.EnglishCanada,language:{code:T.English,name:"English",native:"English"},name:"English (Canada)",native_name:"English (Canada)",rtl:!1},VI={country:{code:_.Ireland,name:"Ireland",native:"\xC9ire"},id:e.EnglishIreland,language:{code:T.English,name:"English",native:"English"},name:"English (Ireland)",native_name:"English (\xC9ire)",rtl:!1},RI={country:{code:_.Jamaica,name:"Jamaica",native:"Jamaica"},id:e.EnglishJamaica,language:{code:T.English,name:"English",native:"English"},name:"English (Jamaica)",native_name:"English (Jamaica)",rtl:!1},JI={country:{code:_.NewZealand,name:"New Zealand",native:"New Zealand"},id:e.EnglishNewZealand,language:{code:T.English,name:"English",native:"English"},name:"English (New Zealand)",native_name:"English (New Zealand)",rtl:!1},YI={country:{code:_.Philippines,name:"Philippines",native:"Philippines"},id:e.EnglishPhilippines,language:{code:T.English,name:"English",native:"English"},name:"English (Philippines)",native_name:"English (Philippines)",rtl:!1},ZI={country:{code:_.Singapore,name:"Singapore",native:"Singapore"},id:e.EnglishSingapore,language:{code:T.English,name:"English",native:"English"},name:"English (Singapore)",native_name:"English (Singapore)",rtl:!1},$I={country:{code:_.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.EnglishSouthAfrica,language:{code:T.English,name:"English",native:"English"},name:"English (South Africa)",native_name:"English (South Africa)",rtl:!1},QI={country:{code:_.TrinidadAndTobago,name:"Trinidad and Tobago",native:"Trinidad and Tobago"},id:e.EnglishTrinidadAndTobago,language:{code:T.English,name:"English",native:"English"},name:"English (Trinidad and Tobago)",native_name:"English (Trinidad and Tobago)",rtl:!1},XI={country:{code:_.UnitedKingdom,name:"United Kingdom",native:"United Kingdom"},id:e.EnglishUnitedKingdom,language:{code:T.English,name:"English",native:"English"},name:"English (United Kingdom)",native_name:"English (United Kingdom)",rtl:!1},CI={country:{code:_.UnitedStates,name:"United States",native:"United States"},id:e.EnglishUnitedStates,language:{code:T.English,name:"English",native:"English"},name:"English (United States)",native_name:"English (United States)",rtl:!1},a4={country:{code:_.Zimbabwe,name:"Zimbabwe",native:"Zimbabwe"},id:e.EnglishZimbabwe,language:{code:T.English,name:"English",native:"English"},name:"English (Zimbabwe)",native_name:"English (Zimbabwe)",rtl:!1},e4={id:e.Esperanto,language:{code:T.Esperanto,name:"Esperanto",native:"Esperanto"},name:"Esperanto",native_name:"Esperanto",rtl:!1},i4={id:e.Estonian,language:{code:T.Estonian,name:"Estonian",native:"Eesti"},name:"Estonian",native_name:"Eesti",rtl:!1},u4={country:{code:_.Estonia,name:"Estonia",native:"Eesti"},id:e.EstonianEstonia,language:{code:T.Estonian,name:"Estonian",native:"Eesti"},name:"Estonian (Estonia)",native_name:"Eesti (Eesti)",rtl:!1},n4={id:e.Faroese,language:{code:T.Faroese,name:"Faroese",native:"F\xF8royskt"},name:"Faroese",native_name:"F\xF8royskt",rtl:!1},s4={country:{code:_.FaroeIslands,name:"Faroe Islands",native:"F\xF8royar"},id:e.FaroeseFaroeIslands,language:{code:T.Faroese,name:"Faroese",native:"F\xF8royskt"},name:"Faroese (Faroe Islands)",native_name:"F\xF8royskt (F\xF8royar)",rtl:!1},r4={id:e.Farsi,language:{code:T.Farsi,name:"Farsi",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Farsi",native_name:"\u0641\u0627\u0631\u0633\u06CC",rtl:!0},t4={country:{code:_.Iran,name:"Iran",native:"\u0627\u06CC\u0631\u0627\u0646"},id:e.FarsiIran,language:{code:T.Farsi,name:"Farsi",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Farsi (Iran)",native_name:"\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)",rtl:!0},l4={id:e.Filipino,language:{code:T.Filipino,name:"Filipino",native:"Filipino"},name:"Filipino",native_name:"Filipino",rtl:!1},m4={country:{code:_.Philippines,name:"Philippines",native:"Pilipinas"},id:e.FilipinoPhilippines,language:{code:T.Filipino,name:"Filipino",native:"Filipino"},name:"Filipino (Philippines)",native_name:"Filipino (Pilipinas)",rtl:!1},c4={id:e.Finnish,language:{code:T.Finnish,name:"Finnish",native:"Suomi"},name:"Finnish",native_name:"Suomi",rtl:!1},o4={country:{code:_.Finland,name:"Finland",native:"Suomi"},id:e.FinnishFinland,language:{code:T.Finnish,name:"Finnish",native:"Suomi"},name:"Finnish (Finland)",native_name:"Suomi (Suomi)",rtl:!1},A4={id:e.French,language:{code:T.French,name:"French",native:"Fran\xE7ais"},name:"French",native_name:"Fran\xE7ais",rtl:!1},d4={country:{code:_.Belgium,name:"Belgium",native:"Belgique"},id:e.FrenchBelgium,language:{code:T.French,name:"French",native:"Fran\xE7ais"},name:"French (Belgium)",native_name:"Fran\xE7ais (Belgique)",rtl:!1},f4={country:{code:_.Canada,name:"Canada",native:"Canada"},id:e.FrenchCanada,language:{code:T.French,name:"French",native:"Fran\xE7ais"},name:"French (Canada)",native_name:"Fran\xE7ais (Canada)",rtl:!1},I4={country:{code:_.France,name:"France",native:"France"},id:e.FrenchFrance,language:{code:T.French,name:"French",native:"Fran\xE7ais"},name:"French (France)",native_name:"Fran\xE7ais (France)",rtl:!1},_4={country:{code:_.Luxembourg,name:"Luxembourg",native:"Luxembourg"},id:e.FrenchLuxembourg,language:{code:T.French,name:"French",native:"Fran\xE7ais"},name:"French (Luxembourg)",native_name:"Fran\xE7ais (Luxembourg)",rtl:!1},h4={country:{code:_.Monaco,name:"Monaco",native:"Monaco"},id:e.FrenchMonaco,language:{code:T.French,name:"French",native:"Fran\xE7ais"},name:"French (Monaco)",native_name:"Fran\xE7ais (Monaco)",rtl:!1},g4={country:{code:_.Reunion,name:"Reunion",native:"La R\xE9union"},id:e.FrenchReunion,language:{code:T.French,name:"French",native:"Fran\xE7ais"},name:"French (Reunion)",native_name:"Fran\xE7ais (La R\xE9union)",rtl:!1},E4={country:{code:_.Switzerland,name:"Switzerland",native:"Suisse"},id:e.FrenchSwitzerland,language:{code:T.French,name:"French",native:"Fran\xE7ais"},name:"French (Switzerland)",native_name:"Fran\xE7ais (Suisse)",rtl:!1},S4={id:e.Frisian,language:{code:T.Frisian,name:"Frisian",native:"Frysk"},name:"Frisian",native_name:"Frysk",rtl:!1},T4={country:{code:_.Netherlands,name:"Netherlands",native:"Nederland"},id:e.FrisianNetherlands,language:{code:T.Frisian,name:"Frisian",native:"Frysk"},name:"Frisian (Netherlands)",native_name:"Frysk (Nederland)",rtl:!1},p4={id:e.Galician,language:{code:T.Galician,name:"Galician",native:"Galego"},name:"Galician",native_name:"Galego",rtl:!1},v4={country:{code:_.Spain,name:"Spain",native:"Espa\xF1a"},id:e.GalicianSpain,language:{code:T.Galician,name:"Galician",native:"Galego"},name:"Galician (Spain)",native_name:"Galego (Espa\xF1a)",rtl:!1},b4={id:e.Georgian,language:{code:T.Georgian,name:"Georgian",native:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8"},name:"Georgian",native_name:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8",rtl:!1},B4={country:{code:_.Georgia,name:"Georgia",native:"\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD"},id:e.GeorgianGeorgia,language:{code:T.Georgian,name:"Georgian",native:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8"},name:"Georgian (Georgia)",native_name:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8 (\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD)",rtl:!1},U4={id:e.German,language:{code:T.German,name:"German",native:"Deutsch"},name:"German",native_name:"Deutsch",rtl:!1},N4={country:{code:_.Austria,name:"Austria",native:"\xD6sterreich"},id:e.GermanAustria,language:{code:T.German,name:"German",native:"Deutsch"},name:"German (Austria)",native_name:"Deutsch (\xD6sterreich)",rtl:!1},D4={country:{code:_.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.GermanBelgium,language:{code:T.German,name:"German",native:"Deutsch"},name:"German (Belgium)",native_name:"Deutsch (Belgi\xEB)",rtl:!1},P4={country:{code:_.Switzerland,name:"Switzerland",native:"Suisse"},id:e.GermanSwitzerland,language:{code:T.German,name:"German",native:"Deutsch"},name:"German (Switzerland)",native_name:"Deutsch (Suisse)",rtl:!1},y4={country:{code:_.Liechtenstein,name:"Liechtenstein",native:"Liechtenstein"},id:e.GermanLiechtenstein,language:{code:T.German,name:"German",native:"Deutsch"},name:"German (Liechtenstein)",native_name:"Deutsch (Liechtenstein)",rtl:!1},F4={country:{code:_.Luxembourg,name:"Luxembourg",native:"Luxembourg"},id:e.GermanLuxembourg,language:{code:T.German,name:"German",native:"Deutsch"},name:"German (Luxembourg)",native_name:"Deutsch (Luxembourg)",rtl:!1},k4={id:e.Greek,language:{code:T.Greek,name:"Greek",native:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC"},name:"Greek",native_name:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC",rtl:!1},M4={country:{code:_.Greece,name:"Greece",native:"\u0395\u03BB\u03BB\u03AC\u03B4\u03B1"},id:e.GreekGreece,language:{code:T.Greek,name:"Greek",native:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC"},name:"Greek (Greece)",native_name:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC (\u0395\u03BB\u03BB\u03AC\u03B4\u03B1)",rtl:!1},L4={id:e.Greenlandic,language:{code:T.Greenlandic,name:"Greenlandic",native:"Kalaallisut"},name:"Greenlandic",native_name:"Kalaallisut",rtl:!1},q4={country:{code:_.Greenland,name:"Greenland",native:"Kalaallit Nunaat"},id:e.GreenlandicGreenland,language:{code:T.Greenlandic,name:"Greenlandic",native:"Kalaallisut"},name:"Greenlandic (Greenland)",native_name:"Kalaallisut (Kalaallit Nunaat)",rtl:!1},G4={id:e.Gujarati,language:{code:T.Gujarati,name:"Gujarati",native:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0"},name:"Gujarati",native_name:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0",rtl:!1},w4={country:{code:_.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.GujaratiIndia,language:{code:T.Gujarati,name:"Gujarati",native:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0"},name:"Gujarati (India)",native_name:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0 (\u092D\u093E\u0930\u0924)",rtl:!1},K4={id:e.Hausa,language:{code:T.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E",rtl:!1},x4={country:{code:_.Ghana,name:"Ghana",native:"Ghana"},id:e.HausaGhana,language:{code:T.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa (Ghana)",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E (Ghana)",rtl:!1},O4={country:{code:_.Niger,name:"Niger",native:"Niger"},id:e.HausaNiger,language:{code:T.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa (Niger)",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E (Niger)",rtl:!1},j4={country:{code:_.Nigeria,name:"Nigeria",native:"Nigeria"},id:e.HausaNigeria,language:{code:T.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa (Nigeria)",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E (Nigeria)",rtl:!1},H4={id:e.Hebrew,language:{code:T.Hebrew,name:"Hebrew",native:"\u05E2\u05D1\u05E8\u05D9\u05EA"},name:"Hebrew",native_name:"\u05E2\u05D1\u05E8\u05D9\u05EA",rtl:!0},W4={country:{code:_.Israel,name:"Hebrew",native:""},id:e.HebrewIsrael,language:{code:T.Hebrew,name:"Hebrew",native:""},name:"Hebrew (Israel)",native_name:"",rtl:!0},z4={id:e.Hindi,language:{code:T.Hindi,name:"Hindi",native:"\u0939\u093F\u0928\u094D\u0926\u0940"},name:"Hindi",native_name:"\u0939\u093F\u0928\u094D\u0926\u0940",rtl:!1},V4={country:{code:_.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.HindiIndia,language:{code:T.Hindi,name:"Hindi",native:"\u092D\u093E\u0930\u0924\u0940\u092F"},name:"Hindi (India)",native_name:"\u092D\u093E\u0930\u0924\u0940\u092F",rtl:!1},R4={id:e.Hungarian,language:{code:T.Hungarian,name:"Hungarian",native:"Magyar"},name:"Hungarian",native_name:"Magyar",rtl:!1},J4={country:{code:_.Hungary,name:"Hungary",native:"Magyarorsz\xE1g"},id:e.HungarianHungary,language:{code:T.Hungarian,name:"Hungarian",native:"Magyar"},name:"Hungarian (Hungary)",native_name:"Magyar (Magyarorsz\xE1g)",rtl:!1},Y4={id:e.Icelandic,language:{code:T.Icelandic,name:"Icelandic",native:"\xCDslenska"},name:"Icelandic",native_name:"\xCDslenska",rtl:!1},Z4={country:{code:_.Iceland,name:"Iceland",native:"\xCDsland"},id:e.IcelandicIceland,language:{code:T.Icelandic,name:"Icelandic",native:"\xCDslenska"},name:"Icelandic (Iceland)",native_name:"\xCDslenska (\xCDsland)",rtl:!1},$4={id:e.Igbo,language:{code:T.Igbo,name:"Igbo",native:"Igbo"},name:"Igbo",native_name:"Igbo",rtl:!1},Q4={id:e.Indonesian,language:{code:T.Indonesian,name:"Indonesian",native:"Bahasa Indonesia"},name:"Indonesian",native_name:"Bahasa Indonesia",rtl:!1},X4={country:{code:_.Indonesia,name:"Indonesia",native:"Indonesia"},id:e.IndonesianIndonesia,language:{code:T.Indonesian,name:"Indonesian",native:"Bahasa Indonesia"},name:"Indonesian (Indonesia)",native_name:"Bahasa Indonesia (Indonesia)",rtl:!1},C4={id:e.Irish,language:{code:T.Irish,name:"Irish",native:"Gaeilge"},name:"Irish",native_name:"Gaeilge",rtl:!1},a_={country:{code:_.Ireland,name:"Ireland",native:"\xC9ire"},id:e.IrishIreland,language:{code:T.Irish,name:"Irish",native:"Gaeilge"},name:"Irish (Ireland)",native_name:"Gaeilge (\xC9ire)",rtl:!1},e_={id:e.Italian,language:{code:T.Italian,name:"Italian",native:"Italiano"},name:"Italian",native_name:"Italiano",rtl:!1},i_={country:{code:_.Italy,name:"Italy",native:"Italia"},id:e.ItalianItaly,language:{code:T.Italian,name:"Italian",native:"Italiano"},name:"Italian (Italy)",native_name:"Italiano (Italia)",rtl:!1},u_={country:{code:_.Switzerland,name:"Switzerland",native:"Schweiz"},id:e.ItalianSwitzerland,language:{code:T.Italian,name:"Italian",native:"Italiano"},name:"Italian (Switzerland)",native_name:"Italiano (Svizzera)",rtl:!1},n_={id:e.Japanese,language:{code:T.Japanese,name:"Japanese",native:"\u65E5\u672C\u8A9E"},name:"Japanese",native_name:"\u65E5\u672C\u8A9E",rtl:!1},s_={country:{code:_.Japan,name:"Japan",native:"\u65E5\u672C"},id:e.JapaneseJapan,language:{code:T.Japanese,name:"Japanese",native:"\u65E5\u672C\u8A9E"},name:"Japanese (Japan)",native_name:"\u65E5\u672C\u8A9E (\u65E5\u672C)",rtl:!1},r_={id:e.Kannada,language:{code:T.Kannada,name:"Kannada",native:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1"},name:"Kannada",native_name:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1",rtl:!1},t_={country:{code:_.India,name:"India",native:"\u0CAD\u0CBE\u0CB0\u0CA4"},id:e.KannadaIndia,language:{code:T.Kannada,name:"Kannada",native:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1"},name:"Kannada (India)",native_name:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1 (\u0CAD\u0CBE\u0CB0\u0CA4)",rtl:!1},l_={id:e.Kazakh,language:{code:T.Kazakh,name:"Kazakh",native:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456"},name:"Kazakh",native_name:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456",rtl:!1},m_={country:{code:_.Kazakhstan,name:"Kazakhstan",native:"\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D"},id:e.KazakhKazakhstan,language:{code:T.Kazakh,name:"Kazakh",native:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456"},name:"Kazakh (Kazakhstan)",native_name:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)",rtl:!1},c_={id:e.Khmer,language:{code:T.Khmer,name:"Khmer",native:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A"},name:"Khmer",native_name:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A",rtl:!1},o_={country:{code:_.Cambodia,name:"Cambodia",native:"\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6"},id:e.KhmerCambodia,language:{code:T.Khmer,name:"Khmer",native:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A"},name:"Khmer (Cambodia)",native_name:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A (\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6)",rtl:!1},A_={id:e.Konkani,language:{code:T.Konkani,name:"Konkani",native:"\u0915\u094B\u0902\u0915\u0923\u0940"},name:"Konkani",native_name:"\u0915\u094B\u0902\u0915\u0923\u0940",rtl:!1},d_={country:{code:_.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.KonkaniIndia,language:{code:T.Konkani,name:"Konkani",native:"\u0915\u094B\u0902\u0915\u0923\u0940"},name:"Konkani (India)",native_name:"\u0915\u094B\u0902\u0915\u0923\u0940 (\u092D\u093E\u0930\u0924)",rtl:!1},f_={id:e.Korean,language:{code:T.Korean,name:"Korean",native:"\uD55C\uAD6D\uC5B4"},name:"Korean",native_name:"\uD55C\uAD6D\uC5B4",rtl:!1},I_={country:{code:_.SouthKorea,name:"South Korea",native:"\uB300\uD55C\uBBFC\uAD6D"},id:e.KoreanSouthKorea,language:{code:T.Korean,name:"Korean",native:"\uD55C\uAD6D\uC5B4"},name:"Korean (South Korea)",native_name:"\uD55C\uAD6D\uC5B4 (\uB300\uD55C\uBBFC\uAD6D)",rtl:!1},__={id:e.Kurdish,language:{code:T.Kurdish,name:"Kurdish",native:"Kurd\xEE"},name:"Kurdish",native_name:"Kurd\xEE",rtl:!1},h_={country:{code:_.Iraq,name:"Iraq",native:"\u0627\u0644\u0639\u0631\u0627\u0642"},id:e.KurdishIraq,language:{code:T.Kurdish,name:"Kurdish",native:"Kurd\xEE"},name:"Kurdish (Iraq)",native_name:"Kurd\xEE (\u0627\u0644\u0639\u0631\u0627\u0642)",rtl:!1},g_={country:{code:_.Turkey,name:"Turkey",native:"T\xFCrkiye"},id:e.KurdishTurkey,language:{code:T.Kurdish,name:"Kurdish",native:"Kurd\xEE"},name:"Kurdish (Turkey)",native_name:"Kurd\xEE (T\xFCrkiye)",rtl:!1},E_={id:e.Kyrgyz,language:{code:T.Kyrgyz,name:"Kyrgyz",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},name:"Kyrgyz",native_name:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430",rtl:!1},S_={country:{code:_.Kyrgyzstan,name:"Kyrgyzstan",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D"},id:e.KyrgyzKyrgyzstan,language:{code:T.Kyrgyz,name:"Kyrgyz",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},name:"Kyrgyz (Kyrgyzstan)",native_name:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430 (\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D)",rtl:!1},T_={id:e.Lao,language:{code:T.Lao,name:"Lao",native:"\u0EA5\u0EB2\u0EA7"},name:"Lao",native_name:"\u0EA5\u0EB2\u0EA7",rtl:!1},p_={country:{code:_.Laos,name:"Laos",native:"\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95"},id:e.LaoLaos,language:{code:T.Lao,name:"Lao",native:"\u0EA5\u0EB2\u0EA7"},name:"Lao (Laos)",native_name:"\u0EA5\u0EB2\u0EA7 (\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95)",rtl:!1},v_={id:e.Latvian,language:{code:T.Latvian,name:"Latvian",native:"Latvie\u0161u"},name:"Latvian",native_name:"Latvie\u0161u",rtl:!1},b_={country:{code:_.Latvia,name:"Latvia",native:"Latvija"},id:e.LatvianLatvia,language:{code:T.Latvian,name:"Latvian",native:"Latvie\u0161u"},name:"Latvian (Latvia)",native_name:"Latvie\u0161u (Latvija)",rtl:!1},B_={id:e.Lithuanian,language:{code:T.Lithuanian,name:"Lithuanian",native:"Lietuvi\u0173"},name:"Lithuanian",native_name:"Lietuvi\u0173",rtl:!1},U_={country:{code:_.Lithuania,name:"Lithuania",native:"Lietuva"},id:e.LithuanianLithuania,language:{code:T.Lithuanian,name:"Lithuanian",native:"Lietuvi\u0173"},name:"Lithuanian (Lithuania)",native_name:"Lietuvi\u0173 (Lietuva)",rtl:!1},N_={id:e.Luxembourgish,language:{code:T.Luxembourgish,name:"Luxembourgish",native:"L\xEBtzebuergesch"},name:"Luxembourgish",native_name:"L\xEBtzebuergesch",rtl:!1},D_={country:{code:_.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.LuxembourgishBelgium,language:{code:T.Luxembourgish,name:"Luxembourgish",native:"L\xEBtzebuergesch"},name:"Luxembourgish (Belgium)",native_name:"L\xEBtzebuergesch (Belgi\xEB)",rtl:!1},P_={country:{code:_.Luxembourg,name:"Luxembourg",native:"Luxembourg"},id:e.LuxembourgishLuxembourg,language:{code:T.Luxembourgish,name:"Luxembourgish",native:"L\xEBtzebuergesch"},name:"Luxembourgish (Luxembourg)",native_name:"L\xEBtzebuergesch (Luxembourg)",rtl:!1},y_={id:e.Macedonian,language:{code:T.Macedonian,name:"Macedonian",native:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438"},name:"Macedonian",native_name:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438",rtl:!1},F_={country:{code:_.NorthMacedonia,name:"Macedonia",native:"\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430"},id:e.MacedonianNorthMacedonia,language:{code:T.Macedonian,name:"Macedonian",native:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438"},name:"Macedonian (North Macedonia)",native_name:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438 (\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430)",rtl:!1},k_={id:e.Malay,language:{code:T.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay",native_name:"Bahasa Melayu",rtl:!1},M_={country:{code:_.Brunei,name:"Brunei",native:"Negara Brunei Darussalam"},id:e.MalayBrunei,language:{code:T.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (Brunei)",native_name:"Bahasa Melayu (Negara Brunei Darussalam)",rtl:!1},L_={country:{code:_.Malaysia,name:"Malaysia",native:"Malaysia"},id:e.MalayMalaysia,language:{code:T.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (Malaysia)",native_name:"Bahasa Melayu (Malaysia)",rtl:!1},q_={country:{code:_.Singapore,name:"Singapore",native:"Singapore"},id:e.MalaySingapore,language:{code:T.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (Singapore)",native_name:"Bahasa Melayu (Singapore)",rtl:!1},G_={country:{code:_.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.MalayIndia,language:{code:T.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (India)",native_name:"Bahasa Melayu (\u092D\u093E\u0930\u0924)",rtl:!1},w_={id:e.Maltese,language:{code:T.Maltese,name:"Maltese",native:"Malti"},name:"Maltese",native_name:"Malti",rtl:!1},K_={country:{code:_.Malta,name:"Malta",native:"Malta"},id:e.MalteseMalta,language:{code:T.Maltese,name:"Maltese",native:"Malti"},name:"Maltese (Malta)",native_name:"Malti (Malta)",rtl:!1},x_={id:e.Maori,language:{code:T.Maori,name:"Maori",native:"M\u0101ori"},name:"Maori",native_name:"M\u0101ori",rtl:!1},O_={country:{code:_.NewZealand,name:"New Zealand",native:"New Zealand"},id:e.MaoriNewZealand,language:{code:T.Maori,name:"Maori",native:"M\u0101ori"},name:"Maori (New Zealand)",native_name:"M\u0101ori (New Zealand)",rtl:!1},j_={id:e.Marathi,language:{code:T.Marathi,name:"Marathi",native:"\u092E\u0930\u093E\u0920\u0940"},name:"Marathi",native_name:"\u092E\u0930\u093E\u0920\u0940",rtl:!1},H_={country:{code:_.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.MarathiIndia,language:{code:T.Marathi,name:"Marathi",native:"\u092E\u0930\u093E\u0920\u0940"},name:"Marathi (India)",native_name:"\u092E\u0930\u093E\u0920\u0940 (\u092D\u093E\u0930\u0924)",rtl:!1},W_={id:e.Mongolian,language:{code:T.Mongolian,name:"Mongolian",native:"\u041C\u043E\u043D\u0433\u043E\u043B"},name:"Mongolian",native_name:"\u041C\u043E\u043D\u0433\u043E\u043B",rtl:!1},z_={country:{code:_.Mongolia,name:"Mongolia",native:"\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441"},id:e.MongolianMongolia,language:{code:T.Mongolian,name:"Mongolian",native:"\u041C\u043E\u043D\u0433\u043E\u043B"},name:"Mongolian (Mongolia)",native_name:"\u041C\u043E\u043D\u0433\u043E\u043B (\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441)",rtl:!1},V_={id:e.Montenegrin,language:{code:T.Montenegrin,name:"Montenegrin",native:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A"},name:"Montenegrin",native_name:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A",rtl:!1},R_={country:{code:_.Montenegro,name:"Montenegro",native:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A"},id:e.MontenegrinMontenegro,language:{code:T.Montenegrin,name:"Montenegrin",native:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A"},name:"Montenegrin (Montenegro)",native_name:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A (\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A)",rtl:!1},J_={id:e.Nepali,language:{code:T.Nepali,name:"Nepali",native:"\u0928\u0947\u092A\u093E\u0932\u0940"},name:"Nepali",native_name:"\u0928\u0947\u092A\u093E\u0932\u0940",rtl:!1},Y_={country:{code:_.Nepal,name:"Nepal",native:"\u0928\u0947\u092A\u093E\u0932"},id:e.NepaliNepal,language:{code:T.Nepali,name:"Nepali",native:"\u0928\u0947\u092A\u093E\u0932\u0940"},name:"Nepali (Nepal)",native_name:"\u0928\u0947\u092A\u093E\u0932\u0940 (\u0928\u0947\u092A\u093E\u0932)",rtl:!1},Z_={id:e.NorthernSotho,language:{code:T.NorthernSotho,name:"Northern Sotho",native:"Sesotho sa Leboa"},name:"Northern Sotho",native_name:"Sesotho sa Leboa",rtl:!1},$_={country:{code:_.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.NorthernSothoSouthAfrica,language:{code:T.NorthernSotho,name:"Northern Sotho",native:"Sesotho sa Leboa"},name:"Northern Sotho (South Africa)",native_name:"Sesotho sa Leboa (South Africa)",rtl:!1},Q_={id:e.Norwegian,language:{code:T.Norwegian,name:"Norwegian",native:"Norsk"},name:"Norwegian",native_name:"Norsk",rtl:!1},X_={country:{code:_.Norway,name:"Norway",native:"Norge"},id:e.NorwegianBokmalNorway,language:{code:T.NorwegianBokmal,name:"Norwegian",native:"Norsk"},name:"Norwegian (Bokmal)",native_name:"Norsk (Bokm\xE5l)",rtl:!1},C_={country:{code:_.Norway,name:"Norway",native:"Norge"},id:e.NorwegianNynorskNorway,language:{code:T.NorwegianNynorsk,name:"Norwegian",native:"Norsk"},name:"Norwegian (Nynorsk)",native_name:"Norsk (Nynorsk)",rtl:!1},ah={id:e.Oriya,language:{code:T.Oriya,name:"Oriya",native:"\u0B13\u0B21\u0B3C\u0B3F\u0B06"},name:"Oriya",native_name:"\u0B13\u0B21\u0B3C\u0B3F\u0B06",rtl:!1},eh={country:{code:_.India,name:"India",native:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"},id:e.OriyaIndia,language:{code:T.Oriya,name:"Oriya",native:"\u0B13\u0B21\u0B3C\u0B3F\u0B06"},name:"Oriya (India)",native_name:"\u0B13\u0B21\u0B3C\u0B3F\u0B06 (\u0B2D\u0B3E\u0B30\u0B24)",rtl:!1},ih={id:e.Pashto,language:{code:T.Pashto,name:"Pashto",native:"\u067E\u069A\u062A\u0648"},name:"Pashto",native_name:"\u067E\u069A\u062A\u0648",rtl:!0},uh={country:{code:_.Afghanistan,name:"Afghanistan",native:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},id:e.PashtoAfghanistan,language:{code:T.Pashto,name:"Pashto",native:"\u067E\u069A\u062A\u0648"},name:"Pashto (Afghanistan)",native_name:"\u067E\u069A\u062A\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)",rtl:!0},nh={id:e.Persian,language:{code:T.Persian,name:"Persian",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Persian",native_name:"\u0641\u0627\u0631\u0633\u06CC",rtl:!0},sh={country:{code:_.Iran,name:"Iran",native:"\u0627\u06CC\u0631\u0627\u0646"},id:e.PersianIran,language:{code:T.Persian,name:"Persian",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Persian (Iran)",native_name:"\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)",rtl:!0},rh={id:e.Polish,language:{code:T.Polish,name:"Polish",native:"Polski"},name:"Polish",native_name:"Polski",rtl:!1},th={country:{code:_.Poland,name:"Poland",native:"Polska"},id:e.PolishPoland,language:{code:T.Polish,name:"Polish",native:"Polski"},name:"Polish (Poland)",native_name:"Polski (Polska)",rtl:!1},lh={id:e.Portuguese,language:{code:T.Portuguese,name:"Portuguese",native:"Portugu\xEAs"},name:"Portuguese",native_name:"Portugu\xEAs",rtl:!1},mh={country:{code:_.Brazil,name:"Brazil",native:"Brasil"},id:e.PortugueseBrazil,language:{code:T.Portuguese,name:"Portuguese",native:"Portugu\xEAs"},name:"Portuguese (Brazil)",native_name:"Portugu\xEAs (Brasil)",rtl:!1},ch={country:{code:_.Portugal,name:"Portugal",native:"Portugal"},id:e.PortuguesePortugal,language:{code:T.Portuguese,name:"Portuguese",native:"Portugu\xEAs"},name:"Portuguese (Portugal)",native_name:"Portugu\xEAs (Portugal)",rtl:!1},oh={id:e.Punjabi,language:{code:T.Punjabi,name:"Punjabi",native:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},name:"Punjabi",native_name:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40",rtl:!0},Ah={country:{code:_.Pakistan,name:"Pakistan",native:"\u067E\u0627\u06A9\u0633\u062A\u0627\u0646"},id:e.PunjabiPakistan,language:{code:T.Punjabi,name:"Punjabi",native:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},name:"Punjabi (Pakistan)",native_name:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)",rtl:!0},dh={country:{code:_.India,name:"India",native:"\u0A2D\u0A3E\u0A30\u0A24"},id:e.PunjabiIndia,language:{code:T.Punjabi,name:"Punjabi",native:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},name:"Punjabi (India)",native_name:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u0A2D\u0A3E\u0A30\u0A24)",rtl:!0},fh={id:e.Quechua,language:{code:T.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua",native_name:"Runa Simi",rtl:!1},Ih={country:{code:_.Bolivia,name:"Bolivia",native:"Bolivia"},id:e.QuechuaBolivia,language:{code:T.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua (Bolivia)",native_name:"Runa Simi (Bolivia)",rtl:!1},_h={country:{code:_.Ecuador,name:"Ecuador",native:"Ecuador"},id:e.QuechuaEcuador,language:{code:T.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua (Ecuador)",native_name:"Runa Simi (Ecuador)",rtl:!1},hh={country:{code:_.Peru,name:"Peru",native:"Per\xFA"},id:e.QuechuaPeru,language:{code:T.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua (Peru)",native_name:"Runa Simi (Per\xFA)",rtl:!1},gh={id:e.Romanian,language:{code:T.Romanian,name:"Romanian",native:"Rom\xE2n\u0103"},name:"Romanian",native_name:"Rom\xE2n\u0103",rtl:!1},Eh={country:{code:_.Romania,name:"Romania",native:"Rom\xE2nia"},id:e.RomanianRomania,language:{code:T.Romanian,name:"Romanian",native:"Rom\xE2n\u0103"},name:"Romanian (Romania)",native_name:"Rom\xE2n\u0103 (Rom\xE2nia)",rtl:!1},Sh={id:e.Russian,language:{code:T.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439",rtl:!1},Th={country:{code:_.RussianFederation,name:"Russian Federation",native:"\u0420\u043E\u0441\u0441\u0438\u044F"},id:e.RussianRussia,language:{code:T.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Russia)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0420\u043E\u0441\u0441\u0438\u044F)",rtl:!1},ph={country:{code:_.Ukraine,name:"Ukraine",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0430"},id:e.RussianUkraine,language:{code:T.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Ukraine)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)",rtl:!1},vh={country:{code:_.Kazakhstan,name:"Kazakhstan",native:"\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D"},id:e.RussianKazakhstan,language:{code:T.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Kazakhstan)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)",rtl:!1},bh={country:{code:_.Kyrgyzstan,name:"Kyrgyzstan",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},id:e.RussianKyrgyzstan,language:{code:T.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Kyrgyzstan)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430)",rtl:!1},Bh={id:e.Sanskrit,language:{code:T.Sanskrit,name:"Sanskrit",native:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D"},name:"Sanskrit",native_name:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D",rtl:!1},Uh={country:{code:_.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.SanskritIndia,language:{code:T.Sanskrit,name:"Sanskrit",native:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D"},name:"Sanskrit (India)",native_name:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D (\u092D\u093E\u0930\u0924)",rtl:!1},Nh={id:e.Sami,language:{code:T.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami",native_name:"S\xE1megiella",rtl:!1},Dh={country:{code:_.Finland,name:"Finland",native:"Suomi"},id:e.SamiFinland,language:{code:T.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami (Finland)",native_name:"S\xE1megiella (Suomi)",rtl:!1},Ph={country:{code:_.Norway,name:"Norway",native:"Norge"},id:e.SamiNorway,language:{code:T.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami (Norway)",native_name:"S\xE1megiella (Norge)",rtl:!1},yh={country:{code:_.Sweden,name:"Sweden",native:"Sverige"},id:e.SamiSweden,language:{code:T.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami (Sweden)",native_name:"S\xE1megiella (Sverige)",rtl:!1},Fh={id:e.Samoan,language:{code:T.Samoan,name:"Samoan",native:"Gagana fa\u2019a S\u0101moa"},name:"Samoan",native_name:"Gagana fa\u2019a S\u0101moa",rtl:!1},kh={country:{code:_.Samoa,name:"Samoa",native:"Samoa"},id:e.SamoanSamoa,language:{code:T.Samoan,name:"Samoan",native:"Gagana fa\u2019a S\u0101moa"},name:"Samoan (Samoa)",native_name:"Gagana fa\u2019a S\u0101moa (Samoa)",rtl:!1},Mh={id:e.Serbian,language:{code:T.Serbian,name:"Serbian (Latin)",native:"Srpski (Latinica)"},name:"Serbian (Latin)",native_name:"Srpski (Latinica)",rtl:!1},Lh={country:{code:_.BosniaAndHerzegovina,name:"Bosnia and Herzegovina",native:"Bosna i Hercegovina"},id:e.SerbianBosniaAndHerzegovina,language:{code:T.Serbian,name:"Serbian (Latin)",native:"Srpski (Latinica)"},name:"Serbian (Latin) (Bosnia and Herzegovina)",native_name:"Srpski (Latinica) (Bosna i Hercegovina)",rtl:!1},qh={country:{code:_.SerbiaAndMontenegro,name:"Serbia and Montenegro",native:"Srbija i Crna Gora"},id:e.SerbianSerbiaAndMontenegro,language:{code:T.Serbian,name:"Serbian (Latin)",native:"Srpski (Latinica)"},name:"Serbian (Latin) (Serbia and Montenegro)",native_name:"Srpski (Latinica) (Srbija i Crna Gora)",rtl:!1},Gh={id:e.SerbianCyrillic,language:{code:T.SerbianCyrillic,name:"Serbian",native:"\u0421\u0440\u043F\u0441\u043A\u0438"},name:"Serbian (Cyrillic)",native_name:"\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430)",rtl:!1},wh={country:{code:_.BosniaAndHerzegovina,name:"Bosnia and Herzegovina",native:"\u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430"},id:e.SerbianCyrillicBosniaAndHerzegovina,language:{code:T.SerbianCyrillic,name:"Serbian",native:"\u0421\u0440\u043F\u0441\u043A\u0438"},name:"Serbian (Cyrillic, Bosnia and Herzegovina)",native_name:"\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430)",rtl:!1},Kh={country:{code:_.SerbiaAndMontenegro,name:"Serbia and Montenegro",native:"\u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430"},id:e.SerbianCyrillicSerbiaAndMontenegro,language:{code:T.SerbianCyrillic,name:"Serbian",native:"\u0421\u0440\u043F\u0441\u043A\u0438"},name:"Serbian (Cyrillic, Serbia and Montenegro)",native_name:"\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430)",rtl:!1},xh={id:e.Slovak,language:{code:T.Slovak,name:"Slovak",native:"Sloven\u010Dina"},name:"Slovak",native_name:"Sloven\u010Dina",rtl:!1},Oh={country:{code:_.Slovakia,name:"Slovakia",native:"Slovensko"},id:e.SlovakSlovakia,language:{code:T.Slovak,name:"Slovak",native:"Sloven\u010Dina"},name:"Slovak (Slovakia)",native_name:"Sloven\u010Dina (Slovensko)",rtl:!1},jh={id:e.Slovenian,language:{code:T.Slovenian,name:"Slovenian",native:"Sloven\u0161\u010Dina"},name:"Slovenian",native_name:"Sloven\u0161\u010Dina",rtl:!1},Hh={country:{code:_.Slovenia,name:"Slovenia",native:"Slovenija"},id:e.SlovenianSlovenia,language:{code:T.Slovenian,name:"Slovenian",native:"Sloven\u0161\u010Dina"},name:"Slovenian (Slovenia)",native_name:"Sloven\u0161\u010Dina (Slovenija)",rtl:!1},Wh={id:e.Somali,language:{code:T.Somali,name:"Somali",native:"Soomaaliga"},name:"Somali",native_name:"Soomaaliga",rtl:!0},zh={country:{code:_.Somalia,name:"Somalia",native:"Soomaaliya"},id:e.SomaliSomalia,language:{code:T.Somali,name:"Somali",native:"Soomaaliga"},name:"Somali (Somalia)",native_name:"Soomaaliga (Soomaaliya)",rtl:!0},Vh={id:e.Spanish,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish",native_name:"Espa\xF1ol",rtl:!1},Rh={country:{code:_.Argentina,name:"Argentina",native:"Argentina"},id:e.SpanishArgentina,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Argentina)",native_name:"Espa\xF1ol (Argentina)",rtl:!1},Jh={country:{code:_.Bolivia,name:"Bolivia",native:"Bolivia"},id:e.SpanishBolivia,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Bolivia)",native_name:"Espa\xF1ol (Bolivia)",rtl:!1},Yh={country:{code:_.Chile,name:"Chile",native:"Chile"},id:e.SpanishChile,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Chile)",native_name:"Espa\xF1ol (Chile)",rtl:!1},Zh={country:{code:_.Colombia,name:"Colombia",native:"Colombia"},id:e.SpanishColombia,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Colombia)",native_name:"Espa\xF1ol (Colombia)",rtl:!1},$h={country:{code:_.CostaRica,name:"Costa Rica",native:"Costa Rica"},id:e.SpanishCostaRica,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Costa Rica)",native_name:"Espa\xF1ol (Costa Rica)",rtl:!1},Qh={country:{code:_.Cuba,name:"Cuba",native:"Cuba"},id:e.SpanishCuba,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Cuba)",native_name:"Espa\xF1ol (Cuba)",rtl:!1},Xh={country:{code:_.DominicanRepublic,name:"Dominican Republic",native:"Rep\xFAblica Dominicana"},id:e.SpanishDominicanRepublic,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Dominican Republic)",native_name:"Espa\xF1ol (Rep\xFAblica Dominicana)",rtl:!1},Ch={country:{code:_.Ecuador,name:"Ecuador",native:"Ecuador"},id:e.SpanishEcuador,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Ecuador)",native_name:"Espa\xF1ol (Ecuador)",rtl:!1},ag={country:{code:_.ElSalvador,name:"El Salvador",native:"El Salvador"},id:e.SpanishElSalvador,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (El Salvador)",native_name:"Espa\xF1ol (El Salvador)",rtl:!1},eg={country:{code:_.EquatorialGuinea,name:"Equatorial Guinea",native:"Guinea Ecuatorial"},id:e.SpanishEquatorialGuinea,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Equatorial Guinea)",native_name:"Espa\xF1ol (Guinea Ecuatorial)",rtl:!1},ig={country:{code:_.Guatemala,name:"Guatemala",native:"Guatemala"},id:e.SpanishGuatemala,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Guatemala)",native_name:"Espa\xF1ol (Guatemala)",rtl:!1},ug={country:{code:_.Honduras,name:"Honduras",native:"Honduras"},id:e.SpanishHonduras,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Honduras)",native_name:"Espa\xF1ol (Honduras)",rtl:!1},ng={country:{code:_.Mexico,name:"Mexico",native:"M\xE9xico"},id:e.SpanishMexico,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Mexico)",native_name:"Espa\xF1ol (M\xE9xico)",rtl:!1},sg={country:{code:_.Nicaragua,name:"Nicaragua",native:"Nicaragua"},id:e.SpanishNicaragua,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Nicaragua)",native_name:"Espa\xF1ol (Nicaragua)",rtl:!1},rg={country:{code:_.Panama,name:"Panama",native:"Panam\xE1"},id:e.SpanishPanama,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Panama)",native_name:"Espa\xF1ol (Panam\xE1)",rtl:!1},tg={country:{code:_.Paraguay,name:"Paraguay",native:"Paraguay"},id:e.SpanishParaguay,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Paraguay)",native_name:"Espa\xF1ol (Paraguay)",rtl:!1},lg={country:{code:_.Peru,name:"Peru",native:"Per\xFA"},id:e.SpanishPeru,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Peru)",native_name:"Espa\xF1ol (Per\xFA)",rtl:!1},mg={country:{code:_.PuertoRico,name:"Puerto Rico",native:"Puerto Rico"},id:e.SpanishPuertoRico,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Puerto Rico)",native_name:"Espa\xF1ol (Puerto Rico)",rtl:!1},cg={country:{code:_.Uruguay,name:"Uruguay",native:"Uruguay"},id:e.SpanishUruguay,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Uruguay)",native_name:"Espa\xF1ol (Uruguay)",rtl:!1},og={country:{code:_.Venezuela,name:"Venezuela",native:"Venezuela"},id:e.SpanishVenezuela,language:{code:T.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Venezuela)",native_name:"Espa\xF1ol (Venezuela)",rtl:!1},Ag={country:{code:_.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.SutuSouthAfrica,language:{code:T.Sutu,name:"Sutu",native:"Sesotho"},name:"Sutu (South Africa)",native_name:"Sesotho (Afrika Borwa)",rtl:!1},dg={id:e.Swahili,language:{code:T.Swahili,name:"Swahili",native:"Kiswahili"},name:"Swahili",native_name:"Kiswahili",rtl:!1},fg={country:{code:_.Kenya,name:"Kenya",native:"Kenya"},id:e.SwahiliKenya,language:{code:T.Swahili,name:"Swahili",native:"Kiswahili"},name:"Swahili (Kenya)",native_name:"Kiswahili (Kenya)",rtl:!1},Ig={id:e.Swedish,language:{code:T.Swedish,name:"Swedish",native:"Svenska"},name:"Swedish",native_name:"Svenska",rtl:!1},_g={country:{code:_.Finland,name:"Finland",native:"Suomi"},id:e.SwedishFinland,language:{code:T.Swedish,name:"Swedish",native:"Svenska"},name:"Swedish (Finland)",native_name:"Svenska (Finland)",rtl:!1},hg={country:{code:_.Sweden,name:"Sweden",native:"Sverige"},id:e.SwedishSweden,language:{code:T.Swedish,name:"Swedish",native:"Svenska"},name:"Swedish (Sweden)",native_name:"Svenska (Sverige)",rtl:!1},gg={id:e.Syriac,language:{code:T.Syriac,name:"Syriac",native:"\u0723\u0718\u072A\u071D\u071D\u0710"},name:"Syriac",native_name:"\u0723\u0718\u072A\u071D\u071D\u0710",rtl:!0},Eg={country:{code:_.Syria,name:"Syria",native:"\u0633\u0648\u0631\u064A\u0627"},id:e.SyriacSyria,language:{code:T.Syriac,name:"Syriac",native:"\u0723\u0718\u072A\u071D\u071D\u0710"},name:"Syriac (Syria)",native_name:"\u0723\u0718\u072A\u071D\u071D\u0710 (\u0633\u0648\u0631\u064A\u0627)",rtl:!0},Sg={id:e.Tajik,language:{code:T.Tajik,name:"Tajik",native:"\u0422\u043E\u04B7\u0438\u043A\u04E3"},name:"Tajik",native_name:"\u0422\u043E\u04B7\u0438\u043A\u04E3",rtl:!1},Tg={country:{code:_.Tajikistan,name:"Tajikistan",native:"\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D"},id:e.TajikTajikistan,language:{code:T.Tajik,name:"Tajik",native:"\u0422\u043E\u04B7\u0438\u043A\u04E3"},name:"Tajik (Tajikistan)",native_name:"\u0422\u043E\u04B7\u0438\u043A\u04E3 (\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D)",rtl:!1},pg={id:e.Tagalog,language:{code:T.Tagalog,name:"Tagalog",native:"Tagalog"},name:"Tagalog",native_name:"Tagalog",rtl:!1},vg={country:{code:_.Philippines,name:"Philippines",native:"Pilipinas"},id:e.TagalogPhilippines,language:{code:T.Tagalog,name:"Tagalog",native:"Tagalog"},name:"Tagalog (Philippines)",native_name:"Tagalog (Pilipinas)",rtl:!1},bg={id:e.Tamil,language:{code:T.Tamil,name:"Tamil",native:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD"},name:"Tamil",native_name:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD",rtl:!1},Bg={country:{code:_.India,name:"India",native:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"},id:e.TamilIndia,language:{code:T.Tamil,name:"Tamil",native:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD"},name:"Tamil (India)",native_name:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)",rtl:!1},Ug={id:e.Telugu,language:{code:T.Telugu,name:"Telugu",native:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41"},name:"Telugu",native_name:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41",rtl:!1},Ng={country:{code:_.India,name:"India",native:"\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02"},id:e.TeluguIndia,language:{code:T.Telugu,name:"Telugu",native:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41"},name:"Telugu (India)",native_name:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41 (\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02)",rtl:!1},Dg={id:e.Thai,language:{code:T.Thai,name:"Thai",native:"\u0E44\u0E17\u0E22"},name:"Thai",native_name:"\u0E44\u0E17\u0E22",rtl:!1},Pg={country:{code:_.Thailand,name:"Thailand",native:"\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22"},id:e.ThaiThailand,language:{code:T.Thai,name:"Thai",native:"\u0E44\u0E17\u0E22"},name:"Thai (Thailand)",native_name:"\u0E44\u0E17\u0E22 (\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22)",rtl:!1},yg={id:e.Tibetan,language:{code:T.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42",rtl:!1},Fg={country:{code:_.China,name:"China",native:"\u4E2D\u56FD"},id:e.TibetanChina,language:{code:T.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan (China)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42)",rtl:!1},kg={country:{code:_.Bhutan,name:"Bhutan",native:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D"},id:e.TibetanBhutan,language:{code:T.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan (Bhutan)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D)",rtl:!1},Mg={country:{code:_.India,name:"India",native:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"},id:e.TibetanIndia,language:{code:T.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan (India)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)",rtl:!1},Lg={id:e.Tsonga,language:{code:T.Tsonga,name:"Tsonga",native:"Xitsonga"},name:"Tsonga",native_name:"Xitsonga",rtl:!1},qg={id:e.Tswana,language:{code:T.Tswana,name:"Tswana",native:"Setswana"},name:"Tswana",native_name:"Setswana",rtl:!1},Gg={country:{code:_.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.TswanaSouthAfrica,language:{code:T.Tswana,name:"Tswana",native:"Setswana"},name:"Tswana (South Africa)",native_name:"Setswana (South Africa)",rtl:!1},wg={id:e.Turkish,language:{code:T.Turkish,name:"Turkish",native:"T\xFCrk\xE7e"},name:"Turkish",native_name:"T\xFCrk\xE7e",rtl:!1},Kg={country:{code:_.Turkey,name:"Turkey",native:"T\xFCrkiye"},id:e.TurkishTurkey,language:{code:T.Turkish,name:"Turkish",native:"T\xFCrk\xE7e"},name:"Turkish (Turkey)",native_name:"T\xFCrk\xE7e (T\xFCrkiye)",rtl:!1},xg={id:e.Ukrainian,language:{code:T.Ukrainian,name:"Ukrainian",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430"},name:"Ukrainian",native_name:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430",rtl:!1},Og={country:{code:_.Ukraine,name:"Ukraine",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0430"},id:e.UkrainianUkraine,language:{code:T.Ukrainian,name:"Ukrainian",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430"},name:"Ukrainian (Ukraine)",native_name:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)",rtl:!1},jg={id:e.Urdu,language:{code:T.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu",native_name:"\u0627\u0631\u062F\u0648",rtl:!0},Hg={country:{code:_.Afghanistan,name:"Afghanistan",native:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},id:e.UrduAfghanistan,language:{code:T.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu (Afghanistan)",native_name:"\u0627\u0631\u062F\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)",rtl:!0},Wg={country:{code:_.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.UrduIndia,language:{code:T.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu (India)",native_name:"\u0627\u0631\u062F\u0648 (\u092D\u093E\u0930\u0924)",rtl:!0},zg={country:{code:_.Pakistan,name:"Pakistan",native:"\u067E\u0627\u06A9\u0633\u062A\u0627\u0646"},id:e.UrduPakistan,language:{code:T.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu (Pakistan)",native_name:"\u0627\u0631\u062F\u0648 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)",rtl:!0},Vg={id:e.Uzbek,language:{code:T.Uzbek,name:"Uzbek",native:"O\u02BBzbekcha"},name:"Uzbek",native_name:"O\u02BBzbekcha",rtl:!1},Rg={country:{code:_.Uzbekistan,name:"Uzbekistan",native:"O\u02BBzbekiston"},id:e.UzbekUzbekistan,language:{code:T.Uzbek,name:"Uzbek",native:"O\u02BBzbekcha"},name:"Uzbek (Latin, Uzbekistan)",native_name:"O\u02BBzbekcha (O\u02BBzbekiston)",rtl:!1},Jg={country:{code:_.Uzbekistan,name:"Uzbekistan",native:"\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D"},id:e.UzbekCyrillic,language:{code:T.Uzbek,name:"Uzbek",native:"\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D"},name:"Uzbek (Cyrillic)",native_name:"\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D (\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D)",rtl:!1},Yg={id:e.Vietnamese,language:{code:T.Vietnamese,name:"Vietnamese",native:"Ti\u1EBFng Vi\u1EC7t"},name:"Vietnamese",native_name:"Ti\u1EBFng Vi\u1EC7t",rtl:!1},Zg={country:{code:_.Vietnam,name:"Vietnam",native:"Vi\u1EC7t Nam"},id:e.VietnameseVietnam,language:{code:T.Vietnamese,name:"Vietnamese",native:"Ti\u1EBFng Vi\u1EC7t"},name:"Vietnamese (Vietnam)",native_name:"Ti\u1EBFng Vi\u1EC7t (Vi\u1EC7t Nam)",rtl:!1},$g={id:e.Welsh,language:{code:T.Welsh,name:"Welsh",native:"Cymraeg"},name:"Welsh",native_name:"Cymraeg",rtl:!1},Qg={country:{code:_.UnitedKingdom,name:"United Kingdom",native:"United Kingdom"},id:e.WelshUnitedKingdom,language:{code:T.Welsh,name:"Welsh",native:"Cymraeg"},name:"Welsh (United Kingdom)",native_name:"Cymraeg (United Kingdom)",rtl:!1},Xg={id:e.Xhosa,language:{code:T.Xhosa,name:"Xhosa",native:"isiXhosa"},name:"Xhosa",native_name:"isiXhosa",rtl:!1},Cg={country:{code:_.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.XhosaSouthAfrica,language:{code:T.Xhosa,name:"Xhosa",native:"isiXhosa"},name:"Xhosa (South Africa)",native_name:"isiXhosa (South Africa)",rtl:!1},aE={id:e.Yiddish,language:{code:T.Yiddish,name:"Yiddish",native:"\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9"},name:"Yiddish",native_name:"\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9",rtl:!1},eE={id:e.Yoruba,language:{code:T.Yoruba,name:"Yoruba",native:"Yor\xF9b\xE1"},name:"Yoruba",native_name:"Yor\xF9b\xE1",rtl:!1},iE={country:{code:_.Nigeria,name:"Nigeria",native:"Nigeria"},id:e.YorubaNigeria,language:{code:T.Yoruba,name:"Yoruba",native:"Yor\xF9b\xE1"},name:"Yoruba (Nigeria)",native_name:"Yor\xF9b\xE1 (Nigeria)",rtl:!1},uE={id:e.Zulu,language:{code:T.Zulu,name:"Zulu",native:"isiZulu"},name:"Zulu",native_name:"isiZulu",rtl:!1},nE={country:{code:_.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.ZuluSouthAfrica,language:{code:T.Zulu,name:"Zulu",native:"isiZulu"},name:"Zulu (South Africa)",native_name:"isiZulu (South Africa)",rtl:!1},sE={id:d.AfricaAbidjan,name:"Africa/Abidjan",offset:t.UTC_0,timezone:l.CoordinatedUniversalTime},rE={id:d.AfricaAccra,name:"Africa/Accra",offset:t.UTC_0,timezone:l.CoordinatedUniversalTime},tE={id:d.AfricaAddisAbaba,name:"Africa/Addis_Ababa",offset:t.UTC_PLUS_3,timezone:l.EastAfricaTime},lE={id:d.AfricaAlgiers,name:"Africa/Algiers",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},mE={id:d.AfricaAsmara,name:"Africa/Asmara",offset:t.UTC_PLUS_3,timezone:l.EastAfricaTime},cE={id:d.AfricaBamako,name:"Africa/Bamako",offset:t.UTC_0,timezone:l.CoordinatedUniversalTime},oE={id:d.AfricaBangui,name:"Africa/Bangui",offset:t.UTC_PLUS_1,timezone:l.WestAfricaTime},AE={id:d.AfricaBanjul,name:"Africa/Banjul",offset:t.UTC_0,timezone:l.CoordinatedUniversalTime},dE={id:d.AfricaBissau,name:"Africa/Bissau",offset:t.UTC_0,timezone:l.CoordinatedUniversalTime},fE={id:d.AfricaBlantyre,name:"Africa/Blantyre",offset:t.UTC_PLUS_2,timezone:l.CentralAfricaTime},IE={id:d.AfricaBrazzaville,name:"Africa/Brazzaville",offset:t.UTC_PLUS_1,timezone:l.WestAfricaTime},_E={id:d.AfricaBujumbura,name:"Africa/Bujumbura",offset:t.UTC_PLUS_2,timezone:l.CentralAfricaTime},hE={id:d.AfricaCairo,name:"Africa/Cairo",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},gE={id:d.AfricaCasablanca,name:"Africa/Casablanca",offset:t.UTC_PLUS_1,timezone:l.WesternEuropeanTime},EE={id:d.AfricaCeuta,name:"Africa/Ceuta",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},SE={id:d.AfricaConakry,name:"Africa/Conakry",offset:t.UTC_0,timezone:l.CoordinatedUniversalTime},TE={id:d.AfricaDakar,name:"Africa/Dakar",offset:t.UTC_0,timezone:l.CoordinatedUniversalTime},pE={id:d.AfricaDarEsSalaam,name:"Africa/Dar_es_Salaam",offset:t.UTC_PLUS_3,timezone:l.EastAfricaTime},vE={id:d.AfricaDjibouti,name:"Africa/Djibouti",offset:t.UTC_PLUS_3,timezone:l.EastAfricaTime},bE={id:d.AfricaDouala,name:"Africa/Douala",offset:t.UTC_PLUS_1,timezone:l.WestAfricaTime},BE={id:d.AfricaElAaiun,name:"Africa/El_Aaiun",offset:t.UTC_PLUS_1,timezone:l.WestAfricaTime},UE={id:d.AfricaFreetown,name:"Africa/Freetown",offset:t.UTC_0,timezone:l.CoordinatedUniversalTime},NE={id:d.AfricaGaborone,name:"Africa/Gaborone",offset:t.UTC_PLUS_2,timezone:l.CentralAfricaTime},DE={id:d.AfricaHarare,name:"Africa/Harare",offset:t.UTC_PLUS_2,timezone:l.CentralAfricaTime},PE={id:d.AfricaJohannesburg,name:"Africa/Johannesburg",offset:t.UTC_PLUS_2,timezone:l.SouthAfricanStandardTime},yE={id:d.AfricaJuba,name:"Africa/Juba",offset:t.UTC_PLUS_3,timezone:l.EastAfricaTime},FE={id:d.AfricaKampala,name:"Africa/Kampala",offset:t.UTC_PLUS_3,timezone:l.EastAfricaTime},kE={id:d.AfricaKhartoum,name:"Africa/Khartoum",offset:t.UTC_PLUS_2,timezone:l.EastAfricaTime},ME={id:d.AfricaKigali,name:"Africa/Kigali",offset:t.UTC_PLUS_2,timezone:l.CentralAfricaTime},LE={id:d.AfricaKinshasa,name:"Africa/Kinshasa",offset:t.UTC_PLUS_1,timezone:l.WestAfricaTime},qE={id:d.AfricaLagos,name:"Africa/Lagos",offset:t.UTC_PLUS_1,timezone:l.WestAfricaTime},GE={id:d.AfricaLibreville,name:"Africa/Libreville",offset:t.UTC_PLUS_1,timezone:l.WestAfricaTime},wE={id:d.AfricaLome,name:"Africa/Lome",offset:t.UTC_0,timezone:l.CoordinatedUniversalTime},KE={id:d.AfricaLuanda,name:"Africa/Luanda",offset:t.UTC_PLUS_1,timezone:l.WestAfricaTime},xE={id:d.AfricaLubumbashi,name:"Africa/Lubumbashi",offset:t.UTC_PLUS_2,timezone:l.CentralAfricaTime},OE={id:d.AfricaLusaka,name:"Africa/Lusaka",offset:t.UTC_PLUS_2,timezone:l.CentralAfricaTime},jE={id:d.AfricaMalabo,name:"Africa/Malabo",offset:t.UTC_PLUS_1,timezone:l.WestAfricaTime},HE={id:d.AfricaMaputo,name:"Africa/Maputo",offset:t.UTC_PLUS_2,timezone:l.CentralAfricaTime},WE={id:d.AfricaMaseru,name:"Africa/Maseru",offset:t.UTC_PLUS_2,timezone:l.SouthAfricanStandardTime},zE={id:d.AfricaMbabane,name:"Africa/Mbabane",offset:t.UTC_PLUS_2,timezone:l.SouthAfricanStandardTime},VE={id:d.AfricaMogadishu,name:"Africa/Mogadishu",offset:t.UTC_PLUS_3,timezone:l.EastAfricaTime},RE={id:d.AfricaMonrovia,name:"Africa/Monrovia",offset:t.UTC_0,timezone:l.CoordinatedUniversalTime},JE={id:d.AfricaNairobi,name:"Africa/Nairobi",offset:t.UTC_PLUS_3,timezone:l.EastAfricaTime},YE={id:d.AfricaNdjamena,name:"Africa/Ndjamena",offset:t.UTC_PLUS_1,timezone:l.WestAfricaTime},ZE={id:d.AfricaNiamey,name:"Africa/Niamey",offset:t.UTC_PLUS_1,timezone:l.WestAfricaTime},$E={id:d.AfricaNouakchott,name:"Africa/Nouakchott",offset:t.UTC_0,timezone:l.GreenwichMeanTime},QE={id:d.AfricaOuagadougou,name:"Africa/Ouagadougou",offset:t.UTC_0,timezone:l.CoordinatedUniversalTime},XE={id:d.AfricaPortoNovo,name:"Africa/Porto-Novo",offset:t.UTC_PLUS_1,timezone:l.WestAfricaTime},CE={id:d.AfricaSaoTome,name:"Africa/SaoTome",offset:t.UTC_0,timezone:l.CoordinatedUniversalTime},aS={id:d.AfricaTripoli,name:"Africa/Tripoli",offset:t.UTC_0,timezone:l.CoordinatedUniversalTime},eS={id:d.AfricaTunis,name:"Africa/Tunis",offset:t.UTC_0,timezone:l.CoordinatedUniversalTime},iS={id:d.AfricaWindhoek,name:"Africa/Windhoek",offset:t.UTC_PLUS_2,timezone:l.WestAfricaTime},uS={id:d.AmericaAdak,name:"America/Adak",offset:t.UTC_PLUS_10,timezone:l.HawaiiAleutianStandardTime},nS={id:d.AmericaAnchorage,name:"America/Anchorage",offset:t.UTC_PLUS_9,timezone:l.AlaskaStandardTime},sS={id:d.AmericaAnguilla,name:"America/Anguilla",offset:t.UTC_0,timezone:l.AtlanticStandardTime},rS={id:d.AmericaAntigua,name:"America/Antigua",offset:t.UTC_0,timezone:l.AtlanticStandardTime},tS={id:d.AmericaAraguaina,name:"America/Araguaina",offset:t.UTC_MINUS_3,timezone:l.BrasiliaTime},lS={id:d.AmericaArgentinaBuenosAires,name:"America/Argentina/Buenos_Aires",offset:t.UTC_MINUS_3,timezone:l.ArgentinaTime},mS={id:d.AmericaArgentinaCatamarca,name:"America/Argentina/Catamarca",offset:t.UTC_MINUS_3,timezone:l.ArgentinaTime},cS={id:d.AmericaArgentinaCordoba,name:"America/Argentina/Cordoba",offset:t.UTC_MINUS_3,timezone:l.ArgentinaTime},oS={id:d.AmericaArgentinaJujuy,name:"America/Argentina/Jujuy",offset:t.UTC_MINUS_3,timezone:l.ArgentinaTime},AS={id:d.AmericaArgentinaLaRioja,name:"America/Argentina/La_Rioja",offset:t.UTC_MINUS_3,timezone:l.ArgentinaTime},dS={id:d.AmericaArgentinaMendoza,name:"America/Argentina/Mendoza",offset:t.UTC_MINUS_3,timezone:l.ArgentinaTime},fS={id:d.AmericaArgentinaRioGallegos,name:"America/Argentina/Rio_Gallegos",offset:t.UTC_MINUS_3,timezone:l.ArgentinaTime},IS={id:d.AmericaArgentinaSalta,name:"America/Argentina/Salta",offset:t.UTC_MINUS_3,timezone:l.ArgentinaTime},_S={id:d.AmericaArgentinaSanJuan,name:"America/Argentina/San_Juan",offset:t.UTC_MINUS_3,timezone:l.ArgentinaTime},hS={id:d.AmericaArgentinaSanLuis,name:"America/Argentina/San_Luis",offset:t.UTC_MINUS_3,timezone:l.ArgentinaTime},gS={id:d.AmericaArgentinaTucuman,name:"America/Argentina/Tucuman",offset:t.UTC_MINUS_3,timezone:l.ArgentinaTime},ES={id:d.AmericaArgentinaUshuaia,name:"America/Argentina/Ushuaia",offset:t.UTC_MINUS_3,timezone:l.ArgentinaTime},SS={id:d.AmericaAruba,name:"America/Aruba",offset:t.UTC_0,timezone:l.AtlanticStandardTime},TS={id:d.AmericaAsuncion,name:"America/Asuncion",offset:t.UTC_MINUS_4,timezone:l.ParaguayTime},pS={id:d.AmericaAtikokan,name:"America/Atikokan",offset:t.UTC_0,timezone:l.EasternStandardTime},vS={id:d.AmericaAtka,name:"America/Atka",offset:t.UTC_MINUS_10,timezone:l.HawaiiAleutianStandardTime},bS={id:d.AmericaBahia,name:"America/Bahia",offset:t.UTC_MINUS_3,timezone:l.BrasiliaTime},BS={id:d.AmericaBahiaBanderas,name:"America/Bahia_Banderas",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},US={id:d.AmericaBarbados,name:"America/Barbados",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},NS={id:d.AmericaBelem,name:"America/Belem",offset:t.UTC_MINUS_3,timezone:l.BrasiliaTime},DS={id:d.AmericaBelize,name:"America/Belize",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},PS={id:d.AmericaBlancSablon,name:"America/Blanc-Sablon",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},yS={id:d.AmericaBoaVista,name:"America/Boa_Vista",offset:t.UTC_MINUS_4,timezone:l.AmazonTime},FS={id:d.AmericaBogota,name:"America/Bogota",offset:t.UTC_MINUS_5,timezone:l.ColombiaTime},kS={id:d.AmericaBoise,name:"America/Boise",offset:t.UTC_MINUS_7,timezone:l.MountainStandardTime},MS={id:d.AmericaCambridgeBay,name:"America/Cambridge_Bay",offset:t.UTC_MINUS_7,timezone:l.MountainStandardTime},LS={id:d.AmericaCampoGrande,name:"America/Campo_Grande",offset:t.UTC_MINUS_4,timezone:l.AmazonTime},qS={id:d.AmericaCancun,name:"America/Cancun",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},GS={id:d.AmericaCaracas,name:"America/Caracas",offset:t.UTC_MINUS_4,timezone:l.VenezuelaStandardTime},wS={id:d.AmericaCayenne,name:"America/Cayenne",offset:t.UTC_MINUS_3,timezone:l.FrenchGuianaTime},KS={id:d.AmericaCayman,name:"America/Cayman",offset:t.UTC_0,timezone:l.AtlanticStandardTime},xS={id:d.AmericaChicago,name:"America/Chicago",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},OS={id:d.AmericaChihuahua,name:"America/Chihuahua",offset:t.UTC_MINUS_7,timezone:l.MountainStandardTime},jS={id:d.AmericaCoralHarbour,name:"America/Coral_Harbour",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},HS={id:d.AmericaCordoba,name:"America/Cordoba",offset:t.UTC_MINUS_3,timezone:l.ArgentinaTime},WS={id:d.AmericaCostaRica,name:"America/Costa_Rica",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},zS={id:d.AmericaCreston,name:"America/Creston",offset:t.UTC_MINUS_7,timezone:l.MountainStandardTime},VS={id:d.AmericaCuiaba,name:"America/Cuiaba",offset:t.UTC_MINUS_4,timezone:l.AmazonTime},RS={id:d.AmericaCuracao,name:"America/Curacao",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},JS={id:d.AmericaDanmarkshavn,name:"America/Danmarkshavn",offset:t.UTC_0,timezone:l.GreenwichMeanTime},YS={id:d.AmericaDawson,name:"America/Dawson",offset:t.UTC_MINUS_8,timezone:l.PacificStandardTime},ZS={id:d.AmericaDawsonCreek,name:"America/Dawson_Creek",offset:t.UTC_MINUS_8,timezone:l.PacificStandardTime},$S={id:d.AmericaDenver,name:"America/Denver",offset:t.UTC_MINUS_7,timezone:l.MountainStandardTime},QS={id:d.AmericaDetroit,name:"America/Detroit",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},XS={id:d.AmericaDominica,name:"America/Dominica",offset:t.UTC_0,timezone:l.AtlanticStandardTime},CS={id:d.AmericaEdmonton,name:"America/Edmonton",offset:t.UTC_MINUS_7,timezone:l.MountainStandardTime},a3={id:d.AmericaEirunepe,name:"America/Eirunepe",offset:t.UTC_MINUS_5,timezone:l.AcreTime},e3={id:d.AmericaElSalvador,name:"America/El_Salvador",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},i3={id:d.AmericaFortaleza,name:"America/Fortaleza",offset:t.UTC_MINUS_3,timezone:l.BrasiliaTime},u3={id:d.AmericaGlaceBay,name:"America/Glace_Bay",offset:t.UTC_0,timezone:l.AtlanticStandardTime},n3={id:d.AmericaGodthab,name:"America/Godthab",offset:t.UTC_MINUS_3,timezone:l.WestGreenlandTime},s3={id:d.AmericaGooseBay,name:"America/Goose_Bay",offset:t.UTC_0,timezone:l.AtlanticStandardTime},r3={id:d.AmericaGrandTurk,name:"America/Grand_Turk",offset:t.UTC_0,timezone:l.AtlanticStandardTime},t3={id:d.AmericaGrenada,name:"America/Grenada",offset:t.UTC_0,timezone:l.AtlanticStandardTime},l3={id:d.AmericaGuadeloupe,name:"America/Guadeloupe",offset:t.UTC_0,timezone:l.AtlanticStandardTime},m3={id:d.AmericaGuatemala,name:"America/Guatemala",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},c3={id:d.AmericaGuayaquil,name:"America/Guayaquil",offset:t.UTC_MINUS_5,timezone:l.EcuadorTime},o3={id:d.AmericaGuyana,name:"America/Guyana",offset:t.UTC_0,timezone:l.AtlanticStandardTime},A3={id:d.AmericaHalifax,name:"America/Halifax",offset:t.UTC_0,timezone:l.AtlanticStandardTime},d3={id:d.AmericaHavana,name:"America/Havana",offset:t.UTC_MINUS_5,timezone:l.CubaStandardTime},f3={id:d.AmericaHermosillo,name:"America/Hermosillo",offset:t.UTC_MINUS_7,timezone:l.MountainStandardTime},I3={id:d.AmericaIndianaIndianapolis,name:"America/Indiana/Indianapolis",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},_3={id:d.AmericaIndianaKnox,name:"America/Indiana/Knox",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},h3={id:d.AmericaIndianaMarengo,name:"America/Indiana/Marengo",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},g3={id:d.AmericaIndianaPetersburg,name:"America/Indiana/Petersburg",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},E3={id:d.AmericaIndianaTellCity,name:"America/Indiana/Tell_City",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},S3={id:d.AmericaIndianaVevay,name:"America/Indiana/Vevay",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},T3={id:d.AmericaIndianaVincennes,name:"America/Indiana/Vincennes",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},p3={id:d.AmericaIndianaWinamac,name:"America/Indiana/Winamac",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},v3={id:d.AmericaInuvik,name:"America/Inuvik",offset:t.UTC_MINUS_7,timezone:l.MountainStandardTime},b3={id:d.AmericaIqaluit,name:"America/Iqaluit",offset:t.UTC_0,timezone:l.EasternStandardTime},B3={id:d.AmericaJamaica,name:"America/Jamaica",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},U3={id:d.AmericaJuneau,name:"America/Juneau",offset:t.UTC_MINUS_9,timezone:l.AlaskaStandardTime},N3={id:d.AmericaKentuckyLouisville,name:"America/Kentucky/Louisville",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},D3={id:d.AmericaKentuckyMonticello,name:"America/Kentucky/Monticello",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},P3={id:d.AmericaKralendijk,name:"America/Kralendijk",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},y3={id:d.AmericaLaPaz,name:"America/La_Paz",offset:t.UTC_MINUS_4,timezone:l.BoliviaTime},F3={id:d.AmericaLima,name:"America/Lima",offset:t.UTC_MINUS_5,timezone:l.PeruTime},k3={id:d.AmericaLosAngeles,name:"America/Los_Angeles",offset:t.UTC_MINUS_8,timezone:l.PacificStandardTime},M3={id:d.AmericaLouisville,name:"America/Louisville",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},L3={id:d.AmericaLowerPrinces,name:"America/Lower_Princes",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},q3={id:d.AmericaMaceio,name:"America/Maceio",offset:t.UTC_MINUS_3,timezone:l.BrasiliaTime},G3={id:d.AmericaManagua,name:"America/Managua",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},w3={id:d.AmericaManaus,name:"America/Manaus",offset:t.UTC_MINUS_4,timezone:l.AmazonTime},K3={id:d.AmericaMarigot,name:"America/Marigot",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},x3={id:d.AmericaMartinique,name:"America/Martinique",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},O3={id:d.AmericaMatamoros,name:"America/Matamoros",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},j3={id:d.AmericaMazatlan,name:"America/Mazatlan",offset:t.UTC_MINUS_7,timezone:l.MountainStandardTime},H3={id:d.AmericaMenominee,name:"America/Menominee",offset:t.UTC_MINUS_5,timezone:l.CentralStandardTime},W3={id:d.AmericaMerida,name:"America/Merida",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},z3={id:d.AmericaMetlakatla,name:"America/Metlakatla",offset:t.UTC_MINUS_9,timezone:l.AlaskaStandardTime},V3={id:d.AmericaMexicoCity,name:"America/Mexico_City",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},R3={id:d.AmericaMiquelon,name:"America/Miquelon",offset:t.UTC_MINUS_3,timezone:l.SaintPierreAndMiquelonStandardTime},J3={id:d.AmericaMoncton,name:"America/Moncton",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},Y3={id:d.AmericaMonterrey,name:"America/Monterrey",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},Z3={id:d.AmericaMontevideo,name:"America/Montevideo",offset:t.UTC_MINUS_3,timezone:l.UruguayStandardTime},$3={id:d.AmericaMontreal,name:"America/Montreal",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},Q3={id:d.AmericaMontserrat,name:"America/Montserrat",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},X3={id:d.AmericaNassau,name:"America/Nassau",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},C3={id:d.AmericaNewYork,name:"America/New_York",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},aT={id:d.AmericaNipigon,name:"America/Nipigon",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},eT={id:d.AmericaNome,name:"America/Nome",offset:t.UTC_MINUS_9,timezone:l.AlaskaStandardTime},iT={id:d.AmericaNoronha,name:"America/Noronha",offset:t.UTC_MINUS_2,timezone:l.FernandoDeNoronhaTime},uT={id:d.AmericaNorthDakotaBeulah,name:"America/North_Dakota/Beulah",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},nT={id:d.AmericaNorthDakotaCenter,name:"America/North_Dakota/Center",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},sT={id:d.AmericaNorthDakotaNewSalem,name:"America/North_Dakota/New_Salem",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},rT={id:d.AmericaOjinaga,name:"America/Ojinaga",offset:t.UTC_MINUS_7,timezone:l.MountainStandardTime},tT={id:d.AmericaPanama,name:"America/Panama",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},lT={id:d.AmericaPangnirtung,name:"America/Pangnirtung",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},mT={id:d.AmericaParamaribo,name:"America/Paramaribo",offset:t.UTC_MINUS_3,timezone:l.SurinameTime},cT={id:d.AmericaPhoenix,name:"America/Phoenix",offset:t.UTC_MINUS_7,timezone:l.MountainStandardTime},oT={id:d.AmericaPortAuPrince,name:"America/Port-au-Prince",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},AT={id:d.AmericaPortOfSpain,name:"America/Port_of_Spain",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},dT={id:d.AmericaPortoVelho,name:"America/Porto_Velho",offset:t.UTC_MINUS_4,timezone:l.AmazonTime},fT={id:d.AmericaPuertoRico,name:"America/Puerto_Rico",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},IT={id:d.AmericaRainyRiver,name:"America/Rainy_River",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},_T={id:d.AmericaRankinInlet,name:"America/Rankin_Inlet",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},hT={id:d.AmericaRecife,name:"America/Recife",offset:t.UTC_MINUS_3,timezone:l.BrasiliaTime},gT={id:d.AmericaRegina,name:"America/Regina",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},ET={id:d.AmericaResolute,name:"America/Resolute",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},ST={id:d.AmericaRioBranco,name:"America/Rio_Branco",offset:t.UTC_MINUS_5,timezone:l.AcreTime},TT={id:d.AmericaSantaIsabel,name:"America/Santa_Isabel",offset:t.UTC_MINUS_8,timezone:l.PacificStandardTime},pT={id:d.AmericaSantarem,name:"America/Santarem",offset:t.UTC_MINUS_3,timezone:l.BrasiliaTime},vT={id:d.AmericaSantiago,name:"America/Santiago",offset:t.UTC_MINUS_4,timezone:l.ChileStandardTime},bT={id:d.AmericaSantoDomingo,name:"America/Santo_Domingo",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},BT={id:d.AmericaSaoPaulo,name:"America/Sao_Paulo",offset:t.UTC_MINUS_3,timezone:l.BrasiliaTime},UT={id:d.AmericaScoresbysund,name:"America/Scoresbysund",offset:t.UTC_MINUS_1,timezone:l.EasternGreenlandTime},NT={id:d.AmericaShiprock,name:"America/Shiprock",offset:t.UTC_MINUS_7,timezone:l.MountainStandardTime},DT={id:d.AmericaSitka,name:"America/Sitka",offset:t.UTC_MINUS_9,timezone:l.AlaskaStandardTime},PT={id:d.AmericaStBarthelemy,name:"America/St_Barthelemy",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},yT={id:d.AmericaStJohns,name:"America/St_Johns",offset:t.UTC_MINUS_3,timezone:l.NewfoundlandStandardTime},FT={id:d.AmericaStKitts,name:"America/St_Kitts",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},kT={id:d.AmericaStLucia,name:"America/St_Lucia",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},MT={id:d.AmericaStThomas,name:"America/St_Thomas",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},LT={id:d.AmericaStVincent,name:"America/St_Vincent",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},qT={id:d.AmericaSwiftCurrent,name:"America/Swift_Current",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},GT={id:d.AmericaTegucigalpa,name:"America/Tegucigalpa",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},wT={id:d.AmericaThule,name:"America/Thule",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},KT={id:d.AmericaThunderBay,name:"America/Thunder_Bay",offset:t.UTC_MINUS_4,timezone:l.EasternStandardTime},xT={id:d.AmericaTijuana,name:"America/Tijuana",offset:t.UTC_MINUS_8,timezone:l.PacificStandardTime},OT={id:d.AmericaToronto,name:"America/Toronto",offset:t.UTC_MINUS_5,timezone:l.EasternStandardTime},jT={id:d.AmericaTortola,name:"America/Tortola",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},HT={id:d.AmericaVancouver,name:"America/Vancouver",offset:t.UTC_MINUS_8,timezone:l.PacificStandardTime},WT={id:d.AmericaWhitehorse,name:"America/Whitehorse",offset:t.UTC_MINUS_8,timezone:l.PacificStandardTime},zT={id:d.AmericaWinnipeg,name:"America/Winnipeg",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},VT={id:d.AmericaYakutat,name:"America/Yakutat",offset:t.UTC_MINUS_9,timezone:l.AlaskaStandardTime},RT={id:d.AmericaYellowknife,name:"America/Yellowknife",offset:t.UTC_MINUS_6,timezone:l.MountainStandardTime},JT={id:d.AntarcticaCasey,name:"Antarctica/Casey",offset:t.UTC_MINUS_8,timezone:l.WesternStandardTime},YT={id:d.AntarcticaDavis,name:"Antarctica/Davis",offset:t.UTC_MINUS_7,timezone:l.NewfoundlandStandardTime},ZT={id:d.AntarcticaDumontDUrville,name:"Antarctica/DumontDUrville",offset:t.UTC_MINUS_10,timezone:l.CentralStandardTime},$T={id:d.AntarcticaMacquarie,name:"Antarctica/Macquarie",offset:t.UTC_MINUS_11,timezone:l.CentralStandardTime},QT={id:d.AntarcticaMawson,name:"Antarctica/Mawson",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},XT={id:d.AntarcticaMcMurdo,name:"Antarctica/McMurdo",offset:t.UTC_MINUS_12,timezone:l.NewZealandStandardTime},CT={id:d.AntarcticaPalmer,name:"Antarctica/Palmer",offset:t.UTC_MINUS_4,timezone:l.ChathamStandardTime},ap={id:d.AntarcticaRothera,name:"Antarctica/Rothera",offset:t.UTC_MINUS_3,timezone:l.RotheraResearchStationTime},ep={id:d.AntarcticaSyowa,name:"Antarctica/Syowa",offset:t.UTC_MINUS_3,timezone:l.ShowaStationTime},ip={id:d.AntarcticaTroll,name:"Antarctica/Troll",offset:t.UTC_MINUS_2,timezone:l.CentralStandardTime},up={id:d.AntarcticaVostok,name:"Antarctica/Vostok",offset:t.UTC_MINUS_6,timezone:l.CentralStandardTime},np={id:d.ArcticLongyearbyen,name:"Arctic/Longyearbyen",offset:t.UTC_MINUS_1,timezone:l.CentralEuropeanTime},sp={id:d.AsiaAden,name:"Asia/Aden",offset:t.UTC_PLUS_3,timezone:l.ArabiaStandardTime},rp={id:d.AsiaAlmaty,name:"Asia/Almaty",offset:t.UTC_PLUS_6,timezone:l.AlmaAtaTime},tp={id:d.AsiaAmman,name:"Asia/Amman",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},lp={id:d.AsiaAnadyr,name:"Asia/Anadyr",offset:t.UTC_PLUS_12,timezone:l.NewCaledoniaTime},mp={id:d.AsiaAqtau,name:"Asia/Aqtau",offset:t.UTC_PLUS_5,timezone:l.AqtobeTime},cp={id:d.AsiaAqtobe,name:"Asia/Aqtobe",offset:t.UTC_PLUS_5,timezone:l.AqtobeTime},op={id:d.AsiaAshgabat,name:"Asia/Ashgabat",offset:t.UTC_PLUS_5,timezone:l.TurkmenistanTime},Ap={id:d.AsiaBaghdad,name:"Asia/Baghdad",offset:t.UTC_PLUS_3,timezone:l.ArabiaStandardTime},dp={id:d.AsiaBahrain,name:"Asia/Bahrain",offset:t.UTC_PLUS_3,timezone:l.ArabiaStandardTime},fp={id:d.AsiaBaku,name:"Asia/Baku",offset:t.UTC_PLUS_4,timezone:l.AzerbaijanTime},Ip={id:d.AsiaBangkok,name:"Asia/Bangkok",offset:t.UTC_PLUS_7,timezone:l.IndochinaTime},_p={id:d.AsiaBarnaul,name:"Asia/Barnaul",offset:t.UTC_PLUS_7,timezone:l.KrasnoyarskTime},hp={id:d.AsiaBeirut,name:"Asia/Beirut",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},gp={id:d.AsiaBishkek,name:"Asia/Bishkek",offset:t.UTC_PLUS_6,timezone:l.KyrgyzstanTime},Ep={id:d.AsiaBrunei,name:"Asia/Brunei",offset:t.UTC_PLUS_8,timezone:l.BruneiTime},Sp={id:d.AsiaChita,name:"Asia/Chita",offset:t.UTC_PLUS_9,timezone:l.YakutskTime},Tp={id:d.AsiaChoibalsan,name:"Asia/Choibalsan",offset:t.UTC_PLUS_8,timezone:l.ChoibalsanStandardTime},pp={id:d.AsiaColombo,name:"Asia/Colombo",offset:t.UTC_PLUS_5,timezone:l.IndianStandardTime},vp={id:d.AsiaDamascus,name:"Asia/Damascus",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},bp={id:d.AsiaDhaka,name:"Asia/Dhaka",offset:t.UTC_PLUS_6,timezone:l.BangladeshStandardTime},Bp={id:d.AsiaDili,name:"Asia/Dili",offset:t.UTC_PLUS_9,timezone:l.JapanStandardTime},Up={id:d.AsiaDubai,name:"Asia/Dubai",offset:t.UTC_PLUS_4,timezone:l.GulfStandardTime},Np={id:d.AsiaDushanbe,name:"Asia/Dushanbe",offset:t.UTC_PLUS_5,timezone:l.TajikistanTime},Dp={id:d.AsiaFamagusta,name:"Asia/Famagusta",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},Pp={id:d.AsiaGaza,name:"Asia/Gaza",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},yp={id:d.AsiaHebron,name:"Asia/Hebron",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},Fp={id:d.AsiaHoChiMinh,name:"Asia/Ho_Chi_Minh",offset:t.UTC_PLUS_7,timezone:l.IndochinaTime},kp={id:d.AsiaHongKong,name:"Asia/Hong_Kong",offset:t.UTC_PLUS_8,timezone:l.HongKongTime},Mp={id:d.AsiaHovd,name:"Asia/Hovd",offset:t.UTC_PLUS_7,timezone:l.HovdTime},Lp={id:d.AsiaIrkutsk,name:"Asia/Irkutsk",offset:t.UTC_PLUS_8,timezone:l.IrkutskTime},qp={id:d.AsiaJakarta,name:"Asia/Jakarta",offset:t.UTC_PLUS_7,timezone:l.WesternIndonesianTime},Gp={id:d.AsiaJayapura,name:"Asia/Jayapura",offset:t.UTC_PLUS_9,timezone:l.JapanStandardTime},wp={id:d.AsiaJerusalem,name:"Asia/Jerusalem",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},Kp={id:d.AsiaKabul,name:"Asia/Kabul",offset:t.UTC_PLUS_4,timezone:l.AfghanistanTime},xp={id:d.AsiaKamchatka,name:"Asia/Kamchatka",offset:t.UTC_PLUS_12,timezone:l.KamchatkaTime},Op={id:d.AsiaKarachi,name:"Asia/Karachi",offset:t.UTC_PLUS_5,timezone:l.PakistanStandardTime},jp={id:d.AsiaKathmandu,name:"Asia/Kathmandu",offset:t.UTC_PLUS_5,timezone:l.NepalTime},Hp={id:d.AsiaKhandyga,name:"Asia/Khandyga",offset:t.UTC_PLUS_9,timezone:l.YakutskTime},Wp={id:d.AsiaKolkata,name:"Asia/Kolkata",offset:t.UTC_PLUS_5,timezone:l.IndianStandardTime},zp={id:d.AsiaKrasnoyarsk,name:"Asia/Krasnoyarsk",offset:t.UTC_PLUS_7,timezone:l.KrasnoyarskTime},Vp={id:d.AsiaKualaLumpur,name:"Asia/Kuala_Lumpur",offset:t.UTC_PLUS_8,timezone:l.MalaysiaStandardTime},Rp={id:d.AsiaKuching,name:"Asia/Kuching",offset:t.UTC_PLUS_8,timezone:l.MalaysiaStandardTime},Jp={id:d.AsiaKuwait,name:"Asia/Kuwait",offset:t.UTC_PLUS_3,timezone:l.ArabiaStandardTime},Yp={id:d.AsiaMacau,name:"Asia/Macau",offset:t.UTC_PLUS_8,timezone:l.ChinaStandardTime},Zp={id:d.AsiaMagadan,name:"Asia/Magadan",offset:t.UTC_PLUS_11,timezone:l.MagadanTime},$p={id:d.AsiaMakassar,name:"Asia/Makassar",offset:t.UTC_PLUS_8,timezone:l.MalaysiaTime},Qp={id:d.AsiaManila,name:"Asia/Manila",offset:t.UTC_PLUS_8,timezone:l.PhilippineTime},Xp={id:d.AsiaMuscat,name:"Asia/Muscat",offset:t.UTC_PLUS_4,timezone:l.GulfStandardTime},Cp={id:d.AsiaNovokuznetsk,name:"Asia/Novokuznetsk",offset:t.UTC_PLUS_6,timezone:l.NovosibirskTime},av={id:d.AsiaNovosibirsk,name:"Asia/Novosibirsk",offset:t.UTC_PLUS_6,timezone:l.NovosibirskTime},ev={id:d.AsiaOmsk,name:"Asia/Omsk",offset:t.UTC_PLUS_6,timezone:l.OmskTime},iv={id:d.AsiaOral,name:"Asia/Oral",offset:t.UTC_PLUS_5,timezone:l.OralTime},uv={id:d.AsiaPhnomPenh,name:"Asia/Phnom_Penh",offset:t.UTC_PLUS_7,timezone:l.IndochinaTime},nv={id:d.AsiaPontianak,name:"Asia/Pontianak",offset:t.UTC_PLUS_7,timezone:l.WesternIndonesianTime},sv={id:d.AsiaPyongyang,name:"Asia/Pyongyang",offset:t.UTC_PLUS_9,timezone:l.KoreaStandardTime},rv={id:d.AsiaQatar,name:"Asia/Qatar",offset:t.UTC_PLUS_3,timezone:l.ArabiaStandardTime},tv={id:d.AsiaQyzylorda,name:"Asia/Qyzylorda",offset:t.UTC_PLUS_5,timezone:l.WestKazakhstanTime},lv={id:d.AsiaRangoon,name:"Asia/Rangoon",offset:t.UTC_PLUS_6,timezone:l.MyanmarStandardTime},mv={id:d.AsiaRiyadh,name:"Asia/Riyadh",offset:t.UTC_PLUS_3,timezone:l.ArabiaStandardTime},cv={id:d.AsiaSakhalin,name:"Asia/Sakhalin",offset:t.UTC_PLUS_11,timezone:l.SakhalinIslandTime},ov={id:d.AsiaSamarkand,name:"Asia/Samarkand",offset:t.UTC_PLUS_5,timezone:l.UzbekistanTime},Av={id:d.AsiaSeoul,name:"Asia/Seoul",offset:t.UTC_PLUS_9,timezone:l.KoreaStandardTime},dv={id:d.AsiaShanghai,name:"Asia/Shanghai",offset:t.UTC_PLUS_8,timezone:l.ChinaStandardTime},fv={id:d.AsiaSingapore,name:"Asia/Singapore",offset:t.UTC_PLUS_8,timezone:l.SingaporeStandardTime},Iv={id:d.AsiaSrednekolymsk,name:"Asia/Srednekolymsk",offset:t.UTC_PLUS_11,timezone:l.SrednekolymskTime},_v={id:d.AsiaTaipei,name:"Asia/Taipei",offset:t.UTC_PLUS_8,timezone:l.ChinaStandardTime},hv={id:d.AsiaTashkent,name:"Asia/Tashkent",offset:t.UTC_PLUS_5,timezone:l.UzbekistanTime},gv={id:d.AsiaTbilisi,name:"Asia/Tbilisi",offset:t.UTC_PLUS_4,timezone:l.GeorgiaStandardTime},Ev={id:d.AsiaTehran,name:"Asia/Tehran",offset:t.UTC_PLUS_3,timezone:l.IranStandardTime},Sv={id:d.AsiaThimphu,name:"Asia/Thimphu",offset:t.UTC_PLUS_6,timezone:l.BhutanTime},Tv={id:d.AsiaTokyo,name:"Asia/Tokyo",offset:t.UTC_PLUS_9,timezone:l.JapanStandardTime},pv={id:d.AsiaTomsk,name:"Asia/Tomsk",offset:t.UTC_PLUS_6,timezone:l.KrasnoyarskTime},vv={id:d.AsiaUlaanbaatar,name:"Asia/Ulaanbaatar",offset:t.UTC_PLUS_8,timezone:l.UlaanbaatarStandardTime},bv={id:d.AsiaUrumqi,name:"Asia/Urumqi",offset:t.UTC_PLUS_8,timezone:l.ChinaStandardTime},Bv={id:d.AsiaUstNera,name:"Asia/Ust-Nera",offset:t.UTC_PLUS_10,timezone:l.VladivostokTime},Uv={id:d.AsiaVientiane,name:"Asia/Vientiane",offset:t.UTC_PLUS_7,timezone:l.IndochinaTime},Nv={id:d.AsiaVladivostok,name:"Asia/Vladivostok",offset:t.UTC_PLUS_10,timezone:l.VladivostokTime},Dv={id:d.AsiaYakutsk,name:"Asia/Yakutsk",offset:t.UTC_PLUS_9,timezone:l.YakutskTime},Pv={id:d.AsiaYekaterinburg,name:"Asia/Yekaterinburg",offset:t.UTC_PLUS_5,timezone:l.YekaterinburgTime},yv={id:d.AsiaYerevan,name:"Asia/Yerevan",offset:t.UTC_PLUS_4,timezone:l.ArmeniaTime},Fv={id:d.AtlanticAzores,name:"Atlantic/Azores",offset:t.UTC_MINUS_1,timezone:l.AzoresStandardTime},kv={id:d.AtlanticBermuda,name:"Atlantic/Bermuda",offset:t.UTC_MINUS_4,timezone:l.AtlanticStandardTime},Mv={id:d.AtlanticCanary,name:"Atlantic/Canary",offset:t.UTC_MINUS_1,timezone:l.WesternEuropeanTime},Lv={id:d.AtlanticCapeVerde,name:"Atlantic/Cape_Verde",offset:t.UTC_0,timezone:l.CapeVerdeTime},qv={id:d.AtlanticFaroe,name:"Atlantic/Faroe",offset:t.UTC_0,timezone:l.GreenwichMeanTime},Gv={id:d.AtlanticMadeira,name:"Atlantic/Madeira",offset:t.UTC_0,timezone:l.WesternEuropeanTime},wv={id:d.AtlanticReykjavik,name:"Atlantic/Reykjavik",offset:t.UTC_0,timezone:l.GreenwichMeanTime},Kv={id:d.AtlanticSouthGeorgia,name:"Atlantic/South_Georgia",offset:t.UTC_0,timezone:l.CoordinatedUniversalTime},xv={id:d.AtlanticStHelena,name:"Atlantic/St_Helena",offset:t.UTC_0,timezone:l.GreenwichMeanTime},Ov={id:d.AtlanticStanley,name:"Atlantic/Stanley",offset:t.UTC_0,timezone:l.FalklandIslandsTime},jv={id:d.AustraliaAdelaide,name:"Australia/Adelaide",offset:t.UTC_PLUS_9_30,timezone:l.AustralianCentralStandardTime},Hv={id:d.AustraliaBrisbane,name:"Australia/Brisbane",offset:t.UTC_PLUS_10,timezone:l.AustralianEasternStandardTime},Wv={id:d.AustraliaBrokenHill,name:"Australia/Broken_Hill",offset:t.UTC_PLUS_9_30,timezone:l.AustralianCentralStandardTime},zv={id:d.AustraliaCanberra,name:"Australia/Canberra",offset:t.UTC_PLUS_10,timezone:l.AustralianEasternStandardTime},Vv={id:d.AustraliaCurrie,name:"Australia/Currie",offset:t.UTC_PLUS_10,timezone:l.AustralianEasternStandardTime},Rv={id:d.AustraliaDarwin,name:"Australia/Darwin",offset:t.UTC_PLUS_9_30,timezone:l.AustralianCentralStandardTime},Jv={id:d.AustraliaEucla,name:"Australia/Eucla",offset:t.UTC_PLUS_8_45,timezone:l.AustralianCentralWesternStandardTime},Yv={id:d.AustraliaHobart,name:"Australia/Hobart",offset:t.UTC_PLUS_10,timezone:l.AustralianEasternStandardTime},Zv={id:d.AustraliaLindeman,name:"Australia/Lindeman",offset:t.UTC_PLUS_10,timezone:l.AustralianEasternStandardTime},$v={id:d.AustraliaLordHowe,name:"Australia/Lord_Howe",offset:t.UTC_PLUS_10_30,timezone:l.LordHoweStandardTime},Qv={id:d.AustraliaMelbourne,name:"Australia/Melbourne",offset:t.UTC_PLUS_10,timezone:l.AustralianEasternStandardTime},Xv={id:d.AustraliaPerth,name:"Australia/Perth",offset:t.UTC_PLUS_8,timezone:l.AustralianWesternStandardTime},Cv={id:d.AustraliaSydney,name:"Australia/Sydney",offset:t.UTC_PLUS_10,timezone:l.AustralianEasternStandardTime},ab={id:d.EuropeAmsterdam,name:"Europe/Amsterdam",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},eb={id:d.EuropeAndorra,name:"Europe/Andorra",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},ib={id:d.EuropeAthens,name:"Europe/Athens",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},ub={id:d.EuropeBelgrade,name:"Europe/Belgrade",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},nb={id:d.EuropeBerlin,name:"Europe/Berlin",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},sb={id:d.EuropeBratislava,name:"Europe/Bratislava",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},rb={id:d.EuropeBrussels,name:"Europe/Brussels",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},tb={id:d.EuropeBucharest,name:"Europe/Bucharest",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},lb={id:d.EuropeBudapest,name:"Europe/Budapest",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},mb={id:d.EuropeBusingen,name:"Europe/Busingen",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},cb={id:d.EuropeChisinau,name:"Europe/Chisinau",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},ob={id:d.EuropeCopenhagen,name:"Europe/Copenhagen",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},Ab={id:d.EuropeDublin,name:"Europe/Dublin",offset:t.UTC_0,timezone:l.GreenwichMeanTime},db={id:d.EuropeGibraltar,name:"Europe/Gibraltar",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},fb={id:d.EuropeGuernsey,name:"Europe/Guernsey",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},Ib={id:d.EuropeHelsinki,name:"Europe/Helsinki",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},_b={id:d.EuropeIsleOfMan,name:"Europe/Isle_of_Man",offset:t.UTC_0,timezone:l.GreenwichMeanTime},hb={id:d.EuropeIstanbul,name:"Europe/Istanbul",offset:t.UTC_PLUS_3,timezone:l.EasternEuropeanTime},gb={id:d.EuropeJersey,name:"Europe/Jersey",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},Eb={id:d.EuropeKaliningrad,name:"Europe/Kaliningrad",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},Sb={id:d.EuropeKiev,name:"Europe/Kiev",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},Tb={id:d.EuropeLisbon,name:"Europe/Lisbon",offset:t.UTC_0,timezone:l.GreenwichMeanTime},pb={id:d.EuropeLjubljana,name:"Europe/Ljubljana",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},vb={id:d.EuropeLondon,name:"Europe/London",offset:t.UTC_0,timezone:l.GreenwichMeanTime},bb={id:d.EuropeLuxembourg,name:"Europe/Luxembourg",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},Bb={id:d.EuropeMadrid,name:"Europe/Madrid",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},Ub={id:d.EuropeMalta,name:"Europe/Malta",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},Nb={id:d.EuropeMariehamn,name:"Europe/Mariehamn",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},Db={id:d.EuropeMinsk,name:"Europe/Minsk",offset:t.UTC_PLUS_3,timezone:l.EasternEuropeanTime},Pb={id:d.EuropeMonaco,name:"Europe/Monaco",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},yb={id:d.EuropeMoscow,name:"Europe/Moscow",offset:t.UTC_PLUS_3,timezone:l.EasternEuropeanTime},Fb={id:d.EuropeOslo,name:"Europe/Oslo",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},kb={id:d.EuropeParis,name:"Europe/Paris",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},Mb={id:d.EuropePodgorica,name:"Europe/Podgorica",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},Lb={id:d.EuropePrague,name:"Europe/Prague",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},qb={id:d.EuropeRiga,name:"Europe/Riga",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},Gb={id:d.EuropeRome,name:"Europe/Rome",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},wb={id:d.EuropeSamara,name:"Europe/Samara",offset:t.UTC_PLUS_4,timezone:l.EasternEuropeanTime},Kb={id:d.EuropeSanMarino,name:"Europe/San_Marino",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},xb={id:d.EuropeSarajevo,name:"Europe/Sarajevo",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},Ob={id:d.EuropeSimferopol,name:"Europe/Simferopol",offset:t.UTC_PLUS_3,timezone:l.EasternEuropeanTime},jb={id:d.EuropeSkopje,name:"Europe/Skopje",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},Hb={id:d.EuropeSofia,name:"Europe/Sofia",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},Wb={id:d.EuropeStockholm,name:"Europe/Stockholm",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},zb={id:d.EuropeTallinn,name:"Europe/Tallinn",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},Vb={id:d.EuropeTirane,name:"Europe/Tirane",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},Rb={id:d.EuropeUzhgorod,name:"Europe/Uzhgorod",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},Jb={id:d.EuropeVaduz,name:"Europe/Vaduz",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},Yb={id:d.EuropeVatican,name:"Europe/Vatican",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},Zb={id:d.EuropeVienna,name:"Europe/Vienna",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},$b={id:d.EuropeVilnius,name:"Europe/Vilnius",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},Qb={id:d.EuropeVolgograd,name:"Europe/Volgograd",offset:t.UTC_PLUS_4,timezone:l.EasternEuropeanTime},Xb={id:d.EuropeWarsaw,name:"Europe/Warsaw",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},Cb={id:d.EuropeZagreb,name:"Europe/Zagreb",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},a1={id:d.EuropeZaporozhye,name:"Europe/Zaporozhye",offset:t.UTC_PLUS_2,timezone:l.EasternEuropeanTime},e1={id:d.EuropeZurich,name:"Europe/Zurich",offset:t.UTC_PLUS_1,timezone:l.CentralEuropeanTime},i1={id:d.IndianAntananarivo,name:"Indian/Antananarivo",offset:t.UTC_PLUS_3,timezone:l.EastAfricaTime},u1={id:d.IndianChagos,name:"Indian/Chagos",offset:t.UTC_PLUS_6,timezone:l.IndianOceanTime},n1={id:d.IndianChristmas,name:"Indian/Christmas",offset:t.UTC_PLUS_7,timezone:l.ChristmasIslandTime},s1={id:d.IndianCocos,name:"Indian/Cocos",offset:t.UTC_PLUS_6,timezone:l.CocosIslandsTime},r1={id:d.IndianComoro,name:"Indian/Comoro",offset:t.UTC_PLUS_3,timezone:l.EastAfricaTime},t1={id:d.IndianKerguelen,name:"Indian/Kerguelen",offset:t.UTC_PLUS_5,timezone:l.FrenchSouthernAndAntarcticTime},l1={id:d.IndianMahe,name:"Indian/Mahe",offset:t.UTC_PLUS_4,timezone:l.SeychellesTime},m1={id:d.IndianMaldives,name:"Indian/Maldives",offset:t.UTC_PLUS_5,timezone:l.MaldivesTime},c1={id:d.IndianMauritius,name:"Indian/Mauritius",offset:t.UTC_PLUS_4,timezone:l.MauritiusTime},o1={id:d.IndianMayotte,name:"Indian/Mayotte",offset:t.UTC_PLUS_3,timezone:l.EastAfricaTime},A1={id:d.IndianReunion,name:"Indian/Reunion",offset:t.UTC_PLUS_4,timezone:l.ReunionTime},d1={id:d.PacificApia,name:"Pacific/Apia",offset:t.UTC_PLUS_13,timezone:l.SamoaStandardTime},f1={id:d.PacificAuckland,name:"Pacific/Auckland",offset:t.UTC_PLUS_13,timezone:l.NewZealandStandardTime},I1={id:d.PacificChatham,name:"Pacific/Chatham",offset:t.UTC_PLUS_13,timezone:l.ChathamStandardTime},_1={id:d.PacificEaster,name:"Pacific/Easter",offset:t.UTC_PLUS_6,timezone:l.EasterIslandStandardTime},h1={id:d.PacificEfate,name:"Pacific/Efate",offset:t.UTC_PLUS_11,timezone:l.VanuatuTime},g1={id:d.PacificEnderbury,name:"Pacific/Enderbury",offset:t.UTC_PLUS_13,timezone:l.TongaTime},E1={id:d.PacificFakaofo,name:"Pacific/Fakaofo",offset:t.UTC_PLUS_13,timezone:l.TongaTime},S1={id:d.PacificFiji,name:"Pacific/Fiji",offset:t.UTC_PLUS_12,timezone:l.FijiTime},T1={id:d.PacificFunafuti,name:"Pacific/Funafuti",offset:t.UTC_PLUS_12,timezone:l.TuvaluTime},p1={id:d.PacificGalapagos,name:"Pacific/Galapagos",offset:t.UTC_PLUS_6,timezone:l.GalapagosTime},v1={id:d.PacificGambier,name:"Pacific/Gambier",offset:t.UTC_PLUS_9,timezone:l.GambierIslandTime},b1={id:d.PacificGuadalcanal,name:"Pacific/Guadalcanal",offset:t.UTC_PLUS_11,timezone:l.SolomonIslandsTime},B1={id:d.PacificGuam,name:"Pacific/Guam",offset:t.UTC_PLUS_10,timezone:l.ChamorroStandardTime},U1={id:d.PacificHonolulu,name:"Pacific/Honolulu",offset:t.UTC_PLUS_10,timezone:l.HawaiiAleutianStandardTime},N1={id:d.PacificJohnston,name:"Pacific/Johnston",offset:t.UTC_PLUS_10,timezone:l.HawaiiAleutianStandardTime},D1={id:d.PacificKiritimati,name:"Pacific/Kiritimati",offset:t.UTC_PLUS_14,timezone:l.LineIslandsTime},P1={id:d.PacificKosrae,name:"Pacific/Kosrae",offset:t.UTC_PLUS_11,timezone:l.KosraeTime},y1={id:d.PacificKwajalein,name:"Pacific/Kwajalein",offset:t.UTC_PLUS_12,timezone:l.MarshallIslandsTime},F1={id:d.PacificMajuro,name:"Pacific/Majuro",offset:t.UTC_PLUS_12,timezone:l.MarshallIslandsTime},k1={id:d.PacificMarquesas,name:"Pacific/Marquesas",offset:t.UTC_PLUS_9,timezone:l.MarquesasIslandsTime},M1={id:d.PacificMidway,name:"Pacific/Midway",offset:t.UTC_PLUS_11,timezone:l.SamoaStandardTime},L1={id:d.PacificNauru,name:"Pacific/Nauru",offset:t.UTC_PLUS_12,timezone:l.NauruTime},q1={id:d.PacificNiue,name:"Pacific/Niue",offset:t.UTC_PLUS_11,timezone:l.NiueTime},G1={id:d.PacificNorfolk,name:"Pacific/Norfolk",offset:t.UTC_PLUS_11,timezone:l.NorfolkIslandTime},w1={id:d.PacificNoumea,name:"Pacific/Noumea",offset:t.UTC_PLUS_11,timezone:l.NewCaledoniaTime},K1={id:d.PacificPagoPago,name:"Pacific/Pago_Pago",offset:t.UTC_PLUS_11,timezone:l.SamoaStandardTime},x1={id:d.PacificPalau,name:"Pacific/Palau",offset:t.UTC_PLUS_9,timezone:l.PalauTime},O1={id:d.PacificPitcairn,name:"Pacific/Pitcairn",offset:t.UTC_PLUS_8,timezone:l.PitcairnTime},j1={id:d.PacificPonape,name:"Pacific/Ponape",offset:t.UTC_PLUS_11,timezone:l.PohnpeiStandardTime},H1={id:d.PacificPortMoresby,name:"Pacific/Port_Moresby",offset:t.UTC_PLUS_10,timezone:l.PapuaNewGuineaTime},W1={id:d.PacificRarotonga,name:"Pacific/Rarotonga",offset:t.UTC_PLUS_10,timezone:l.CookIslandTime},z1={id:d.PacificSaipan,name:"Pacific/Saipan",offset:t.UTC_PLUS_10,timezone:l.ChamorroStandardTime},V1={id:d.PacificTahiti,name:"Pacific/Tahiti",offset:t.UTC_PLUS_10,timezone:l.TahitiTime},R1={id:d.PacificTarawa,name:"Pacific/Tarawa",offset:t.UTC_PLUS_12,timezone:l.GilbertIslandTime},J1={id:d.PacificTongatapu,name:"Pacific/Tongatapu",offset:t.UTC_PLUS_13,timezone:l.TongaTime},Y1={id:d.PacificChuuk,name:"Pacific/Chuuk",offset:t.UTC_PLUS_10,timezone:l.ChuukTime},Z1={id:d.PacificPohnpei,name:"Pacific/Pohnpei",offset:t.UTC_PLUS_11,timezone:l.PohnpeiStandardTime},$1={id:d.PacificYap,name:"Pacific/Yap",offset:t.UTC_PLUS_10,timezone:l.ChuukTime};import Bn from"crypto";var bn="useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";var kl=128,Ra,ue,Ml=a=>{!Ra||Ra.length<a?(Ra=Buffer.allocUnsafe(a*kl),Bn.randomFillSync(Ra),ue=0):ue+a>Ra.length&&(Bn.randomFillSync(Ra),ue=0),ue+=a};var Un=(a=21)=>{Ml(a-=0);let B="";for(let N=ue-a;N<ue;N++)B+=bn[Ra[N]&63];return B};var Ll=[{property:"name",enumerable:!1},{property:"message",enumerable:!1},{property:"stack",enumerable:!1},{property:"code",enumerable:!0}],Ge=Symbol(".toJSON was called"),ql=a=>{a[Ge]=!0;let B=a.toJSON();return delete a[Ge],B},Nn=({from:a,seen:B,to_:N,forceEnumerable:G,maxDepth:L,depth:O})=>{let j=N||(Array.isArray(a)?[]:{});if(B.push(a),O>=L)return j;if(typeof a.toJSON=="function"&&a[Ge]!==!0)return ql(a);for(let[H,$]of Object.entries(a)){if(typeof Buffer=="function"&&Buffer.isBuffer($)){j[H]="[object Buffer]";continue}if(typeof $!="function"){if(!$||typeof $!="object"){j[H]=$;continue}if(!B.includes(a[H])){O++,j[H]=Nn({from:a[H],seen:[...B],forceEnumerable:G,maxDepth:L,depth:O});continue}j[H]="[Circular]"}}for(let{property:H,enumerable:$}of Ll)typeof a[H]=="string"&&Object.defineProperty(j,H,{value:a[H],enumerable:G?!0:$,configurable:!0,writable:!0});return j};function Dn(a,B={}){let{maxDepth:N=Number.POSITIVE_INFINITY}=B;return typeof a=="object"&&a!==null?Nn({from:a,seen:[],forceEnumerable:!0,maxDepth:N,depth:0}):typeof a=="function"?`[Function: ${a.name||"anonymous"}]`:a}var Te;(function(a){a[a.Warning=999]="Warning",a[a.Exception=1e3]="Exception",a[a.UnmanagedException=1001]="UnmanagedException",a[a.CaughtException=1002]="CaughtException",a[a.UncaughtException=1003]="UncaughtException",a[a.UnhandledPromiseRejectionException=1004]="UnhandledPromiseRejectionException",a[a.AuthenticationException=2e3]="AuthenticationException",a[a.AuthenticationExpiredAccessTokenException=2001]="AuthenticationExpiredAccessTokenException",a[a.AuthenticationInvalidAccessTokenException=2002]="AuthenticationInvalidAccessTokenException",a[a.AuthenticationMissingAccessTokenException=2003]="AuthenticationMissingAccessTokenException",a[a.AuthenticationExpiredRefreshTokenException=2004]="AuthenticationExpiredRefreshTokenException",a[a.AuthenticationInvalidRefreshTokenException=2005]="AuthenticationInvalidRefreshTokenException",a[a.AuthenticationMissingRefreshTokenException=2006]="AuthenticationMissingRefreshTokenException",a[a.AuthenticationMissingDeviceKeyException=2007]="AuthenticationMissingDeviceKeyException",a[a.AuthenticationUnAuthorizedAccessException=2008]="AuthenticationUnAuthorizedAccessException",a[a.AuthenticationCodeMismatchException=2009]="AuthenticationCodeMismatchException",a[a.AuthenticationExpiredCodeException=2010]="AuthenticationExpiredCodeException",a[a.AuthenticationLoginException=2011]="AuthenticationLoginException",a[a.AuthenticationLoginInvalidCredentialsException=2012]="AuthenticationLoginInvalidCredentialsException",a[a.AuthenticationLoginTooManyFailedAttemptsException=2013]="AuthenticationLoginTooManyFailedAttemptsException",a[a.AuthenticationLimitExceededException=2014]="AuthenticationLimitExceededException",a[a.AuthenticationUnauthorizedAccessException=2015]="AuthenticationUnauthorizedAccessException",a[a.AuthenticationTooManyRequestsException=2016]="AuthenticationTooManyRequestsException",a[a.AuthenticationUserNotFoundException=2017]="AuthenticationUserNotFoundException",a[a.AuthenticationSignupException=2018]="AuthenticationSignupException",a[a.AuthenticationUsernameAvailabilityCheckException=2019]="AuthenticationUsernameAvailabilityCheckException",a[a.AuthenticationUsernameExistsException=2020]="AuthenticationUsernameExistsException",a[a.AuthenticationAliasExistException=2021]="AuthenticationAliasExistException",a[a.AuthenticationCodeDeliveryFailureException=2022]="AuthenticationCodeDeliveryFailureException",a[a.AuthenticationMFAMethodNotFoundException=2023]="AuthenticationMFAMethodNotFoundException",a[a.AuthenticationNotAuthorizedException=2024]="AuthenticationNotAuthorizedException",a[a.AuthenticationPasswordResetRequiredException=2025]="AuthenticationPasswordResetRequiredException",a[a.AuthenticationUserNotConfirmedException=2026]="AuthenticationUserNotConfirmedException",a[a.DatabaseException=3e3]="DatabaseException",a[a.SequelizeNotInitializedException=3001]="SequelizeNotInitializedException",a[a.ProcessException=4e3]="ProcessException",a[a.ProcessWarningException=4001]="ProcessWarningException",a[a.KillProcessException=4002]="KillProcessException",a[a.FatalException=4003]="FatalException",a[a.ProcessSigTermException=4004]="ProcessSigTermException",a[a.ProcessSigIntException=4005]="ProcessSigIntException",a[a.MissingEnvironmentVariable=4006]="MissingEnvironmentVariable",a[a.NetworkException=5e3]="NetworkException",a[a.HttpException=5001]="HttpException",a[a.HttpRequestException=5002]="HttpRequestException",a[a.HttpRequestResourceNotFoundException=5003]="HttpRequestResourceNotFoundException",a[a.HttpResponseException=5004]="HttpResponseException",a[a.ServiceProviderException=6e3]="ServiceProviderException",a[a.AWSException=6001]="AWSException",a[a.AWSMissingAccessKeyException=6002]="AWSMissingAccessKeyException",a[a.AWSMissingSecretKeyException=6003]="AWSMissingSecretKeyException",a[a.CognitoException=6004]="CognitoException",a[a.CognitoInternalErrorException=6005]="CognitoInternalErrorException",a[a.CognitoInvalidEmailRoleAccessPolicyException=6006]="CognitoInvalidEmailRoleAccessPolicyException",a[a.CognitoInvalidLambdaResponseException=6007]="CognitoInvalidLambdaResponseException",a[a.CognitoUserLambdaValidationException=6008]="CognitoUserLambdaValidationException",a[a.CognitoInvalidParameterException=6009]="CognitoInvalidParameterException",a[a.CognitoInvalidSmsRoleAccessPolicyException=6010]="CognitoInvalidSmsRoleAccessPolicyException",a[a.CognitoInvalidSmsRoleTrustRelationshipException=6011]="CognitoInvalidSmsRoleTrustRelationshipException",a[a.CognitoInvalidUserPoolConfigurationException=6012]="CognitoInvalidUserPoolConfigurationException",a[a.CognitoResourceNotFoundException=6013]="CognitoResourceNotFoundException",a[a.CognitoMissingUserPoolClientIdException=6014]="CognitoMissingUserPoolClientIdException",a[a.CognitoMissingUserPoolIdException=6015]="CognitoMissingUserPoolIdException",a[a.CognitoUnexpectedLambdaException=6016]="CognitoUnexpectedLambdaException",a[a.StripeException=6017]="StripeException",a[a.StripeMissingSecretKeyException=6018]="StripeMissingSecretKeyException",a[a.StripeSubscriptionCreationFailedException=6019]="StripeSubscriptionCreationFailedException",a[a.StripePaymentMethodRequiredException=6020]="StripePaymentMethodRequiredException",a[a.UserException=7e3]="UserException",a[a.NullUserException=7001]="NullUserException",a[a.UserStateConflictException=7002]="UserStateConflictException",a[a.NullAccountException=7003]="NullAccountException",a[a.ValidationException=8e3]="ValidationException",a[a.InvalidTypeException=8001]="InvalidTypeException",a[a.MissingArgumentException=8002]="MissingArgumentException",a[a.MissingPropertyException=8003]="MissingPropertyException",a[a.InvalidArgumentException=8004]="InvalidArgumentException",a[a.InvalidPropertyException=8005]="InvalidPropertyException",a[a.MissingRequestBodyPropertyException=8006]="MissingRequestBodyPropertyException",a[a.MissingRequestUrlParameterException=8007]="MissingRequestUrlParameterException",a[a.MissingCookieException=8008]="MissingCookieException"})(Te||(Te={}));var ne=class extends Error{constructor(B,N){super(B);ga(this,"cause");ga(this,"code",Te.Exception);ga(this,"context");ga(this,"created");ga(this,"data");ga(this,"description");ga(this,"model");ga(this,"form");ga(this,"friendlyMessage","An unknown error has occurred. :(");ga(this,"id");ga(this,"logLevel",Se.Exception);ga(this,"origin");ga(this,"pii");ga(this,"request");ga(this,"response");ga(this,"scope");ga(this,"remediation");ga(this,"tags");ga(this,"task");ga(this,"user");ga(this,"__proto__");var L,O,j,H;let G=new.target.prototype;if(this.__proto__=G,Error.captureStackTrace&&Error.captureStackTrace((L=N==null?void 0:N.cause)!=null?L:this,ne),this.id=Un(),this.name=this.constructor.name,this.created=new Date().toString(),this.description=(O=N==null?void 0:N.description)!=null?O:this.description,this.remediation=(j=N==null?void 0:N.remediation)!=null?j:this.remediation,this.scope=(H=N==null?void 0:N.scope)!=null?H:this.scope,N){let{cause:$,context:X,data:ca,model:Aa,form:la,origin:Ea,pii:sa,request:J,response:Q,tags:da,task:ma,user:ia}=N;this.cause=$,this.context=X,this.data=ca,this.model=Aa,this.form=la,this.origin=Ea,this.pii=sa,this.request=J,this.response=Q,this.task=ma,this.tags=da,this.user=ia}}toJSON(){return Dn(this)}};var Gl=class{analytics(a){}critical(a){}debug(a){}async exception(a){console.log(a)}http(a){}async info(a){console.log(a)}warning(a){}constructor(a){}},we=Gl,se=we;import{HttpServer as Lc}from"@srclaunch/http-server";var Oa=({dataClient:a})=>({create:async(B,N)=>{let G=B.params.model,L=B.body;if(console.log("params",L),!G)return N.status(400).json({error:"Missing model"});let O=await a.create(G,L);return O?N.status(200).json(qe({},O.dataValues)):N.status(500).json({error:"Failed to create entity"})},deleteMany:async(B,N)=>{let G=B.params.model,L=B.body;if(!G)return N.status(400).send("Missing model");let O=await a.deleteMany(G,L);return N.status(200).json(O)},deleteOne:async(B,N)=>{let G=B.params.model,L=B.params.id;if(!G)return N.status(400).json({error:"Missing model"});if(!L)return N.status(400).json({error:"Missing id"});let O=await a.deleteOne(G,L);return N.status(200).json(O)},getOne:async(B,N)=>{let G=B.params.model,L=B.params.id;if(!G)return N.status(400).json({error:"Missing model"});if(!L)return N.status(400).json({error:"Missing id"});let O=await a.getOne(G,L);return N.status(200).json(O)},getMany:async(B,N)=>{var $,X,ca;let G=B.params.model,L=($=B.params.conditions)!=null?$:void 0,O=Number.parseInt((X=B.params.limit)!=null?X:"50"),j=Number.parseInt((ca=B.params.offset)!=null?ca:"0");if(!G)return N.status(400).send("Missing model");let H=await a.getMany(G,{conditions:L,limit:O,offset:j});return N.status(200).json(H)},healthcheck:async(B,N)=>N.status(200).send(),updateMany:async(B,N)=>{let G=B.params.model,L=B.body;if(!G)return N.status(400).json({error:"Missing model"});let O=await a.updateMany(G,L);return O?N.status(200).json(qe({},O.dataValues)):N.status(500).json({error:"Failed to update entities"})},updateOne:async(B,N)=>{let G=B.params.model,L=B.params.id,O=B.body;if(!G)return N.status(400).json({error:"Missing model"});if(!L)return N.status(400).json({error:"Missing id"});let j=await a.updateOne(G,L,O);return j?N.status(200).json(j):N.status(500).json({error:"Failed to update entity"})}});import Ln from"crypto";import qn from"aws-sdk";import Fc from"aws-sdk";import{DataTypes as kc,Sequelize as Mc}from"sequelize";var wl=Object.create,Ke=Object.defineProperty,Kl=Object.getOwnPropertyDescriptor,Pn=Object.getOwnPropertyNames,xl=Object.getPrototypeOf,Ol=Object.prototype.hasOwnProperty,jl=a=>Ke(a,"__esModule",{value:!0}),Hl=(a=>typeof Wa!="undefined"?Wa:typeof Proxy!="undefined"?new Proxy(a,{get:(B,N)=>(typeof Wa!="undefined"?Wa:B)[N]}):a)(function(a){if(typeof Wa!="undefined")return Wa.apply(this,arguments);throw new Error('Dynamic require of "'+a+'" is not supported')}),Ba=(a,B)=>function(){return B||(0,a[Pn(a)[0]])((B={exports:{}}).exports,B),B.exports},Wl=(a,B,N,G)=>{if(B&&typeof B=="object"||typeof B=="function")for(let L of Pn(B))!Ol.call(a,L)&&(N||L!=="default")&&Ke(a,L,{get:()=>B[L],enumerable:!(G=Kl(B,L))||G.enumerable});return a},yn=(a,B)=>Wl(jl(Ke(a!=null?wl(xl(a)):{},"default",!B&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),zl=Ba({"../../node_modules/pluralize/pluralize.js"(a,B){(function(N,G){typeof Hl=="function"&&typeof a=="object"&&typeof B=="object"?B.exports=G():typeof define=="function"&&define.amd?define(function(){return G()}):N.pluralize=G()})(a,function(){var N=[],G=[],L={},O={},j={};function H(J){return typeof J=="string"?new RegExp("^"+J+"$","i"):J}function $(J,Q){return J===Q?Q:J===J.toLowerCase()?Q.toLowerCase():J===J.toUpperCase()?Q.toUpperCase():J[0]===J[0].toUpperCase()?Q.charAt(0).toUpperCase()+Q.substr(1).toLowerCase():Q.toLowerCase()}function X(J,Q){return J.replace(/\$(\d{1,2})/g,function(da,ma){return Q[ma]||""})}function ca(J,Q){return J.replace(Q[0],function(da,ma){var ia=X(Q[1],arguments);return $(da===""?J[ma-1]:da,ia)})}function Aa(J,Q,da){if(!J.length||L.hasOwnProperty(J))return Q;for(var ma=da.length;ma--;){var ia=da[ma];if(ia[0].test(Q))return ca(Q,ia)}return Q}function la(J,Q,da){return function(ma){var ia=ma.toLowerCase();return Q.hasOwnProperty(ia)?$(ma,ia):J.hasOwnProperty(ia)?$(ma,J[ia]):Aa(ia,ma,da)}}function Ea(J,Q,da,ma){return function(ia){var Pa=ia.toLowerCase();return Q.hasOwnProperty(Pa)?!0:J.hasOwnProperty(Pa)?!1:Aa(Pa,Pa,da)===Pa}}function sa(J,Q,da){var ma=Q===1?sa.singular(J):sa.plural(J);return(da?Q+" ":"")+ma}return sa.plural=la(j,O,N),sa.isPlural=Ea(j,O,N),sa.singular=la(O,j,G),sa.isSingular=Ea(O,j,G),sa.addPluralRule=function(J,Q){N.push([H(J),Q])},sa.addSingularRule=function(J,Q){G.push([H(J),Q])},sa.addUncountableRule=function(J){if(typeof J=="string"){L[J.toLowerCase()]=!0;return}sa.addPluralRule(J,"$0"),sa.addSingularRule(J,"$0")},sa.addIrregularRule=function(J,Q){Q=Q.toLowerCase(),J=J.toLowerCase(),j[J]=Q,O[Q]=J},[["I","we"],["me","us"],["he","they"],["she","they"],["them","them"],["myself","ourselves"],["yourself","yourselves"],["itself","themselves"],["herself","themselves"],["himself","themselves"],["themself","themselves"],["is","are"],["was","were"],["has","have"],["this","these"],["that","those"],["echo","echoes"],["dingo","dingoes"],["volcano","volcanoes"],["tornado","tornadoes"],["torpedo","torpedoes"],["genus","genera"],["viscus","viscera"],["stigma","stigmata"],["stoma","stomata"],["dogma","dogmata"],["lemma","lemmata"],["schema","schemata"],["anathema","anathemata"],["ox","oxen"],["axe","axes"],["die","dice"],["yes","yeses"],["foot","feet"],["eave","eaves"],["goose","geese"],["tooth","teeth"],["quiz","quizzes"],["human","humans"],["proof","proofs"],["carve","carves"],["valve","valves"],["looey","looies"],["thief","thieves"],["groove","grooves"],["pickaxe","pickaxes"],["passerby","passersby"]].forEach(function(J){return sa.addIrregularRule(J[0],J[1])}),[[/s?$/i,"s"],[/[^\u0000-\u007F]$/i,"$0"],[/([^aeiou]ese)$/i,"$1"],[/(ax|test)is$/i,"$1es"],[/(alias|[^aou]us|t[lm]as|gas|ris)$/i,"$1es"],[/(e[mn]u)s?$/i,"$1s"],[/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i,"$1"],[/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i,"$1i"],[/(alumn|alg|vertebr)(?:a|ae)$/i,"$1ae"],[/(seraph|cherub)(?:im)?$/i,"$1im"],[/(her|at|gr)o$/i,"$1oes"],[/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i,"$1a"],[/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i,"$1a"],[/sis$/i,"ses"],[/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i,"$1$2ves"],[/([^aeiouy]|qu)y$/i,"$1ies"],[/([^ch][ieo][ln])ey$/i,"$1ies"],[/(x|ch|ss|sh|zz)$/i,"$1es"],[/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i,"$1ices"],[/\b((?:tit)?m|l)(?:ice|ouse)$/i,"$1ice"],[/(pe)(?:rson|ople)$/i,"$1ople"],[/(child)(?:ren)?$/i,"$1ren"],[/eaux$/i,"$0"],[/m[ae]n$/i,"men"],["thou","you"]].forEach(function(J){return sa.addPluralRule(J[0],J[1])}),[[/s$/i,""],[/(ss)$/i,"$1"],[/(wi|kni|(?:after|half|high|low|mid|non|night|[^\w]|^)li)ves$/i,"$1fe"],[/(ar|(?:wo|[ae])l|[eo][ao])ves$/i,"$1f"],[/ies$/i,"y"],[/\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i,"$1ie"],[/\b(mon|smil)ies$/i,"$1ey"],[/\b((?:tit)?m|l)ice$/i,"$1ouse"],[/(seraph|cherub)im$/i,"$1"],[/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i,"$1"],[/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i,"$1sis"],[/(movie|twelve|abuse|e[mn]u)s$/i,"$1"],[/(test)(?:is|es)$/i,"$1is"],[/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i,"$1us"],[/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i,"$1um"],[/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i,"$1on"],[/(alumn|alg|vertebr)ae$/i,"$1a"],[/(cod|mur|sil|vert|ind)ices$/i,"$1ex"],[/(matr|append)ices$/i,"$1ix"],[/(pe)(rson|ople)$/i,"$1rson"],[/(child)ren$/i,"$1"],[/(eau)x?$/i,"$1"],[/men$/i,"man"]].forEach(function(J){return sa.addSingularRule(J[0],J[1])}),["adulthood","advice","agenda","aid","aircraft","alcohol","ammo","analytics","anime","athletics","audio","bison","blood","bream","buffalo","butter","carp","cash","chassis","chess","clothing","cod","commerce","cooperation","corps","debris","diabetes","digestion","elk","energy","equipment","excretion","expertise","firmware","flounder","fun","gallows","garbage","graffiti","hardware","headquarters","health","herpes","highjinks","homework","housework","information","jeans","justice","kudos","labour","literature","machinery","mackerel","mail","media","mews","moose","music","mud","manga","news","only","personnel","pike","plankton","pliers","police","pollution","premises","rain","research","rice","salmon","scissors","series","sewage","shambles","shrimp","software","species","staff","swine","tennis","traffic","transportation","trout","tuna","wealth","welfare","whiting","wildebeest","wildlife","you",/pok[eé]mon$/i,/[^aeiou]ese$/i,/deer$/i,/fish$/i,/measles$/i,/o[iu]s$/i,/pox$/i,/sheep$/i].forEach(sa.addUncountableRule),sa})}}),La=Ba({"../../node_modules/tslib/tslib.js"(a,B){var N,G,L,O,j,H,$,X,ca,Aa,la,Ea,sa,J,Q,da,ma,ia,Pa,ja,Ka,Ha,xa,Ua;(function(ta){var Na=typeof global=="object"?global:typeof self=="object"?self:typeof this=="object"?this:{};typeof define=="function"&&define.amd?define("tslib",["exports"],function(M){ta(Da(Na,Da(M)))}):typeof B=="object"&&typeof B.exports=="object"?ta(Da(Na,Da(B.exports))):ta(Da(Na));function Da(M,K){return M!==Na&&(typeof Object.create=="function"?Object.defineProperty(M,"__esModule",{value:!0}):M.__esModule=!0),function(W,w){return M[W]=K?K(W,w):w}}})(function(ta){var Na=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(M,K){M.__proto__=K}||function(M,K){for(var W in K)Object.prototype.hasOwnProperty.call(K,W)&&(M[W]=K[W])};N=function(M,K){if(typeof K!="function"&&K!==null)throw new TypeError("Class extends value "+String(K)+" is not a constructor or null");Na(M,K);function W(){this.constructor=M}M.prototype=K===null?Object.create(K):(W.prototype=K.prototype,new W)},G=Object.assign||function(M){for(var K,W=1,w=arguments.length;W<w;W++){K=arguments[W];for(var Y in K)Object.prototype.hasOwnProperty.call(K,Y)&&(M[Y]=K[Y])}return M},L=function(M,K){var W={};for(var w in M)Object.prototype.hasOwnProperty.call(M,w)&&K.indexOf(w)<0&&(W[w]=M[w]);if(M!=null&&typeof Object.getOwnPropertySymbols=="function")for(var Y=0,w=Object.getOwnPropertySymbols(M);Y<w.length;Y++)K.indexOf(w[Y])<0&&Object.prototype.propertyIsEnumerable.call(M,w[Y])&&(W[w[Y]]=M[w[Y]]);return W},O=function(M,K,W,w){var Y=arguments.length,b=Y<3?K:w===null?w=Object.getOwnPropertyDescriptor(K,W):w,q;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")b=Reflect.decorate(M,K,W,w);else for(var Z=M.length-1;Z>=0;Z--)(q=M[Z])&&(b=(Y<3?q(b):Y>3?q(K,W,b):q(K,W))||b);return Y>3&&b&&Object.defineProperty(K,W,b),b},j=function(M,K){return function(W,w){K(W,w,M)}},H=function(M,K){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(M,K)},$=function(M,K,W,w){function Y(b){return b instanceof W?b:new W(function(q){q(b)})}return new(W||(W=Promise))(function(b,q){function Z(ra){try{V(w.next(ra))}catch(fa){q(fa)}}function na(ra){try{V(w.throw(ra))}catch(fa){q(fa)}}function V(ra){ra.done?b(ra.value):Y(ra.value).then(Z,na)}V((w=w.apply(M,K||[])).next())})},X=function(M,K){var W={label:0,sent:function(){if(b[0]&1)throw b[1];return b[1]},trys:[],ops:[]},w,Y,b,q;return q={next:Z(0),throw:Z(1),return:Z(2)},typeof Symbol=="function"&&(q[Symbol.iterator]=function(){return this}),q;function Z(V){return function(ra){return na([V,ra])}}function na(V){if(w)throw new TypeError("Generator is already executing.");for(;W;)try{if(w=1,Y&&(b=V[0]&2?Y.return:V[0]?Y.throw||((b=Y.return)&&b.call(Y),0):Y.next)&&!(b=b.call(Y,V[1])).done)return b;switch(Y=0,b&&(V=[V[0]&2,b.value]),V[0]){case 0:case 1:b=V;break;case 4:return W.label++,{value:V[1],done:!1};case 5:W.label++,Y=V[1],V=[0];continue;case 7:V=W.ops.pop(),W.trys.pop();continue;default:if(b=W.trys,!(b=b.length>0&&b[b.length-1])&&(V[0]===6||V[0]===2)){W=0;continue}if(V[0]===3&&(!b||V[1]>b[0]&&V[1]<b[3])){W.label=V[1];break}if(V[0]===6&&W.label<b[1]){W.label=b[1],b=V;break}if(b&&W.label<b[2]){W.label=b[2],W.ops.push(V);break}b[2]&&W.ops.pop(),W.trys.pop();continue}V=K.call(M,W)}catch(ra){V=[6,ra],Y=0}finally{w=b=0}if(V[0]&5)throw V[1];return{value:V[0]?V[1]:void 0,done:!0}}},ca=function(M,K){for(var W in M)W!=="default"&&!Object.prototype.hasOwnProperty.call(K,W)&&Ua(K,M,W)},Ua=Object.create?function(M,K,W,w){w===void 0&&(w=W),Object.defineProperty(M,w,{enumerable:!0,get:function(){return K[W]}})}:function(M,K,W,w){w===void 0&&(w=W),M[w]=K[W]},Aa=function(M){var K=typeof Symbol=="function"&&Symbol.iterator,W=K&&M[K],w=0;if(W)return W.call(M);if(M&&typeof M.length=="number")return{next:function(){return M&&w>=M.length&&(M=void 0),{value:M&&M[w++],done:!M}}};throw new TypeError(K?"Object is not iterable.":"Symbol.iterator is not defined.")},la=function(M,K){var W=typeof Symbol=="function"&&M[Symbol.iterator];if(!W)return M;var w=W.call(M),Y,b=[],q;try{for(;(K===void 0||K-- >0)&&!(Y=w.next()).done;)b.push(Y.value)}catch(Z){q={error:Z}}finally{try{Y&&!Y.done&&(W=w.return)&&W.call(w)}finally{if(q)throw q.error}}return b},Ea=function(){for(var M=[],K=0;K<arguments.length;K++)M=M.concat(la(arguments[K]));return M},sa=function(){for(var M=0,K=0,W=arguments.length;K<W;K++)M+=arguments[K].length;for(var w=Array(M),Y=0,K=0;K<W;K++)for(var b=arguments[K],q=0,Z=b.length;q<Z;q++,Y++)w[Y]=b[q];return w},J=function(M,K,W){if(W||arguments.length===2)for(var w=0,Y=K.length,b;w<Y;w++)(b||!(w in K))&&(b||(b=Array.prototype.slice.call(K,0,w)),b[w]=K[w]);return M.concat(b||Array.prototype.slice.call(K))},Q=function(M){return this instanceof Q?(this.v=M,this):new Q(M)},da=function(M,K,W){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var w=W.apply(M,K||[]),Y,b=[];return Y={},q("next"),q("throw"),q("return"),Y[Symbol.asyncIterator]=function(){return this},Y;function q(ua){w[ua]&&(Y[ua]=function(oa){return new Promise(function(va,le){b.push([ua,oa,va,le])>1||Z(ua,oa)})})}function Z(ua,oa){try{na(w[ua](oa))}catch(va){fa(b[0][3],va)}}function na(ua){ua.value instanceof Q?Promise.resolve(ua.value.v).then(V,ra):fa(b[0][2],ua)}function V(ua){Z("next",ua)}function ra(ua){Z("throw",ua)}function fa(ua,oa){ua(oa),b.shift(),b.length&&Z(b[0][0],b[0][1])}},ma=function(M){var K,W;return K={},w("next"),w("throw",function(Y){throw Y}),w("return"),K[Symbol.iterator]=function(){return this},K;function w(Y,b){K[Y]=M[Y]?function(q){return(W=!W)?{value:Q(M[Y](q)),done:Y==="return"}:b?b(q):q}:b}},ia=function(M){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var K=M[Symbol.asyncIterator],W;return K?K.call(M):(M=typeof Aa=="function"?Aa(M):M[Symbol.iterator](),W={},w("next"),w("throw"),w("return"),W[Symbol.asyncIterator]=function(){return this},W);function w(b){W[b]=M[b]&&function(q){return new Promise(function(Z,na){q=M[b](q),Y(Z,na,q.done,q.value)})}}function Y(b,q,Z,na){Promise.resolve(na).then(function(V){b({value:V,done:Z})},q)}},Pa=function(M,K){return Object.defineProperty?Object.defineProperty(M,"raw",{value:K}):M.raw=K,M};var Da=Object.create?function(M,K){Object.defineProperty(M,"default",{enumerable:!0,value:K})}:function(M,K){M.default=K};ja=function(M){if(M&&M.__esModule)return M;var K={};if(M!=null)for(var W in M)W!=="default"&&Object.prototype.hasOwnProperty.call(M,W)&&Ua(K,M,W);return Da(K,M),K},Ka=function(M){return M&&M.__esModule?M:{default:M}},Ha=function(M,K,W,w){if(W==="a"&&!w)throw new TypeError("Private accessor was defined without a getter");if(typeof K=="function"?M!==K||!w:!K.has(M))throw new TypeError("Cannot read private member from an object whose class did not declare it");return W==="m"?w:W==="a"?w.call(M):w?w.value:K.get(M)},xa=function(M,K,W,w,Y){if(w==="m")throw new TypeError("Private method is not writable");if(w==="a"&&!Y)throw new TypeError("Private accessor was defined without a setter");if(typeof K=="function"?M!==K||!Y:!K.has(M))throw new TypeError("Cannot write private member to an object whose class did not declare it");return w==="a"?Y.call(M,W):Y?Y.value=W:K.set(M,W),W},ta("__extends",N),ta("__assign",G),ta("__rest",L),ta("__decorate",O),ta("__param",j),ta("__metadata",H),ta("__awaiter",$),ta("__generator",X),ta("__exportStar",ca),ta("__createBinding",Ua),ta("__values",Aa),ta("__read",la),ta("__spread",Ea),ta("__spreadArrays",sa),ta("__spreadArray",J),ta("__await",Q),ta("__asyncGenerator",da),ta("__asyncDelegator",ma),ta("__asyncValues",ia),ta("__makeTemplateObject",Pa),ta("__importStar",ja),ta("__importDefault",Ka),ta("__classPrivateFieldGet",Ha),ta("__classPrivateFieldSet",xa)})}}),Vl=Ba({"../../node_modules/lower-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.lowerCase=a.localeLowerCase=void 0;var B={tr:{regexp:/\u0130|\u0049|\u0049\u0307/g,map:{\u0130:"i",I:"\u0131",I\u0307:"i"}},az:{regexp:/\u0130/g,map:{\u0130:"i",I:"\u0131",I\u0307:"i"}},lt:{regexp:/\u0049|\u004A|\u012E|\u00CC|\u00CD|\u0128/g,map:{I:"i\u0307",J:"j\u0307",\u012E:"\u012F\u0307",\u00CC:"i\u0307\u0300",\u00CD:"i\u0307\u0301",\u0128:"i\u0307\u0303"}}};function N(L,O){var j=B[O.toLowerCase()];return G(j?L.replace(j.regexp,function(H){return j.map[H]}):L)}a.localeLowerCase=N;function G(L){return L.toLowerCase()}a.lowerCase=G}}),re=Ba({"../../node_modules/no-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.noCase=void 0;var B=Vl(),N=[/([a-z0-9])([A-Z])/g,/([A-Z])([A-Z][a-z])/g],G=/[^A-Z0-9]+/gi;function L(j,H){H===void 0&&(H={});for(var $=H.splitRegexp,X=$===void 0?N:$,ca=H.stripRegexp,Aa=ca===void 0?G:ca,la=H.transform,Ea=la===void 0?B.lowerCase:la,sa=H.delimiter,J=sa===void 0?" ":sa,Q=O(O(j,X,"$1\0$2"),Aa,"\0"),da=0,ma=Q.length;Q.charAt(da)==="\0";)da++;for(;Q.charAt(ma-1)==="\0";)ma--;return Q.slice(da,ma).split("\0").map(Ea).join(J)}a.noCase=L;function O(j,H,$){return H instanceof RegExp?j.replace(H,$):H.reduce(function(X,ca){return X.replace(ca,$)},j)}}}),Fn=Ba({"../../node_modules/pascal-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.pascalCase=a.pascalCaseTransformMerge=a.pascalCaseTransform=void 0;var B=La(),N=re();function G(j,H){var $=j.charAt(0),X=j.substr(1).toLowerCase();return H>0&&$>="0"&&$<="9"?"_"+$+X:""+$.toUpperCase()+X}a.pascalCaseTransform=G;function L(j){return j.charAt(0).toUpperCase()+j.slice(1).toLowerCase()}a.pascalCaseTransformMerge=L;function O(j,H){return H===void 0&&(H={}),N.noCase(j,B.__assign({delimiter:"",transform:G},H))}a.pascalCase=O}}),Rl=Ba({"../../node_modules/camel-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.camelCase=a.camelCaseTransformMerge=a.camelCaseTransform=void 0;var B=La(),N=Fn();function G(j,H){return H===0?j.toLowerCase():N.pascalCaseTransform(j,H)}a.camelCaseTransform=G;function L(j,H){return H===0?j.toLowerCase():N.pascalCaseTransformMerge(j)}a.camelCaseTransformMerge=L;function O(j,H){return H===void 0&&(H={}),N.pascalCase(j,B.__assign({transform:G},H))}a.camelCase=O}}),kn=Ba({"../../node_modules/upper-case-first/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.upperCaseFirst=void 0;function B(N){return N.charAt(0).toUpperCase()+N.substr(1)}a.upperCaseFirst=B}}),Mn=Ba({"../../node_modules/capital-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.capitalCase=a.capitalCaseTransform=void 0;var B=La(),N=re(),G=kn();function L(j){return G.upperCaseFirst(j.toLowerCase())}a.capitalCaseTransform=L;function O(j,H){return H===void 0&&(H={}),N.noCase(j,B.__assign({delimiter:" ",transform:L},H))}a.capitalCase=O}}),Jl=Ba({"../../node_modules/constant-case/node_modules/upper-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.upperCase=a.localeUpperCase=void 0;var B={tr:{regexp:/[\u0069]/g,map:{i:"\u0130"}},az:{regexp:/[\u0069]/g,map:{i:"\u0130"}},lt:{regexp:/[\u0069\u006A\u012F]\u0307|\u0069\u0307[\u0300\u0301\u0303]/g,map:{i\u0307:"I",j\u0307:"J",\u012F\u0307:"\u012E",i\u0307\u0300:"\xCC",i\u0307\u0301:"\xCD",i\u0307\u0303:"\u0128"}}};function N(L,O){var j=B[O.toLowerCase()];return G(j?L.replace(j.regexp,function(H){return j.map[H]}):L)}a.localeUpperCase=N;function G(L){return L.toUpperCase()}a.upperCase=G}}),Yl=Ba({"../../node_modules/constant-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.constantCase=void 0;var B=La(),N=re(),G=Jl();function L(O,j){return j===void 0&&(j={}),N.noCase(O,B.__assign({delimiter:"_",transform:G.upperCase},j))}a.constantCase=L}}),pe=Ba({"../../node_modules/dot-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.dotCase=void 0;var B=La(),N=re();function G(L,O){return O===void 0&&(O={}),N.noCase(L,B.__assign({delimiter:"."},O))}a.dotCase=G}}),Zl=Ba({"../../node_modules/header-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.headerCase=void 0;var B=La(),N=Mn();function G(L,O){return O===void 0&&(O={}),N.capitalCase(L,B.__assign({delimiter:"-"},O))}a.headerCase=G}}),$l=Ba({"../../node_modules/param-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.paramCase=void 0;var B=La(),N=pe();function G(L,O){return O===void 0&&(O={}),N.dotCase(L,B.__assign({delimiter:"-"},O))}a.paramCase=G}}),Ql=Ba({"../../node_modules/path-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.pathCase=void 0;var B=La(),N=pe();function G(L,O){return O===void 0&&(O={}),N.dotCase(L,B.__assign({delimiter:"/"},O))}a.pathCase=G}}),Xl=Ba({"../../node_modules/sentence-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.sentenceCase=a.sentenceCaseTransform=void 0;var B=La(),N=re(),G=kn();function L(j,H){var $=j.toLowerCase();return H===0?G.upperCaseFirst($):$}a.sentenceCaseTransform=L;function O(j,H){return H===void 0&&(H={}),N.noCase(j,B.__assign({delimiter:" ",transform:L},H))}a.sentenceCase=O}}),Cl=Ba({"../../node_modules/snake-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.snakeCase=void 0;var B=La(),N=pe();function G(L,O){return O===void 0&&(O={}),N.dotCase(L,B.__assign({delimiter:"_"},O))}a.snakeCase=G}}),am=Ba({"../../node_modules/change-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var B=La();B.__exportStar(Rl(),a),B.__exportStar(Mn(),a),B.__exportStar(Yl(),a),B.__exportStar(pe(),a),B.__exportStar(Zl(),a),B.__exportStar(re(),a),B.__exportStar($l(),a),B.__exportStar(Fn(),a),B.__exportStar(Ql(),a),B.__exportStar(Xl(),a),B.__exportStar(Cl(),a)}}),em=Object.create,xe=Object.defineProperty,im=Object.getOwnPropertyDescriptor,Gn=Object.getOwnPropertyNames,um=Object.getPrototypeOf,nm=Object.prototype.hasOwnProperty,sm=a=>xe(a,"__esModule",{value:!0}),ve=(a,B)=>function(){return B||(0,a[Gn(a)[0]])((B={exports:{}}).exports,B),B.exports},rm=(a,B,N,G)=>{if(B&&typeof B=="object"||typeof B=="function")for(let L of Gn(B))!nm.call(a,L)&&(N||L!=="default")&&xe(a,L,{get:()=>B[L],enumerable:!(G=im(B,L))||G.enumerable});return a},tm=(a,B)=>rm(sm(xe(a!=null?em(um(a)):{},"default",!B&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),wn=ve({"../../node_modules/object-assign/index.js"(a,B){"use strict";var N=Object.getOwnPropertySymbols,G=Object.prototype.hasOwnProperty,L=Object.prototype.propertyIsEnumerable;function O(H){if(H==null)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(H)}function j(){try{if(!Object.assign)return!1;var H=new String("abc");if(H[5]="de",Object.getOwnPropertyNames(H)[0]==="5")return!1;for(var $={},X=0;X<10;X++)$["_"+String.fromCharCode(X)]=X;var ca=Object.getOwnPropertyNames($).map(function(la){return $[la]});if(ca.join("")!=="0123456789")return!1;var Aa={};return"abcdefghijklmnopqrst".split("").forEach(function(la){Aa[la]=la}),Object.keys(Object.assign({},Aa)).join("")==="abcdefghijklmnopqrst"}catch(la){return!1}}B.exports=j()?Object.assign:function(H,$){for(var X,ca=O(H),Aa,la=1;la<arguments.length;la++){X=Object(arguments[la]);for(var Ea in X)G.call(X,Ea)&&(ca[Ea]=X[Ea]);if(N){Aa=N(X);for(var sa=0;sa<Aa.length;sa++)L.call(X,Aa[sa])&&(ca[Aa[sa]]=X[Aa[sa]])}}return ca}}}),lm=ve({"../../node_modules/react/cjs/react.production.min.js"(a){"use strict";var B=wn(),N=60103,G=60106;a.Fragment=60107,a.StrictMode=60108,a.Profiler=60114;var L=60109,O=60110,j=60112;a.Suspense=60113;var H=60115,$=60116;typeof Symbol=="function"&&Symbol.for&&(X=Symbol.for,N=X("react.element"),G=X("react.portal"),a.Fragment=X("react.fragment"),a.StrictMode=X("react.strict_mode"),a.Profiler=X("react.profiler"),L=X("react.provider"),O=X("react.context"),j=X("react.forward_ref"),a.Suspense=X("react.suspense"),H=X("react.memo"),$=X("react.lazy"));var X,ca=typeof Symbol=="function"&&Symbol.iterator;function Aa(b){return b===null||typeof b!="object"?null:(b=ca&&b[ca]||b["@@iterator"],typeof b=="function"?b:null)}function la(b){for(var q="https://reactjs.org/docs/error-decoder.html?invariant="+b,Z=1;Z<arguments.length;Z++)q+="&args[]="+encodeURIComponent(arguments[Z]);return"Minified React error #"+b+"; visit "+q+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var Ea={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},sa={};function J(b,q,Z){this.props=b,this.context=q,this.refs=sa,this.updater=Z||Ea}J.prototype.isReactComponent={},J.prototype.setState=function(b,q){if(typeof b!="object"&&typeof b!="function"&&b!=null)throw Error(la(85));this.updater.enqueueSetState(this,b,q,"setState")},J.prototype.forceUpdate=function(b){this.updater.enqueueForceUpdate(this,b,"forceUpdate")};function Q(){}Q.prototype=J.prototype;function da(b,q,Z){this.props=b,this.context=q,this.refs=sa,this.updater=Z||Ea}var ma=da.prototype=new Q;ma.constructor=da,B(ma,J.prototype),ma.isPureReactComponent=!0;var ia={current:null},Pa=Object.prototype.hasOwnProperty,ja={key:!0,ref:!0,__self:!0,__source:!0};function Ka(b,q,Z){var na,V={},ra=null,fa=null;if(q!=null)for(na in q.ref!==void 0&&(fa=q.ref),q.key!==void 0&&(ra=""+q.key),q)Pa.call(q,na)&&!ja.hasOwnProperty(na)&&(V[na]=q[na]);var ua=arguments.length-2;if(ua===1)V.children=Z;else if(1<ua){for(var oa=Array(ua),va=0;va<ua;va++)oa[va]=arguments[va+2];V.children=oa}if(b&&b.defaultProps)for(na in ua=b.defaultProps,ua)V[na]===void 0&&(V[na]=ua[na]);return{$$typeof:N,type:b,key:ra,ref:fa,props:V,_owner:ia.current}}function Ha(b,q){return{$$typeof:N,type:b.type,key:q,ref:b.ref,props:b.props,_owner:b._owner}}function xa(b){return typeof b=="object"&&b!==null&&b.$$typeof===N}function Ua(b){var q={"=":"=0",":":"=2"};return"$"+b.replace(/[=:]/g,function(Z){return q[Z]})}var ta=/\/+/g;function Na(b,q){return typeof b=="object"&&b!==null&&b.key!=null?Ua(""+b.key):q.toString(36)}function Da(b,q,Z,na,V){var ra=typeof b;(ra==="undefined"||ra==="boolean")&&(b=null);var fa=!1;if(b===null)fa=!0;else switch(ra){case"string":case"number":fa=!0;break;case"object":switch(b.$$typeof){case N:case G:fa=!0}}if(fa)return fa=b,V=V(fa),b=na===""?"."+Na(fa,0):na,Array.isArray(V)?(Z="",b!=null&&(Z=b.replace(ta,"$&/")+"/"),Da(V,q,Z,"",function(va){return va})):V!=null&&(xa(V)&&(V=Ha(V,Z+(!V.key||fa&&fa.key===V.key?"":(""+V.key).replace(ta,"$&/")+"/")+b)),q.push(V)),1;if(fa=0,na=na===""?".":na+":",Array.isArray(b))for(var ua=0;ua<b.length;ua++){ra=b[ua];var oa=na+Na(ra,ua);fa+=Da(ra,q,Z,oa,V)}else if(oa=Aa(b),typeof oa=="function")for(b=oa.call(b),ua=0;!(ra=b.next()).done;)ra=ra.value,oa=na+Na(ra,ua++),fa+=Da(ra,q,Z,oa,V);else if(ra==="object")throw q=""+b,Error(la(31,q==="[object Object]"?"object with keys {"+Object.keys(b).join(", ")+"}":q));return fa}function M(b,q,Z){if(b==null)return b;var na=[],V=0;return Da(b,na,"","",function(ra){return q.call(Z,ra,V++)}),na}function K(b){if(b._status===-1){var q=b._result;q=q(),b._status=0,b._result=q,q.then(function(Z){b._status===0&&(Z=Z.default,b._status=1,b._result=Z)},function(Z){b._status===0&&(b._status=2,b._result=Z)})}if(b._status===1)return b._result;throw b._result}var W={current:null};function w(){var b=W.current;if(b===null)throw Error(la(321));return b}var Y={ReactCurrentDispatcher:W,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:ia,IsSomeRendererActing:{current:!1},assign:B};a.Children={map:M,forEach:function(b,q,Z){M(b,function(){q.apply(this,arguments)},Z)},count:function(b){var q=0;return M(b,function(){q++}),q},toArray:function(b){return M(b,function(q){return q})||[]},only:function(b){if(!xa(b))throw Error(la(143));return b}},a.Component=J,a.PureComponent=da,a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Y,a.cloneElement=function(b,q,Z){if(b==null)throw Error(la(267,b));var na=B({},b.props),V=b.key,ra=b.ref,fa=b._owner;if(q!=null){if(q.ref!==void 0&&(ra=q.ref,fa=ia.current),q.key!==void 0&&(V=""+q.key),b.type&&b.type.defaultProps)var ua=b.type.defaultProps;for(oa in q)Pa.call(q,oa)&&!ja.hasOwnProperty(oa)&&(na[oa]=q[oa]===void 0&&ua!==void 0?ua[oa]:q[oa])}var oa=arguments.length-2;if(oa===1)na.children=Z;else if(1<oa){ua=Array(oa);for(var va=0;va<oa;va++)ua[va]=arguments[va+2];na.children=ua}return{$$typeof:N,type:b.type,key:V,ref:ra,props:na,_owner:fa}},a.createContext=function(b,q){return q===void 0&&(q=null),b={$$typeof:O,_calculateChangedBits:q,_currentValue:b,_currentValue2:b,_threadCount:0,Provider:null,Consumer:null},b.Provider={$$typeof:L,_context:b},b.Consumer=b},a.createElement=Ka,a.createFactory=function(b){var q=Ka.bind(null,b);return q.type=b,q},a.createRef=function(){return{current:null}},a.forwardRef=function(b){return{$$typeof:j,render:b}},a.isValidElement=xa,a.lazy=function(b){return{$$typeof:$,_payload:{_status:-1,_result:b},_init:K}},a.memo=function(b,q){return{$$typeof:H,type:b,compare:q===void 0?null:q}},a.useCallback=function(b,q){return w().useCallback(b,q)},a.useContext=function(b,q){return w().useContext(b,q)},a.useDebugValue=function(){},a.useEffect=function(b,q){return w().useEffect(b,q)},a.useImperativeHandle=function(b,q,Z){return w().useImperativeHandle(b,q,Z)},a.useLayoutEffect=function(b,q){return w().useLayoutEffect(b,q)},a.useMemo=function(b,q){return w().useMemo(b,q)},a.useReducer=function(b,q,Z){return w().useReducer(b,q,Z)},a.useRef=function(b){return w().useRef(b)},a.useState=function(b){return w().useState(b)},a.version="17.0.2"}}),mm=ve({"../../node_modules/react/cjs/react.development.js"(a){"use strict";process.env.NODE_ENV!=="production"&&function(){"use strict";var B=wn(),N="17.0.2",G=60103,L=60106;a.Fragment=60107,a.StrictMode=60108,a.Profiler=60114;var O=60109,j=60110,H=60112;a.Suspense=60113;var $=60120,X=60115,ca=60116,Aa=60121,la=60122,Ea=60117,sa=60119,J=60128,Q=60129,da=60130,ma=60131;if(typeof Symbol=="function"&&Symbol.for){var ia=Symbol.for;G=ia("react.element"),L=ia("react.portal"),a.Fragment=ia("react.fragment"),a.StrictMode=ia("react.strict_mode"),a.Profiler=ia("react.profiler"),O=ia("react.provider"),j=ia("react.context"),H=ia("react.forward_ref"),a.Suspense=ia("react.suspense"),$=ia("react.suspense_list"),X=ia("react.memo"),ca=ia("react.lazy"),Aa=ia("react.block"),la=ia("react.server.block"),Ea=ia("react.fundamental"),sa=ia("react.scope"),J=ia("react.opaque.id"),Q=ia("react.debug_trace_mode"),da=ia("react.offscreen"),ma=ia("react.legacy_hidden")}var Pa=typeof Symbol=="function"&&Symbol.iterator,ja="@@iterator";function Ka(E){if(E===null||typeof E!="object")return null;var U=Pa&&E[Pa]||E[ja];return typeof U=="function"?U:null}var Ha={current:null},xa={transition:0},Ua={current:null},ta={},Na=null;function Da(E){Na=E}ta.setExtraStackFrame=function(E){Na=E},ta.getCurrentStack=null,ta.getStackAddendum=function(){var E="";Na&&(E+=Na);var U=ta.getCurrentStack;return U&&(E+=U()||""),E};var M={current:!1},K={ReactCurrentDispatcher:Ha,ReactCurrentBatchConfig:xa,ReactCurrentOwner:Ua,IsSomeRendererActing:M,assign:B};K.ReactDebugCurrentFrame=ta;function W(E){{for(var U=arguments.length,k=new Array(U>1?U-1:0),x=1;x<U;x++)k[x-1]=arguments[x];Y("warn",E,k)}}function w(E){{for(var U=arguments.length,k=new Array(U>1?U-1:0),x=1;x<U;x++)k[x-1]=arguments[x];Y("error",E,k)}}function Y(E,U,k){{var x=K.ReactDebugCurrentFrame,R=x.getStackAddendum();R!==""&&(U+="%s",k=k.concat([R]));var ea=k.map(function(aa){return""+aa});ea.unshift("Warning: "+U),Function.prototype.apply.call(console[E],console,ea)}}var b={};function q(E,U){{var k=E.constructor,x=k&&(k.displayName||k.name)||"ReactClass",R=x+"."+U;if(b[R])return;w("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.",U,x),b[R]=!0}}var Z={isMounted:function(E){return!1},enqueueForceUpdate:function(E,U,k){q(E,"forceUpdate")},enqueueReplaceState:function(E,U,k,x){q(E,"replaceState")},enqueueSetState:function(E,U,k,x){q(E,"setState")}},na={};Object.freeze(na);function V(E,U,k){this.props=E,this.context=U,this.refs=na,this.updater=k||Z}V.prototype.isReactComponent={},V.prototype.setState=function(E,U){if(!(typeof E=="object"||typeof E=="function"||E==null))throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,E,U,"setState")},V.prototype.forceUpdate=function(E){this.updater.enqueueForceUpdate(this,E,"forceUpdate")};{var ra={isMounted:["isMounted","Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],replaceState:["replaceState","Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]},fa=function(E,U){Object.defineProperty(V.prototype,E,{get:function(){W("%s(...) is deprecated in plain JavaScript React classes. %s",U[0],U[1])}})};for(var ua in ra)ra.hasOwnProperty(ua)&&fa(ua,ra[ua])}function oa(){}oa.prototype=V.prototype;function va(E,U,k){this.props=E,this.context=U,this.refs=na,this.updater=k||Z}var le=va.prototype=new oa;le.constructor=va,B(le,V.prototype),le.isPureReactComponent=!0;function k0(){var E={current:null};return Object.seal(E),E}function M0(E,U,k){var x=U.displayName||U.name||"";return E.displayName||(x!==""?k+"("+x+")":k)}function Re(E){return E.displayName||"Context"}function wa(E){if(E==null)return null;if(typeof E.tag=="number"&&w("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue."),typeof E=="function")return E.displayName||E.name||null;if(typeof E=="string")return E;switch(E){case a.Fragment:return"Fragment";case L:return"Portal";case a.Profiler:return"Profiler";case a.StrictMode:return"StrictMode";case a.Suspense:return"Suspense";case $:return"SuspenseList"}if(typeof E=="object")switch(E.$$typeof){case j:var U=E;return Re(U)+".Consumer";case O:var k=E;return Re(k._context)+".Provider";case H:return M0(E,E.render,"ForwardRef");case X:return wa(E.type);case Aa:return wa(E._render);case ca:{var x=E,R=x._payload,ea=x._init;try{return wa(ea(R))}catch(aa){return null}}}return null}var Ae=Object.prototype.hasOwnProperty,Je={key:!0,ref:!0,__self:!0,__source:!0},Ye,Ze,Be;Be={};function $e(E){if(Ae.call(E,"ref")){var U=Object.getOwnPropertyDescriptor(E,"ref").get;if(U&&U.isReactWarning)return!1}return E.ref!==void 0}function Qe(E){if(Ae.call(E,"key")){var U=Object.getOwnPropertyDescriptor(E,"key").get;if(U&&U.isReactWarning)return!1}return E.key!==void 0}function L0(E,U){var k=function(){Ye||(Ye=!0,w("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",U))};k.isReactWarning=!0,Object.defineProperty(E,"key",{get:k,configurable:!0})}function q0(E,U){var k=function(){Ze||(Ze=!0,w("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",U))};k.isReactWarning=!0,Object.defineProperty(E,"ref",{get:k,configurable:!0})}function G0(E){if(typeof E.ref=="string"&&Ua.current&&E.__self&&Ua.current.stateNode!==E.__self){var U=wa(Ua.current.type);Be[U]||(w('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',U,E.ref),Be[U]=!0)}}var Ue=function(E,U,k,x,R,ea,aa){var C={$$typeof:G,type:E,key:U,ref:k,props:aa,_owner:ea};return C._store={},Object.defineProperty(C._store,"validated",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(C,"_self",{configurable:!1,enumerable:!1,writable:!1,value:x}),Object.defineProperty(C,"_source",{configurable:!1,enumerable:!1,writable:!1,value:R}),Object.freeze&&(Object.freeze(C.props),Object.freeze(C)),C};function w0(E,U,k){var x,R={},ea=null,aa=null,C=null,Ia=null;if(U!=null){$e(U)&&(aa=U.ref,G0(U)),Qe(U)&&(ea=""+U.key),C=U.__self===void 0?null:U.__self,Ia=U.__source===void 0?null:U.__source;for(x in U)Ae.call(U,x)&&!Je.hasOwnProperty(x)&&(R[x]=U[x])}var _a=arguments.length-2;if(_a===1)R.children=k;else if(_a>1){for(var ha=Array(_a),ba=0;ba<_a;ba++)ha[ba]=arguments[ba+2];Object.freeze&&Object.freeze(ha),R.children=ha}if(E&&E.defaultProps){var Fa=E.defaultProps;for(x in Fa)R[x]===void 0&&(R[x]=Fa[x])}if(ea||aa){var ya=typeof E=="function"?E.displayName||E.name||"Unknown":E;ea&&L0(R,ya),aa&&q0(R,ya)}return Ue(E,ea,aa,C,Ia,Ua.current,R)}function K0(E,U){var k=Ue(E.type,U,E.ref,E._self,E._source,E._owner,E.props);return k}function x0(E,U,k){if(E==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+E+".");var x,R=B({},E.props),ea=E.key,aa=E.ref,C=E._self,Ia=E._source,_a=E._owner;if(U!=null){$e(U)&&(aa=U.ref,_a=Ua.current),Qe(U)&&(ea=""+U.key);var ha;E.type&&E.type.defaultProps&&(ha=E.type.defaultProps);for(x in U)Ae.call(U,x)&&!Je.hasOwnProperty(x)&&(U[x]===void 0&&ha!==void 0?R[x]=ha[x]:R[x]=U[x])}var ba=arguments.length-2;if(ba===1)R.children=k;else if(ba>1){for(var Fa=Array(ba),ya=0;ya<ba;ya++)Fa[ya]=arguments[ya+2];R.children=Fa}return Ue(E.type,ea,aa,C,Ia,_a,R)}function ee(E){return typeof E=="object"&&E!==null&&E.$$typeof===G}var Xe=".",O0=":";function j0(E){var U=/[=:]/g,k={"=":"=0",":":"=2"},x=E.replace(U,function(R){return k[R]});return"$"+x}var Ce=!1,H0=/\/+/g;function ai(E){return E.replace(H0,"$&/")}function Ne(E,U){return typeof E=="object"&&E!==null&&E.key!=null?j0(""+E.key):U.toString(36)}function de(E,U,k,x,R){var ea=typeof E;(ea==="undefined"||ea==="boolean")&&(E=null);var aa=!1;if(E===null)aa=!0;else switch(ea){case"string":case"number":aa=!0;break;case"object":switch(E.$$typeof){case G:case L:aa=!0}}if(aa){var C=E,Ia=R(C),_a=x===""?Xe+Ne(C,0):x;if(Array.isArray(Ia)){var ha="";_a!=null&&(ha=ai(_a)+"/"),de(Ia,U,ha,"",function(Dl){return Dl})}else Ia!=null&&(ee(Ia)&&(Ia=K0(Ia,k+(Ia.key&&(!C||C.key!==Ia.key)?ai(""+Ia.key)+"/":"")+_a)),U.push(Ia));return 1}var ba,Fa,ya=0,Ma=x===""?Xe:x+O0;if(Array.isArray(E))for(var Ee=0;Ee<E.length;Ee++)ba=E[Ee],Fa=Ma+Ne(ba,Ee),ya+=de(ba,U,k,Fa,R);else{var Me=Ka(E);if(typeof Me=="function"){var vi=E;Me===vi.entries&&(Ce||W("Using Maps as children is not supported. Use an array of keyed ReactElements instead."),Ce=!0);for(var Ul=Me.call(vi),bi,Nl=0;!(bi=Ul.next()).done;)ba=bi.value,Fa=Ma+Ne(ba,Nl++),ya+=de(ba,U,k,Fa,R)}else if(ea==="object"){var Bi=""+E;throw Error("Objects are not valid as a React child (found: "+(Bi==="[object Object]"?"object with keys {"+Object.keys(E).join(", ")+"}":Bi)+"). If you meant to render a collection of children, use an array instead.")}}return ya}function fe(E,U,k){if(E==null)return E;var x=[],R=0;return de(E,x,"","",function(ea){return U.call(k,ea,R++)}),x}function W0(E){var U=0;return fe(E,function(){U++}),U}function z0(E,U,k){fe(E,function(){U.apply(this,arguments)},k)}function V0(E){return fe(E,function(U){return U})||[]}function R0(E){if(!ee(E))throw Error("React.Children.only expected to receive a single React element child.");return E}function J0(E,U){U===void 0?U=null:U!==null&&typeof U!="function"&&w("createContext: Expected the optional second argument to be a function. Instead received: %s",U);var k={$$typeof:j,_calculateChangedBits:U,_currentValue:E,_currentValue2:E,_threadCount:0,Provider:null,Consumer:null};k.Provider={$$typeof:O,_context:k};var x=!1,R=!1,ea=!1;{var aa={$$typeof:j,_context:k,_calculateChangedBits:k._calculateChangedBits};Object.defineProperties(aa,{Provider:{get:function(){return R||(R=!0,w("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?")),k.Provider},set:function(C){k.Provider=C}},_currentValue:{get:function(){return k._currentValue},set:function(C){k._currentValue=C}},_currentValue2:{get:function(){return k._currentValue2},set:function(C){k._currentValue2=C}},_threadCount:{get:function(){return k._threadCount},set:function(C){k._threadCount=C}},Consumer:{get:function(){return x||(x=!0,w("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?")),k.Consumer}},displayName:{get:function(){return k.displayName},set:function(C){ea||(W("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.",C),ea=!0)}}}),k.Consumer=aa}return k._currentRenderer=null,k._currentRenderer2=null,k}var Y0=-1,De=0,ei=1,Z0=2;function $0(E){if(E._status===Y0){var U=E._result,k=U(),x=E;x._status=De,x._result=k,k.then(function(R){if(E._status===De){var ea=R.default;ea===void 0&&w(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))`,R);var aa=E;aa._status=ei,aa._result=ea}},function(R){if(E._status===De){var ea=E;ea._status=Z0,ea._result=R}})}if(E._status===ei)return E._result;throw E._result}function Q0(E){var U={_status:-1,_result:E},k={$$typeof:ca,_payload:U,_init:$0};{var x,R;Object.defineProperties(k,{defaultProps:{configurable:!0,get:function(){return x},set:function(ea){w("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."),x=ea,Object.defineProperty(k,"defaultProps",{enumerable:!0})}},propTypes:{configurable:!0,get:function(){return R},set:function(ea){w("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."),R=ea,Object.defineProperty(k,"propTypes",{enumerable:!0})}}})}return k}function X0(E){E!=null&&E.$$typeof===X?w("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))."):typeof E!="function"?w("forwardRef requires a render function but was given %s.",E===null?"null":typeof E):E.length!==0&&E.length!==2&&w("forwardRef render functions accept exactly two parameters: props and ref. %s",E.length===1?"Did you forget to use the ref parameter?":"Any additional parameter will be undefined."),E!=null&&(E.defaultProps!=null||E.propTypes!=null)&&w("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");var U={$$typeof:H,render:E};{var k;Object.defineProperty(U,"displayName",{enumerable:!1,configurable:!0,get:function(){return k},set:function(x){k=x,E.displayName==null&&(E.displayName=x)}})}return U}var C0=!1;function ii(E){return!!(typeof E=="string"||typeof E=="function"||E===a.Fragment||E===a.Profiler||E===Q||E===a.StrictMode||E===a.Suspense||E===$||E===ma||C0||typeof E=="object"&&E!==null&&(E.$$typeof===ca||E.$$typeof===X||E.$$typeof===O||E.$$typeof===j||E.$$typeof===H||E.$$typeof===Ea||E.$$typeof===Aa||E[0]===la))}function al(E,U){ii(E)||w("memo: The first argument must be a component. Instead received: %s",E===null?"null":typeof E);var k={$$typeof:X,type:E,compare:U===void 0?null:U};{var x;Object.defineProperty(k,"displayName",{enumerable:!1,configurable:!0,get:function(){return x},set:function(R){x=R,E.displayName==null&&(E.displayName=R)}})}return k}function qa(){var E=Ha.current;if(E===null)throw Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);return E}function el(E,U){var k=qa();if(U!==void 0&&w("useContext() second argument is reserved for future use in React. Passing it is not supported. You passed: %s.%s",U,typeof U=="number"&&Array.isArray(arguments[2])?`

Did you call array.map(useContext)? Calling Hooks inside a loop is not supported. Learn more at https://reactjs.org/link/rules-of-hooks`:""),E._context!==void 0){var x=E._context;x.Consumer===E?w("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?"):x.Provider===E&&w("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?")}return k.useContext(E,U)}function il(E){var U=qa();return U.useState(E)}function ul(E,U,k){var x=qa();return x.useReducer(E,U,k)}function nl(E){var U=qa();return U.useRef(E)}function sl(E,U){var k=qa();return k.useEffect(E,U)}function rl(E,U){var k=qa();return k.useLayoutEffect(E,U)}function tl(E,U){var k=qa();return k.useCallback(E,U)}function ll(E,U){var k=qa();return k.useMemo(E,U)}function ml(E,U,k){var x=qa();return x.useImperativeHandle(E,U,k)}function cl(E,U){{var k=qa();return k.useDebugValue(E,U)}}var me=0,ui,ni,si,ri,ti,li,mi;function ci(){}ci.__reactDisabledLog=!0;function ol(){{if(me===0){ui=console.log,ni=console.info,si=console.warn,ri=console.error,ti=console.group,li=console.groupCollapsed,mi=console.groupEnd;var E={configurable:!0,enumerable:!0,value:ci,writable:!0};Object.defineProperties(console,{info:E,log:E,warn:E,error:E,group:E,groupCollapsed:E,groupEnd:E})}me++}}function Al(){{if(me--,me===0){var E={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:B({},E,{value:ui}),info:B({},E,{value:ni}),warn:B({},E,{value:si}),error:B({},E,{value:ri}),group:B({},E,{value:ti}),groupCollapsed:B({},E,{value:li}),groupEnd:B({},E,{value:mi})})}me<0&&w("disabledDepth fell below zero. This is a bug in React. Please file an issue.")}}var Pe=K.ReactCurrentDispatcher,ye;function Ie(E,U,k){{if(ye===void 0)try{throw Error()}catch(R){var x=R.stack.trim().match(/\n( *(at )?)/);ye=x&&x[1]||""}return`
`+ye+E}}var Fe=!1,_e;{var dl=typeof WeakMap=="function"?WeakMap:Map;_e=new dl}function oi(E,U){if(!E||Fe)return"";{var k=_e.get(E);if(k!==void 0)return k}var x;Fe=!0;var R=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var ea;ea=Pe.current,Pe.current=null,ol();try{if(U){var aa=function(){throw Error()};if(Object.defineProperty(aa.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(aa,[])}catch(Ma){x=Ma}Reflect.construct(E,[],aa)}else{try{aa.call()}catch(Ma){x=Ma}E.call(aa.prototype)}}else{try{throw Error()}catch(Ma){x=Ma}E()}}catch(Ma){if(Ma&&x&&typeof Ma.stack=="string"){for(var C=Ma.stack.split(`
`),Ia=x.stack.split(`
`),_a=C.length-1,ha=Ia.length-1;_a>=1&&ha>=0&&C[_a]!==Ia[ha];)ha--;for(;_a>=1&&ha>=0;_a--,ha--)if(C[_a]!==Ia[ha]){if(_a!==1||ha!==1)do if(_a--,ha--,ha<0||C[_a]!==Ia[ha]){var ba=`
`+C[_a].replace(" at new "," at ");return typeof E=="function"&&_e.set(E,ba),ba}while(_a>=1&&ha>=0);break}}}finally{Fe=!1,Pe.current=ea,Al(),Error.prepareStackTrace=R}var Fa=E?E.displayName||E.name:"",ya=Fa?Ie(Fa):"";return typeof E=="function"&&_e.set(E,ya),ya}function Ai(E,U,k){return oi(E,!1)}function fl(E){var U=E.prototype;return!!(U&&U.isReactComponent)}function he(E,U,k){if(E==null)return"";if(typeof E=="function")return oi(E,fl(E));if(typeof E=="string")return Ie(E);switch(E){case a.Suspense:return Ie("Suspense");case $:return Ie("SuspenseList")}if(typeof E=="object")switch(E.$$typeof){case H:return Ai(E.render);case X:return he(E.type,U,k);case Aa:return Ai(E._render);case ca:{var x=E,R=x._payload,ea=x._init;try{return he(ea(R),U,k)}catch(aa){}}}return""}var di={},fi=K.ReactDebugCurrentFrame;function ge(E){if(E){var U=E._owner,k=he(E.type,E._source,U?U.type:null);fi.setExtraStackFrame(k)}else fi.setExtraStackFrame(null)}function Il(E,U,k,x,R){{var ea=Function.call.bind(Object.prototype.hasOwnProperty);for(var aa in E)if(ea(E,aa)){var C=void 0;try{if(typeof E[aa]!="function"){var Ia=Error((x||"React class")+": "+k+" type `"+aa+"` is invalid; it must be a function, usually from the `prop-types` package, but received `"+typeof E[aa]+"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");throw Ia.name="Invariant Violation",Ia}C=E[aa](U,aa,x,k,null,"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED")}catch(_a){C=_a}C&&!(C instanceof Error)&&(ge(R),w("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).",x||"React class",k,aa,typeof C),ge(null)),C instanceof Error&&!(C.message in di)&&(di[C.message]=!0,ge(R),w("Failed %s type: %s",k,C.message),ge(null))}}}function ie(E){if(E){var U=E._owner,k=he(E.type,E._source,U?U.type:null);Da(k)}else Da(null)}var ke;ke=!1;function Ii(){if(Ua.current){var E=wa(Ua.current.type);if(E)return`

Check the render method of \``+E+"`."}return""}function _l(E){if(E!==void 0){var U=E.fileName.replace(/^.*[\\\/]/,""),k=E.lineNumber;return`

Check your code at `+U+":"+k+"."}return""}function hl(E){return E!=null?_l(E.__source):""}var _i={};function gl(E){var U=Ii();if(!U){var k=typeof E=="string"?E:E.displayName||E.name;k&&(U=`

Check the top-level render call using <`+k+">.")}return U}function hi(E,U){if(!(!E._store||E._store.validated||E.key!=null)){E._store.validated=!0;var k=gl(U);if(!_i[k]){_i[k]=!0;var x="";E&&E._owner&&E._owner!==Ua.current&&(x=" It was passed a child from "+wa(E._owner.type)+"."),ie(E),w('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',k,x),ie(null)}}}function gi(E,U){if(typeof E=="object"){if(Array.isArray(E))for(var k=0;k<E.length;k++){var x=E[k];ee(x)&&hi(x,U)}else if(ee(E))E._store&&(E._store.validated=!0);else if(E){var R=Ka(E);if(typeof R=="function"&&R!==E.entries)for(var ea=R.call(E),aa;!(aa=ea.next()).done;)ee(aa.value)&&hi(aa.value,U)}}}function Ei(E){{var U=E.type;if(U==null||typeof U=="string")return;var k;if(typeof U=="function")k=U.propTypes;else if(typeof U=="object"&&(U.$$typeof===H||U.$$typeof===X))k=U.propTypes;else return;if(k){var x=wa(U);Il(k,E.props,"prop",x,E)}else if(U.PropTypes!==void 0&&!ke){ke=!0;var R=wa(U);w("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?",R||"Unknown")}typeof U.getDefaultProps=="function"&&!U.getDefaultProps.isReactClassApproved&&w("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.")}}function El(E){{for(var U=Object.keys(E.props),k=0;k<U.length;k++){var x=U[k];if(x!=="children"&&x!=="key"){ie(E),w("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.",x),ie(null);break}}E.ref!==null&&(ie(E),w("Invalid attribute `ref` supplied to `React.Fragment`."),ie(null))}}function Si(E,U,k){var x=ii(E);if(!x){var R="";(E===void 0||typeof E=="object"&&E!==null&&Object.keys(E).length===0)&&(R+=" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");var ea=hl(U);ea?R+=ea:R+=Ii();var aa;E===null?aa="null":Array.isArray(E)?aa="array":E!==void 0&&E.$$typeof===G?(aa="<"+(wa(E.type)||"Unknown")+" />",R=" Did you accidentally export a JSX literal instead of a component?"):aa=typeof E,w("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s",aa,R)}var C=w0.apply(this,arguments);if(C==null)return C;if(x)for(var Ia=2;Ia<arguments.length;Ia++)gi(arguments[Ia],E);return E===a.Fragment?El(C):Ei(C),C}var Ti=!1;function Sl(E){var U=Si.bind(null,E);return U.type=E,Ti||(Ti=!0,W("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.")),Object.defineProperty(U,"type",{enumerable:!1,get:function(){return W("Factory.type is deprecated. Access the class directly before passing it to createFactory."),Object.defineProperty(this,"type",{value:E}),E}}),U}function Tl(E,U,k){for(var x=x0.apply(this,arguments),R=2;R<arguments.length;R++)gi(arguments[R],x.type);return Ei(x),x}try{var pi=Object.freeze({})}catch(E){}var pl=Si,vl=Tl,bl=Sl,Bl={map:fe,forEach:z0,count:W0,toArray:V0,only:R0};a.Children=Bl,a.Component=V,a.PureComponent=va,a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=K,a.cloneElement=vl,a.createContext=J0,a.createElement=pl,a.createFactory=bl,a.createRef=k0,a.forwardRef=X0,a.isValidElement=ee,a.lazy=Q0,a.memo=al,a.useCallback=tl,a.useContext=el,a.useDebugValue=cl,a.useEffect=sl,a.useImperativeHandle=ml,a.useLayoutEffect=rl,a.useMemo=ll,a.useReducer=ul,a.useRef=nl,a.useState=il,a.version=N}()}}),cm=ve({"../../node_modules/react/index.js"(a,B){"use strict";process.env.NODE_ENV==="production"?B.exports=lm():B.exports=mm()}}),om=tm(cm(),1),Am="useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict",dm=128,Ja,te,fm=a=>{!Ja||Ja.length<a?(Ja=Buffer.allocUnsafe(a*dm),Ln.randomFillSync(Ja),te=0):te+a>Ja.length&&(Ln.randomFillSync(Ja),te=0),te+=a},Im=(a=21)=>{fm(a-=0);let B="";for(let N=te-a;N<te;N++)B+=Am[Ja[N]&63];return B},_m=Object.defineProperty,hm=(a,B,N)=>B in a?_m(a,B,{enumerable:!0,configurable:!0,writable:!0,value:N}):a[B]=N,S=(a,B,N)=>(hm(a,typeof B!="symbol"?B+"":B,N),N),hB=class extends om.default.Component{constructor(a){super(a);this.state={hasError:!1}}static getDerivedStateFromError(a){return{hasError:!0}}componentDidCatch(a){let B=new we,N=new Sa("Error caught in ErrorBoundary",{cause:a});B.exception(N)}render(){return this.props.children}},Kn;(function(a){a.Comment="comment",a.Create="create",a.Delete="delete",a.Edit="edit",a.Invoice="invoice",a.Message="message",a.PageView="pageView",a.Paid="paid",a.Payment="payment",a.Purchase="purchase",a.Referral="referral",a.Renewal="renewal",a.Signup="signup",a.Subscription="subscription",a.Upgrade="upgrade"})(Kn||(Kn={}));var xn;(function(a){a.Business="business",a.Engineering="engineering",a.Exception="exception",a.LogMessage="log-message",a.Marketing="marketing",a.PageLeave="page-leave",a.PageView="page-view",a.Product="product",a.QualityManagement="quality-management",a.UserAccess="user-access",a.UserLogin="user-login",a.UserLogout="user-logout",a.UserSignup="user-signup",a.UserPreferencesChanged="user-preferences-changed",a.WebsiteVisit="website-visit"})(xn||(xn={}));var On;(function(a){a.CloseTab="close-tab",a.ExternalLink="external-link",a.NavigateAway="navigate-away",a.Unknown="unknown"})(On||(On={}));var jn;(function(a){a.Ecs="Ecs"})(jn||(jn={}));var Hn;(function(a){a.Finished="Finished",a.Queued="Queued",a.Running="Running",a.Started="Started"})(Hn||(Hn={}));var Wn;(function(a){a.Mobile="mobile",a.TV="tv",a.Watch="watch",a.Web="web"})(Wn||(Wn={}));var ce;(function(a){a.Development="Development",a.NonProduction="NonProduction",a.Production="Production"})(ce||(ce={}));var zn;(function(a){a.Completed="completed",a.Started="started",a.Uncompleted="uncompleted"})(zn||(zn={}));var Vn;(function(a){a.Build="Build",a.Deployment="Deployment",a.Test="Test"})(Vn||(Vn={}));var Rn;(function(a){a.Canceled="Canceled",a.Completed="Completed",a.Failed="Failed",a.Running="Running",a.Queued="Queued",a.Waiting="Waiting"})(Rn||(Rn={}));var Jn;(function(a){a.Canceled="Canceled",a.Completed="Completed",a.Failed="Failed",a.Running="Running",a.Queued="Queued",a.Waiting="Waiting"})(Jn||(Jn={}));var Yn;(function(a){a.ForgotPassword="forgot_password",a.Index="index",a.Login="login",a.PageNotFound="404",a.Signup="signup",a.VerifyCode="verify_code"})(Yn||(Yn={}));var Zn;(function(a){a.Info="info",a.Warning="warning",a.Error="error",a.Success="success"})(Zn||(Zn={}));var $n;(function(a){a.Details="details",a.Dialog="dialog"})($n||($n={}));var Qn;(function(a){a.Info="info",a.Warning="warning",a.Error="error",a.Success="success"})(Qn||(Qn={}));var Xn;(function(a){a.AccountBalance="AccountBalance",a.UserAssets="UserAssets",a.UserCreditCardDebt="UserCreditCardDebt",a.UserCreditLimit="UserCreditLimit",a.UserCreditUtilization="UserCreditUtilization",a.UserDebt="UserDebt",a.UserInvestments="UserInvestments",a.UserRetirement="UserRetirement",a.UserSavings="UserSavings"})(Xn||(Xn={}));var Cn;(function(a){a.DateTime="date_time",a.True="true",a.False="false",a.UniqueId="unique_id"})(Cn||(Cn={}));var as;(function(a){a.DomainModel="domain_entity",a.GenericModel="generic_entity"})(as||(as={}));var es;(function(a){a.AirportCode="airport-code",a.BankIDCode="bank-id-code",a.BitcoinAddress="bitcoin-address",a.Boolean="boolean",a.City="city",a.Color="color",a.CountryCode="country-code",a.CreditCard="credit-card",a.CurrencyAmount="currency-amount",a.CurrencyCode="currency-code",a.DataURI="data-uri",a.Date="date",a.DateRange="date-range",a.DateTime="date-time",a.DayOfMonth="day-of-month",a.DomainName="domain-name",a.EmailAddress="email-address",a.EthereumAddress="ethereum-address",a.EAN="european-article-number",a.EIN="employer-identification-number",a.Float="float",a.GeographicCoordinate="geographic-coordinate",a.GeographicCoordinates="geographic-coordinates",a.GitRepositoryURL="git-repository-url",a.HSLColor="hsl-color",a.HexColor="hex-color",a.Hexadecimal="hexadecimal",a.IBAN="international-bank-account-number",a.IMEI="international-mobile-equipment-identifier",a.IPAddress="ip-address",a.IPAddressRange="ip-address-range",a.ISBN="international-standard-book-number",a.ISIN="international-stock-number",a.ISMN="international-standard-music-number",a.ISSN="international-standard-serial-number",a.ISO8601="iso-8601",a.ISO31661Alpha2="iso-31661-alpha-2",a.ISO31661Alpha3="iso-31661-alpha-3",a.ISO4217="iso-4217",a.Image="image",a.Integer="integer",a.JSON="json",a.LanguageCode="language-code",a.LicensePlateNumber="license-plate-number",a.LongText="long-text",a.MD5="md5",a.Markdown="markdown",a.Menu="menu",a.Number="number",a.MACAddress="mac-address",a.MagnetURI="magnet-uri",a.MimeType="mime-type",a.Month="month",a.Password="password",a.PassportNumber="passport-number",a.Percent="percent",a.PhoneNumber="phone-number",a.Port="port",a.PostalCode="postal-code",a.Province="province",a.RFC3339="rfc-3339",a.RGBColor="rgb-color",a.SemanticVersion="semantic-version",a.SSN="social-security-number",a.State="state",a.StreetAddress="street-address",a.String="string",a.Tags="tags",a.TaxIDNumber="tax-id-number",a.Time="time",a.TimeOfDay="time-of-day",a.TimeRange="time-range",a.TimezoneRegion="timezone-region",a.URL="url",a.URLPath="url-path",a.UUID="uuid",a.VATIDNumber="value-added-tax-id-number",a.VerificationCode="verification-code",a.Video="video",a.Weekday="weekday",a.Year="year"})(es||(es={}));var is;(function(a){a.Critical="Critical",a.Error="Error",a.Fatal="Fatal",a.Warning="Warning"})(is||(is={}));var s;(function(a){a.Contains="contains",a.HasCharacterCount="has-character-count",a.HasNumberCount="has-number-count",a.HasLetterCount="has-letter-count",a.HasLowercaseCount="has-lowercase-count",a.HasSpacesCount="has-spaces-count",a.HasSymbolCount="has-symbol-count",a.HasUppercaseCount="has-uppercase-count",a.IsAfter="is-after",a.IsAfterOrEqual="is-after-or-equal",a.IsAirport="is-airport",a.IsAlpha="is-alpha",a.IsAlphanumeric="is-alphanumeric",a.IsAlgorithmHash="is-algorithm-hash",a.IsAscii="is-ascii",a.IsBase64="is-base-64",a.IsBefore="is-before",a.IsBeforeOrAfter="is-before-or-after",a.IsBeforeOrEqual="is-before-or-equal",a.IsBetween="is-between",a.IsBIC="is-bic",a.IsBitcoinAddress="is-bitcoin-address",a.IsBoolean="is-boolean",a.IsColor="is-color",a.IsComplexEnough="is-complex-enough",a.IsCountry="is-country",a.IsCreditCard="is-credit-card",a.IsCurrency="is-currency",a.IsDataURI="is-data-uri",a.IsDate="is-date",a.IsDateRange="is-date-range",a.IsDateTime="is-date-time",a.IsDayOfMonth="is-day-of-month",a.IsDecimal="is-decimal",a.IsDivisibleBy="is-divisible-by",a.IsDomainName="is-domain-name",a.IsEmailAddress="is-email-address",a.IsEthereumAddress="is-ethereum-address",a.IsEAN="is-ean",a.IsEIN="is-ein",a.IsEqual="is-equal",a.IsEvenNumber="is-even-number",a.IsFloat="is-float",a.IsIBAN="is-iban",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsHSLColor="is-hsl-color",a.IsHexColor="is-hex-color",a.IsHexadecimal="is-hexadecimal",a.IsIdentityCardCode="is-identity-card-code",a.IsIMEI="is-imei",a.IsInIPAddressRange="is-in-ip-address-range",a.IsInList="is-in-list",a.IsInTheLast="is-in-the-last",a.IsInteger="is-integer",a.IsIPAddress="is-ip-address",a.IsIPAddressRange="is-ip-address-range",a.IsISBN="is-isbn",a.IsISIN="is-isin",a.IsISMN="is-ismn",a.IsISRC="is-isrc",a.IsISSN="is-issn",a.IsISO4217="is-iso-4217",a.IsISO8601="is-iso-8601",a.IsISO31661Alpha2="is-iso-31661-alpha-2",a.IsISO31661Alpha3="is-iso-31661-alpha-3",a.IsJSON="is-json",a.IsLanguage="is-language",a.IsLatitude="is-latitude",a.IsLongitude="is-longitude",a.IsLengthEqual="is-length-equal",a.IsLengthGreaterThan="is-length-greater-than",a.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",a.IsLengthLessThan="is-length-less-than",a.IsLengthLessThanOrEqual="is-length-less-than-or-equal",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsLicensePlateNumber="is-license-plate-number",a.IsLowercase="is-lowercase",a.IsOctal="is-octal",a.IsMACAddress="is-mac-address",a.IsMD5="is-md5",a.IsMagnetURI="is-magnet-uri",a.IsMarkdown="is-markdown",a.IsMimeType="is-mime-type",a.IsMonth="is-month",a.IsNegativeNumber="is-negative-number",a.IsNotDate="is-not-date",a.IsNotEqual="is-not-equal",a.IsNotInIPAddressRange="is-not-in-ip-address-range",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsNotRegexMatch="is-not-regex-match",a.IsNotToday="is-not-today",a.IsNumber="is-number",a.IsNumeric="is-numeric",a.IsOddNumber="is-odd-number",a.IsPassportNumber="is-passport-number",a.IsPhoneNumber="is-phone-number",a.IsPort="is-port",a.IsPositiveNumber="is-positive-number",a.IsPostalCode="is-postal-code",a.IsProvince="is-province",a.IsRGBColor="is-rgb-color",a.IsRegexMatch="is-regex-match",a.IsRequired="is-required",a.IsSemanticVersion="is-semantic-version",a.IsSlug="is-slug",a.IsSSN="is-ssn",a.IsState="is-state",a.IsStreetAddress="is-street-address",a.IsString="is-string",a.IsStrongPassword="is-strong-password",a.IsTags="is-tags",a.IsTaxIDNumber="is-tax-id-number",a.IsThisMonth="is-this-month",a.IsThisQuarter="is-this-quarter",a.IsThisWeek="is-this-week",a.IsThisWeekend="is-this-weekend",a.IsThisYear="is-this-year",a.IsTime="is-time",a.IsTimeOfDay="is-time-of-day",a.IsTimeRange="is-time-range",a.IsToday="is-today",a.IsURL="is-url",a.IsUUID="is-uuid",a.IsUppercase="is-uppercase",a.IsUsernameAvailable="is-username-available",a.IsValidStreetAddress="is-valid-street-address",a.IsVATIDNumber="is-vat-id-number",a.IsWeekday="is-weekday",a.IsWeekend="is-weekend",a.IsYear="is-year"})(s||(s={}));var us;(function(a){a.IsAuthenticated="is-authenticated",a.IsNotAuthenticated="is-not-authenticated",a.IsUsernameAvailable="is-username-available",a.PasswordMismatch="password-mismatch"})(us||(us={}));var ns;(function(a){a[a.IsHSLColor=s.IsHSLColor]="IsHSLColor",a[a.IsHexColor=s.IsHexColor]="IsHexColor",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsRGBColor=s.IsRGBColor]="IsRGBColor",a[a.IsString=s.IsString]="IsString"})(ns||(ns={}));var ss;(function(a){a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsCurrency=s.IsCurrency]="IsCurrency",a[a.IsDecimal=s.IsDecimal]="IsDecimal",a[a.IsDivisibleBy=s.IsDivisibleBy]="IsDivisibleBy",a[a.IsEvenNumber=s.IsEvenNumber]="IsEvenNumber",a[a.IsFloat=s.IsFloat]="IsFloat",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=s.IsInteger]="IsInteger",a[a.IsISO8601=s.IsISO8601]="IsISO8601",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNegativeNumber=s.IsNegativeNumber]="IsNegativeNumber",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsOddNumber=s.IsOddNumber]="IsOddNumber",a[a.IsPositiveNumber=s.IsPositiveNumber]="IsPositiveNumber"})(ss||(ss={}));var rs;(function(a){a[a.IsBitcoinAddress=s.IsBitcoinAddress]="IsBitcoinAddress",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(rs||(rs={}));var ts;(function(a){a[a.IsEthereumAddress=s.IsEthereumAddress]="IsEthereumAddress",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(ts||(ts={}));var ls;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsJSON=s.IsJSON]="IsJSON",a[a.IsLanguage=s.IsLanguage]="IsLanguage",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(ls||(ls={}));var ms;(function(a){a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(ms||(ms={}));var cs;(function(a){a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsCountry=s.IsCountry]="IsCountry",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(cs||(cs={}));var os;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsFloat=s.IsFloat]="IsFloat",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumeric=s.IsNumeric]="IsNumeric"})(os||(os={}));var As;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsFloat=s.IsFloat]="IsFloat",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumeric=s.IsNumeric]="IsNumeric"})(As||(As={}));var ds;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsPostalCode=s.IsPostalCode]="IsPostalCode",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(ds||(ds={}));var fs;(function(a){a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsProvince=s.IsProvince]="IsProvince",a[a.IsString=s.IsString]="IsString"})(fs||(fs={}));var Is;(function(a){a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsState=s.IsState]="IsState",a[a.IsString=s.IsString]="IsString"})(Is||(Is={}));var _s;(function(a){a[a.IsAlphanumeric=s.IsAlphanumeric]="IsAlphanumeric",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a[a.IsStreetAddress=s.IsStreetAddress]="IsStreetAddress"})(_s||(_s={}));var hs;(function(a){a[a.IsAirport=s.IsAirport]="IsAirport",a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(hs||(hs={}));var gs;(function(a){a[a.IsAlgorithmHash=s.IsAlgorithmHash]="IsAlgorithmHash",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(gs||(gs={}));var Es;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsSemanticVersion=s.IsSemanticVersion]="IsSemanticVersion",a[a.IsString=s.IsString]="IsString"})(Es||(Es={}));var Ss;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a[a.IsUUID=s.IsUUID]="IsUUID"})(Ss||(Ss={}));var Ts;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsMD5=s.IsMD5]="IsMD5",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(Ts||(Ts={}));var ps;(function(a){a[a.IsBoolean=s.IsBoolean]="IsBoolean",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(ps||(ps={}));var vs;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsDate=s.IsDate]="IsDate",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotDate=s.IsNotDate]="IsNotDate",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNotToday=s.IsNotToday]="IsNotToday",a[a.IsThisWeek=s.IsThisWeek]="IsThisWeek",a[a.IsThisMonth=s.IsThisMonth]="IsThisMonth",a[a.IsThisQuarter=s.IsThisQuarter]="IsThisQuarter",a[a.IsThisYear=s.IsThisYear]="IsThisYear",a[a.IsToday=s.IsToday]="IsToday",a[a.IsWeekend=s.IsWeekend]="IsWeekend"})(vs||(vs={}));var bs;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=s.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsDate=s.IsDate]="IsDate",a[a.IsDateRange=s.IsDateRange]="IsDateRange",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(bs||(bs={}));var Bs;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsDate=s.IsDate]="IsDate",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotDate=s.IsNotDate]="IsNotDate",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNotToday=s.IsNotToday]="IsNotToday",a[a.IsThisWeek=s.IsThisWeek]="IsThisWeek",a[a.IsThisMonth=s.IsThisMonth]="IsThisMonth",a[a.IsThisQuarter=s.IsThisQuarter]="IsThisQuarter",a[a.IsThisYear=s.IsThisYear]="IsThisYear",a[a.IsToday=s.IsToday]="IsToday",a[a.IsWeekend=s.IsWeekend]="IsWeekend"})(Bs||(Bs={}));var Us;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsDayOfMonth=s.IsDayOfMonth]="IsDayOfMonth",a[a.IsEvenNumber=s.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=s.IsInteger]="IsInteger",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsOddNumber=s.IsOddNumber]="IsOddNumber",a[a.IsToday=s.IsToday]="IsToday",a[a.IsWeekday=s.IsWeekday]="IsWeekday",a[a.IsWeekend=s.IsWeekend]="IsWeekend"})(Us||(Us={}));var Ns;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsEvenNumber=s.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=s.IsInteger]="IsInteger",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsMonth=s.IsMonth]="IsMonth",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsOddNumber=s.IsOddNumber]="IsOddNumber",a[a.IsThisMonth=s.IsThisMonth]="IsThisMonth"})(Ns||(Ns={}));var Ds;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsTime=s.IsTime]="IsTime"})(Ds||(Ds={}));var Ps;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=s.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsTime=s.IsTime]="IsTime",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsTimeRange=s.IsTimeRange]="IsTimeRange"})(Ps||(Ps={}));var ys;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=s.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsTimeOfDay=s.IsTimeOfDay]="IsTimeOfDay",a[a.IsTimeRange=s.IsTimeRange]="IsTimeRange"})(ys||(ys={}));var Fs;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsEvenNumber=s.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsOddNumber=s.IsOddNumber]="IsOddNumber",a[a.IsWeekday=s.IsWeekday]="IsWeekday",a[a.IsWeekend=s.IsWeekend]="IsWeekend"})(Fs||(Fs={}));var ks;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsEvenNumber=s.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=s.IsInteger]="IsInteger",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsOddNumber=s.IsOddNumber]="IsOddNumber",a[a.IsThisYear=s.IsThisYear]="IsThisYear",a[a.IsYear=s.IsYear]="IsYear"})(ks||(ks={}));var Ms;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsHexadecimal=s.IsHexadecimal]="IsHexadecimal",a[a.IsLengthEqual=s.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=s.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=s.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=s.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=s.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(Ms||(Ms={}));var Ls;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsJSON=s.IsJSON]="IsJSON",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(Ls||(Ls={}));var qs;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsMarkdown=s.IsMarkdown]="IsMarkdown",a[a.IsString=s.IsString]="IsString"})(qs||(qs={}));var Gs;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(Gs||(Gs={}));var ws;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(ws||(ws={}));var Ks;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsDataURI=s.IsDataURI]="IsDataURI",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(Ks||(Ks={}));var xs;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsDomainName=s.IsDomainName]="IsDomainName",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(xs||(xs={}));var Os;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEmailAddress=s.IsEmailAddress]="IsEmailAddress",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(Os||(Os={}));var js;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsIPAddress=s.IsIPAddress]="IsIPAddress",a[a.IsInIPAddressRange=s.IsInIPAddressRange]="IsInIPAddressRange",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotInIPAddressRange=s.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(js||(js={}));var Hs;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsIPAddressRange=s.IsIPAddressRange]="IsIPAddressRange",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotInIPAddressRange=s.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(Hs||(Hs={}));var Ws;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=s.IsInteger]="IsInteger",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(Ws||(Ws={}));var zs;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsMACAddress=s.IsMACAddress]="IsMACAddress",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(zs||(zs={}));var Vs;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsMagnetURI=s.IsMagnetURI]="IsMagnetURI",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(Vs||(Vs={}));var Rs;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsMimeType=s.IsMimeType]="IsMimeType",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(Rs||(Rs={}));var Js;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a[a.IsSlug=s.IsSlug]="IsSlug"})(Js||(Js={}));var Ys;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a[a.IsURL=s.IsURL]="IsURL"})(Ys||(Ys={}));var Zs;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsDecimal=s.IsDecimal]="IsDecimal",a[a.IsDivisibleBy=s.IsDivisibleBy]="IsDivisibleBy",a[a.IsEAN=s.IsEAN]="IsEAN",a[a.IsEIN=s.IsEIN]="IsEIN",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsEvenNumber=s.IsEvenNumber]="IsEvenNumber",a[a.IsFloat=s.IsFloat]="IsFloat",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInt=s.IsInteger]="IsInt",a[a.IsISBN=s.IsISBN]="IsISBN",a[a.IsISMN=s.IsISMN]="IsISMN",a[a.IsISSN=s.IsISSN]="IsISSN",a[a.IsLatitude=s.IsLatitude]="IsLatitude",a[a.IsLongitude=s.IsLongitude]="IsLongitude",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsMACAddress=s.IsMACAddress]="IsMACAddress",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsNegativeNumber=s.IsNegativeNumber]="IsNegativeNumber",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsOddNumber=s.IsOddNumber]="IsOddNumber",a[a.IsPassportNumber=s.IsPassportNumber]="IsPassportNumber",a[a.IsPhoneNumber=s.IsPhoneNumber]="IsPhoneNumber",a[a.IsPort=s.IsPort]="IsPort",a[a.IsPositiveNumber=s.IsPositiveNumber]="IsPositiveNumber",a[a.IsPostalCode=s.IsPostalCode]="IsPostalCode",a[a.IsSemanticVersion=s.IsSemanticVersion]="IsSemanticVersion",a[a.IsSSN=s.IsSSN]="IsSSN",a[a.IsTaxIDNumber=s.IsTaxIDNumber]="IsTaxIDNumber",a[a.IsUUID=s.IsUUID]="IsUUID",a[a.IsVATIDNumber=s.IsVATIDNumber]="IsVATIDNumber"})(Zs||(Zs={}));var $s;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsFloat=s.IsFloat]="IsFloat",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsNumeric=s.IsNumeric]="IsNumeric"})($s||($s={}));var Qs;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInteger=s.IsInteger]="IsInteger",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsNumeric=s.IsNumeric]="IsNumeric"})(Qs||(Qs={}));var Xs;(function(a){a[a.IsCreditCard=s.IsCreditCard]="IsCreditCard",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsLengthEqual=s.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=s.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=s.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=s.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=s.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch",a[a.IsNotRegexMatch=s.IsNotRegexMatch]="IsNotRegexMatch"})(Xs||(Xs={}));var Cs;(function(a){a[a.isEmailAddress=s.IsEmailAddress]="isEmailAddress",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsLengthEqual=s.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=s.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=s.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=s.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=s.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch",a[a.IsNotRegexMatch=s.IsNotRegexMatch]="IsNotRegexMatch"})(Cs||(Cs={}));var ar;(function(a){a[a.IsLicensePlateNumber=s.IsLicensePlateNumber]="IsLicensePlateNumber",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=s.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsString=s.IsString]="IsString",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch"})(ar||(ar={}));var er;(function(a){a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsPassportNumber=s.IsPassportNumber]="IsPassportNumber",a[a.IsString=s.IsString]="IsString",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch"})(er||(er={}));var ir;(function(a){a[a.IsComplexEnough=s.IsComplexEnough]="IsComplexEnough",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=s.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsLengthGreaterThan=s.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=s.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=s.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=s.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsStrongPassword=s.IsStrongPassword]="IsStrongPassword",a[a.IsString=s.IsString]="IsString",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch"})(ir||(ir={}));var ur;(function(a){a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=s.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsPhoneNumber=s.IsPhoneNumber]="IsPhoneNumber",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch"})(ur||(ur={}));var nr;(function(a){a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsSSN=s.IsSSN]="IsSSN",a[a.IsString=s.IsString]="IsString",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch"})(nr||(nr={}));var sr;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsBIC=s.IsBIC]="IsBIC",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(sr||(sr={}));var rr;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEAN=s.IsEAN]="IsEAN",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(rr||(rr={}));var tr;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEIN=s.IsEIN]="IsEIN",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(tr||(tr={}));var lr;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsIBAN=s.IsIBAN]="IsIBAN",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(lr||(lr={}));var mr;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsISBN=s.IsISBN]="IsISBN",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(mr||(mr={}));var cr;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsISIN=s.IsISIN]="IsISIN",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(cr||(cr={}));var or;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsISMN=s.IsISMN]="IsISMN",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(or||(or={}));var Ar;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsISSN=s.IsISSN]="IsISSN",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(Ar||(Ar={}));var dr;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a[a.IsTaxIDNumber=s.IsTaxIDNumber]="IsTaxIDNumber"})(dr||(dr={}));var fr;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a[a.IsVATIDNumber=s.IsVATIDNumber]="IsVATIDNumber"})(fr||(fr={}));var Ir;(function(a){a[a.Contains=s.Contains]="Contains",a[a.HasNumberCount=s.HasNumberCount]="HasNumberCount",a[a.HasLowercaseCount=s.HasLowercaseCount]="HasLowercaseCount",a[a.HasLetterCount=s.HasLetterCount]="HasLetterCount",a[a.HasSpacesCount=s.HasSpacesCount]="HasSpacesCount",a[a.HasSymbolCount=s.HasSymbolCount]="HasSymbolCount",a[a.HasUppercaseCount=s.HasUppercaseCount]="HasUppercaseCount",a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsAlphanumeric=s.IsAlphanumeric]="IsAlphanumeric",a[a.IsAscii=s.IsAscii]="IsAscii",a[a.IsBase64=s.IsBase64]="IsBase64",a[a.IsColor=s.IsColor]="IsColor",a[a.IsComplexEnough=s.IsComplexEnough]="IsComplexEnough",a[a.IsCreditCard=s.IsCreditCard]="IsCreditCard",a[a.IsDataURI=s.IsDataURI]="IsDataURI",a[a.IsDomainName=s.IsDomainName]="IsDomainName",a[a.IsEmailAddress=s.IsEmailAddress]="IsEmailAddress",a[a.IsEthereumAddress=s.IsEthereumAddress]="IsEthereumAddress",a[a.IsEAN=s.IsEAN]="IsEAN",a[a.IsEIN=s.IsEIN]="IsEIN",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsIBAN=s.IsIBAN]="IsIBAN",a[a.IsHSLColor=s.IsHSLColor]="IsHSLColor",a[a.IsHexColor=s.IsHexColor]="IsHexColor",a[a.IsHexadecimal=s.IsHexadecimal]="IsHexadecimal",a[a.IsIdentityCardCode=s.IsIdentityCardCode]="IsIdentityCardCode",a[a.IsIMEI=s.IsIMEI]="IsIMEI",a[a.IsInList=s.IsInList]="IsInList",a[a.IsIPAddress=s.IsIPAddress]="IsIPAddress",a[a.IsInIPAddressRange=s.IsInIPAddressRange]="IsInIPAddressRange",a[a.IsISBN=s.IsISBN]="IsISBN",a[a.IsISIN=s.IsISIN]="IsISIN",a[a.IsISMN=s.IsISMN]="IsISMN",a[a.IsISRC=s.IsISRC]="IsISRC",a[a.IsISSN=s.IsISSN]="IsISSN",a[a.IsLanguage=s.IsLanguage]="IsLanguage",a[a.IsLatitude=s.IsLatitude]="IsLatitude",a[a.IsLongitude=s.IsLongitude]="IsLongitude",a[a.IsLengthEqual=s.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=s.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=s.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=s.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=s.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsLicensePlateNumber=s.IsLicensePlateNumber]="IsLicensePlateNumber",a[a.IsLowercase=s.IsLowercase]="IsLowercase",a[a.IsOctal=s.IsOctal]="IsOctal",a[a.IsMACAddress=s.IsMACAddress]="IsMACAddress",a[a.IsMD5=s.IsMD5]="IsMD5",a[a.IsMagnetURI=s.IsMagnetURI]="IsMagnetURI",a[a.IsMarkdown=s.IsMarkdown]="IsMarkdown",a[a.IsMimeType=s.IsMimeType]="IsMimeType",a[a.IsMonth=s.IsMonth]="IsMonth",a[a.IsNotInIPAddressRange=s.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=s.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsNumeric=s.IsNumeric]="IsNumeric",a[a.IsPassportNumber=s.IsPassportNumber]="IsPassportNumber",a[a.IsPhoneNumber=s.IsPhoneNumber]="IsPhoneNumber",a[a.IsPort=s.IsPort]="IsPort",a[a.IsPostalCode=s.IsPostalCode]="IsPostalCode",a[a.IsProvince=s.IsProvince]="IsProvince",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch",a[a.IsSemanticVersion=s.IsSemanticVersion]="IsSemanticVersion",a[a.IsSlug=s.IsSlug]="IsSlug",a[a.IsSSN=s.IsSSN]="IsSSN",a[a.IsState=s.IsState]="IsState",a[a.IsStreetAddress=s.IsStreetAddress]="IsStreetAddress",a[a.IsString=s.IsString]="IsString",a[a.IsTaxIDNumber=s.IsTaxIDNumber]="IsTaxIDNumber",a[a.IsURL=s.IsURL]="IsURL",a[a.IsUUID=s.IsUUID]="IsUUID",a[a.IsUppercase=s.IsUppercase]="IsUppercase",a[a.IsVATIDNumber=s.IsVATIDNumber]="IsVATIDNumber",a[a.IsWeekday=s.IsWeekday]="IsWeekday",a[a.IsWeekend=s.IsWeekend]="IsWeekend",a[a.IsYear=s.IsYear]="IsYear"})(Ir||(Ir={}));var _r;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsAlphanumeric=s.IsAlphanumeric]="IsAlphanumeric",a[a.IsInList=s.IsInList]="IsInList",a[a.IsMarkdown=s.IsMarkdown]="IsMarkdown",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNumeric=s.IsNumeric]="IsNumeric",a[a.IsLowercase=s.IsLowercase]="IsLowercase",a[a.IsString=s.IsString]="IsString",a[a.IsUppercase=s.IsUppercase]="IsUppercase"})(_r||(_r={}));var hr;(function(a){a.InvalidCharacters="invalid-characters",a.InvalidPattern="invalid-pattern",a.NotComplexEnough="not-complex-enough",a.NotUnique="not-unique",a.NotValidEmail="not-valid-email",a.TooLong="too-long",a.TooShort="too-short",a.Required="required"})(hr||(hr={}));var gr;(function(a){a[a.Allowed=0]="Allowed",a[a.Blocked=1]="Blocked"})(gr||(gr={}));var Er;(function(a){a.Canceled="Canceled",a.Completed="Completed",a.Created="Created",a.Faulted="Faulted",a.Queued="Queued",a.Running="Running",a.Waiting="Waiting"})(Er||(Er={}));var Sr;(function(a){a.Archived="ARCHIVED",a.Compromised="COMPROMISED",a.Confirmed="CONFIRMED",a.ForcePasswordChange="FORCE_CHANGE_PASSWORD",a.ResetRequired="RESET_REQUIRED",a.Unconfirmed="UNCONFIRMED",a.Unknown="UNKNOWN"})(Sr||(Sr={}));var Tr;(function(a){a.Code="code",a.Link="link"})(Tr||(Tr={}));var pr;(function(a){a.Owner="Owner",a.Admin="Admin",a.User="User",a.Visitor="Visitor"})(pr||(pr={}));var vr;(function(a){a.RequiresPaymentMethod="requires_payment_method",a.RequiresConfirmation="requires_confirmation",a.RequiresAction="requires_action",a.Processing="processing",a.RequiresCapture="requires_capture",a.Canceled="canceled",a.Succeeded="succeeded"})(vr||(vr={}));var br;(function(a){a.Incomplete="incomplete",a.IncompleteExpired="incomplete_expired",a.Trialing="trialing",a.Active="active",a.PastDue="past_due",a.Canceled="canceled",a.Unpaid="unpaid"})(br||(br={}));var Br;(function(a){a.Monthly="monthly",a.Quarterly="quarterly",a.Yearly="yearly",a.Lifetime="lifetime"})(Br||(Br={}));var Ur;(function(a){a.Email="email",a.PhoneNumber="phone_number"})(Ur||(Ur={}));var Nr;(function(a){a.Analytics="analytics",a.Critical="critical",a.Debug="debug",a.Exception="exception",a.Http="http",a.Info="info",a.Warning="warning"})(Nr||(Nr={}));var Dr;(function(a){a.Delete="delete",a.Get="get",a.Head="head",a.Patch="patch",a.Post="post",a.Put="put"})(Dr||(Dr={}));var Pr;(function(a){a[a.CONTINUE=100]="CONTINUE",a[a.SWITCHING_PROTOCOLS=101]="SWITCHING_PROTOCOLS",a[a.PROCESSING=102]="PROCESSING",a[a.OK=200]="OK",a[a.CREATED=201]="CREATED",a[a.ACCEPTED=202]="ACCEPTED",a[a.NON_AUTHORITATIVE_INFORMATION=203]="NON_AUTHORITATIVE_INFORMATION",a[a.NO_CONTENT=204]="NO_CONTENT",a[a.RESET_CONTENT=205]="RESET_CONTENT",a[a.PARTIAL_CONTENT=206]="PARTIAL_CONTENT",a[a.MULTI_STATUS=207]="MULTI_STATUS",a[a.ALREADY_REPORTED=208]="ALREADY_REPORTED",a[a.IM_USED=226]="IM_USED",a[a.MULTIPLE_CHOICES=300]="MULTIPLE_CHOICES",a[a.MOVED_PERMANENTLY=301]="MOVED_PERMANENTLY",a[a.FOUND=302]="FOUND",a[a.SEE_OTHER=303]="SEE_OTHER",a[a.NOT_MODIFIED=304]="NOT_MODIFIED",a[a.USE_PROXY=305]="USE_PROXY",a[a.SWITCH_PROXY=306]="SWITCH_PROXY",a[a.TEMPORARY_REDIRECT=307]="TEMPORARY_REDIRECT",a[a.PERMANENT_REDIRECT=308]="PERMANENT_REDIRECT",a[a.BAD_REQUEST=400]="BAD_REQUEST",a[a.UNAUTHORIZED=401]="UNAUTHORIZED",a[a.PAYMENT_REQUIRED=402]="PAYMENT_REQUIRED",a[a.FORBIDDEN=403]="FORBIDDEN",a[a.NOT_FOUND=404]="NOT_FOUND",a[a.METHOD_NOT_ALLOWED=405]="METHOD_NOT_ALLOWED",a[a.NOT_ACCEPTABLE=406]="NOT_ACCEPTABLE",a[a.PROXY_AUTHENTICATION_REQUIRED=407]="PROXY_AUTHENTICATION_REQUIRED",a[a.REQUEST_TIMEOUT=408]="REQUEST_TIMEOUT",a[a.CONFLICT=409]="CONFLICT",a[a.GONE=410]="GONE",a[a.LENGTH_REQUIRED=411]="LENGTH_REQUIRED",a[a.PRECONDITION_FAILED=412]="PRECONDITION_FAILED",a[a.PAYLOAD_TOO_LARGE=413]="PAYLOAD_TOO_LARGE",a[a.URI_TOO_LONG=414]="URI_TOO_LONG",a[a.UNSUPPORTED_MEDIA_TYPE=415]="UNSUPPORTED_MEDIA_TYPE",a[a.RANGE_NOT_SATISFIABLE=416]="RANGE_NOT_SATISFIABLE",a[a.EXPECTATION_FAILED=417]="EXPECTATION_FAILED",a[a.I_AM_A_TEAPOT=418]="I_AM_A_TEAPOT",a[a.MISDIRECTED_REQUEST=421]="MISDIRECTED_REQUEST",a[a.UNPROCESSABLE_ENTITY=422]="UNPROCESSABLE_ENTITY",a[a.LOCKED=423]="LOCKED",a[a.FAILED_DEPENDENCY=424]="FAILED_DEPENDENCY",a[a.TOO_EARLY=425]="TOO_EARLY",a[a.UPGRADE_REQUIRED=426]="UPGRADE_REQUIRED",a[a.PRECONDITION_REQUIRED=428]="PRECONDITION_REQUIRED",a[a.TOO_MANY_REQUESTS=429]="TOO_MANY_REQUESTS",a[a.REQUEST_HEADER_FIELDS_TOO_LARGE=431]="REQUEST_HEADER_FIELDS_TOO_LARGE",a[a.UNAVAILABLE_FOR_LEGAL_REASONS=451]="UNAVAILABLE_FOR_LEGAL_REASONS",a[a.INTERNAL_SERVER_ERROR=500]="INTERNAL_SERVER_ERROR",a[a.NOT_IMPLEMENTED=501]="NOT_IMPLEMENTED",a[a.BAD_GATEWAY=502]="BAD_GATEWAY",a[a.SERVICE_UNAVAILABLE=503]="SERVICE_UNAVAILABLE",a[a.GATEWAY_TIMEOUT=504]="GATEWAY_TIMEOUT",a[a.HTTP_VERSION_NOT_SUPPORTED=505]="HTTP_VERSION_NOT_SUPPORTED",a[a.VARIANT_ALSO_NEGOTIATES=506]="VARIANT_ALSO_NEGOTIATES",a[a.INSUFFICIENT_STORAGE=507]="INSUFFICIENT_STORAGE",a[a.LOOP_DETECTED=508]="LOOP_DETECTED",a[a.BANDWIDTH_LIMIT_EXCEEDED=509]="BANDWIDTH_LIMIT_EXCEEDED",a[a.NOT_EXTENDED=510]="NOT_EXTENDED",a[a.NETWORK_AUTHENTICATION_REQUIRED=511]="NETWORK_AUTHENTICATION_REQUIRED"})(Pr||(Pr={}));var h;(function(a){a.Afghanistan="AF",a.Albania="AL",a.Algeria="DZ",a.AmericanSamoa="AS",a.Andorra="AD",a.Angola="AO",a.Anguilla="AI",a.Antarctica="AQ",a.AntiguaAndBarbuda="AG",a.Argentina="AR",a.Armenia="AM",a.Aruba="AW",a.Australia="AU",a.Austria="AT",a.Azerbaijan="AZ",a.Bahamas="BS",a.Bahrain="BH",a.Bangladesh="BD",a.Barbados="BB",a.Belarus="BY",a.Belgium="BE",a.Belize="BZ",a.Benin="BJ",a.Bermuda="BM",a.Bhutan="BT",a.Bolivia="BO",a.BosniaAndHerzegovina="BA",a.Botswana="BW",a.BouvetIsland="BV",a.Brazil="BR",a.BritishIndianOceanTerritory="IO",a.Brunei="BN",a.Bulgaria="BG",a.BurkinaFaso="BF",a.Burundi="BI",a.Cambodia="KH",a.Cameroon="CM",a.Canada="CA",a.CapeVerde="CV",a.CaymanIslands="KY",a.CentralAfricanRepublic="CF",a.Chad="TD",a.Chile="CL",a.China="CN",a.ChristmasIsland="CX",a.CocosKeelingIslands="CC",a.Colombia="CO",a.Comoros="KM",a.Congo="CG",a.CongoTheDemocraticRepublicOfThe="CD",a.CookIslands="CK",a.CostaRica="CR",a.CoteDIvoire="CI",a.Croatia="HR",a.Cuba="CU",a.Cyprus="CY",a.CzechRepublic="CZ",a.Denmark="DK",a.Djibouti="DJ",a.Dominica="DM",a.DominicanRepublic="DO",a.Ecuador="EC",a.Egypt="EG",a.ElSalvador="SV",a.EquatorialGuinea="GQ",a.Eritrea="ER",a.Estonia="EE",a.Ethiopia="ET",a.FalklandIslands="FK",a.FaroeIslands="FO",a.Fiji="FJ",a.Finland="FI",a.France="FR",a.FrenchGuiana="GF",a.FrenchPolynesia="PF",a.FrenchSouthernTerritories="TF",a.Gabon="GA",a.Gambia="GM",a.Georgia="GE",a.Germany="DE",a.Ghana="GH",a.Gibraltar="GI",a.Greece="GR",a.Greenland="GL",a.Grenada="GD",a.Guadeloupe="GP",a.Guam="GU",a.Guatemala="GT",a.Guernsey="GG",a.Guinea="GN",a.GuineaBissau="GW",a.Guyana="GY",a.Haiti="HT",a.HeardIslandMcdonaldIslands="HM",a.HolySeeVaticanCityState="VA",a.Honduras="HN",a.HongKong="HK",a.Hungary="HU",a.Iceland="IS",a.India="IN",a.Indonesia="ID",a.Iran="IR",a.Iraq="IQ",a.Ireland="IE",a.IsleOfMan="IM",a.Israel="IL",a.Italy="IT",a.Jamaica="JM",a.Japan="JP",a.Jersey="JE",a.Jordan="JO",a.Kazakhstan="KZ",a.Kenya="KE",a.Kiribati="KI",a.Kuwait="KW",a.Kyrgyzstan="KG",a.Laos="LA",a.Latvia="LV",a.Lebanon="LB",a.Lesotho="LS",a.Liberia="LR",a.Libya="LY",a.Liechtenstein="LI",a.Lithuania="LT",a.Luxembourg="LU",a.Macau="MO",a.Madagascar="MG",a.Malawi="MW",a.Malaysia="MY",a.Maldives="MV",a.Mali="ML",a.Malta="MT",a.MarshallIslands="MH",a.Martinique="MQ",a.Mauritania="MR",a.Mauritius="MU",a.Mayotte="YT",a.Mexico="MX",a.MicronesiaFederatedStatesOf="FM",a.Moldova="MD",a.Monaco="MC",a.Mongolia="MN",a.Montenegro="ME",a.Montserrat="MS",a.Morocco="MA",a.Mozambique="MZ",a.Myanmar="MM",a.Namibia="NA",a.Nauru="NR",a.Nepal="NP",a.Netherlands="NL",a.NetherlandsAntilles="AN",a.NewCaledonia="NC",a.NewZealand="NZ",a.NorthKorea="KP",a.Nicaragua="NI",a.Niger="NE",a.Nigeria="NG",a.Niue="NU",a.NorfolkIsland="NF",a.NorthMacedonia="MK",a.NorthernMarianaIslands="MP",a.Norway="NO",a.Oman="OM",a.Pakistan="PK",a.Palau="PW",a.PalestinianTerritoryOccupied="PS",a.Panama="PA",a.PapuaNewGuinea="PG",a.Paraguay="PY",a.Peru="PE",a.Philippines="PH",a.Pitcairn="PN",a.Poland="PL",a.Portugal="PT",a.PuertoRico="PR",a.Qatar="QA",a.Reunion="RE",a.Romania="RO",a.RussianFederation="RU",a.Rwanda="RW",a.SaintBarthelemy="BL",a.SaintHelena="SH",a.SaintKittsAndNevis="KN",a.SaintLucia="LC",a.SaintMartin="MF",a.SaintPierreAndMiquelon="PM",a.SaintVincentAndTheGrenadines="VC",a.Samoa="WS",a.SanMarino="SM",a.SaoTomeAndPrincipe="ST",a.SaudiArabia="SA",a.Senegal="SN",a.Serbia="RS",a.SerbiaAndMontenegro="CS",a.Seychelles="SC",a.SierraLeone="SL",a.Singapore="SG",a.Slovakia="SK",a.Slovenia="SI",a.SolomonIslands="SB",a.Somalia="SO",a.SouthAfrica="ZA",a.SouthGeorgiaAndTheSouthSandwichIslands="GS",a.SouthKorea="KR",a.Spain="ES",a.SriLanka="LK",a.Sudan="SD",a.Suriname="SR",a.SvalbardAndJanMayen="SJ",a.Swaziland="SZ",a.Sweden="SE",a.Switzerland="CH",a.Syria="SY",a.Taiwan="TW",a.Tajikistan="TJ",a.Tanzania="TZ",a.Thailand="TH",a.TimorLeste="TL",a.Togo="TG",a.Tokelau="TK",a.Tonga="TO",a.TrinidadAndTobago="TT",a.Tunisia="TN",a.Turkey="TR",a.Turkmenistan="TM",a.TurksAndCaicosIslands="TC",a.Tuvalu="TV",a.Uganda="UG",a.Ukraine="UA",a.UnitedArabEmirates="AE",a.UnitedKingdom="GB",a.UnitedStates="US",a.UnitedStatesMinorOutlyingIslands="UM",a.Uruguay="UY",a.Uzbekistan="UZ",a.Vanuatu="VU",a.Venezuela="VE",a.Vietnam="VN",a.VirginIslandsBritish="VG",a.VirginIslandsUS="VI",a.WallisAndFutuna="WF",a.WesternSahara="EH",a.Yemen="YE",a.Zambia="ZM",a.Zimbabwe="ZW"})(h||(h={}));var P;(function(a){a.AfghanistanAfghani="AFN",a.AlbaniaLek="ALL",a.ArmeniaDram="AMD",a.AlgeriaDinar="DZD",a.AmericanSamoaTala="WST",a.AngolaKwanza="AOA",a.ArgentinaPeso="ARS",a.AustraliaDollar="AUD",a.ArubaFlorin="AWG",a.AzerbaijanNewManat="AZN",a.BosniaAndHerzegovinaConvertibleMark="BAM",a.BahrainDinar="BHD",a.BarbadosDollar="BBD",a.BangladeshTaka="BDT",a.BelgiumFranc="BGN",a.BermudaDollar="BMD",a.BruneiDollar="BND",a.BoliviaBoliviano="BOB",a.BrazilReal="BRL",a.BahamasDollar="BSD",a.BhutanNgultrum="BTN",a.BotswanaPula="BWP",a.BelarusRuble="BYN",a.BelizeDollar="BZD",a.BulgariaLev="BGN",a.BurundiFranc="BIF",a.BritishPound="GBP",a.CanadaDollar="CAD",a.CambodiaRiel="KHR",a.ComorosFranc="KMF",a.CaymanIslandsDollar="KYD",a.ChilePeso="CLP",a.ChinaYuan="CNY",a.ColombiaPeso="COP",a.CostaRicaColon="CRC",a.CroatiaKuna="HRK",a.CubaConvertiblePeso="CUC",a.CubaPeso="CUP",a.CapeVerdeEscudo="CVE",a.CyprusPound="CYP",a.CzechRepublicKoruna="CZK",a.DjiboutiFranc="DJF",a.DenmarkKrone="DKK",a.DominicaDollar="XCD",a.DominicanRepublicPeso="DOP",a.EastCaribbeanDollar="XCD",a.EgyptPound="EGP",a.ElSalvadorColon="SVC",a.EquatorialGuineaEkwele="GQE",a.EritreaNakfa="ERN",a.EstoniaKroon="EEK",a.EthiopiaBirr="ETB",a.Euro="EUR",a.FijiDollar="FJD",a.FalklandIslandsPound="FKP",a.GambiaDalasi="GMD",a.GabonFranc="GMD",a.GeorgiaLari="GEL",a.GhanaCedi="GHS",a.GibraltarPound="GIP",a.GuatemalaQuetzal="GTQ",a.GuernseyPound="GGP",a.GuineaBissauPeso="GWP",a.GuyanaDollar="GYD",a.HongKongDollar="HKD",a.HondurasLempira="HNL",a.HaitiGourde="HTG",a.HungaryForint="HUF",a.IndonesiaRupiah="IDR",a.IsleOfManPound="IMP",a.IsraelNewShekel="ILS",a.IndiaRupee="INR",a.IraqDinar="IQD",a.IranRial="IRR",a.IcelandKrona="ISK",a.JamaicaDollar="JMD",a.JapanYen="JPY",a.JerseyPound="JEP",a.JordanDinar="JOD",a.KazakhstanTenge="KZT",a.KenyaShilling="KES",a.KyrgyzstanSom="KGS",a.NorthKoreaWon="KPW",a.SouthKoreaWon="KRW",a.KuwaitDinar="KWD",a.LaosKip="LAK",a.LebanonPound="LBP",a.LiberiaDollar="LRD",a.LesothoLoti="LSL",a.LibyanDinar="LYD",a.LithuaniaLitas="LTL",a.LatviaLats="LVL",a.LibyaDinar="LYD",a.MacauPataca="MOP",a.MaldivesRufiyaa="MVR",a.MalawiKwacha="MWK",a.MaltaLira="MTL",a.MauritiusRupee="MUR",a.MongoliaTughrik="MNT",a.MoroccoDirham="MAD",a.MoldovaLeu="MDL",a.MozambiqueMetical="MZN",a.MadagascarAriary="MGA",a.MacedoniaDenar="MKD",a.MexicoPeso="MXN",a.MalaysiaRinggit="MYR",a.MyanmarKyat="MMK",a.MicronesiaFederatedStatesDollar="USD",a.NicaraguaCordoba="NIO",a.NamibiaDollar="NAD",a.NetherlandsAntillesGuilder="ANG",a.NewCaledoniaFranc="XPF",a.NigeriaNaira="NGN",a.NicaraguaCordobaOro="NIO",a.NigerCFAFranc="XOF",a.NorwayKrone="NOK",a.NepalRupee="NPR",a.NewZealandDollar="NZD",a.OmanRial="OMR",a.PanamaBalboa="PAB",a.PeruNuevoSol="PEN",a.PapuaNewGuineaKina="PGK",a.PhilippinesPeso="PHP",a.PakistanRupee="PKR",a.PeruNuevo="PEN",a.PolandZloty="PLN",a.ParaguayGuarani="PYG",a.QatarRial="QAR",a.RomaniaNewLeu="RON",a.SerbiaDinar="RSD",a.SriLankaRupee="LKR",a.RussiaRuble="RUB",a.RwandaFranc="RWF",a.SaudiArabiaRiyal="SAR",a.SlovakiaKoruna="SKK",a.SloveniaTolar="SIT",a.SolomonIslandsDollar="SBD",a.SeychellesRupee="SCR",a.SudanPound="SDG",a.SwedenKrona="SEK",a.SingaporeDollar="SGD",a.SaintHelenaPound="SHP",a.SierraLeoneLeone="SLL",a.SomaliaShilling="SOS",a.SurinameDollar="SRD",a.SintMaartenPound="SXD",a.SyriaPound="SYP",a.SwazilandLilangeni="SZL",a.SwitzerlandFranc="CHF",a.ThailandBaht="THB",a.TajikistanSomoni="TJS",a.TurkmenistanManat="TMT",a.TunisiaDinar="TND",a.TongaPaanga="TOP",a.TurkeyLira="TRY",a.TrinidadAndTobagoDollar="TTD",a.TaiwanNewDollar="TWD",a.TanzaniaShilling="TZS",a.UnitedArabEmiratesDirham="AED",a.UkraineHryvnia="UAH",a.UgandaShilling="UGX",a.UnitedKingdomPound="GBP",a.UnitedStatesDollar="USD",a.UruguayPeso="UYU",a.UzbekistanSom="UZS",a.VenezuelaBolivar="VEF",a.VietnamDong="VND",a.VanuatuVatu="VUV",a.SamoaTala="WST",a.YemenRial="YER",a.SouthAfricaRand="ZAR",a.ZambiaKwacha="ZMW",a.ZimbabweDollar="ZWL"})(P||(P={}));P.AfghanistanAfghani,h.Afghanistan,P.AlbaniaLek,h.Albania,P.AlgeriaDinar,h.Algeria,P.ArgentinaPeso,h.Argentina,P.ArmeniaDram,h.Armenia,P.ArubaFlorin,h.Aruba,P.AustraliaDollar,h.Australia,P.AzerbaijanNewManat,h.Azerbaijan,P.BahrainDinar,h.Bahrain,P.BangladeshTaka,h.Bangladesh,P.BarbadosDollar,h.Barbados,P.BelarusRuble,h.Belarus,P.BelizeDollar,h.Belize,P.BermudaDollar,h.Bermuda,P.BoliviaBoliviano,h.Bolivia,P.BosniaAndHerzegovinaConvertibleMark,h.BosniaAndHerzegovina,P.BotswanaPula,h.Botswana,P.BrazilReal,h.Brazil,P.BruneiDollar,h.Brunei,P.BulgariaLev,h.Bulgaria,P.BurundiFranc,h.Burundi,P.CambodiaRiel,h.Cambodia,P.CanadaDollar,h.Canada,P.CapeVerdeEscudo,h.CapeVerde,P.CaymanIslandsDollar,h.CaymanIslands,P.ChilePeso,h.Chile,P.ChinaYuan,h.China,P.ColombiaPeso,h.Colombia,P.ComorosFranc,h.Comoros,P.CostaRicaColon,h.CostaRica,P.CroatiaKuna,h.Croatia,P.CubaConvertiblePeso,h.Cuba,P.CubaPeso,h.Cuba,P.CyprusPound,h.Cyprus,P.CzechRepublicKoruna,h.CzechRepublic,P.DenmarkKrone,h.Denmark,P.DjiboutiFranc,h.Djibouti,P.DominicanRepublicPeso,h.DominicanRepublic,P.EastCaribbeanDollar,h.AntiguaAndBarbuda,h.Dominica,h.Grenada,h.SaintKittsAndNevis,h.SaintLucia,h.SaintVincentAndTheGrenadines,P.EgyptPound,h.Egypt,P.ElSalvadorColon,h.ElSalvador,P.EquatorialGuineaEkwele,h.EquatorialGuinea,P.EritreaNakfa,h.Eritrea,P.EstoniaKroon,h.Estonia,P.EthiopiaBirr,h.Ethiopia,P.Euro,h.Andorra,h.Austria,h.Belgium,h.Cyprus,h.Estonia,h.Finland,h.France,h.Germany,h.Greece,h.Ireland,h.Italy,h.Latvia,h.Lithuania,h.Luxembourg,h.Malta,h.Monaco,h.Netherlands,h.Portugal,h.Spain,h.Sweden,h.UnitedKingdom,P.FalklandIslandsPound,h.FalklandIslands,P.FijiDollar,h.Fiji,P.GambiaDalasi,h.Gambia,P.GeorgiaLari,h.Georgia,P.GhanaCedi,h.Ghana,P.GibraltarPound,h.Gibraltar,P.GuatemalaQuetzal,h.Guatemala,P.GuernseyPound,h.Guernsey,P.GuineaBissauPeso,h.GuineaBissau,P.GuyanaDollar,h.Guyana,P.HaitiGourde,h.Haiti,P.HondurasLempira,h.Honduras,P.HongKongDollar,h.HongKong,P.HungaryForint,h.Hungary,P.IcelandKrona,h.Iceland,P.IndiaRupee,h.India,h.Bhutan,P.IndonesiaRupiah,h.Indonesia,P.IranRial,h.Iran,P.IsleOfManPound,h.IsleOfMan,P.IsraelNewShekel,h.Israel,P.JamaicaDollar,h.Jamaica,P.JapanYen,h.Japan,P.JerseyPound,h.Jersey,P.JordanDinar,h.Jordan,P.KazakhstanTenge,h.Kazakhstan,P.KenyaShilling,h.Kenya,P.KuwaitDinar,h.Kuwait,P.KyrgyzstanSom,h.Kyrgyzstan,P.LaosKip,h.Laos,P.LatviaLats,h.Latvia,P.LebanonPound,h.Lebanon,P.LesothoLoti,h.Lesotho,P.LiberiaDollar,h.Liberia,P.LibyanDinar,h.Libya,P.LithuaniaLitas,h.Lithuania,P.MacauPataca,h.Macau,P.MacedoniaDenar,h.NorthMacedonia,P.MadagascarAriary,h.Madagascar,P.MalawiKwacha,h.Malawi,P.MalaysiaRinggit,h.Malaysia,P.MaldivesRufiyaa,h.Maldives,P.MaltaLira,h.Malta,P.MauritiusRupee,h.Mauritius,P.MexicoPeso,h.Mexico,P.MoldovaLeu,h.Moldova,P.MongoliaTughrik,h.Mongolia,P.MoroccoDirham,h.Morocco,P.MozambiqueMetical,h.Mozambique,P.MyanmarKyat,h.Myanmar,P.NamibiaDollar,h.Namibia,P.NepalRupee,h.Nepal,P.NetherlandsAntillesGuilder,h.NetherlandsAntilles,P.NewCaledoniaFranc,h.NewCaledonia,P.NewZealandDollar,h.NewZealand,P.NicaraguaCordoba,h.Nicaragua,P.NigerCFAFranc,h.Niger,P.NigeriaNaira,h.Nigeria,P.NorthKoreaWon,h.NorthKorea,P.NorwayKrone,h.Norway,P.OmanRial,h.Oman,P.PakistanRupee,h.Pakistan,P.PanamaBalboa,h.Panama,P.ParaguayGuarani,h.Paraguay,P.PeruNuevo,h.Peru,P.PhilippinesPeso,h.Philippines,P.PolandZloty,h.Poland,P.QatarRial,h.Qatar,P.RomaniaNewLeu,h.Romania,P.RussiaRuble,h.RussianFederation,P.RwandaFranc,h.Rwanda,P.SaudiArabiaRiyal,h.SaudiArabia,P.SerbiaDinar,h.Serbia,P.SeychellesRupee,h.Seychelles,P.SingaporeDollar,h.Singapore,P.SlovakiaKoruna,h.Slovakia,P.SloveniaTolar,h.Slovenia,P.SolomonIslandsDollar,h.SolomonIslands,P.SomaliaShilling,h.Somalia,P.SouthAfricaRand,h.SouthAfrica,P.SouthKoreaWon,h.SouthKorea,P.SriLankaRupee,h.SriLanka,P.SudanPound,h.Sudan,P.SurinameDollar,h.Suriname,P.SwazilandLilangeni,h.Swaziland,P.SwedenKrona,h.Sweden,P.SwitzerlandFranc,h.Switzerland,P.SyriaPound,h.Syria,P.TaiwanNewDollar,h.Taiwan,P.TajikistanSomoni,h.Tajikistan,P.TanzaniaShilling,h.Tanzania,P.ThailandBaht,h.Thailand,P.TunisiaDinar,h.Tunisia,P.TurkeyLira,h.Turkey,P.TurkmenistanManat,h.Turkmenistan,P.UgandaShilling,h.Uganda,P.UkraineHryvnia,h.Ukraine,P.UnitedArabEmiratesDirham,h.UnitedArabEmirates,P.UnitedKingdomPound,h.UnitedKingdom,P.UnitedStatesDollar,h.UnitedStates,P.UruguayPeso,h.Uruguay,P.UzbekistanSom,h.Uzbekistan,P.VanuatuVatu,h.Vanuatu,P.VenezuelaBolivar,h.Venezuela,P.VietnamDong,h.Vietnam,P.YemenRial,h.Yemen,P.ZambiaKwacha,h.Zambia,P.ZimbabweDollar,h.Zimbabwe;var yr;(function(a){a.Bitcoin="BTC",a.Ethereum="ETH",a.Litecoin="LTC",a.Ripple="XRP",a.Dash="DASH",a.Zcash="ZEC",a.Dogecoin="DOGE",a.Monero="XMR",a.BitcoinCash="BCH",a.EOS="EOS",a.Binance="BNB",a.Stellar="XLM",a.Cardano="ADA",a.IOTA="IOTA",a.Tezos="XTZ",a.NEO="NEO",a.TRON="TRX",a.EOSClassic="EOSC",a.Ontology="ONT",a.VeChain="VEN",a.QTUM="QTUM",a.Lisk="LSK",a.Waves="WAVES",a.OmiseGO="OMG",a.Zilliqa="ZIL",a.BitcoinGold="BTG",a.Decred="DCR",a.Stratis="STRAT",a.Populous="PPT",a.Augur="REP",a.Golem="GNT",a.Siacoin="SC",a.BasicAttentionToken="BAT",a.ZCoin="XZC",a.StratisHedged="SNT",a.VeChainHedged="VEN",a.PowerLedger="POWR",a.WavesHedged="WAVE",a.ZilliqaHedged="ZRX",a.BitcoinDiamond="BCD",a.DigiByte="DGB",a.DigiByteHedged="DGB",a.Bytecoin="BCN",a.BytecoinHedged="BCN"})(yr||(yr={}));var p;(function(a){a.Afrikaans="af",a.Albanian="sq",a.Amharic="am",a.Arabic="ar",a.Armenian="hy",a.Azerbaijani="az",a.Bashkir="ba",a.Basque="eu",a.Belarusian="be",a.Bengali="bn",a.Berber="ber",a.Bhutani="dz",a.Bihari="bh",a.Bislama="bi",a.Bosnian="bs",a.Breten="br",a.Bulgarian="bg",a.Burmese="my",a.Cantonese="yue",a.Catalan="ca",a.Chinese="zh",a.Chuvash="cv",a.Corsican="co",a.Croatian="hr",a.Czech="cs",a.Danish="da",a.Dari="prs",a.Divehi="dv",a.Dutch="nl",a.English="en",a.Esperanto="eo",a.Estonian="et",a.Faroese="fo",a.Farsi="fa",a.Filipino="fil",a.Finnish="fi",a.French="fr",a.Frisian="fy",a.Galician="gl",a.Georgian="ka",a.German="de",a.Greek="el",a.Greenlandic="kl",a.Gujarati="gu",a.Haitian="ht",a.Hausa="ha",a.Hebrew="he",a.Hindi="hi",a.Hungarian="hu",a.Icelandic="is",a.Igbo="ig",a.Indonesian="id",a.Irish="ga",a.Italian="it",a.Japanese="ja",a.Javanese="jv",a.Kannada="kn",a.Karelian="krl",a.Kazakh="kk",a.Khmer="km",a.Komi="kv",a.Konkani="kok",a.Korean="ko",a.Kurdish="ku",a.Kyrgyz="ky",a.Lao="lo",a.Latin="la",a.Latvian="lv",a.Lithuanian="lt",a.Luxembourgish="lb",a.Ossetian="os",a.Macedonian="mk",a.Malagasy="mg",a.Malay="ms",a.Malayalam="ml",a.Maltese="mt",a.Maori="mi",a.Marathi="mr",a.Mari="mhr",a.Mongolian="mn",a.Montenegrin="me",a.Nepali="ne",a.NorthernSotho="nso",a.Norwegian="no",a.NorwegianBokmal="nb",a.NorwegianNynorsk="nn",a.Oriya="or",a.Pashto="ps",a.Persian="fa",a.Polish="pl",a.Portuguese="pt",a.Punjabi="pa",a.Quechua="qu",a.Romanian="ro",a.Russian="ru",a.Sakha="sah",a.Sami="se",a.Samoan="sm",a.Sanskrit="sa",a.Scots="gd",a.Serbian="sr",a.SerbianCyrillic="sr-Cyrl",a.Sesotho="st",a.Shona="sn",a.Sindhi="sd",a.Sinhala="si",a.Slovak="sk",a.Slovenian="sl",a.Somali="so",a.Spanish="es",a.Sudanese="su",a.Sutu="sx",a.Swahili="sw",a.Swedish="sv",a.Syriac="syr",a.Tagalog="tl",a.Tajik="tg",a.Tamazight="tmh",a.Tamil="ta",a.Tatar="tt",a.Telugu="te",a.Thai="th",a.Tibetan="bo",a.Tsonga="ts",a.Tswana="tn",a.Turkish="tr",a.Turkmen="tk",a.Ukrainian="uk",a.Urdu="ur",a.Uzbek="uz",a.Vietnamese="vi",a.Welsh="cy",a.Xhosa="xh",a.Yiddish="yi",a.Yoruba="yo",a.Zulu="zu"})(p||(p={}));var i;(function(a){a.Afrikaans="af",a.AfrikaansSouthAfrica="af-ZA",a.Albanian="sq",a.AlbanianAlbania="sq-AL",a.Amharic="am",a.AmharicEthiopia="am-ET",a.Arabic="ar",a.ArabicAlgeria="ar-DZ",a.ArabicBahrain="ar-BH",a.ArabicEgypt="ar-EG",a.ArabicIraq="ar-IQ",a.ArabicJordan="ar-JO",a.ArabicKuwait="ar-KW",a.ArabicLebanon="ar-LB",a.ArabicLibya="ar-LY",a.ArabicMorocco="ar-MA",a.ArabicOman="ar-OM",a.ArabicQatar="ar-QA",a.ArabicSaudiArabia="ar-SA",a.ArabicSyria="ar-SY",a.ArabicTunisia="ar-TN",a.ArabicUnitedArabEmirates="ar-AE",a.ArabicYemen="ar-YE",a.Armenian="hy",a.ArmenianArmenia="hy-AM",a.Azerbaijani="az",a.AzerbaijaniAzerbaijan="az-AZ",a.AzerbaijaniCyrillicAzerbaijan="az-Cyrl-AZ",a.Bashkir="ba",a.Basque="eu",a.BasqueSpain="eu-ES",a.Belarusian="be",a.BelarusianBelarus="be-BY",a.Bengali="bn",a.BengaliBangladesh="bn-BD",a.BengaliIndia="bn-IN",a.Berber="ber",a.Bhutani="dz",a.BhutaniBhutan="dz-BT",a.Bosnian="bs",a.BosnianBosniaAndHerzegovina="bs-BA",a.Breton="br",a.Bulgarian="bg",a.BulgarianBosniaAndHerzegovina="bg-BG",a.BulgarianBulgaria="bg-BG",a.Burmese="my",a.BurmeseMyanmar="my-MM",a.Cantonese="yue",a.CantoneseHongKong="yue-HK",a.Catalan="ca",a.CatalanSpain="ca-ES",a.Chechen="ce",a.Cherokee="chr",a.Chinese="zh",a.ChineseSimplified="zh-Hans",a.ChineseSimplifiedChina="zh-Hans-CN",a.ChineseSimplifiedHongKong="zh-Hans-HK",a.ChineseSimplifiedMacau="zh-Hans-MO",a.ChineseSimplifiedSingapore="zh-Hans-SG",a.ChineseTraditional="zh-Hant",a.ChineseTraditionalHongKong="zh-Hant-HK",a.ChineseTraditionalMacau="zh-Hant-MO",a.ChineseTraditionalSingapore="zh-Hant-SG",a.ChineseTraditionalTaiwan="zh-Hant-TW",a.Chuvash="cv",a.CorsicanFrance="co-FR",a.Croatian="hr",a.CroatianBosniaAndHerzegovina="hr-BA",a.CroatianCroatia="hr-HR",a.Czech="cs",a.CzechCzechRepublic="cs-CZ",a.Danish="da",a.DanishDenmark="da-DK",a.Dari="prs",a.DariAfghanistan="prs-AF",a.Divehi="dv",a.DivehiMaldives="dv-MV",a.Dutch="nl",a.DutchBelgium="nl-BE",a.DutchNetherlands="nl-NL",a.English="en",a.EnglishAustralia="en-AU",a.EnglishBelgium="en-BE",a.EnglishBelize="en-BZ",a.EnglishCanada="en-CA",a.EnglishCaribbean="en-029",a.EnglishIreland="en-IE",a.EnglishJamaica="en-JM",a.EnglishNewZealand="en-NZ",a.EnglishPhilippines="en-PH",a.EnglishSingapore="en-SG",a.EnglishSouthAfrica="en-ZA",a.EnglishTrinidadAndTobago="en-TT",a.EnglishUnitedKingdom="en-GB",a.EnglishUnitedStates="en-US",a.EnglishZimbabwe="en-ZW",a.Esperanto="eo",a.Estonian="et",a.EstonianEstonia="et-EE",a.Faroese="fo",a.FaroeseFaroeIslands="fo-FO",a.Farsi="fa",a.FarsiIran="fa-IR",a.Filipino="fil",a.FilipinoPhilippines="fil-PH",a.Finnish="fi",a.FinnishFinland="fi-FI",a.French="fr",a.FrenchBelgium="fr-BE",a.FrenchCanada="fr-CA",a.FrenchFrance="fr-FR",a.FrenchLuxembourg="fr-LU",a.FrenchMonaco="fr-MC",a.FrenchReunion="fr-RE",a.FrenchSwitzerland="fr-CH",a.Frisian="fy",a.FrisianNetherlands="fy-NL",a.Galician="gl",a.GalicianSpain="gl-ES",a.Georgian="ka",a.GeorgianGeorgia="ka-GE",a.German="de",a.GermanAustria="de-AT",a.GermanBelgium="de-BE",a.GermanGermany="de-DE",a.GermanLiechtenstein="de-LI",a.GermanLuxembourg="de-LU",a.GermanSwitzerland="de-CH",a.Greenlandic="kl",a.GreenlandicGreenland="kl-GL",a.Greek="el",a.GreekGreece="el-GR",a.Gujarati="gu",a.GujaratiIndia="gu-IN",a.Haitian="ht",a.Hausa="ha",a.HausaGhana="ha-GH",a.HausaNiger="ha-NE",a.HausaNigeria="ha-NG",a.Hebrew="he",a.HebrewIsrael="he-IL",a.Hindi="hi",a.HindiIndia="hi-IN",a.Hungarian="hu",a.HungarianHungary="hu-HU",a.Icelandic="is",a.IcelandicIceland="is-IS",a.Igbo="ig",a.IgboNigeria="ig-NG",a.Indonesian="id",a.IndonesianIndonesia="id-ID",a.Irish="ga",a.IrishIreland="ga-IE",a.Italian="it",a.ItalianItaly="it-IT",a.ItalianSwitzerland="it-CH",a.Japanese="ja",a.JapaneseJapan="ja-JP",a.Javanese="jv",a.Kannada="kn",a.KannadaIndia="kn-IN",a.Karelian="krl",a.Kazakh="kk",a.KazakhKazakhstan="kk-KZ",a.Khmer="km",a.KhmerCambodia="km-KH",a.KinyarwandaRwanda="rw-RW",a.Komi="kv",a.Konkani="kok",a.KonkaniIndia="kok-IN",a.Korean="ko",a.KoreanSouthKorea="ko-KR",a.Kurdish="ku",a.KurdishIraq="ku-IQ",a.KurdishTurkey="ku-TR",a.Kyrgyz="ky",a.KyrgyzKyrgyzstan="ky-KG",a.Lao="lo",a.LaoLaos="lo-LA",a.Latin="la",a.Latvian="lv",a.LatvianLatvia="lv-LV",a.Lithuanian="lt",a.LithuanianLithuania="lt-LT",a.Luxembourgish="lb",a.LuxembourgishBelgium="lb-LU",a.LuxembourgishLuxembourg="lb-LU",a.Macedonian="mk",a.MacedonianNorthMacedonia="mk-MK",a.Malagasy="mg",a.Malay="ms",a.MalayBrunei="ms-BN",a.MalayIndia="ms-IN",a.MalayMalaysia="ms-MY",a.MalaySingapore="ms-SG",a.Malayalam="ml",a.MalayalamIndia="ml-IN",a.Maltese="mt",a.MalteseMalta="mt-MT",a.Maori="mi",a.MaoriNewZealand="mi-NZ",a.Marathi="mr",a.MarathiIndia="mr-IN",a.Mari="chm",a.Mongolian="mn",a.MongolianMongolia="mn-MN",a.Montenegrin="me",a.MontenegrinMontenegro="me-ME",a.Nepali="ne",a.NepaliNepal="ne-NP",a.NorthernSotho="ns",a.NorthernSothoSouthAfrica="ns-ZA",a.Norwegian="nb",a.NorwegianBokmalNorway="nb-NO",a.NorwegianNynorskNorway="nn-NO",a.Oriya="or",a.OriyaIndia="or-IN",a.Ossetian="os",a.Pashto="ps",a.PashtoAfghanistan="ps-AF",a.Persian="fa",a.PersianIran="fa-IR",a.Polish="pl",a.PolishPoland="pl-PL",a.Portuguese="pt",a.PortugueseBrazil="pt-BR",a.PortuguesePortugal="pt-PT",a.Punjabi="pa",a.PunjabiIndia="pa-IN",a.PunjabiPakistan="pa-PK",a.Quechua="qu",a.QuechuaBolivia="qu-BO",a.QuechuaEcuador="qu-EC",a.QuechuaPeru="qu-PE",a.Romanian="ro",a.RomanianRomania="ro-RO",a.Russian="ru",a.RussianKazakhstan="ru-KZ",a.RussianKyrgyzstan="ru-KG",a.RussianRussia="ru-RU",a.RussianUkraine="ru-UA",a.Sakha="sah",a.Sanskrit="sa",a.SanskritIndia="sa-IN",a.Sami="se",a.SamiNorway="se-NO",a.SamiSweden="se-SE",a.SamiFinland="se-FI",a.Samoan="sm",a.SamoanSamoa="sm-WS",a.Scots="gd",a.Serbian="sr",a.SerbianBosniaAndHerzegovina="sr-BA",a.SerbianSerbiaAndMontenegro="sr-SP",a.SerbianCyrillic="sr-SP-Cyrl",a.SerbianCyrillicBosniaAndHerzegovina="sr-Cyrl-BA",a.SerbianCyrillicSerbiaAndMontenegro="sr-Cyrl-SP",a.Sesotho="st",a.SesothoSouthAfrica="st-ZA",a.Shona="sn",a.ShonaZimbabwe="sn-ZW",a.Sindhi="sd",a.SindhiPakistan="sd-PK",a.Sinhala="si",a.SinhalaSriLanka="si-LK",a.Slovak="sk",a.SlovakSlovakia="sk-SK",a.Slovenian="sl",a.SlovenianSlovenia="sl-SI",a.Somali="so",a.SomaliSomalia="so-SO",a.Spanish="es",a.SpanishArgentina="es-AR",a.SpanishBolivia="es-BO",a.SpanishChile="es-CL",a.SpanishColombia="es-CO",a.SpanishCostaRica="es-CR",a.SpanishCuba="es-CU",a.SpanishDominicanRepublic="es-DO",a.SpanishEcuador="es-EC",a.SpanishEquatorialGuinea="es-GQ",a.SpanishElSalvador="es-SV",a.SpanishGuatemala="es-GT",a.SpanishHonduras="es-HN",a.SpanishMexico="es-MX",a.SpanishNicaragua="es-NI",a.SpanishPanama="es-PA",a.SpanishParaguay="es-PY",a.SpanishPeru="es-PE",a.SpanishPuertoRico="es-PR",a.SpanishSpain="es-ES",a.SpanishUnitedStates="es-US",a.SpanishUruguay="es-UY",a.SpanishVenezuela="es-VE",a.Sudanese="su",a.Sutu="st",a.SutuSouthAfrica="st-ZA",a.Swahili="sw",a.SwahiliKenya="sw-KE",a.Swedish="sv",a.SwedishFinland="sv-FI",a.SwedishSweden="sv-SE",a.Syriac="syr",a.SyriacSyria="syr-SY",a.Tajik="tg",a.TajikTajikistan="tg-TJ",a.Tagalog="tl",a.TagalogPhilippines="tl-PH",a.Tamazight="tmh",a.Tamil="ta",a.TamilIndia="ta-IN",a.Tatar="tt",a.Telugu="te",a.TeluguIndia="te-IN",a.Thai="th",a.ThaiThailand="th-TH",a.Tibetan="bo",a.TibetanBhutan="bo-BT",a.TibetanChina="bo-CN",a.TibetanIndia="bo-IN",a.Tsonga="ts",a.Tswana="tn",a.TswanaSouthAfrica="tn-ZA",a.Turkish="tr",a.TurkishTurkey="tr-TR",a.Turkmen="tk",a.Ukrainian="uk",a.UkrainianUkraine="uk-UA",a.Urdu="ur",a.UrduAfghanistan="ur-AF",a.UrduIndia="ur-IN",a.UrduPakistan="ur-PK",a.Uzbek="uz",a.UzbekCyrillic="uz-Cyrl-UZ",a.UzbekLatin="uz-Latn-UZ",a.UzbekUzbekistan="uz-UZ",a.Vietnamese="vi",a.VietnameseVietnam="vi-VN",a.Welsh="cy",a.WelshUnitedKingdom="cy-GB",a.Xhosa="xh",a.XhosaSouthAfrica="xh-ZA",a.Yiddish="yi",a.Yoruba="yo",a.YorubaNigeria="yo-NG",a.ZhuyinMandarinChina="yue-Hant-CN",a.Zulu="zu",a.ZuluSouthAfrica="zu-ZA"})(i||(i={}));var f;(function(a){a.AfricaAbidjan="Africa/Abidjan",a.AfricaAccra="Africa/Accra",a.AfricaAddisAbaba="Africa/Addis_Ababa",a.AfricaAlgiers="Africa/Algiers",a.AfricaAsmara="Africa/Asmara",a.AfricaBamako="Africa/Bamako",a.AfricaBangui="Africa/Bangui",a.AfricaBanjul="Africa/Banjul",a.AfricaBissau="Africa/Bissau",a.AfricaBlantyre="Africa/Blantyre",a.AfricaBrazzaville="Africa/Brazzaville",a.AfricaBujumbura="Africa/Bujumbura",a.AfricaCairo="Africa/Cairo",a.AfricaCasablanca="Africa/Casablanca",a.AfricaCeuta="Africa/Ceuta",a.AfricaConakry="Africa/Conakry",a.AfricaDakar="Africa/Dakar",a.AfricaDarEsSalaam="Africa/Dar_es_Salaam",a.AfricaDjibouti="Africa/Djibouti",a.AfricaDouala="Africa/Douala",a.AfricaElAaiun="Africa/El_Aaiun",a.AfricaFreetown="Africa/Freetown",a.AfricaGaborone="Africa/Gaborone",a.AfricaHarare="Africa/Harare",a.AfricaJohannesburg="Africa/Johannesburg",a.AfricaJuba="Africa/Juba",a.AfricaKampala="Africa/Kampala",a.AfricaKhartoum="Africa/Khartoum",a.AfricaKigali="Africa/Kigali",a.AfricaKinshasa="Africa/Kinshasa",a.AfricaLagos="Africa/Lagos",a.AfricaLibreville="Africa/Libreville",a.AfricaLome="Africa/Lome",a.AfricaLuanda="Africa/Luanda",a.AfricaLubumbashi="Africa/Lubumbashi",a.AfricaLusaka="Africa/Lusaka",a.AfricaMalabo="Africa/Malabo",a.AfricaMaputo="Africa/Maputo",a.AfricaMaseru="Africa/Maseru",a.AfricaMbabane="Africa/Mbabane",a.AfricaMogadishu="Africa/Mogadishu",a.AfricaMonrovia="Africa/Monrovia",a.AfricaNairobi="Africa/Nairobi",a.AfricaNdjamena="Africa/Ndjamena",a.AfricaNiamey="Africa/Niamey",a.AfricaNouakchott="Africa/Nouakchott",a.AfricaOuagadougou="Africa/Ouagadougou",a.AfricaPortoNovo="Africa/Porto-Novo",a.AfricaSaoTome="Africa/Sao_Tome",a.AfricaTripoli="Africa/Tripoli",a.AfricaTunis="Africa/Tunis",a.AfricaWindhoek="Africa/Windhoek",a.AmericaAdak="America/Adak",a.AmericaAnchorage="America/Anchorage",a.AmericaAnguilla="America/Anguilla",a.AmericaAntigua="America/Antigua",a.AmericaAraguaina="America/Araguaina",a.AmericaArgentinaBuenosAires="America/Argentina/Buenos_Aires",a.AmericaArgentinaCatamarca="America/Argentina/Catamarca",a.AmericaArgentinaCordoba="America/Argentina/Cordoba",a.AmericaArgentinaJujuy="America/Argentina/Jujuy",a.AmericaArgentinaLaRioja="America/Argentina/La_Rioja",a.AmericaArgentinaMendoza="America/Argentina/Mendoza",a.AmericaArgentinaRioGallegos="America/Argentina/Rio_Gallegos",a.AmericaArgentinaSalta="America/Argentina/Salta",a.AmericaArgentinaSanJuan="America/Argentina/San_Juan",a.AmericaArgentinaSanLuis="America/Argentina/San_Luis",a.AmericaArgentinaTucuman="America/Argentina/Tucuman",a.AmericaArgentinaUshuaia="America/Argentina/Ushuaia",a.AmericaAruba="America/Aruba",a.AmericaAsuncion="America/Asuncion",a.AmericaAtikokan="America/Atikokan",a.AmericaAtka="America/Atka",a.AmericaBahia="America/Bahia",a.AmericaBahiaBanderas="America/Bahia_Banderas",a.AmericaBarbados="America/Barbados",a.AmericaBelem="America/Belem",a.AmericaBelize="America/Belize",a.AmericaBlancSablon="America/Blanc-Sablon",a.AmericaBoaVista="America/Boa_Vista",a.AmericaBogota="America/Bogota",a.AmericaBoise="America/Boise",a.AmericaCambridgeBay="America/Cambridge_Bay",a.AmericaCampoGrande="America/Campo_Grande",a.AmericaCancun="America/Cancun",a.AmericaCaracas="America/Caracas",a.AmericaCayenne="America/Cayenne",a.AmericaCayman="America/Cayman",a.AmericaChicago="America/Chicago",a.AmericaChihuahua="America/Chihuahua",a.AmericaCoralHarbour="America/Coral_Harbour",a.AmericaCordoba="America/Cordoba",a.AmericaCostaRica="America/Costa_Rica",a.AmericaCreston="America/Creston",a.AmericaCuiaba="America/Cuiaba",a.AmericaCuracao="America/Curacao",a.AmericaDanmarkshavn="America/Danmarkshavn",a.AmericaDawson="America/Dawson",a.AmericaDawsonCreek="America/Dawson_Creek",a.AmericaDenver="America/Denver",a.AmericaDetroit="America/Detroit",a.AmericaDominica="America/Dominica",a.AmericaEdmonton="America/Edmonton",a.AmericaEirunepe="America/Eirunepe",a.AmericaElSalvador="America/El_Salvador",a.AmericaFortaleza="America/Fortaleza",a.AmericaGlaceBay="America/Glace_Bay",a.AmericaGodthab="America/Godthab",a.AmericaGooseBay="America/Goose_Bay",a.AmericaGrandTurk="America/Grand_Turk",a.AmericaGrenada="America/Grenada",a.AmericaGuadeloupe="America/Guadeloupe",a.AmericaGuatemala="America/Guatemala",a.AmericaGuayaquil="America/Guayaquil",a.AmericaGuyana="America/Guyana",a.AmericaHalifax="America/Halifax",a.AmericaHavana="America/Havana",a.AmericaHermosillo="America/Hermosillo",a.AmericaIndianaIndianapolis="America/Indiana/Indianapolis",a.AmericaIndianaKnox="America/Indiana/Knox",a.AmericaIndianaMarengo="America/Indiana/Marengo",a.AmericaIndianaPetersburg="America/Indiana/Petersburg",a.AmericaIndianaTellCity="America/Indiana/Tell_City",a.AmericaIndianaVevay="America/Indiana/Vevay",a.AmericaIndianaVincennes="America/Indiana/Vincennes",a.AmericaIndianaWinamac="America/Indiana/Winamac",a.AmericaInuvik="America/Inuvik",a.AmericaIqaluit="America/Iqaluit",a.AmericaJamaica="America/Jamaica",a.AmericaJuneau="America/Juneau",a.AmericaKentuckyLouisville="America/Kentucky/Louisville",a.AmericaKentuckyMonticello="America/Kentucky/Monticello",a.AmericaKralendijk="America/Kralendijk",a.AmericaLaPaz="America/La_Paz",a.AmericaLima="America/Lima",a.AmericaLosAngeles="America/Los_Angeles",a.AmericaLouisville="America/Louisville",a.AmericaLowerPrinces="America/Lower_Princes",a.AmericaMaceio="America/Maceio",a.AmericaManagua="America/Managua",a.AmericaManaus="America/Manaus",a.AmericaMarigot="America/Marigot",a.AmericaMartinique="America/Martinique",a.AmericaMatamoros="America/Matamoros",a.AmericaMazatlan="America/Mazatlan",a.AmericaMenominee="America/Menominee",a.AmericaMerida="America/Merida",a.AmericaMetlakatla="America/Metlakatla",a.AmericaMexicoCity="America/Mexico_City",a.AmericaMiquelon="America/Miquelon",a.AmericaMoncton="America/Moncton",a.AmericaMonterrey="America/Monterrey",a.AmericaMontevideo="America/Montevideo",a.AmericaMontserrat="America/Montserrat",a.AmericaMontreal="America/Montreal",a.AmericaNassau="America/Nassau",a.AmericaNewYork="America/New_York",a.AmericaNipigon="America/Nipigon",a.AmericaNome="America/Nome",a.AmericaNoronha="America/Noronha",a.AmericaNorthDakotaBeulah="America/North_Dakota/Beulah",a.AmericaNorthDakotaCenter="America/North_Dakota/Center",a.AmericaNorthDakotaNewSalem="America/North_Dakota/New_Salem",a.AmericaOjinaga="America/Ojinaga",a.AmericaPanama="America/Panama",a.AmericaPangnirtung="America/Pangnirtung",a.AmericaParamaribo="America/Paramaribo",a.AmericaPhoenix="America/Phoenix",a.AmericaPortAuPrince="America/Port-au-Prince",a.AmericaPortOfSpain="America/Port_of_Spain",a.AmericaPortoVelho="America/Porto_Velho",a.AmericaPuertoRico="America/Puerto_Rico",a.AmericaRainyRiver="America/Rainy_River",a.AmericaRankinInlet="America/Rankin_Inlet",a.AmericaRecife="America/Recife",a.AmericaRegina="America/Regina",a.AmericaResolute="America/Resolute",a.AmericaRioBranco="America/Rio_Branco",a.AmericaSantaIsabel="America/Santa_Isabel",a.AmericaSantarem="America/Santarem",a.AmericaSantiago="America/Santiago",a.AmericaSantoDomingo="America/Santo_Domingo",a.AmericaSaoPaulo="America/Sao_Paulo",a.AmericaScoresbysund="America/Scoresbysund",a.AmericaShiprock="America/Shiprock",a.AmericaSitka="America/Sitka",a.AmericaStBarthelemy="America/St_Barthelemy",a.AmericaStJohns="America/St_Johns",a.AmericaStKitts="America/St_Kitts",a.AmericaStLucia="America/St_Lucia",a.AmericaStThomas="America/St_Thomas",a.AmericaStVincent="America/St_Vincent",a.AmericaSwiftCurrent="America/Swift_Current",a.AmericaTegucigalpa="America/Tegucigalpa",a.AmericaThule="America/Thule",a.AmericaThunderBay="America/Thunder_Bay",a.AmericaTijuana="America/Tijuana",a.AmericaToronto="America/Toronto",a.AmericaTortola="America/Tortola",a.AmericaVancouver="America/Vancouver",a.AmericaWhitehorse="America/Whitehorse",a.AmericaWinnipeg="America/Winnipeg",a.AmericaYakutat="America/Yakutat",a.AmericaYellowknife="America/Yellowknife",a.AntarcticaCasey="Antarctica/Casey",a.AntarcticaDavis="Antarctica/Davis",a.AntarcticaDumontDUrville="Antarctica/DumontDUrville",a.AntarcticaMacquarie="Antarctica/Macquarie",a.AntarcticaMawson="Antarctica/Mawson",a.AntarcticaMcMurdo="Antarctica/McMurdo",a.AntarcticaPalmer="Antarctica/Palmer",a.AntarcticaRothera="Antarctica/Rothera",a.AntarcticaSyowa="Antarctica/Syowa",a.AntarcticaTroll="Antarctica/Troll",a.AntarcticaVostok="Antarctica/Vostok",a.ArcticLongyearbyen="Arctic/Longyearbyen",a.AsiaAden="Asia/Aden",a.AsiaAlmaty="Asia/Almaty",a.AsiaAmman="Asia/Amman",a.AsiaAnadyr="Asia/Anadyr",a.AsiaAqtau="Asia/Aqtau",a.AsiaAqtobe="Asia/Aqtobe",a.AsiaAshgabat="Asia/Ashgabat",a.AsiaBaghdad="Asia/Baghdad",a.AsiaBahrain="Asia/Bahrain",a.AsiaBaku="Asia/Baku",a.AsiaBangkok="Asia/Bangkok",a.AsiaBarnaul="Asia/Barnaul",a.AsiaBeirut="Asia/Beirut",a.AsiaBishkek="Asia/Bishkek",a.AsiaBrunei="Asia/Brunei",a.AsiaChita="Asia/Chita",a.AsiaChoibalsan="Asia/Choibalsan",a.AsiaColombo="Asia/Colombo",a.AsiaDamascus="Asia/Damascus",a.AsiaDhaka="Asia/Dhaka",a.AsiaDili="Asia/Dili",a.AsiaDubai="Asia/Dubai",a.AsiaDushanbe="Asia/Dushanbe",a.AsiaFamagusta="Asia/Famagusta",a.AsiaGaza="Asia/Gaza",a.AsiaHebron="Asia/Hebron",a.AsiaHoChiMinh="Asia/Ho_Chi_Minh",a.AsiaHongKong="Asia/Hong_Kong",a.AsiaHovd="Asia/Hovd",a.AsiaIrkutsk="Asia/Irkutsk",a.AsiaJakarta="Asia/Jakarta",a.AsiaJayapura="Asia/Jayapura",a.AsiaJerusalem="Asia/Jerusalem",a.AsiaKabul="Asia/Kabul",a.AsiaKamchatka="Asia/Kamchatka",a.AsiaKarachi="Asia/Karachi",a.AsiaKathmandu="Asia/Kathmandu",a.AsiaKhandyga="Asia/Khandyga",a.AsiaKolkata="Asia/Kolkata",a.AsiaKrasnoyarsk="Asia/Krasnoyarsk",a.AsiaKualaLumpur="Asia/Kuala_Lumpur",a.AsiaKuching="Asia/Kuching",a.AsiaKuwait="Asia/Kuwait",a.AsiaMacau="Asia/Macau",a.AsiaMagadan="Asia/Magadan",a.AsiaMakassar="Asia/Makassar",a.AsiaManila="Asia/Manila",a.AsiaMuscat="Asia/Muscat",a.AsiaNicosia="Asia/Nicosia",a.AsiaNovokuznetsk="Asia/Novokuznetsk",a.AsiaNovosibirsk="Asia/Novosibirsk",a.AsiaOmsk="Asia/Omsk",a.AsiaOral="Asia/Oral",a.AsiaPhnomPenh="Asia/Phnom_Penh",a.AsiaPontianak="Asia/Pontianak",a.AsiaPyongyang="Asia/Pyongyang",a.AsiaQatar="Asia/Qatar",a.AsiaQyzylorda="Asia/Qyzylorda",a.AsiaRangoon="Asia/Rangoon",a.AsiaRiyadh="Asia/Riyadh",a.AsiaSakhalin="Asia/Sakhalin",a.AsiaSamarkand="Asia/Samarkand",a.AsiaSeoul="Asia/Seoul",a.AsiaShanghai="Asia/Shanghai",a.AsiaSingapore="Asia/Singapore",a.AsiaSrednekolymsk="Asia/Srednekolymsk",a.AsiaTaipei="Asia/Taipei",a.AsiaTashkent="Asia/Tashkent",a.AsiaTbilisi="Asia/Tbilisi",a.AsiaTehran="Asia/Tehran",a.AsiaThimphu="Asia/Thimphu",a.AsiaTokyo="Asia/Tokyo",a.AsiaTomsk="Asia/Tomsk",a.AsiaUlaanbaatar="Asia/Ulaanbaatar",a.AsiaUrumqi="Asia/Urumqi",a.AsiaUstNera="Asia/Ust-Nera",a.AsiaVientiane="Asia/Vientiane",a.AsiaVladivostok="Asia/Vladivostok",a.AsiaYakutsk="Asia/Yakutsk",a.AsiaYekaterinburg="Asia/Yekaterinburg",a.AsiaYerevan="Asia/Yerevan",a.AtlanticAzores="Atlantic/Azores",a.AtlanticBermuda="Atlantic/Bermuda",a.AtlanticCanary="Atlantic/Canary",a.AtlanticCapeVerde="Atlantic/Cape_Verde",a.AtlanticFaroe="Atlantic/Faroe",a.AtlanticMadeira="Atlantic/Madeira",a.AtlanticReykjavik="Atlantic/Reykjavik",a.AtlanticSouthGeorgia="Atlantic/South_Georgia",a.AtlanticStHelena="Atlantic/St_Helena",a.AtlanticStanley="Atlantic/Stanley",a.AustraliaAdelaide="Australia/Adelaide",a.AustraliaBrisbane="Australia/Brisbane",a.AustraliaBrokenHill="Australia/Broken_Hill",a.AustraliaCanberra="Australia/Canberra",a.AustraliaCurrie="Australia/Currie",a.AustraliaDarwin="Australia/Darwin",a.AustraliaEucla="Australia/Eucla",a.AustraliaHobart="Australia/Hobart",a.AustraliaLindeman="Australia/Lindeman",a.AustraliaLordHowe="Australia/Lord_Howe",a.AustraliaMelbourne="Australia/Melbourne",a.AustraliaPerth="Australia/Perth",a.AustraliaSydney="Australia/Sydney",a.EuropeAmsterdam="Europe/Amsterdam",a.EuropeAndorra="Europe/Andorra",a.EuropeAthens="Europe/Athens",a.EuropeBelgrade="Europe/Belgrade",a.EuropeBerlin="Europe/Berlin",a.EuropeBratislava="Europe/Bratislava",a.EuropeBrussels="Europe/Brussels",a.EuropeBucharest="Europe/Bucharest",a.EuropeBudapest="Europe/Budapest",a.EuropeBusingen="Europe/Busingen",a.EuropeChisinau="Europe/Chisinau",a.EuropeCopenhagen="Europe/Copenhagen",a.EuropeDublin="Europe/Dublin",a.EuropeGibraltar="Europe/Gibraltar",a.EuropeGuernsey="Europe/Guernsey",a.EuropeHelsinki="Europe/Helsinki",a.EuropeIsleOfMan="Europe/Isle_of_Man",a.EuropeIstanbul="Europe/Istanbul",a.EuropeJersey="Europe/Jersey",a.EuropeKaliningrad="Europe/Kaliningrad",a.EuropeKiev="Europe/Kiev",a.EuropeKirov="Europe/Kirov",a.EuropeLisbon="Europe/Lisbon",a.EuropeLjubljana="Europe/Ljubljana",a.EuropeLondon="Europe/London",a.EuropeLuxembourg="Europe/Luxembourg",a.EuropeMadrid="Europe/Madrid",a.EuropeMalta="Europe/Malta",a.EuropeMariehamn="Europe/Mariehamn",a.EuropeMinsk="Europe/Minsk",a.EuropeMonaco="Europe/Monaco",a.EuropeMoscow="Europe/Moscow",a.EuropeOslo="Europe/Oslo",a.EuropeParis="Europe/Paris",a.EuropePodgorica="Europe/Podgorica",a.EuropePrague="Europe/Prague",a.EuropeRiga="Europe/Riga",a.EuropeRome="Europe/Rome",a.EuropeSamara="Europe/Samara",a.EuropeSanMarino="Europe/San_Marino",a.EuropeSarajevo="Europe/Sarajevo",a.EuropeSimferopol="Europe/Simferopol",a.EuropeSkopje="Europe/Skopje",a.EuropeSofia="Europe/Sofia",a.EuropeStockholm="Europe/Stockholm",a.EuropeTallinn="Europe/Tallinn",a.EuropeTirane="Europe/Tirane",a.EuropeUzhgorod="Europe/Uzhgorod",a.EuropeVaduz="Europe/Vaduz",a.EuropeVatican="Europe/Vatican",a.EuropeVienna="Europe/Vienna",a.EuropeVilnius="Europe/Vilnius",a.EuropeVolgograd="Europe/Volgograd",a.EuropeWarsaw="Europe/Warsaw",a.EuropeZagreb="Europe/Zagreb",a.EuropeZaporozhye="Europe/Zaporozhye",a.EuropeZurich="Europe/Zurich",a.GMT="GMT",a.IndianAntananarivo="Indian/Antananarivo",a.IndianChagos="Indian/Chagos",a.IndianChristmas="Indian/Christmas",a.IndianCocos="Indian/Cocos",a.IndianComoro="Indian/Comoro",a.IndianKerguelen="Indian/Kerguelen",a.IndianMahe="Indian/Mahe",a.IndianMaldives="Indian/Maldives",a.IndianMauritius="Indian/Mauritius",a.IndianMayotte="Indian/Mayotte",a.IndianReunion="Indian/Reunion",a.PacificApia="Pacific/Apia",a.PacificAuckland="Pacific/Auckland",a.PacificBougainville="Pacific/Bougainville",a.PacificChatham="Pacific/Chatham",a.PacificChuuk="Pacific/Chuuk",a.PacificEaster="Pacific/Easter",a.PacificEfate="Pacific/Efate",a.PacificEnderbury="Pacific/Enderbury",a.PacificFakaofo="Pacific/Fakaofo",a.PacificFiji="Pacific/Fiji",a.PacificFunafuti="Pacific/Funafuti",a.PacificGalapagos="Pacific/Galapagos",a.PacificGambier="Pacific/Gambier",a.PacificGuadalcanal="Pacific/Guadalcanal",a.PacificGuam="Pacific/Guam",a.PacificHonolulu="Pacific/Honolulu",a.PacificJohnston="Pacific/Johnston",a.PacificKiritimati="Pacific/Kiritimati",a.PacificKosrae="Pacific/Kosrae",a.PacificKwajalein="Pacific/Kwajalein",a.PacificMajuro="Pacific/Majuro",a.PacificMarquesas="Pacific/Marquesas",a.PacificMidway="Pacific/Midway",a.PacificNauru="Pacific/Nauru",a.PacificNiue="Pacific/Niue",a.PacificNorfolk="Pacific/Norfolk",a.PacificNoumea="Pacific/Noumea",a.PacificPagoPago="Pacific/Pago_Pago",a.PacificPalau="Pacific/Palau",a.PacificPitcairn="Pacific/Pitcairn",a.PacificPohnpei="Pacific/Pohnpei",a.PacificPonape="Pacific/Ponape",a.PacificPortMoresby="Pacific/Port_Moresby",a.PacificRarotonga="Pacific/Rarotonga",a.PacificSaipan="Pacific/Saipan",a.PacificSamoa="Pacific/Samoa",a.PacificTahiti="Pacific/Tahiti",a.PacificTarawa="Pacific/Tarawa",a.PacificTongatapu="Pacific/Tongatapu",a.PacificTruk="Pacific/Truk",a.PacificWake="Pacific/Wake",a.PacificWallis="Pacific/Wallis",a.PacificYap="Pacific/Yap"})(f||(f={}));var m;(function(a){a.UTC_MINUS_12="UTC-12",a.UTC_MINUS_11_30="UTC-11:30",a.UTC_MINUS_11="UTC-11",a.UTC_MINUS_10_30="UTC-10:30",a.UTC_MINUS_10="UTC-10",a.UTC_MINUS_9_30="UTC-9:30",a.UTC_MINUS_9="UTC-09",a.UTC_MINUS_8_45="UTC-8:45",a.UTC_MINUS_8="UTC-08",a.UTC_MINUS_7="UTC-07",a.UTC_MINUS_6_30="UTC-6:30",a.UTC_MINUS_6="UTC-06",a.UTC_MINUS_5_45="UTC-5:45",a.UTC_MINUS_5_30="UTC-5:30",a.UTC_MINUS_5="UTC-05",a.UTC_MINUS_4_30="UTC-4:30",a.UTC_MINUS_4="UTC-04",a.UTC_MINUS_3_30="UTC-3:30",a.UTC_MINUS_3="UTC-03",a.UTC_MINUS_2_30="UTC-2:30",a.UTC_MINUS_2="UTC-02",a.UTC_MINUS_1="UTC-01",a.UTC_0="UTC+00",a.UTC_PLUS_1="UTC+01",a.UTC_PLUS_2="UTC+02",a.UTC_PLUS_3="UTC+03",a.UTC_PLUS_3_30="UTC+3:30",a.UTC_PLUS_4="UTC+04",a.UTC_PLUS_4_30="UTC+4:30",a.UTC_PLUS_5="UTC+05",a.UTC_PLUS_5_30="UTC+5:30",a.UTC_PLUS_5_45="UTC+5:45",a.UTC_PLUS_6="UTC+06",a.UTC_PLUS_6_30="UTC+6:30",a.UTC_PLUS_7="UTC+07",a.UTC_PLUS_8="UTC+08",a.UTC_PLUS_8_45="UTC+8:45",a.UTC_PLUS_9="UTC+09",a.UTC_PLUS_9_30="UTC+9:30",a.UTC_PLUS_10="UTC+10",a.UTC_PLUS_10_30="UTC+10:30",a.UTC_PLUS_11="UTC+11",a.UTC_PLUS_11_30="UTC+11:30",a.UTC_PLUS_12="UTC+12",a.UTC_PLUS_12_45="UTC+12:45",a.UTC_PLUS_13="UTC+13",a.UTC_PLUS_13_45="UTC+13:45",a.UTC_PLUS_14="UTC+14"})(m||(m={}));var c;(function(a){a.AcreTime="ACT",a.AfghanistanTime="AFT",a.AIXCentralEuropeanTime="DFT",a.AlaskaDaylightTime="AKDT",a.AlaskaStandardTime="AKST",a.AlmaAtaTime="ALMT",a.AmazonSummerTime="AMST",a.AmazonTime="AMT",a.AnadyrTime="ANAT",a.AqtobeTime="AQTT",a.ArabiaStandardTime="AST",a.ArgentinaTime="ART",a.ArmeniaTime="AMT",a.ASEANCommonTime="ASEAN",a.AtlanticDaylightTime="ADT",a.AtlanticStandardTime="AST",a.AustralianCentralDaylightSavingTime="ACDT",a.AustralianCentralStandardTime="ACST",a.AustralianCentralWesternStandardTime="ACWST",a.AustralianEasternDaylightSavingTime="AEDT",a.AustralianEasternStandardTime="AEST",a.AustralianEasternTime="AET",a.AustralianWesternStandardTime="AWST",a.AzerbaijanTime="AZT",a.AzoresStandardTime="AZOT",a.AzoresSummerTime="AZOST",a.BakerIslandTime="BIT",a.BangladeshStandardTime="BST",a.BhutanTime="BTT",a.BoliviaTime="BOT",a.BougainvilleStandardTime="BST",a.BrasiliaSummerTime="BRST",a.BrasiliaTime="BRT",a.BritishIndianOceanTime="BIOT",a.BritishSummerTime="BST",a.BruneiTime="BNT",a.CapeVerdeTime="CVT",a.CentralAfricaTime="CAT",a.CentralDaylightTime="CDT",a.CentralEuropeanSummerTime="CEST",a.CentralEuropeanTime="CET",a.CentralIndonesiaTime="WITA",a.CentralStandardTime="CST",a.CentralTime="CT",a.CentralWesternStandardTime="CWST",a.ChamorroStandardTime="CHST",a.ChathamDaylightTime="CHADT",a.ChathamStandardTime="CHAST",a.ChileStandardTime="CLT",a.ChileSummerTime="CLST",a.ChinaStandardTime="CST",a.ChoibalsanStandardTime="CHOT",a.ChoibalsanSummerTime="CHOST",a.ChristmasIslandTime="CXT",a.ChuukTime="CHUT",a.ClipptertonIslandStandardTime="CIST",a.CocosIslandsTime="CCT",a.ColombiaSummerTime="COST",a.ColombiaTime="COT",a.CookIslandTime="CKT",a.CoordinatedUniversalTime="UTC",a.CubaDaylightTime="CDT",a.CubaStandardTime="CST",a.DavisTime="DAVT",a.DumontDUrvilleTime="DDUT",a.EastAfricaTime="EAT",a.EasterIslandStandardTime="EAST",a.EasterIslandSummerTime="EASST",a.EasternCaribbeanTime="ECT",a.EasternDaylightTime="EDT",a.EasternEuropeanSummerTime="EEST",a.EasternEuropeanTime="EET",a.EasternGreenlandSummerTime="EGST",a.EasternGreenlandTime="EGT",a.EasternIndonesianTime="WIT",a.EasternStandardTime="EST",a.EasternTime="ET",a.EcuadorTime="ECT",a.FalklandIslandsSummerTime="FKST",a.FalklandIslandsTime="FKT",a.FernandoDeNoronhaTime="FNT",a.FijiTime="FJT",a.FrenchGuianaTime="GFT",a.FrenchSouthernAndAntarcticTime="TFT",a.FurtherEasternEuropeanTime="FET",a.GalapagosTime="GALT",a.GambierIslandTime="GIT",a.GambierIslandsTime="GAMT",a.GeorgiaStandardTime="GET",a.GilbertIslandTime="GILT",a.GreenwichMeanTime="GMT",a.GulfStandardTime="GST",a.GuyanaTime="GYT",a.HawaiiAleutianDaylightTime="HDT",a.HawaiiAleutianStandardTime="HST",a.HeardAndMcDonaldIslandsTime="HMT",a.HeureAvanceeDEuropeCentraleTime="HAEC",a.HongKongTime="HKT",a.HovdSummerTime="HOVST",a.HovdTime="HOVT",a.IndianOceanTime="IOT",a.IndianStandardTime="IST",a.IndochinaTime="ICT",a.InternationalDayLineWestTime="IDLW",a.IranDaylightTime="IRDT",a.IranStandardTime="IRST",a.IrishStandardTime="IST",a.IrkutskSummerTime="IRKST",a.IrkutskTime="IRKT",a.IsraelDaylightTime="IDT",a.IsraelStandardTime="IST",a.JapanStandardTime="JST",a.KaliningradTime="KALT",a.KamchatkaTime="KAMT",a.KoreaStandardTime="KST",a.KosraeTime="KOST",a.KrasnoyarskSummerTime="KRAST",a.KrasnoyarskTime="KRAT",a.KyrgyzstanTime="KGT",a.LineIslandsTime="LINT",a.KazakhstanStandardTime="KAST",a.LordHoweStandardTime="LHST",a.LordHoweSummerTime="LHST",a.MacquarieIslandStationTime="MIST",a.MagadanTime="MAGT",a.MalaysiaStandardTime="MST",a.MalaysiaTime="MYT",a.MaldivesTime="MVT",a.MarquesasIslandsTime="MART",a.MarshallIslandsTime="MHT",a.MauritiusTime="MUT",a.MawsonStationTime="MAWT",a.MiddleEuropeanSummerTime="MEDT",a.MiddleEuropeanTime="MET",a.MoscowTime="MSK",a.MountainDaylightTime="MDT",a.MountainStandardTime="MST",a.MyanmarStandardTime="MMT",a.NepalTime="NCT",a.NauruTime="NRT",a.NewCaledoniaTime="NCT",a.NewZealandDaylightTime="NZDT",a.NewZealandStandardTime="NZST",a.NewfoundlandDaylightTime="NDT",a.NewfoundlandStandardTime="NST",a.NewfoundlandTime="NT",a.NiueTime="NUT",a.NorfolkIslandTime="NFT",a.NovosibirskTime="NOVT",a.OmskTime="OMST",a.OralTime="ORAT",a.PacificDaylightTime="PDT",a.PacificStandardTime="PST",a.PakistanStandardTime="PKT",a.PalauTime="PWT",a.PapuaNewGuineaTime="PGT",a.ParaguaySummerTime="PYST",a.ParaguayTime="PYT",a.PeruTime="PET",a.PhilippineStandardTime="PHST",a.PhilippineTime="PHT",a.PhoenixIslandTime="PHOT",a.PitcairnTime="PST",a.PohnpeiStandardTime="PONT",a.ReunionTime="RET",a.RotheraResearchStationTime="ROTT",a.SaintPierreAndMiquelonDaylightTime="PMDT",a.SaintPierreAndMiquelonStandardTime="PMST",a.SakhalinIslandTime="SAKT",a.SamaraTime="SAMT",a.SamoaDaylightTime="SDT",a.SamoaStandardTime="SST",a.SeychellesTime="SCT",a.ShowaStationTime="SYOT",a.SingaporeStandardTime="SST",a.SingaporeTime="SGT",a.SolomonIslandsTime="SBT",a.SouthAfricanStandardTime="SAST",a.SouthGeorgiaAndTheSouthSandwichIslandsTime="GST",a.SrednekolymskTime="SRET",a.SriLankaStandardTime="SLST",a.SurinameTime="SRT",a.TahitiTime="TAHT",a.TajikistanTime="TJT",a.ThailandStandardTime="THA",a.TimorLesteTime="TLT",a.TokelauTime="TKT",a.TongaTime="TOT",a.TurkeyTime="TRT",a.TurkmenistanTime="TMT",a.TuvaluTime="TVT",a.UlaanbaatarStandardTime="ULAT",a.UlaanbaatarSummerTime="ULAST",a.UruguayStandardTime="UYT",a.UruguaySummerTime="UYST",a.UzbekistanTime="UZT",a.VanuatuTime="VUT",a.VenezuelaStandardTime="VET",a.VladivostokTime="VLAT",a.VolgogradTime="VOLT",a.VostokStationTime="VOST",a.WakeIslandTime="WAKT",a.WestAfricaSummerTime="WAST",a.WestAfricaTime="WAT",a.WestGreenlandSummerTime="WGST",a.WestGreenlandTime="WGT",a.WestKazakhstanTime="WKT",a.WesternEuropeanSummerTime="WEDT",a.WesternEuropeanTime="WET",a.WesternIndonesianTime="WIT",a.WesternStandardTime="WST",a.YakutskTime="YAKT",a.YekaterinburgTime="YEKT"})(c||(c={}));c.AcreTime,m.UTC_MINUS_5;c.AfghanistanTime,m.UTC_PLUS_4_30;c.AIXCentralEuropeanTime,m.UTC_PLUS_1;c.AlaskaDaylightTime,m.UTC_MINUS_8;c.AlaskaStandardTime,m.UTC_MINUS_9;c.AlmaAtaTime,m.UTC_PLUS_6;c.AmazonSummerTime,m.UTC_MINUS_3;c.AmazonTime,m.UTC_MINUS_4;c.AnadyrTime,m.UTC_PLUS_12;c.AqtobeTime,m.UTC_PLUS_5;c.ArabiaStandardTime,m.UTC_PLUS_3;c.ArgentinaTime,m.UTC_MINUS_3;c.ArmeniaTime,m.UTC_PLUS_4;c.AtlanticDaylightTime,m.UTC_MINUS_3;c.AtlanticStandardTime,m.UTC_MINUS_4;c.AustralianCentralDaylightSavingTime,m.UTC_PLUS_10_30;c.AustralianCentralStandardTime,m.UTC_PLUS_9_30;c.AustralianCentralWesternStandardTime,m.UTC_PLUS_8_45;c.AustralianEasternDaylightSavingTime,m.UTC_PLUS_11;c.AustralianEasternStandardTime,m.UTC_PLUS_10;c.AustralianEasternTime,m.UTC_PLUS_10;c.AustralianWesternStandardTime,m.UTC_PLUS_8;c.AzerbaijanTime,m.UTC_PLUS_4;c.AzoresStandardTime,m.UTC_MINUS_1;c.AzoresSummerTime,m.UTC_0;c.BakerIslandTime,m.UTC_MINUS_12;c.BangladeshStandardTime,m.UTC_PLUS_6;c.BhutanTime,m.UTC_PLUS_6;c.BoliviaTime,m.UTC_MINUS_4;c.BougainvilleStandardTime,m.UTC_PLUS_11;c.BrasiliaSummerTime,m.UTC_MINUS_2;c.BrasiliaTime,m.UTC_MINUS_3;c.BritishIndianOceanTime,m.UTC_PLUS_6;c.BritishSummerTime,m.UTC_PLUS_1;c.BruneiTime,m.UTC_PLUS_8;c.CapeVerdeTime,m.UTC_MINUS_1;c.CentralAfricaTime,m.UTC_PLUS_2;c.CentralDaylightTime,m.UTC_MINUS_5;c.CentralEuropeanSummerTime,m.UTC_PLUS_2;c.CentralEuropeanTime,m.UTC_PLUS_1;c.CentralIndonesiaTime,m.UTC_PLUS_8;c.CentralStandardTime,m.UTC_MINUS_6;c.CentralTime,m.UTC_MINUS_5;c.CentralWesternStandardTime,m.UTC_PLUS_8_45;c.ChamorroStandardTime,m.UTC_PLUS_10;c.ChathamDaylightTime,m.UTC_PLUS_13_45;c.ChathamStandardTime,m.UTC_PLUS_12_45;c.ChileStandardTime,m.UTC_MINUS_4;c.ChileSummerTime,m.UTC_MINUS_3;c.ChinaStandardTime,m.UTC_PLUS_8;c.ChoibalsanStandardTime,m.UTC_PLUS_8;c.ChoibalsanSummerTime,m.UTC_PLUS_9;c.ChristmasIslandTime,m.UTC_PLUS_7;c.ChuukTime,m.UTC_PLUS_10;c.ClipptertonIslandStandardTime,m.UTC_MINUS_8;c.CocosIslandsTime,m.UTC_PLUS_6_30;c.ColombiaSummerTime,m.UTC_MINUS_4;c.ColombiaTime,m.UTC_MINUS_5;c.CookIslandTime,m.UTC_MINUS_10;c.CoordinatedUniversalTime,m.UTC_0;c.CubaDaylightTime,m.UTC_MINUS_4;c.CubaStandardTime,m.UTC_MINUS_5;c.DavisTime,m.UTC_PLUS_7;c.DumontDUrvilleTime,m.UTC_PLUS_10;c.EastAfricaTime,m.UTC_PLUS_3;c.EasterIslandStandardTime,m.UTC_MINUS_6;c.EasterIslandSummerTime,m.UTC_MINUS_5;c.EasternCaribbeanTime,m.UTC_MINUS_4;c.EasternDaylightTime,m.UTC_MINUS_4;c.EasternEuropeanSummerTime,m.UTC_PLUS_3;c.EasternEuropeanTime,m.UTC_PLUS_2;c.EasternGreenlandSummerTime,m.UTC_0;c.EasternGreenlandTime,m.UTC_MINUS_1;c.EasternIndonesianTime,m.UTC_PLUS_9;c.EasternStandardTime,m.UTC_MINUS_5;c.EasternTime,m.UTC_MINUS_5;c.EcuadorTime,m.UTC_MINUS_5;c.FalklandIslandsSummerTime,m.UTC_MINUS_3;c.FalklandIslandsTime,m.UTC_MINUS_4;c.FernandoDeNoronhaTime,m.UTC_MINUS_2;c.FijiTime,m.UTC_PLUS_12;c.FrenchGuianaTime,m.UTC_MINUS_3;c.FrenchSouthernAndAntarcticTime,m.UTC_PLUS_5;c.FurtherEasternEuropeanTime,m.UTC_PLUS_3;c.GalapagosTime,m.UTC_MINUS_6;c.GambierIslandTime,m.UTC_MINUS_9;c.GambierIslandsTime,m.UTC_MINUS_9;c.GeorgiaStandardTime,m.UTC_PLUS_4;c.GilbertIslandTime,m.UTC_PLUS_12;c.GreenwichMeanTime,m.UTC_0;c.GulfStandardTime,m.UTC_PLUS_4;c.GuyanaTime,m.UTC_MINUS_4;c.HawaiiAleutianDaylightTime,m.UTC_MINUS_9;c.HawaiiAleutianStandardTime,m.UTC_MINUS_10;c.HeardAndMcDonaldIslandsTime,m.UTC_PLUS_5;c.HongKongTime,m.UTC_PLUS_8;c.HovdSummerTime,m.UTC_PLUS_8;c.HovdTime,m.UTC_PLUS_7;c.IndianOceanTime,m.UTC_PLUS_3;c.IndianStandardTime,m.UTC_PLUS_5_30;c.IndochinaTime,m.UTC_PLUS_7;c.InternationalDayLineWestTime,m.UTC_MINUS_12;c.IranDaylightTime,m.UTC_PLUS_4_30;c.IranStandardTime,m.UTC_PLUS_3_30;c.IrishStandardTime,m.UTC_PLUS_1;c.IrkutskTime,m.UTC_PLUS_8;c.IsraelDaylightTime,m.UTC_PLUS_3;c.IsraelStandardTime,m.UTC_PLUS_2;c.JapanStandardTime,m.UTC_PLUS_9;c.KaliningradTime,m.UTC_PLUS_2;c.KamchatkaTime,m.UTC_PLUS_12;c.KoreaStandardTime,m.UTC_PLUS_9;c.KosraeTime,m.UTC_PLUS_11;c.KrasnoyarskTime,m.UTC_PLUS_7;c.KyrgyzstanTime,m.UTC_PLUS_6;c.LineIslandsTime,m.UTC_PLUS_14;c.LordHoweStandardTime,m.UTC_PLUS_10_30;c.LordHoweSummerTime,m.UTC_PLUS_11;c.MacquarieIslandStationTime,m.UTC_PLUS_11;c.MagadanTime,m.UTC_PLUS_12;c.MalaysiaStandardTime,m.UTC_PLUS_8;c.MalaysiaTime,m.UTC_PLUS_8;c.MaldivesTime,m.UTC_PLUS_5;c.MarquesasIslandsTime,m.UTC_PLUS_9_30;c.MarshallIslandsTime,m.UTC_PLUS_12;c.MauritiusTime,m.UTC_PLUS_4;c.MawsonStationTime,m.UTC_PLUS_5;c.MiddleEuropeanSummerTime,m.UTC_PLUS_2;c.MiddleEuropeanTime,m.UTC_PLUS_1;c.MoscowTime,m.UTC_PLUS_3;c.MountainDaylightTime,m.UTC_MINUS_6;c.MountainStandardTime,m.UTC_MINUS_7;c.MyanmarStandardTime,m.UTC_PLUS_6_30;c.NepalTime,m.UTC_PLUS_5_45;c.NauruTime,m.UTC_PLUS_12;c.NewCaledoniaTime,m.UTC_PLUS_11;c.NewZealandDaylightTime,m.UTC_PLUS_13;c.NewZealandStandardTime,m.UTC_PLUS_12;c.NewfoundlandDaylightTime,m.UTC_MINUS_2_30;c.NewfoundlandTime,m.UTC_MINUS_3_30;c.NiueTime,m.UTC_MINUS_11;c.NorfolkIslandTime,m.UTC_PLUS_11;c.NovosibirskTime,m.UTC_PLUS_7;c.OmskTime,m.UTC_PLUS_6;c.OralTime,m.UTC_PLUS_5;c.PacificDaylightTime,m.UTC_MINUS_7;c.PacificStandardTime,m.UTC_MINUS_8;c.PakistanStandardTime,m.UTC_PLUS_5;c.PalauTime,m.UTC_PLUS_9;c.PapuaNewGuineaTime,m.UTC_PLUS_10;c.ParaguaySummerTime,m.UTC_MINUS_3;c.ParaguayTime,m.UTC_MINUS_4;c.PeruTime,m.UTC_MINUS_5;c.PhilippineStandardTime,m.UTC_PLUS_8;c.PhilippineTime,m.UTC_PLUS_8;c.PhoenixIslandTime,m.UTC_PLUS_13;c.PitcairnTime,m.UTC_MINUS_8;c.PohnpeiStandardTime,m.UTC_PLUS_11;c.ReunionTime,m.UTC_PLUS_4;c.RotheraResearchStationTime,m.UTC_MINUS_3;c.SaintPierreAndMiquelonDaylightTime,m.UTC_MINUS_2;c.SaintPierreAndMiquelonStandardTime,m.UTC_MINUS_3;c.SakhalinIslandTime,m.UTC_PLUS_11;c.SamaraTime,m.UTC_PLUS_4;c.SamoaDaylightTime,m.UTC_MINUS_10;c.SamoaStandardTime,m.UTC_MINUS_11;c.SeychellesTime,m.UTC_PLUS_4;c.ShowaStationTime,m.UTC_PLUS_3;c.SingaporeStandardTime,m.UTC_PLUS_8;c.SingaporeTime,m.UTC_PLUS_8;c.SolomonIslandsTime,m.UTC_PLUS_11;c.SouthAfricanStandardTime,m.UTC_PLUS_2;c.SouthGeorgiaAndTheSouthSandwichIslandsTime,m.UTC_MINUS_2;c.SrednekolymskTime,m.UTC_PLUS_11;c.SriLankaStandardTime,m.UTC_PLUS_5_30;c.SurinameTime,m.UTC_MINUS_3;c.TahitiTime,m.UTC_MINUS_10;c.TajikistanTime,m.UTC_PLUS_5;c.ThailandStandardTime,m.UTC_PLUS_7;c.TimorLesteTime,m.UTC_PLUS_9;c.TokelauTime,m.UTC_PLUS_13;c.TongaTime,m.UTC_PLUS_13;c.TurkeyTime,m.UTC_PLUS_3;c.TurkmenistanTime,m.UTC_PLUS_5;c.TuvaluTime,m.UTC_PLUS_12;c.UlaanbaatarStandardTime,m.UTC_PLUS_8;c.UlaanbaatarSummerTime,m.UTC_PLUS_9;c.UruguayStandardTime,m.UTC_MINUS_3;c.UruguaySummerTime,m.UTC_MINUS_2;c.UzbekistanTime,m.UTC_PLUS_5;c.VanuatuTime,m.UTC_PLUS_11;c.VenezuelaStandardTime,m.UTC_MINUS_4;c.VladivostokTime,m.UTC_PLUS_10;c.VolgogradTime,m.UTC_PLUS_4;c.VostokStationTime,m.UTC_PLUS_6;c.WakeIslandTime,m.UTC_PLUS_12;c.WestAfricaSummerTime,m.UTC_PLUS_2;c.WestAfricaTime,m.UTC_PLUS_1;c.WestGreenlandSummerTime,m.UTC_MINUS_2;c.WestGreenlandTime,m.UTC_MINUS_3;c.WestKazakhstanTime,m.UTC_PLUS_5;c.WesternEuropeanSummerTime,m.UTC_PLUS_1;c.WesternEuropeanTime,m.UTC_0;c.WesternIndonesianTime,m.UTC_PLUS_7;c.WesternStandardTime,m.UTC_PLUS_8;c.YakutskTime,m.UTC_PLUS_9;c.YekaterinburgTime,m.UTC_PLUS_5;var Ya;(function(a){a.Africa="Africa",a.Americas="Americas",a.Asia="Asia",a.Europe="Europe",a.Oceania="Oceania",a.Polar="Polar"})(Ya||(Ya={}));var Za;(function(a){a.CentralAmerica="Central America",a.EasternAsia="Eastern Asia",a.EasternEurope="Eastern Europe",a.EasternAfrica="Eastern Africa",a.MiddleAfrica="Middle Africa",a.MiddleEast="Middle East",a.NorthernAfrica="Northern Africa",a.NorthernAmerica="Northern America",a.NorthernEurope="Northern Europe",a.Polynesia="Polynesia",a.SouthAmerica="South America",a.SouthernAfrica="Southern Africa",a.SouthernAsia="Southern Asia",a.SouthernEurope="Southern Europe",a.WesternAfrica="Western Africa",a.WesternAsia="Western Asia",a.WesternEurope="Western Europe",a.WesternAustralia="Western Australia"})(Za||(Za={}));P.AfghanistanAfghani,i.Pashto,i.Dari,i.Turkmen,i.Uzbek,m.UTC_PLUS_4_30,f.AsiaKabul,c.AfghanistanTime,h.Afghanistan,h.Afghanistan,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greenlandic+"",i.Greek+"",i.Gujarati+"",i.Haitian+"",i.Hausa+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Polish+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tatar+"",i.Tamil+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Welsh+"",i.Xhosa+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"",Ya.Asia,Za.SouthernAsia,P.AlbaniaLek,i.Albanian,i.Greek,i.Turkish,m.UTC_PLUS_1,f.EuropeBrussels,c.CentralEuropeanTime,h.Albania,h.Albania,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greenlandic+"",i.Greek+"",i.Gujarati+"",i.Haitian+"",i.Hausa+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tamil+"",i.Tatar+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Welsh+"",i.Xhosa+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"",Ya.Europe,Za.SouthernEurope,P.AlgeriaDinar,i.Arabic,i.French,i.Berber,i.Tamazight,m.UTC_PLUS_1,m.UTC_PLUS_2,f.AfricaAlgiers,c.CentralEuropeanTime,h.Algeria,h.Algeria,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greenlandic+"",i.Greek+"",i.Gujarati+"",i.Haitian+"",i.Hausa+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tamil+"",i.Tatar+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Welsh+"",i.Xhosa+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"",Ya.Africa,Za.NorthernAfrica,P.AmericanSamoaTala,i.English,i.Samoan,m.UTC_MINUS_11,f.PacificSamoa,c.SamoaStandardTime,h.AmericanSamoa,h.AmericanSamoa,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greenlandic+"",i.Greek+"",i.Gujarati+"",i.Haitian+"",i.Hausa+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tamil+"",i.Tatar+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Welsh+"",i.Xhosa+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"",Ya.Oceania,Za.Polynesia,P.Euro,i.Catalan,i.Spanish,m.UTC_PLUS_1,m.UTC_PLUS_2,f.EuropeAndorra,c.CentralEuropeanTime,h.Andorra,h.Andorra,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greek+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tamil+"",i.Tatar+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Welsh+"",i.Xhosa+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"",Ya.Europe,Za.SouthernEurope,P.AngolaKwanza,i.Portuguese,i.Spanish,i.French,i.Italian,i.German,i.English,m.UTC_0,m.UTC_PLUS_1,m.UTC_PLUS_2,f.AfricaLuanda,c.WestAfricaTime,h.Angola,h.Angola,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greenlandic+"",i.Greek+"",i.Gujarati+"",i.Haitian+"",i.Hausa+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tamil+"",i.Tatar+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Xhosa+"",i.Welsh+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"",P.DominicaDollar,P.EastCaribbeanDollar,P.Euro,P.UnitedStatesDollar,P.BritishPound,i.English,i.Spanish,m.UTC_MINUS_4,f.AmericaAnguilla,c.AtlanticStandardTime,h.Anguilla,h.Anguilla,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greenlandic+"",i.Greek+"",i.Gujarati+"",i.Haitian+"",i.Hausa+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tamil+"",i.Tatar+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Welsh+"",i.Xhosa+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"",P.UnitedStatesDollar,P.Euro,i.English,i.Spanish,i.French,i.Portuguese,i.Italian,i.Dutch,i.German,i.Swedish,i.Norwegian,i.Danish,i.Finnish,m.UTC_PLUS_1,m.UTC_PLUS_2,f.AntarcticaCasey,f.AntarcticaDavis,f.AntarcticaMcMurdo,f.AntarcticaPalmer,f.AntarcticaRothera,c.AtlanticStandardTime,c.CentralTime,c.EasternTime,c.AtlanticStandardTime,c.AzoresStandardTime,c.NewfoundlandStandardTime,h.Antarctica,h.Antarctica,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greenlandic+"",i.Greek+"",i.Gujarati+"",i.Haitian+"",i.Hausa+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tamil+"",i.Tatar+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Welsh+"",i.Xhosa+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"",P.ArmeniaDram,i.Armenian,m.UTC_PLUS_4,f.AsiaJakarta,c.ArmeniaTime,h.Armenia,h.Armenia,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greenlandic+"",i.Greek+"",i.Gujarati+"",i.Haitian+"",i.Hausa+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tamil+"",i.Tatar+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Welsh+"",i.Xhosa+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"",h.AmericanSamoa,h.AmericanSamoa,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greenlandic+"",i.Greek+"",i.Gujarati+"",i.Haitian+"",i.Hausa+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tamil+"",i.Tatar+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Welsh+"",i.Xhosa+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"";i.Afrikaans,p.Afrikaans;h.SouthAfrica,i.AfrikaansSouthAfrica,p.Afrikaans;i.Albanian,p.Albanian;h.Albania,i.AlbanianAlbania,p.Albanian;i.Amharic,p.Amharic;h.Ethiopia,i.AmharicEthiopia,p.Amharic;i.Arabic,p.Arabic;h.Algeria,i.ArabicAlgeria,p.Arabic;h.Bahrain,i.ArabicBahrain,p.Arabic;h.Egypt,i.ArabicEgypt,p.Arabic;h.Iraq,i.ArabicIraq,p.Arabic;h.Jordan,i.ArabicJordan,p.Arabic;h.Kuwait,i.ArabicKuwait,p.Arabic;h.Lebanon,i.ArabicLebanon,p.Arabic;h.Libya,i.ArabicLibya,p.Arabic;h.Morocco,i.ArabicMorocco,p.Arabic;h.Oman,i.ArabicOman,p.Arabic;h.Qatar,i.ArabicQatar,p.Arabic;h.SaudiArabia,i.ArabicSaudiArabia,p.Arabic;h.Tunisia,i.ArabicTunisia,p.Arabic;h.UnitedArabEmirates,i.ArabicUnitedArabEmirates,p.Arabic;h.Yemen,i.ArabicYemen,p.Arabic;i.Armenian,p.Armenian;h.Armenia,i.ArmenianArmenia,p.Armenian;i.Azerbaijani,p.Azerbaijani;h.Azerbaijan,i.AzerbaijaniAzerbaijan,p.Azerbaijani;i.Basque,p.Basque;h.Spain,i.BasqueSpain,p.Basque;i.Belarusian,p.Belarusian;h.Belarus,i.BelarusianBelarus,p.Belarusian;i.Bengali,p.Bengali;h.Bangladesh,i.BengaliBangladesh,p.Bengali;i.Bhutani,p.Bhutani;h.Bhutan,i.BhutaniBhutan,p.Bhutani;i.Bulgarian,p.Bulgarian;h.Bulgaria,i.BulgarianBulgaria,p.Bulgarian;i.Burmese,p.Burmese;h.Myanmar,i.BurmeseMyanmar,p.Burmese;i.Cantonese,p.Cantonese;h.HongKong,i.CantoneseHongKong,p.Cantonese;i.Catalan,p.Catalan;h.Spain,i.CatalanSpain,p.Catalan;i.ChineseSimplified,p.Chinese;h.China,i.ChineseSimplifiedChina,p.Chinese;h.HongKong,i.ChineseSimplifiedHongKong,p.Chinese;h.Macau,i.ChineseSimplifiedMacau,p.Chinese;h.Singapore,i.ChineseSimplifiedSingapore,p.Chinese;i.ChineseTraditional,p.Chinese;h.HongKong,i.ChineseTraditionalHongKong,p.Chinese;h.Macau,i.ChineseTraditionalMacau,p.Chinese;h.Singapore,i.ChineseTraditionalSingapore,p.Chinese;i.Croatian,p.Croatian;h.BosniaAndHerzegovina,i.CroatianBosniaAndHerzegovina,p.Croatian;h.Croatia,i.CroatianCroatia,p.Croatian;i.Czech,p.Czech;h.CzechRepublic,i.CzechCzechRepublic,p.Czech;i.Danish,p.Danish;h.Denmark,i.DanishDenmark,p.Danish;i.Divehi,p.Divehi;h.Maldives,i.DivehiMaldives,p.Divehi;i.Dutch,p.Dutch;h.Belgium,i.DutchBelgium,p.Dutch;h.Netherlands,i.DutchNetherlands,p.Dutch;i.English,p.English;h.Australia,i.EnglishAustralia,p.English;h.Belgium,i.EnglishBelgium,p.English;h.Canada,i.EnglishCanada,p.English;h.Ireland,i.EnglishIreland,p.English;h.Jamaica,i.EnglishJamaica,p.English;h.NewZealand,i.EnglishNewZealand,p.English;h.Philippines,i.EnglishPhilippines,p.English;h.Singapore,i.EnglishSingapore,p.English;h.SouthAfrica,i.EnglishSouthAfrica,p.English;h.TrinidadAndTobago,i.EnglishTrinidadAndTobago,p.English;h.UnitedKingdom,i.EnglishUnitedKingdom,p.English;h.UnitedStates,i.EnglishUnitedStates,p.English;h.Zimbabwe,i.EnglishZimbabwe,p.English;i.Esperanto,p.Esperanto;i.Estonian,p.Estonian;h.Estonia,i.EstonianEstonia,p.Estonian;i.Faroese,p.Faroese;h.FaroeIslands,i.FaroeseFaroeIslands,p.Faroese;i.Farsi,p.Farsi;h.Iran,i.FarsiIran,p.Farsi;i.Filipino,p.Filipino;h.Philippines,i.FilipinoPhilippines,p.Filipino;i.Finnish,p.Finnish;h.Finland,i.FinnishFinland,p.Finnish;i.French,p.French;h.Belgium,i.FrenchBelgium,p.French;h.Canada,i.FrenchCanada,p.French;h.France,i.FrenchFrance,p.French;h.Luxembourg,i.FrenchLuxembourg,p.French;h.Monaco,i.FrenchMonaco,p.French;h.Reunion,i.FrenchReunion,p.French;h.Switzerland,i.FrenchSwitzerland,p.French;i.Frisian,p.Frisian;h.Netherlands,i.FrisianNetherlands,p.Frisian;i.Galician,p.Galician;h.Spain,i.GalicianSpain,p.Galician;i.Georgian,p.Georgian;h.Georgia,i.GeorgianGeorgia,p.Georgian;i.German,p.German;h.Austria,i.GermanAustria,p.German;h.Belgium,i.GermanBelgium,p.German;h.Switzerland,i.GermanSwitzerland,p.German;h.Liechtenstein,i.GermanLiechtenstein,p.German;h.Luxembourg,i.GermanLuxembourg,p.German;i.Greek,p.Greek;h.Greece,i.GreekGreece,p.Greek;i.Greenlandic,p.Greenlandic;h.Greenland,i.GreenlandicGreenland,p.Greenlandic;i.Gujarati,p.Gujarati;h.India,i.GujaratiIndia,p.Gujarati;i.Hausa,p.Hausa;h.Ghana,i.HausaGhana,p.Hausa;h.Niger,i.HausaNiger,p.Hausa;h.Nigeria,i.HausaNigeria,p.Hausa;i.Hebrew,p.Hebrew;h.Israel,i.HebrewIsrael,p.Hebrew;i.Hindi,p.Hindi;h.India,i.HindiIndia,p.Hindi;i.Hungarian,p.Hungarian;h.Hungary,i.HungarianHungary,p.Hungarian;i.Icelandic,p.Icelandic;h.Iceland,i.IcelandicIceland,p.Icelandic;i.Igbo,p.Igbo;i.Indonesian,p.Indonesian;h.Indonesia,i.IndonesianIndonesia,p.Indonesian;i.Irish,p.Irish;h.Ireland,i.IrishIreland,p.Irish;i.Italian,p.Italian;h.Italy,i.ItalianItaly,p.Italian;h.Switzerland,i.ItalianSwitzerland,p.Italian;i.Japanese,p.Japanese;h.Japan,i.JapaneseJapan,p.Japanese;i.Kannada,p.Kannada;h.India,i.KannadaIndia,p.Kannada;i.Kazakh,p.Kazakh;h.Kazakhstan,i.KazakhKazakhstan,p.Kazakh;i.Khmer,p.Khmer;h.Cambodia,i.KhmerCambodia,p.Khmer;i.Konkani,p.Konkani;h.India,i.KonkaniIndia,p.Konkani;i.Korean,p.Korean;h.SouthKorea,i.KoreanSouthKorea,p.Korean;i.Kurdish,p.Kurdish;h.Iraq,i.KurdishIraq,p.Kurdish;h.Turkey,i.KurdishTurkey,p.Kurdish;i.Kyrgyz,p.Kyrgyz;h.Kyrgyzstan,i.KyrgyzKyrgyzstan,p.Kyrgyz;i.Lao,p.Lao;h.Laos,i.LaoLaos,p.Lao;i.Latvian,p.Latvian;h.Latvia,i.LatvianLatvia,p.Latvian;i.Lithuanian,p.Lithuanian;h.Lithuania,i.LithuanianLithuania,p.Lithuanian;i.Luxembourgish,p.Luxembourgish;h.Belgium,i.LuxembourgishBelgium,p.Luxembourgish;h.Luxembourg,i.LuxembourgishLuxembourg,p.Luxembourgish;i.Macedonian,p.Macedonian;h.NorthMacedonia,i.MacedonianNorthMacedonia,p.Macedonian;i.Malay,p.Malay;h.Brunei,i.MalayBrunei,p.Malay;h.Malaysia,i.MalayMalaysia,p.Malay;h.Singapore,i.MalaySingapore,p.Malay;h.India,i.MalayIndia,p.Malay;i.Maltese,p.Maltese;h.Malta,i.MalteseMalta,p.Maltese;i.Maori,p.Maori;h.NewZealand,i.MaoriNewZealand,p.Maori;i.Marathi,p.Marathi;h.India,i.MarathiIndia,p.Marathi;i.Mongolian,p.Mongolian;h.Mongolia,i.MongolianMongolia,p.Mongolian;i.Montenegrin,p.Montenegrin;h.Montenegro,i.MontenegrinMontenegro,p.Montenegrin;i.Nepali,p.Nepali;h.Nepal,i.NepaliNepal,p.Nepali;i.NorthernSotho,p.NorthernSotho;h.SouthAfrica,i.NorthernSothoSouthAfrica,p.NorthernSotho;i.Norwegian,p.Norwegian;h.Norway,i.NorwegianBokmalNorway,p.NorwegianBokmal;h.Norway,i.NorwegianNynorskNorway,p.NorwegianNynorsk;i.Oriya,p.Oriya;h.India,i.OriyaIndia,p.Oriya;i.Pashto,p.Pashto;h.Afghanistan,i.PashtoAfghanistan,p.Pashto;i.Persian,p.Persian;h.Iran,i.PersianIran,p.Persian;i.Polish,p.Polish;h.Poland,i.PolishPoland,p.Polish;i.Portuguese,p.Portuguese;h.Brazil,i.PortugueseBrazil,p.Portuguese;h.Portugal,i.PortuguesePortugal,p.Portuguese;i.Punjabi,p.Punjabi;h.Pakistan,i.PunjabiPakistan,p.Punjabi;h.India,i.PunjabiIndia,p.Punjabi;i.Quechua,p.Quechua;h.Bolivia,i.QuechuaBolivia,p.Quechua;h.Ecuador,i.QuechuaEcuador,p.Quechua;h.Peru,i.QuechuaPeru,p.Quechua;i.Romanian,p.Romanian;h.Romania,i.RomanianRomania,p.Romanian;i.Russian,p.Russian;h.RussianFederation,i.RussianRussia,p.Russian;h.Ukraine,i.RussianUkraine,p.Russian;h.Kazakhstan,i.RussianKazakhstan,p.Russian;h.Kyrgyzstan,i.RussianKyrgyzstan,p.Russian;i.Sanskrit,p.Sanskrit;h.India,i.SanskritIndia,p.Sanskrit;i.Sami,p.Sami;h.Finland,i.SamiFinland,p.Sami;h.Norway,i.SamiNorway,p.Sami;h.Sweden,i.SamiSweden,p.Sami;i.Samoan,p.Samoan;h.Samoa,i.SamoanSamoa,p.Samoan;i.Serbian,p.Serbian;h.BosniaAndHerzegovina,i.SerbianBosniaAndHerzegovina,p.Serbian;h.SerbiaAndMontenegro,i.SerbianSerbiaAndMontenegro,p.Serbian;i.SerbianCyrillic,p.SerbianCyrillic;h.BosniaAndHerzegovina,i.SerbianCyrillicBosniaAndHerzegovina,p.SerbianCyrillic;h.SerbiaAndMontenegro,i.SerbianCyrillicSerbiaAndMontenegro,p.SerbianCyrillic;i.Slovak,p.Slovak;h.Slovakia,i.SlovakSlovakia,p.Slovak;i.Slovenian,p.Slovenian;h.Slovenia,i.SlovenianSlovenia,p.Slovenian;i.Somali,p.Somali;h.Somalia,i.SomaliSomalia,p.Somali;i.Spanish,p.Spanish;h.Argentina,i.SpanishArgentina,p.Spanish;h.Bolivia,i.SpanishBolivia,p.Spanish;h.Chile,i.SpanishChile,p.Spanish;h.Colombia,i.SpanishColombia,p.Spanish;h.CostaRica,i.SpanishCostaRica,p.Spanish;h.Cuba,i.SpanishCuba,p.Spanish;h.DominicanRepublic,i.SpanishDominicanRepublic,p.Spanish;h.Ecuador,i.SpanishEcuador,p.Spanish;h.ElSalvador,i.SpanishElSalvador,p.Spanish;h.EquatorialGuinea,i.SpanishEquatorialGuinea,p.Spanish;h.Guatemala,i.SpanishGuatemala,p.Spanish;h.Honduras,i.SpanishHonduras,p.Spanish;h.Mexico,i.SpanishMexico,p.Spanish;h.Nicaragua,i.SpanishNicaragua,p.Spanish;h.Panama,i.SpanishPanama,p.Spanish;h.Paraguay,i.SpanishParaguay,p.Spanish;h.Peru,i.SpanishPeru,p.Spanish;h.PuertoRico,i.SpanishPuertoRico,p.Spanish;h.Uruguay,i.SpanishUruguay,p.Spanish;h.Venezuela,i.SpanishVenezuela,p.Spanish;h.SouthAfrica,i.SutuSouthAfrica,p.Sutu;i.Swahili,p.Swahili;h.Kenya,i.SwahiliKenya,p.Swahili;i.Swedish,p.Swedish;h.Finland,i.SwedishFinland,p.Swedish;h.Sweden,i.SwedishSweden,p.Swedish;i.Syriac,p.Syriac;h.Syria,i.SyriacSyria,p.Syriac;i.Tajik,p.Tajik;h.Tajikistan,i.TajikTajikistan,p.Tajik;i.Tagalog,p.Tagalog;h.Philippines,i.TagalogPhilippines,p.Tagalog;i.Tamil,p.Tamil;h.India,i.TamilIndia,p.Tamil;i.Telugu,p.Telugu;h.India,i.TeluguIndia,p.Telugu;i.Thai,p.Thai;h.Thailand,i.ThaiThailand,p.Thai;i.Tibetan,p.Tibetan;h.China,i.TibetanChina,p.Tibetan;h.Bhutan,i.TibetanBhutan,p.Tibetan;h.India,i.TibetanIndia,p.Tibetan;i.Tsonga,p.Tsonga;i.Tswana,p.Tswana;h.SouthAfrica,i.TswanaSouthAfrica,p.Tswana;i.Turkish,p.Turkish;h.Turkey,i.TurkishTurkey,p.Turkish;i.Ukrainian,p.Ukrainian;h.Ukraine,i.UkrainianUkraine,p.Ukrainian;i.Urdu,p.Urdu;h.Afghanistan,i.UrduAfghanistan,p.Urdu;h.India,i.UrduIndia,p.Urdu;h.Pakistan,i.UrduPakistan,p.Urdu;i.Uzbek,p.Uzbek;h.Uzbekistan,i.UzbekUzbekistan,p.Uzbek;h.Uzbekistan,i.UzbekCyrillic,p.Uzbek;i.Vietnamese,p.Vietnamese;h.Vietnam,i.VietnameseVietnam,p.Vietnamese;i.Welsh,p.Welsh;h.UnitedKingdom,i.WelshUnitedKingdom,p.Welsh;i.Xhosa,p.Xhosa;h.SouthAfrica,i.XhosaSouthAfrica,p.Xhosa;i.Yiddish,p.Yiddish;i.Yoruba,p.Yoruba;h.Nigeria,i.YorubaNigeria,p.Yoruba;i.Zulu,p.Zulu;h.SouthAfrica,i.ZuluSouthAfrica,p.Zulu;f.AfricaAbidjan,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaAccra,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaAddisAbaba,m.UTC_PLUS_3,c.EastAfricaTime;f.AfricaAlgiers,m.UTC_PLUS_1,c.CentralEuropeanTime;f.AfricaAsmara,m.UTC_PLUS_3,c.EastAfricaTime;f.AfricaBamako,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaBangui,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaBanjul,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaBissau,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaBlantyre,m.UTC_PLUS_2,c.CentralAfricaTime;f.AfricaBrazzaville,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaBujumbura,m.UTC_PLUS_2,c.CentralAfricaTime;f.AfricaCairo,m.UTC_PLUS_2,c.EasternEuropeanTime;f.AfricaCasablanca,m.UTC_PLUS_1,c.WesternEuropeanTime;f.AfricaCeuta,m.UTC_PLUS_1,c.CentralEuropeanTime;f.AfricaConakry,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaDakar,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaDarEsSalaam,m.UTC_PLUS_3,c.EastAfricaTime;f.AfricaDjibouti,m.UTC_PLUS_3,c.EastAfricaTime;f.AfricaDouala,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaElAaiun,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaFreetown,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaGaborone,m.UTC_PLUS_2,c.CentralAfricaTime;f.AfricaHarare,m.UTC_PLUS_2,c.CentralAfricaTime;f.AfricaJohannesburg,m.UTC_PLUS_2,c.SouthAfricanStandardTime;f.AfricaJuba,m.UTC_PLUS_3,c.EastAfricaTime;f.AfricaKampala,m.UTC_PLUS_3,c.EastAfricaTime;f.AfricaKhartoum,m.UTC_PLUS_2,c.EastAfricaTime;f.AfricaKigali,m.UTC_PLUS_2,c.CentralAfricaTime;f.AfricaKinshasa,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaLagos,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaLibreville,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaLome,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaLuanda,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaLubumbashi,m.UTC_PLUS_2,c.CentralAfricaTime;f.AfricaLusaka,m.UTC_PLUS_2,c.CentralAfricaTime;f.AfricaMalabo,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaMaputo,m.UTC_PLUS_2,c.CentralAfricaTime;f.AfricaMaseru,m.UTC_PLUS_2,c.SouthAfricanStandardTime;f.AfricaMbabane,m.UTC_PLUS_2,c.SouthAfricanStandardTime;f.AfricaMogadishu,m.UTC_PLUS_3,c.EastAfricaTime;f.AfricaMonrovia,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaNairobi,m.UTC_PLUS_3,c.EastAfricaTime;f.AfricaNdjamena,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaNiamey,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaNouakchott,m.UTC_0,c.GreenwichMeanTime;f.AfricaOuagadougou,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaPortoNovo,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaSaoTome,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaTripoli,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaTunis,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaWindhoek,m.UTC_PLUS_2,c.WestAfricaTime;f.AmericaAdak,m.UTC_PLUS_10,c.HawaiiAleutianStandardTime;f.AmericaAnchorage,m.UTC_PLUS_9,c.AlaskaStandardTime;f.AmericaAnguilla,m.UTC_0,c.AtlanticStandardTime;f.AmericaAntigua,m.UTC_0,c.AtlanticStandardTime;f.AmericaAraguaina,m.UTC_MINUS_3,c.BrasiliaTime;f.AmericaArgentinaBuenosAires,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaCatamarca,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaCordoba,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaJujuy,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaLaRioja,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaMendoza,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaRioGallegos,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaSalta,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaSanJuan,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaSanLuis,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaTucuman,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaUshuaia,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaAruba,m.UTC_0,c.AtlanticStandardTime;f.AmericaAsuncion,m.UTC_MINUS_4,c.ParaguayTime;f.AmericaAtikokan,m.UTC_0,c.EasternStandardTime;f.AmericaAtka,m.UTC_MINUS_10,c.HawaiiAleutianStandardTime;f.AmericaBahia,m.UTC_MINUS_3,c.BrasiliaTime;f.AmericaBahiaBanderas,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaBarbados,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaBelem,m.UTC_MINUS_3,c.BrasiliaTime;f.AmericaBelize,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaBlancSablon,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaBoaVista,m.UTC_MINUS_4,c.AmazonTime;f.AmericaBogota,m.UTC_MINUS_5,c.ColombiaTime;f.AmericaBoise,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaCambridgeBay,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaCampoGrande,m.UTC_MINUS_4,c.AmazonTime;f.AmericaCancun,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaCaracas,m.UTC_MINUS_4,c.VenezuelaStandardTime;f.AmericaCayenne,m.UTC_MINUS_3,c.FrenchGuianaTime;f.AmericaCayman,m.UTC_0,c.AtlanticStandardTime;f.AmericaChicago,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaChihuahua,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaCoralHarbour,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaCordoba,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaCostaRica,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaCreston,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaCuiaba,m.UTC_MINUS_4,c.AmazonTime;f.AmericaCuracao,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaDanmarkshavn,m.UTC_0,c.GreenwichMeanTime;f.AmericaDawson,m.UTC_MINUS_8,c.PacificStandardTime;f.AmericaDawsonCreek,m.UTC_MINUS_8,c.PacificStandardTime;f.AmericaDenver,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaDetroit,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaDominica,m.UTC_0,c.AtlanticStandardTime;f.AmericaEdmonton,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaEirunepe,m.UTC_MINUS_5,c.AcreTime;f.AmericaElSalvador,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaFortaleza,m.UTC_MINUS_3,c.BrasiliaTime;f.AmericaGlaceBay,m.UTC_0,c.AtlanticStandardTime;f.AmericaGodthab,m.UTC_MINUS_3,c.WestGreenlandTime;f.AmericaGooseBay,m.UTC_0,c.AtlanticStandardTime;f.AmericaGrandTurk,m.UTC_0,c.AtlanticStandardTime;f.AmericaGrenada,m.UTC_0,c.AtlanticStandardTime;f.AmericaGuadeloupe,m.UTC_0,c.AtlanticStandardTime;f.AmericaGuatemala,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaGuayaquil,m.UTC_MINUS_5,c.EcuadorTime;f.AmericaGuyana,m.UTC_0,c.AtlanticStandardTime;f.AmericaHalifax,m.UTC_0,c.AtlanticStandardTime;f.AmericaHavana,m.UTC_MINUS_5,c.CubaStandardTime;f.AmericaHermosillo,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaIndianaIndianapolis,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaIndianaKnox,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaIndianaMarengo,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaIndianaPetersburg,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaIndianaTellCity,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaIndianaVevay,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaIndianaVincennes,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaIndianaWinamac,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaInuvik,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaIqaluit,m.UTC_0,c.EasternStandardTime;f.AmericaJamaica,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaJuneau,m.UTC_MINUS_9,c.AlaskaStandardTime;f.AmericaKentuckyLouisville,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaKentuckyMonticello,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaKralendijk,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaLaPaz,m.UTC_MINUS_4,c.BoliviaTime;f.AmericaLima,m.UTC_MINUS_5,c.PeruTime;f.AmericaLosAngeles,m.UTC_MINUS_8,c.PacificStandardTime;f.AmericaLouisville,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaLowerPrinces,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaMaceio,m.UTC_MINUS_3,c.BrasiliaTime;f.AmericaManagua,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaManaus,m.UTC_MINUS_4,c.AmazonTime;f.AmericaMarigot,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaMartinique,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaMatamoros,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaMazatlan,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaMenominee,m.UTC_MINUS_5,c.CentralStandardTime;f.AmericaMerida,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaMetlakatla,m.UTC_MINUS_9,c.AlaskaStandardTime;f.AmericaMexicoCity,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaMiquelon,m.UTC_MINUS_3,c.SaintPierreAndMiquelonStandardTime;f.AmericaMoncton,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaMonterrey,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaMontevideo,m.UTC_MINUS_3,c.UruguayStandardTime;f.AmericaMontreal,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaMontserrat,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaNassau,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaNewYork,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaNipigon,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaNome,m.UTC_MINUS_9,c.AlaskaStandardTime;f.AmericaNoronha,m.UTC_MINUS_2,c.FernandoDeNoronhaTime;f.AmericaNorthDakotaBeulah,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaNorthDakotaCenter,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaNorthDakotaNewSalem,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaOjinaga,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaPanama,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaPangnirtung,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaParamaribo,m.UTC_MINUS_3,c.SurinameTime;f.AmericaPhoenix,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaPortAuPrince,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaPortOfSpain,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaPortoVelho,m.UTC_MINUS_4,c.AmazonTime;f.AmericaPuertoRico,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaRainyRiver,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaRankinInlet,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaRecife,m.UTC_MINUS_3,c.BrasiliaTime;f.AmericaRegina,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaResolute,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaRioBranco,m.UTC_MINUS_5,c.AcreTime;f.AmericaSantaIsabel,m.UTC_MINUS_8,c.PacificStandardTime;f.AmericaSantarem,m.UTC_MINUS_3,c.BrasiliaTime;f.AmericaSantiago,m.UTC_MINUS_4,c.ChileStandardTime;f.AmericaSantoDomingo,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaSaoPaulo,m.UTC_MINUS_3,c.BrasiliaTime;f.AmericaScoresbysund,m.UTC_MINUS_1,c.EasternGreenlandTime;f.AmericaShiprock,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaSitka,m.UTC_MINUS_9,c.AlaskaStandardTime;f.AmericaStBarthelemy,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaStJohns,m.UTC_MINUS_3,c.NewfoundlandStandardTime;f.AmericaStKitts,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaStLucia,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaStThomas,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaStVincent,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaSwiftCurrent,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaTegucigalpa,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaThule,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaThunderBay,m.UTC_MINUS_4,c.EasternStandardTime;f.AmericaTijuana,m.UTC_MINUS_8,c.PacificStandardTime;f.AmericaToronto,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaTortola,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaVancouver,m.UTC_MINUS_8,c.PacificStandardTime;f.AmericaWhitehorse,m.UTC_MINUS_8,c.PacificStandardTime;f.AmericaWinnipeg,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaYakutat,m.UTC_MINUS_9,c.AlaskaStandardTime;f.AmericaYellowknife,m.UTC_MINUS_6,c.MountainStandardTime;f.AntarcticaCasey,m.UTC_MINUS_8,c.WesternStandardTime;f.AntarcticaDavis,m.UTC_MINUS_7,c.NewfoundlandStandardTime;f.AntarcticaDumontDUrville,m.UTC_MINUS_10,c.CentralStandardTime;f.AntarcticaMacquarie,m.UTC_MINUS_11,c.CentralStandardTime;f.AntarcticaMawson,m.UTC_MINUS_6,c.CentralStandardTime;f.AntarcticaMcMurdo,m.UTC_MINUS_12,c.NewZealandStandardTime;f.AntarcticaPalmer,m.UTC_MINUS_4,c.ChathamStandardTime;f.AntarcticaRothera,m.UTC_MINUS_3,c.RotheraResearchStationTime;f.AntarcticaSyowa,m.UTC_MINUS_3,c.ShowaStationTime;f.AntarcticaTroll,m.UTC_MINUS_2,c.CentralStandardTime;f.AntarcticaVostok,m.UTC_MINUS_6,c.CentralStandardTime;f.ArcticLongyearbyen,m.UTC_MINUS_1,c.CentralEuropeanTime;f.AsiaAden,m.UTC_PLUS_3,c.ArabiaStandardTime;f.AsiaAlmaty,m.UTC_PLUS_6,c.AlmaAtaTime;f.AsiaAmman,m.UTC_PLUS_2,c.EasternEuropeanTime;f.AsiaAnadyr,m.UTC_PLUS_12,c.NewCaledoniaTime;f.AsiaAqtau,m.UTC_PLUS_5,c.AqtobeTime;f.AsiaAqtobe,m.UTC_PLUS_5,c.AqtobeTime;f.AsiaAshgabat,m.UTC_PLUS_5,c.TurkmenistanTime;f.AsiaBaghdad,m.UTC_PLUS_3,c.ArabiaStandardTime;f.AsiaBahrain,m.UTC_PLUS_3,c.ArabiaStandardTime;f.AsiaBaku,m.UTC_PLUS_4,c.AzerbaijanTime;f.AsiaBangkok,m.UTC_PLUS_7,c.IndochinaTime;f.AsiaBarnaul,m.UTC_PLUS_7,c.KrasnoyarskTime;f.AsiaBeirut,m.UTC_PLUS_2,c.EasternEuropeanTime;f.AsiaBishkek,m.UTC_PLUS_6,c.KyrgyzstanTime;f.AsiaBrunei,m.UTC_PLUS_8,c.BruneiTime;f.AsiaChita,m.UTC_PLUS_9,c.YakutskTime;f.AsiaChoibalsan,m.UTC_PLUS_8,c.ChoibalsanStandardTime;f.AsiaColombo,m.UTC_PLUS_5,c.IndianStandardTime;f.AsiaDamascus,m.UTC_PLUS_2,c.EasternEuropeanTime;f.AsiaDhaka,m.UTC_PLUS_6,c.BangladeshStandardTime;f.AsiaDili,m.UTC_PLUS_9,c.JapanStandardTime;f.AsiaDubai,m.UTC_PLUS_4,c.GulfStandardTime;f.AsiaDushanbe,m.UTC_PLUS_5,c.TajikistanTime;f.AsiaFamagusta,m.UTC_PLUS_2,c.EasternEuropeanTime;f.AsiaGaza,m.UTC_PLUS_2,c.EasternEuropeanTime;f.AsiaHebron,m.UTC_PLUS_2,c.EasternEuropeanTime;f.AsiaHoChiMinh,m.UTC_PLUS_7,c.IndochinaTime;f.AsiaHongKong,m.UTC_PLUS_8,c.HongKongTime;f.AsiaHovd,m.UTC_PLUS_7,c.HovdTime;f.AsiaIrkutsk,m.UTC_PLUS_8,c.IrkutskTime;f.AsiaJakarta,m.UTC_PLUS_7,c.WesternIndonesianTime;f.AsiaJayapura,m.UTC_PLUS_9,c.JapanStandardTime;f.AsiaJerusalem,m.UTC_PLUS_2,c.EasternEuropeanTime;f.AsiaKabul,m.UTC_PLUS_4,c.AfghanistanTime;f.AsiaKamchatka,m.UTC_PLUS_12,c.KamchatkaTime;f.AsiaKarachi,m.UTC_PLUS_5,c.PakistanStandardTime;f.AsiaKathmandu,m.UTC_PLUS_5,c.NepalTime;f.AsiaKhandyga,m.UTC_PLUS_9,c.YakutskTime;f.AsiaKolkata,m.UTC_PLUS_5,c.IndianStandardTime;f.AsiaKrasnoyarsk,m.UTC_PLUS_7,c.KrasnoyarskTime;f.AsiaKualaLumpur,m.UTC_PLUS_8,c.MalaysiaStandardTime;f.AsiaKuching,m.UTC_PLUS_8,c.MalaysiaStandardTime;f.AsiaKuwait,m.UTC_PLUS_3,c.ArabiaStandardTime;f.AsiaMacau,m.UTC_PLUS_8,c.ChinaStandardTime;f.AsiaMagadan,m.UTC_PLUS_11,c.MagadanTime;f.AsiaMakassar,m.UTC_PLUS_8,c.MalaysiaTime;f.AsiaManila,m.UTC_PLUS_8,c.PhilippineTime;f.AsiaMuscat,m.UTC_PLUS_4,c.GulfStandardTime;f.AsiaNovokuznetsk,m.UTC_PLUS_6,c.NovosibirskTime;f.AsiaNovosibirsk,m.UTC_PLUS_6,c.NovosibirskTime;f.AsiaOmsk,m.UTC_PLUS_6,c.OmskTime;f.AsiaOral,m.UTC_PLUS_5,c.OralTime;f.AsiaPhnomPenh,m.UTC_PLUS_7,c.IndochinaTime;f.AsiaPontianak,m.UTC_PLUS_7,c.WesternIndonesianTime;f.AsiaPyongyang,m.UTC_PLUS_9,c.KoreaStandardTime;f.AsiaQatar,m.UTC_PLUS_3,c.ArabiaStandardTime;f.AsiaQyzylorda,m.UTC_PLUS_5,c.WestKazakhstanTime;f.AsiaRangoon,m.UTC_PLUS_6,c.MyanmarStandardTime;f.AsiaRiyadh,m.UTC_PLUS_3,c.ArabiaStandardTime;f.AsiaSakhalin,m.UTC_PLUS_11,c.SakhalinIslandTime;f.AsiaSamarkand,m.UTC_PLUS_5,c.UzbekistanTime;f.AsiaSeoul,m.UTC_PLUS_9,c.KoreaStandardTime;f.AsiaShanghai,m.UTC_PLUS_8,c.ChinaStandardTime;f.AsiaSingapore,m.UTC_PLUS_8,c.SingaporeStandardTime;f.AsiaSrednekolymsk,m.UTC_PLUS_11,c.SrednekolymskTime;f.AsiaTaipei,m.UTC_PLUS_8,c.ChinaStandardTime;f.AsiaTashkent,m.UTC_PLUS_5,c.UzbekistanTime;f.AsiaTbilisi,m.UTC_PLUS_4,c.GeorgiaStandardTime;f.AsiaTehran,m.UTC_PLUS_3,c.IranStandardTime;f.AsiaThimphu,m.UTC_PLUS_6,c.BhutanTime;f.AsiaTokyo,m.UTC_PLUS_9,c.JapanStandardTime;f.AsiaTomsk,m.UTC_PLUS_6,c.KrasnoyarskTime;f.AsiaUlaanbaatar,m.UTC_PLUS_8,c.UlaanbaatarStandardTime;f.AsiaUrumqi,m.UTC_PLUS_8,c.ChinaStandardTime;f.AsiaUstNera,m.UTC_PLUS_10,c.VladivostokTime;f.AsiaVientiane,m.UTC_PLUS_7,c.IndochinaTime;f.AsiaVladivostok,m.UTC_PLUS_10,c.VladivostokTime;f.AsiaYakutsk,m.UTC_PLUS_9,c.YakutskTime;f.AsiaYekaterinburg,m.UTC_PLUS_5,c.YekaterinburgTime;f.AsiaYerevan,m.UTC_PLUS_4,c.ArmeniaTime;f.AtlanticAzores,m.UTC_MINUS_1,c.AzoresStandardTime;f.AtlanticBermuda,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AtlanticCanary,m.UTC_MINUS_1,c.WesternEuropeanTime;f.AtlanticCapeVerde,m.UTC_0,c.CapeVerdeTime;f.AtlanticFaroe,m.UTC_0,c.GreenwichMeanTime;f.AtlanticMadeira,m.UTC_0,c.WesternEuropeanTime;f.AtlanticReykjavik,m.UTC_0,c.GreenwichMeanTime;f.AtlanticSouthGeorgia,m.UTC_0,c.CoordinatedUniversalTime;f.AtlanticStHelena,m.UTC_0,c.GreenwichMeanTime;f.AtlanticStanley,m.UTC_0,c.FalklandIslandsTime;f.AustraliaAdelaide,m.UTC_PLUS_9_30,c.AustralianCentralStandardTime;f.AustraliaBrisbane,m.UTC_PLUS_10,c.AustralianEasternStandardTime;f.AustraliaBrokenHill,m.UTC_PLUS_9_30,c.AustralianCentralStandardTime;f.AustraliaCanberra,m.UTC_PLUS_10,c.AustralianEasternStandardTime;f.AustraliaCurrie,m.UTC_PLUS_10,c.AustralianEasternStandardTime;f.AustraliaDarwin,m.UTC_PLUS_9_30,c.AustralianCentralStandardTime;f.AustraliaEucla,m.UTC_PLUS_8_45,c.AustralianCentralWesternStandardTime;f.AustraliaHobart,m.UTC_PLUS_10,c.AustralianEasternStandardTime;f.AustraliaLindeman,m.UTC_PLUS_10,c.AustralianEasternStandardTime;f.AustraliaLordHowe,m.UTC_PLUS_10_30,c.LordHoweStandardTime;f.AustraliaMelbourne,m.UTC_PLUS_10,c.AustralianEasternStandardTime;f.AustraliaPerth,m.UTC_PLUS_8,c.AustralianWesternStandardTime;f.AustraliaSydney,m.UTC_PLUS_10,c.AustralianEasternStandardTime;f.EuropeAmsterdam,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeAndorra,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeAthens,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeBelgrade,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeBerlin,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeBratislava,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeBrussels,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeBucharest,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeBudapest,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeBusingen,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeChisinau,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeCopenhagen,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeDublin,m.UTC_0,c.GreenwichMeanTime;f.EuropeGibraltar,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeGuernsey,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeHelsinki,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeIsleOfMan,m.UTC_0,c.GreenwichMeanTime;f.EuropeIstanbul,m.UTC_PLUS_3,c.EasternEuropeanTime;f.EuropeJersey,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeKaliningrad,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeKiev,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeLisbon,m.UTC_0,c.GreenwichMeanTime;f.EuropeLjubljana,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeLondon,m.UTC_0,c.GreenwichMeanTime;f.EuropeLuxembourg,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeMadrid,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeMalta,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeMariehamn,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeMinsk,m.UTC_PLUS_3,c.EasternEuropeanTime;f.EuropeMonaco,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeMoscow,m.UTC_PLUS_3,c.EasternEuropeanTime;f.EuropeOslo,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeParis,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropePodgorica,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropePrague,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeRiga,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeRome,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeSamara,m.UTC_PLUS_4,c.EasternEuropeanTime;f.EuropeSanMarino,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeSarajevo,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeSimferopol,m.UTC_PLUS_3,c.EasternEuropeanTime;f.EuropeSkopje,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeSofia,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeStockholm,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeTallinn,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeTirane,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeUzhgorod,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeVaduz,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeVatican,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeVienna,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeVilnius,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeVolgograd,m.UTC_PLUS_4,c.EasternEuropeanTime;f.EuropeWarsaw,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeZagreb,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeZaporozhye,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeZurich,m.UTC_PLUS_1,c.CentralEuropeanTime;f.IndianAntananarivo,m.UTC_PLUS_3,c.EastAfricaTime;f.IndianChagos,m.UTC_PLUS_6,c.IndianOceanTime;f.IndianChristmas,m.UTC_PLUS_7,c.ChristmasIslandTime;f.IndianCocos,m.UTC_PLUS_6,c.CocosIslandsTime;f.IndianComoro,m.UTC_PLUS_3,c.EastAfricaTime;f.IndianKerguelen,m.UTC_PLUS_5,c.FrenchSouthernAndAntarcticTime;f.IndianMahe,m.UTC_PLUS_4,c.SeychellesTime;f.IndianMaldives,m.UTC_PLUS_5,c.MaldivesTime;f.IndianMauritius,m.UTC_PLUS_4,c.MauritiusTime;f.IndianMayotte,m.UTC_PLUS_3,c.EastAfricaTime;f.IndianReunion,m.UTC_PLUS_4,c.ReunionTime;f.PacificApia,m.UTC_PLUS_13,c.SamoaStandardTime;f.PacificAuckland,m.UTC_PLUS_13,c.NewZealandStandardTime;f.PacificChatham,m.UTC_PLUS_13,c.ChathamStandardTime;f.PacificEaster,m.UTC_PLUS_6,c.EasterIslandStandardTime;f.PacificEfate,m.UTC_PLUS_11,c.VanuatuTime;f.PacificEnderbury,m.UTC_PLUS_13,c.TongaTime;f.PacificFakaofo,m.UTC_PLUS_13,c.TongaTime;f.PacificFiji,m.UTC_PLUS_12,c.FijiTime;f.PacificFunafuti,m.UTC_PLUS_12,c.TuvaluTime;f.PacificGalapagos,m.UTC_PLUS_6,c.GalapagosTime;f.PacificGambier,m.UTC_PLUS_9,c.GambierIslandTime;f.PacificGuadalcanal,m.UTC_PLUS_11,c.SolomonIslandsTime;f.PacificGuam,m.UTC_PLUS_10,c.ChamorroStandardTime;f.PacificHonolulu,m.UTC_PLUS_10,c.HawaiiAleutianStandardTime;f.PacificJohnston,m.UTC_PLUS_10,c.HawaiiAleutianStandardTime;f.PacificKiritimati,m.UTC_PLUS_14,c.LineIslandsTime;f.PacificKosrae,m.UTC_PLUS_11,c.KosraeTime;f.PacificKwajalein,m.UTC_PLUS_12,c.MarshallIslandsTime;f.PacificMajuro,m.UTC_PLUS_12,c.MarshallIslandsTime;f.PacificMarquesas,m.UTC_PLUS_9,c.MarquesasIslandsTime;f.PacificMidway,m.UTC_PLUS_11,c.SamoaStandardTime;f.PacificNauru,m.UTC_PLUS_12,c.NauruTime;f.PacificNiue,m.UTC_PLUS_11,c.NiueTime;f.PacificNorfolk,m.UTC_PLUS_11,c.NorfolkIslandTime;f.PacificNoumea,m.UTC_PLUS_11,c.NewCaledoniaTime;f.PacificPagoPago,m.UTC_PLUS_11,c.SamoaStandardTime;f.PacificPalau,m.UTC_PLUS_9,c.PalauTime;f.PacificPitcairn,m.UTC_PLUS_8,c.PitcairnTime;f.PacificPonape,m.UTC_PLUS_11,c.PohnpeiStandardTime;f.PacificPortMoresby,m.UTC_PLUS_10,c.PapuaNewGuineaTime;f.PacificRarotonga,m.UTC_PLUS_10,c.CookIslandTime;f.PacificSaipan,m.UTC_PLUS_10,c.ChamorroStandardTime;f.PacificTahiti,m.UTC_PLUS_10,c.TahitiTime;f.PacificTarawa,m.UTC_PLUS_12,c.GilbertIslandTime;f.PacificTongatapu,m.UTC_PLUS_13,c.TongaTime;f.PacificChuuk,m.UTC_PLUS_10,c.ChuukTime;f.PacificPohnpei,m.UTC_PLUS_11,c.PohnpeiStandardTime;f.PacificYap,m.UTC_PLUS_10,c.ChuukTime;var gm={id:"dev",type:ce.Development,public:!1,name:"Development",description:"Development environment"},Em={id:"test",type:ce.NonProduction,public:!1,name:"Test",description:"Test environment"},Sm={id:"prod",type:ce.Production,public:!0,name:"Production",description:"Production environment"};function Tm(){let{NODE_ENV:a}={BASE_URL:"/",MODE:"production",DEV:!1,PROD:!0};return a==="dev"?gm:a==="prod"?Sm:Em}var Fr;(function(a){a.Comment="comment",a.Create="create",a.Delete="delete",a.Edit="edit",a.Invoice="invoice",a.Message="message",a.PageView="pageView",a.Paid="paid",a.Payment="payment",a.Purchase="purchase",a.Referral="referral",a.Renewal="renewal",a.Signup="signup",a.Subscription="subscription",a.Upgrade="upgrade"})(Fr||(Fr={}));var kr;(function(a){a.Business="business",a.Engineering="engineering",a.Exception="exception",a.LogMessage="log-message",a.Marketing="marketing",a.PageLeave="page-leave",a.PageView="page-view",a.Product="product",a.QualityManagement="quality-management",a.UserAccess="user-access",a.UserLogin="user-login",a.UserLogout="user-logout",a.UserSignup="user-signup",a.UserPreferencesChanged="user-preferences-changed",a.WebsiteVisit="website-visit"})(kr||(kr={}));var Mr;(function(a){a.CloseTab="close-tab",a.ExternalLink="external-link",a.NavigateAway="navigate-away",a.Unknown="unknown"})(Mr||(Mr={}));var Lr;(function(a){a.Ecs="Ecs"})(Lr||(Lr={}));var qr;(function(a){a.Finished="Finished",a.Queued="Queued",a.Running="Running",a.Started="Started"})(qr||(qr={}));var Gr;(function(a){a.Mobile="mobile",a.TV="tv",a.Watch="watch",a.Web="web"})(Gr||(Gr={}));var wr;(function(a){a.Development="Development",a.NonProduction="NonProduction",a.Production="Production"})(wr||(wr={}));var Kr;(function(a){a.Completed="completed",a.Started="started",a.Uncompleted="uncompleted"})(Kr||(Kr={}));var xr;(function(a){a.Build="Build",a.Deployment="Deployment",a.Test="Test"})(xr||(xr={}));var Or;(function(a){a.Canceled="Canceled",a.Completed="Completed",a.Failed="Failed",a.Running="Running",a.Queued="Queued",a.Waiting="Waiting"})(Or||(Or={}));var jr;(function(a){a.Canceled="Canceled",a.Completed="Completed",a.Failed="Failed",a.Running="Running",a.Queued="Queued",a.Waiting="Waiting"})(jr||(jr={}));var Hr;(function(a){a.ForgotPassword="forgot_password",a.Index="index",a.Login="login",a.PageNotFound="404",a.Signup="signup",a.VerifyCode="verify_code"})(Hr||(Hr={}));var Wr;(function(a){a.Info="info",a.Warning="warning",a.Error="error",a.Success="success"})(Wr||(Wr={}));var zr;(function(a){a.Details="details",a.Dialog="dialog"})(zr||(zr={}));var Vr;(function(a){a.Info="info",a.Warning="warning",a.Error="error",a.Success="success"})(Vr||(Vr={}));var Rr;(function(a){a.AccountBalance="AccountBalance",a.UserAssets="UserAssets",a.UserCreditCardDebt="UserCreditCardDebt",a.UserCreditLimit="UserCreditLimit",a.UserCreditUtilization="UserCreditUtilization",a.UserDebt="UserDebt",a.UserInvestments="UserInvestments",a.UserRetirement="UserRetirement",a.UserSavings="UserSavings"})(Rr||(Rr={}));var Jr;(function(a){a.DateTime="date_time",a.True="true",a.False="false",a.UniqueId="unique_id"})(Jr||(Jr={}));var Yr;(function(a){a.DomainModel="domain_entity",a.GenericModel="generic_entity"})(Yr||(Yr={}));var Zr;(function(a){a.AirportCode="airport-code",a.BankIDCode="bank-id-code",a.BitcoinAddress="bitcoin-address",a.Boolean="boolean",a.City="city",a.Color="color",a.CountryCode="country-code",a.CreditCard="credit-card",a.CurrencyAmount="currency-amount",a.CurrencyCode="currency-code",a.DataURI="data-uri",a.Date="date",a.DateRange="date-range",a.DateTime="date-time",a.DayOfMonth="day-of-month",a.DomainName="domain-name",a.EmailAddress="email-address",a.EthereumAddress="ethereum-address",a.EAN="european-article-number",a.EIN="employer-identification-number",a.Float="float",a.GeographicCoordinate="geographic-coordinate",a.GeographicCoordinates="geographic-coordinates",a.GitRepositoryURL="git-repository-url",a.HSLColor="hsl-color",a.HexColor="hex-color",a.Hexadecimal="hexadecimal",a.IBAN="international-bank-account-number",a.IMEI="international-mobile-equipment-identifier",a.IPAddress="ip-address",a.IPAddressRange="ip-address-range",a.ISBN="international-standard-book-number",a.ISIN="international-stock-number",a.ISMN="international-standard-music-number",a.ISSN="international-standard-serial-number",a.ISO8601="iso-8601",a.ISO31661Alpha2="iso-31661-alpha-2",a.ISO31661Alpha3="iso-31661-alpha-3",a.ISO4217="iso-4217",a.Image="image",a.Integer="integer",a.JSON="json",a.LanguageCode="language-code",a.LicensePlateNumber="license-plate-number",a.LongText="long-text",a.MD5="md5",a.Markdown="markdown",a.Menu="menu",a.Number="number",a.MACAddress="mac-address",a.MagnetURI="magnet-uri",a.MimeType="mime-type",a.Month="month",a.Password="password",a.PassportNumber="passport-number",a.Percent="percent",a.PhoneNumber="phone-number",a.Port="port",a.PostalCode="postal-code",a.Province="province",a.RFC3339="rfc-3339",a.RGBColor="rgb-color",a.SemanticVersion="semantic-version",a.SSN="social-security-number",a.State="state",a.StreetAddress="street-address",a.String="string",a.Tags="tags",a.TaxIDNumber="tax-id-number",a.Time="time",a.TimeOfDay="time-of-day",a.TimeRange="time-range",a.TimezoneRegion="timezone-region",a.URL="url",a.URLPath="url-path",a.UUID="uuid",a.VATIDNumber="value-added-tax-id-number",a.VerificationCode="verification-code",a.Video="video",a.Weekday="weekday",a.Year="year"})(Zr||(Zr={}));var $r;(function(a){a.Critical="Critical",a.Error="Error",a.Fatal="Fatal",a.Warning="Warning"})($r||($r={}));var r;(function(a){a.Contains="contains",a.HasCharacterCount="has-character-count",a.HasNumberCount="has-number-count",a.HasLetterCount="has-letter-count",a.HasLowercaseCount="has-lowercase-count",a.HasSpacesCount="has-spaces-count",a.HasSymbolCount="has-symbol-count",a.HasUppercaseCount="has-uppercase-count",a.IsAfter="is-after",a.IsAfterOrEqual="is-after-or-equal",a.IsAirport="is-airport",a.IsAlpha="is-alpha",a.IsAlphanumeric="is-alphanumeric",a.IsAlgorithmHash="is-algorithm-hash",a.IsAscii="is-ascii",a.IsBase64="is-base-64",a.IsBefore="is-before",a.IsBeforeOrAfter="is-before-or-after",a.IsBeforeOrEqual="is-before-or-equal",a.IsBetween="is-between",a.IsBIC="is-bic",a.IsBitcoinAddress="is-bitcoin-address",a.IsBoolean="is-boolean",a.IsColor="is-color",a.IsComplexEnough="is-complex-enough",a.IsCountry="is-country",a.IsCreditCard="is-credit-card",a.IsCurrency="is-currency",a.IsDataURI="is-data-uri",a.IsDate="is-date",a.IsDateRange="is-date-range",a.IsDateTime="is-date-time",a.IsDayOfMonth="is-day-of-month",a.IsDecimal="is-decimal",a.IsDivisibleBy="is-divisible-by",a.IsDomainName="is-domain-name",a.IsEmailAddress="is-email-address",a.IsEthereumAddress="is-ethereum-address",a.IsEAN="is-ean",a.IsEIN="is-ein",a.IsEqual="is-equal",a.IsEvenNumber="is-even-number",a.IsFloat="is-float",a.IsIBAN="is-iban",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsHSLColor="is-hsl-color",a.IsHexColor="is-hex-color",a.IsHexadecimal="is-hexadecimal",a.IsIdentityCardCode="is-identity-card-code",a.IsIMEI="is-imei",a.IsInIPAddressRange="is-in-ip-address-range",a.IsInList="is-in-list",a.IsInTheLast="is-in-the-last",a.IsInteger="is-integer",a.IsIPAddress="is-ip-address",a.IsIPAddressRange="is-ip-address-range",a.IsISBN="is-isbn",a.IsISIN="is-isin",a.IsISMN="is-ismn",a.IsISRC="is-isrc",a.IsISSN="is-issn",a.IsISO4217="is-iso-4217",a.IsISO8601="is-iso-8601",a.IsISO31661Alpha2="is-iso-31661-alpha-2",a.IsISO31661Alpha3="is-iso-31661-alpha-3",a.IsJSON="is-json",a.IsLanguage="is-language",a.IsLatitude="is-latitude",a.IsLongitude="is-longitude",a.IsLengthEqual="is-length-equal",a.IsLengthGreaterThan="is-length-greater-than",a.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",a.IsLengthLessThan="is-length-less-than",a.IsLengthLessThanOrEqual="is-length-less-than-or-equal",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsLicensePlateNumber="is-license-plate-number",a.IsLowercase="is-lowercase",a.IsOctal="is-octal",a.IsMACAddress="is-mac-address",a.IsMD5="is-md5",a.IsMagnetURI="is-magnet-uri",a.IsMarkdown="is-markdown",a.IsMimeType="is-mime-type",a.IsMonth="is-month",a.IsNegativeNumber="is-negative-number",a.IsNotDate="is-not-date",a.IsNotEqual="is-not-equal",a.IsNotInIPAddressRange="is-not-in-ip-address-range",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsNotRegexMatch="is-not-regex-match",a.IsNotToday="is-not-today",a.IsNumber="is-number",a.IsNumeric="is-numeric",a.IsOddNumber="is-odd-number",a.IsPassportNumber="is-passport-number",a.IsPhoneNumber="is-phone-number",a.IsPort="is-port",a.IsPositiveNumber="is-positive-number",a.IsPostalCode="is-postal-code",a.IsProvince="is-province",a.IsRGBColor="is-rgb-color",a.IsRegexMatch="is-regex-match",a.IsRequired="is-required",a.IsSemanticVersion="is-semantic-version",a.IsSlug="is-slug",a.IsSSN="is-ssn",a.IsState="is-state",a.IsStreetAddress="is-street-address",a.IsString="is-string",a.IsStrongPassword="is-strong-password",a.IsTags="is-tags",a.IsTaxIDNumber="is-tax-id-number",a.IsThisMonth="is-this-month",a.IsThisQuarter="is-this-quarter",a.IsThisWeek="is-this-week",a.IsThisWeekend="is-this-weekend",a.IsThisYear="is-this-year",a.IsTime="is-time",a.IsTimeOfDay="is-time-of-day",a.IsTimeRange="is-time-range",a.IsToday="is-today",a.IsURL="is-url",a.IsUUID="is-uuid",a.IsUppercase="is-uppercase",a.IsUsernameAvailable="is-username-available",a.IsValidStreetAddress="is-valid-street-address",a.IsVATIDNumber="is-vat-id-number",a.IsWeekday="is-weekday",a.IsWeekend="is-weekend",a.IsYear="is-year"})(r||(r={}));var Qr;(function(a){a.IsAuthenticated="is-authenticated",a.IsNotAuthenticated="is-not-authenticated",a.IsUsernameAvailable="is-username-available",a.PasswordMismatch="password-mismatch"})(Qr||(Qr={}));var Xr;(function(a){a[a.IsHSLColor=r.IsHSLColor]="IsHSLColor",a[a.IsHexColor=r.IsHexColor]="IsHexColor",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsRGBColor=r.IsRGBColor]="IsRGBColor",a[a.IsString=r.IsString]="IsString"})(Xr||(Xr={}));var Cr;(function(a){a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsCurrency=r.IsCurrency]="IsCurrency",a[a.IsDecimal=r.IsDecimal]="IsDecimal",a[a.IsDivisibleBy=r.IsDivisibleBy]="IsDivisibleBy",a[a.IsEvenNumber=r.IsEvenNumber]="IsEvenNumber",a[a.IsFloat=r.IsFloat]="IsFloat",a[a.IsGreaterThan=r.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=r.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=r.IsInteger]="IsInteger",a[a.IsISO8601=r.IsISO8601]="IsISO8601",a[a.IsLessThan=r.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=r.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNegativeNumber=r.IsNegativeNumber]="IsNegativeNumber",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsOddNumber=r.IsOddNumber]="IsOddNumber",a[a.IsPositiveNumber=r.IsPositiveNumber]="IsPositiveNumber"})(Cr||(Cr={}));var at;(function(a){a[a.IsBitcoinAddress=r.IsBitcoinAddress]="IsBitcoinAddress",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(at||(at={}));var et;(function(a){a[a.IsEthereumAddress=r.IsEthereumAddress]="IsEthereumAddress",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(et||(et={}));var it;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsJSON=r.IsJSON]="IsJSON",a[a.IsLanguage=r.IsLanguage]="IsLanguage",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(it||(it={}));var ut;(function(a){a[a.IsAlpha=r.IsAlpha]="IsAlpha",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(ut||(ut={}));var nt;(function(a){a[a.IsAlpha=r.IsAlpha]="IsAlpha",a[a.IsCountry=r.IsCountry]="IsCountry",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(nt||(nt={}));var st;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsFloat=r.IsFloat]="IsFloat",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNumeric=r.IsNumeric]="IsNumeric"})(st||(st={}));var rt;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsFloat=r.IsFloat]="IsFloat",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNumeric=r.IsNumeric]="IsNumeric"})(rt||(rt={}));var tt;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsPostalCode=r.IsPostalCode]="IsPostalCode",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(tt||(tt={}));var lt;(function(a){a[a.IsAlpha=r.IsAlpha]="IsAlpha",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsProvince=r.IsProvince]="IsProvince",a[a.IsString=r.IsString]="IsString"})(lt||(lt={}));var mt;(function(a){a[a.IsAlpha=r.IsAlpha]="IsAlpha",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsState=r.IsState]="IsState",a[a.IsString=r.IsString]="IsString"})(mt||(mt={}));var ct;(function(a){a[a.IsAlphanumeric=r.IsAlphanumeric]="IsAlphanumeric",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString",a[a.IsStreetAddress=r.IsStreetAddress]="IsStreetAddress"})(ct||(ct={}));var ot;(function(a){a[a.IsAirport=r.IsAirport]="IsAirport",a[a.IsAlpha=r.IsAlpha]="IsAlpha",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(ot||(ot={}));var At;(function(a){a[a.IsAlgorithmHash=r.IsAlgorithmHash]="IsAlgorithmHash",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(At||(At={}));var dt;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsSemanticVersion=r.IsSemanticVersion]="IsSemanticVersion",a[a.IsString=r.IsString]="IsString"})(dt||(dt={}));var ft;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString",a[a.IsUUID=r.IsUUID]="IsUUID"})(ft||(ft={}));var It;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsMD5=r.IsMD5]="IsMD5",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(It||(It={}));var _t;(function(a){a[a.IsBoolean=r.IsBoolean]="IsBoolean",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(_t||(_t={}));var ht;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsAfterOrEqual=r.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=r.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsDate=r.IsDate]="IsDate",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotDate=r.IsNotDate]="IsNotDate",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNotToday=r.IsNotToday]="IsNotToday",a[a.IsThisWeek=r.IsThisWeek]="IsThisWeek",a[a.IsThisMonth=r.IsThisMonth]="IsThisMonth",a[a.IsThisQuarter=r.IsThisQuarter]="IsThisQuarter",a[a.IsThisYear=r.IsThisYear]="IsThisYear",a[a.IsToday=r.IsToday]="IsToday",a[a.IsWeekend=r.IsWeekend]="IsWeekend"})(ht||(ht={}));var gt;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=r.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsDate=r.IsDate]="IsDate",a[a.IsDateRange=r.IsDateRange]="IsDateRange",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(gt||(gt={}));var Et;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsAfterOrEqual=r.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=r.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsDate=r.IsDate]="IsDate",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotDate=r.IsNotDate]="IsNotDate",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNotToday=r.IsNotToday]="IsNotToday",a[a.IsThisWeek=r.IsThisWeek]="IsThisWeek",a[a.IsThisMonth=r.IsThisMonth]="IsThisMonth",a[a.IsThisQuarter=r.IsThisQuarter]="IsThisQuarter",a[a.IsThisYear=r.IsThisYear]="IsThisYear",a[a.IsToday=r.IsToday]="IsToday",a[a.IsWeekend=r.IsWeekend]="IsWeekend"})(Et||(Et={}));var St;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsAfterOrEqual=r.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=r.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsDayOfMonth=r.IsDayOfMonth]="IsDayOfMonth",a[a.IsEvenNumber=r.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsGreaterThan=r.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=r.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=r.IsInteger]="IsInteger",a[a.IsLessThan=r.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=r.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsOddNumber=r.IsOddNumber]="IsOddNumber",a[a.IsToday=r.IsToday]="IsToday",a[a.IsWeekday=r.IsWeekday]="IsWeekday",a[a.IsWeekend=r.IsWeekend]="IsWeekend"})(St||(St={}));var Tt;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsAfterOrEqual=r.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=r.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsEvenNumber=r.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsGreaterThan=r.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=r.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=r.IsInteger]="IsInteger",a[a.IsLessThan=r.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=r.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsMonth=r.IsMonth]="IsMonth",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsOddNumber=r.IsOddNumber]="IsOddNumber",a[a.IsThisMonth=r.IsThisMonth]="IsThisMonth"})(Tt||(Tt={}));var pt;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsAfterOrEqual=r.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=r.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsTime=r.IsTime]="IsTime"})(pt||(pt={}));var vt;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=r.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsTime=r.IsTime]="IsTime",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsTimeRange=r.IsTimeRange]="IsTimeRange"})(vt||(vt={}));var bt;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=r.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsTimeOfDay=r.IsTimeOfDay]="IsTimeOfDay",a[a.IsTimeRange=r.IsTimeRange]="IsTimeRange"})(bt||(bt={}));var Bt;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsAfterOrEqual=r.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=r.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsEvenNumber=r.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsGreaterThan=r.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=r.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=r.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=r.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsOddNumber=r.IsOddNumber]="IsOddNumber",a[a.IsWeekday=r.IsWeekday]="IsWeekday",a[a.IsWeekend=r.IsWeekend]="IsWeekend"})(Bt||(Bt={}));var Ut;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsAfterOrEqual=r.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=r.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsEvenNumber=r.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsGreaterThan=r.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=r.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=r.IsInteger]="IsInteger",a[a.IsLessThan=r.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=r.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsOddNumber=r.IsOddNumber]="IsOddNumber",a[a.IsThisYear=r.IsThisYear]="IsThisYear",a[a.IsYear=r.IsYear]="IsYear"})(Ut||(Ut={}));var Nt;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsHexadecimal=r.IsHexadecimal]="IsHexadecimal",a[a.IsLengthEqual=r.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=r.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=r.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=r.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=r.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(Nt||(Nt={}));var Dt;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsJSON=r.IsJSON]="IsJSON",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(Dt||(Dt={}));var Pt;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsMarkdown=r.IsMarkdown]="IsMarkdown",a[a.IsString=r.IsString]="IsString"})(Pt||(Pt={}));var yt;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(yt||(yt={}));var Ft;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(Ft||(Ft={}));var kt;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsDataURI=r.IsDataURI]="IsDataURI",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(kt||(kt={}));var Mt;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsDomainName=r.IsDomainName]="IsDomainName",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(Mt||(Mt={}));var Lt;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEmailAddress=r.IsEmailAddress]="IsEmailAddress",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(Lt||(Lt={}));var qt;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsIPAddress=r.IsIPAddress]="IsIPAddress",a[a.IsInIPAddressRange=r.IsInIPAddressRange]="IsInIPAddressRange",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotInIPAddressRange=r.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(qt||(qt={}));var Gt;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsIPAddressRange=r.IsIPAddressRange]="IsIPAddressRange",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotInIPAddressRange=r.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(Gt||(Gt={}));var wt;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsGreaterThan=r.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=r.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=r.IsInteger]="IsInteger",a[a.IsLessThan=r.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=r.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(wt||(wt={}));var Kt;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsMACAddress=r.IsMACAddress]="IsMACAddress",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(Kt||(Kt={}));var xt;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsMagnetURI=r.IsMagnetURI]="IsMagnetURI",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(xt||(xt={}));var Ot;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsMimeType=r.IsMimeType]="IsMimeType",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(Ot||(Ot={}));var jt;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString",a[a.IsSlug=r.IsSlug]="IsSlug"})(jt||(jt={}));var Ht;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString",a[a.IsURL=r.IsURL]="IsURL"})(Ht||(Ht={}));var Wt;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsAfterOrEqual=r.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=r.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsDecimal=r.IsDecimal]="IsDecimal",a[a.IsDivisibleBy=r.IsDivisibleBy]="IsDivisibleBy",a[a.IsEAN=r.IsEAN]="IsEAN",a[a.IsEIN=r.IsEIN]="IsEIN",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsEvenNumber=r.IsEvenNumber]="IsEvenNumber",a[a.IsFloat=r.IsFloat]="IsFloat",a[a.IsGreaterThan=r.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=r.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInt=r.IsInteger]="IsInt",a[a.IsISBN=r.IsISBN]="IsISBN",a[a.IsISMN=r.IsISMN]="IsISMN",a[a.IsISSN=r.IsISSN]="IsISSN",a[a.IsLatitude=r.IsLatitude]="IsLatitude",a[a.IsLongitude=r.IsLongitude]="IsLongitude",a[a.IsLessThan=r.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=r.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsMACAddress=r.IsMACAddress]="IsMACAddress",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsNegativeNumber=r.IsNegativeNumber]="IsNegativeNumber",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsOddNumber=r.IsOddNumber]="IsOddNumber",a[a.IsPassportNumber=r.IsPassportNumber]="IsPassportNumber",a[a.IsPhoneNumber=r.IsPhoneNumber]="IsPhoneNumber",a[a.IsPort=r.IsPort]="IsPort",a[a.IsPositiveNumber=r.IsPositiveNumber]="IsPositiveNumber",a[a.IsPostalCode=r.IsPostalCode]="IsPostalCode",a[a.IsSemanticVersion=r.IsSemanticVersion]="IsSemanticVersion",a[a.IsSSN=r.IsSSN]="IsSSN",a[a.IsTaxIDNumber=r.IsTaxIDNumber]="IsTaxIDNumber",a[a.IsUUID=r.IsUUID]="IsUUID",a[a.IsVATIDNumber=r.IsVATIDNumber]="IsVATIDNumber"})(Wt||(Wt={}));var zt;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsFloat=r.IsFloat]="IsFloat",a[a.IsGreaterThan=r.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=r.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=r.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=r.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsNumeric=r.IsNumeric]="IsNumeric"})(zt||(zt={}));var Vt;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInteger=r.IsInteger]="IsInteger",a[a.IsGreaterThan=r.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=r.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=r.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=r.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsNumeric=r.IsNumeric]="IsNumeric"})(Vt||(Vt={}));var Rt;(function(a){a[a.IsCreditCard=r.IsCreditCard]="IsCreditCard",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsLengthEqual=r.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=r.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=r.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=r.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=r.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsRegexMatch=r.IsRegexMatch]="IsRegexMatch",a[a.IsNotRegexMatch=r.IsNotRegexMatch]="IsNotRegexMatch"})(Rt||(Rt={}));var Jt;(function(a){a[a.isEmailAddress=r.IsEmailAddress]="isEmailAddress",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsLengthEqual=r.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=r.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=r.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=r.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=r.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsRegexMatch=r.IsRegexMatch]="IsRegexMatch",a[a.IsNotRegexMatch=r.IsNotRegexMatch]="IsNotRegexMatch"})(Jt||(Jt={}));var Yt;(function(a){a[a.IsLicensePlateNumber=r.IsLicensePlateNumber]="IsLicensePlateNumber",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=r.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsString=r.IsString]="IsString",a[a.IsRegexMatch=r.IsRegexMatch]="IsRegexMatch"})(Yt||(Yt={}));var Zt;(function(a){a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsPassportNumber=r.IsPassportNumber]="IsPassportNumber",a[a.IsString=r.IsString]="IsString",a[a.IsRegexMatch=r.IsRegexMatch]="IsRegexMatch"})(Zt||(Zt={}));var $t;(function(a){a[a.IsComplexEnough=r.IsComplexEnough]="IsComplexEnough",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=r.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsLengthGreaterThan=r.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=r.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=r.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=r.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsStrongPassword=r.IsStrongPassword]="IsStrongPassword",a[a.IsString=r.IsString]="IsString",a[a.IsRegexMatch=r.IsRegexMatch]="IsRegexMatch"})($t||($t={}));var Qt;(function(a){a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=r.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsPhoneNumber=r.IsPhoneNumber]="IsPhoneNumber",a[a.IsRegexMatch=r.IsRegexMatch]="IsRegexMatch"})(Qt||(Qt={}));var Xt;(function(a){a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsSSN=r.IsSSN]="IsSSN",a[a.IsString=r.IsString]="IsString",a[a.IsRegexMatch=r.IsRegexMatch]="IsRegexMatch"})(Xt||(Xt={}));var Ct;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsBIC=r.IsBIC]="IsBIC",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(Ct||(Ct={}));var a0;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEAN=r.IsEAN]="IsEAN",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(a0||(a0={}));var e0;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEIN=r.IsEIN]="IsEIN",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(e0||(e0={}));var i0;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsIBAN=r.IsIBAN]="IsIBAN",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(i0||(i0={}));var u0;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsISBN=r.IsISBN]="IsISBN",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(u0||(u0={}));var n0;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsISIN=r.IsISIN]="IsISIN",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(n0||(n0={}));var s0;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsISMN=r.IsISMN]="IsISMN",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(s0||(s0={}));var r0;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsISSN=r.IsISSN]="IsISSN",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(r0||(r0={}));var t0;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString",a[a.IsTaxIDNumber=r.IsTaxIDNumber]="IsTaxIDNumber"})(t0||(t0={}));var l0;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString",a[a.IsVATIDNumber=r.IsVATIDNumber]="IsVATIDNumber"})(l0||(l0={}));var m0;(function(a){a[a.Contains=r.Contains]="Contains",a[a.HasNumberCount=r.HasNumberCount]="HasNumberCount",a[a.HasLowercaseCount=r.HasLowercaseCount]="HasLowercaseCount",a[a.HasLetterCount=r.HasLetterCount]="HasLetterCount",a[a.HasSpacesCount=r.HasSpacesCount]="HasSpacesCount",a[a.HasSymbolCount=r.HasSymbolCount]="HasSymbolCount",a[a.HasUppercaseCount=r.HasUppercaseCount]="HasUppercaseCount",a[a.IsAlpha=r.IsAlpha]="IsAlpha",a[a.IsAlphanumeric=r.IsAlphanumeric]="IsAlphanumeric",a[a.IsAscii=r.IsAscii]="IsAscii",a[a.IsBase64=r.IsBase64]="IsBase64",a[a.IsColor=r.IsColor]="IsColor",a[a.IsComplexEnough=r.IsComplexEnough]="IsComplexEnough",a[a.IsCreditCard=r.IsCreditCard]="IsCreditCard",a[a.IsDataURI=r.IsDataURI]="IsDataURI",a[a.IsDomainName=r.IsDomainName]="IsDomainName",a[a.IsEmailAddress=r.IsEmailAddress]="IsEmailAddress",a[a.IsEthereumAddress=r.IsEthereumAddress]="IsEthereumAddress",a[a.IsEAN=r.IsEAN]="IsEAN",a[a.IsEIN=r.IsEIN]="IsEIN",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsIBAN=r.IsIBAN]="IsIBAN",a[a.IsHSLColor=r.IsHSLColor]="IsHSLColor",a[a.IsHexColor=r.IsHexColor]="IsHexColor",a[a.IsHexadecimal=r.IsHexadecimal]="IsHexadecimal",a[a.IsIdentityCardCode=r.IsIdentityCardCode]="IsIdentityCardCode",a[a.IsIMEI=r.IsIMEI]="IsIMEI",a[a.IsInList=r.IsInList]="IsInList",a[a.IsIPAddress=r.IsIPAddress]="IsIPAddress",a[a.IsInIPAddressRange=r.IsInIPAddressRange]="IsInIPAddressRange",a[a.IsISBN=r.IsISBN]="IsISBN",a[a.IsISIN=r.IsISIN]="IsISIN",a[a.IsISMN=r.IsISMN]="IsISMN",a[a.IsISRC=r.IsISRC]="IsISRC",a[a.IsISSN=r.IsISSN]="IsISSN",a[a.IsLanguage=r.IsLanguage]="IsLanguage",a[a.IsLatitude=r.IsLatitude]="IsLatitude",a[a.IsLongitude=r.IsLongitude]="IsLongitude",a[a.IsLengthEqual=r.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=r.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=r.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=r.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=r.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsLicensePlateNumber=r.IsLicensePlateNumber]="IsLicensePlateNumber",a[a.IsLowercase=r.IsLowercase]="IsLowercase",a[a.IsOctal=r.IsOctal]="IsOctal",a[a.IsMACAddress=r.IsMACAddress]="IsMACAddress",a[a.IsMD5=r.IsMD5]="IsMD5",a[a.IsMagnetURI=r.IsMagnetURI]="IsMagnetURI",a[a.IsMarkdown=r.IsMarkdown]="IsMarkdown",a[a.IsMimeType=r.IsMimeType]="IsMimeType",a[a.IsMonth=r.IsMonth]="IsMonth",a[a.IsNotInIPAddressRange=r.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=r.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsNumeric=r.IsNumeric]="IsNumeric",a[a.IsPassportNumber=r.IsPassportNumber]="IsPassportNumber",a[a.IsPhoneNumber=r.IsPhoneNumber]="IsPhoneNumber",a[a.IsPort=r.IsPort]="IsPort",a[a.IsPostalCode=r.IsPostalCode]="IsPostalCode",a[a.IsProvince=r.IsProvince]="IsProvince",a[a.IsRegexMatch=r.IsRegexMatch]="IsRegexMatch",a[a.IsSemanticVersion=r.IsSemanticVersion]="IsSemanticVersion",a[a.IsSlug=r.IsSlug]="IsSlug",a[a.IsSSN=r.IsSSN]="IsSSN",a[a.IsState=r.IsState]="IsState",a[a.IsStreetAddress=r.IsStreetAddress]="IsStreetAddress",a[a.IsString=r.IsString]="IsString",a[a.IsTaxIDNumber=r.IsTaxIDNumber]="IsTaxIDNumber",a[a.IsURL=r.IsURL]="IsURL",a[a.IsUUID=r.IsUUID]="IsUUID",a[a.IsUppercase=r.IsUppercase]="IsUppercase",a[a.IsVATIDNumber=r.IsVATIDNumber]="IsVATIDNumber",a[a.IsWeekday=r.IsWeekday]="IsWeekday",a[a.IsWeekend=r.IsWeekend]="IsWeekend",a[a.IsYear=r.IsYear]="IsYear"})(m0||(m0={}));var c0;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsAlpha=r.IsAlpha]="IsAlpha",a[a.IsAlphanumeric=r.IsAlphanumeric]="IsAlphanumeric",a[a.IsInList=r.IsInList]="IsInList",a[a.IsMarkdown=r.IsMarkdown]="IsMarkdown",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNumeric=r.IsNumeric]="IsNumeric",a[a.IsLowercase=r.IsLowercase]="IsLowercase",a[a.IsString=r.IsString]="IsString",a[a.IsUppercase=r.IsUppercase]="IsUppercase"})(c0||(c0={}));var o0;(function(a){a.InvalidCharacters="invalid-characters",a.InvalidPattern="invalid-pattern",a.NotComplexEnough="not-complex-enough",a.NotUnique="not-unique",a.NotValidEmail="not-valid-email",a.TooLong="too-long",a.TooShort="too-short",a.Required="required"})(o0||(o0={}));var A0;(function(a){a[a.Allowed=0]="Allowed",a[a.Blocked=1]="Blocked"})(A0||(A0={}));var d0;(function(a){a.Canceled="Canceled",a.Completed="Completed",a.Created="Created",a.Faulted="Faulted",a.Queued="Queued",a.Running="Running",a.Waiting="Waiting"})(d0||(d0={}));var f0;(function(a){a.Archived="ARCHIVED",a.Compromised="COMPROMISED",a.Confirmed="CONFIRMED",a.ForcePasswordChange="FORCE_CHANGE_PASSWORD",a.ResetRequired="RESET_REQUIRED",a.Unconfirmed="UNCONFIRMED",a.Unknown="UNKNOWN"})(f0||(f0={}));var I0;(function(a){a.Code="code",a.Link="link"})(I0||(I0={}));var _0;(function(a){a.Owner="Owner",a.Admin="Admin",a.User="User",a.Visitor="Visitor"})(_0||(_0={}));var h0;(function(a){a.RequiresPaymentMethod="requires_payment_method",a.RequiresConfirmation="requires_confirmation",a.RequiresAction="requires_action",a.Processing="processing",a.RequiresCapture="requires_capture",a.Canceled="canceled",a.Succeeded="succeeded"})(h0||(h0={}));var g0;(function(a){a.Incomplete="incomplete",a.IncompleteExpired="incomplete_expired",a.Trialing="trialing",a.Active="active",a.PastDue="past_due",a.Canceled="canceled",a.Unpaid="unpaid"})(g0||(g0={}));var E0;(function(a){a.Monthly="monthly",a.Quarterly="quarterly",a.Yearly="yearly",a.Lifetime="lifetime"})(E0||(E0={}));var S0;(function(a){a.Email="email",a.PhoneNumber="phone_number"})(S0||(S0={}));var z;(function(a){a.Analytics="analytics",a.Critical="critical",a.Debug="debug",a.Exception="exception",a.Http="http",a.Info="info",a.Warning="warning"})(z||(z={}));var T0;(function(a){a.Delete="delete",a.Get="get",a.Head="head",a.Patch="patch",a.Post="post",a.Put="put"})(T0||(T0={}));var p0;(function(a){a[a.CONTINUE=100]="CONTINUE",a[a.SWITCHING_PROTOCOLS=101]="SWITCHING_PROTOCOLS",a[a.PROCESSING=102]="PROCESSING",a[a.OK=200]="OK",a[a.CREATED=201]="CREATED",a[a.ACCEPTED=202]="ACCEPTED",a[a.NON_AUTHORITATIVE_INFORMATION=203]="NON_AUTHORITATIVE_INFORMATION",a[a.NO_CONTENT=204]="NO_CONTENT",a[a.RESET_CONTENT=205]="RESET_CONTENT",a[a.PARTIAL_CONTENT=206]="PARTIAL_CONTENT",a[a.MULTI_STATUS=207]="MULTI_STATUS",a[a.ALREADY_REPORTED=208]="ALREADY_REPORTED",a[a.IM_USED=226]="IM_USED",a[a.MULTIPLE_CHOICES=300]="MULTIPLE_CHOICES",a[a.MOVED_PERMANENTLY=301]="MOVED_PERMANENTLY",a[a.FOUND=302]="FOUND",a[a.SEE_OTHER=303]="SEE_OTHER",a[a.NOT_MODIFIED=304]="NOT_MODIFIED",a[a.USE_PROXY=305]="USE_PROXY",a[a.SWITCH_PROXY=306]="SWITCH_PROXY",a[a.TEMPORARY_REDIRECT=307]="TEMPORARY_REDIRECT",a[a.PERMANENT_REDIRECT=308]="PERMANENT_REDIRECT",a[a.BAD_REQUEST=400]="BAD_REQUEST",a[a.UNAUTHORIZED=401]="UNAUTHORIZED",a[a.PAYMENT_REQUIRED=402]="PAYMENT_REQUIRED",a[a.FORBIDDEN=403]="FORBIDDEN",a[a.NOT_FOUND=404]="NOT_FOUND",a[a.METHOD_NOT_ALLOWED=405]="METHOD_NOT_ALLOWED",a[a.NOT_ACCEPTABLE=406]="NOT_ACCEPTABLE",a[a.PROXY_AUTHENTICATION_REQUIRED=407]="PROXY_AUTHENTICATION_REQUIRED",a[a.REQUEST_TIMEOUT=408]="REQUEST_TIMEOUT",a[a.CONFLICT=409]="CONFLICT",a[a.GONE=410]="GONE",a[a.LENGTH_REQUIRED=411]="LENGTH_REQUIRED",a[a.PRECONDITION_FAILED=412]="PRECONDITION_FAILED",a[a.PAYLOAD_TOO_LARGE=413]="PAYLOAD_TOO_LARGE",a[a.URI_TOO_LONG=414]="URI_TOO_LONG",a[a.UNSUPPORTED_MEDIA_TYPE=415]="UNSUPPORTED_MEDIA_TYPE",a[a.RANGE_NOT_SATISFIABLE=416]="RANGE_NOT_SATISFIABLE",a[a.EXPECTATION_FAILED=417]="EXPECTATION_FAILED",a[a.I_AM_A_TEAPOT=418]="I_AM_A_TEAPOT",a[a.MISDIRECTED_REQUEST=421]="MISDIRECTED_REQUEST",a[a.UNPROCESSABLE_ENTITY=422]="UNPROCESSABLE_ENTITY",a[a.LOCKED=423]="LOCKED",a[a.FAILED_DEPENDENCY=424]="FAILED_DEPENDENCY",a[a.TOO_EARLY=425]="TOO_EARLY",a[a.UPGRADE_REQUIRED=426]="UPGRADE_REQUIRED",a[a.PRECONDITION_REQUIRED=428]="PRECONDITION_REQUIRED",a[a.TOO_MANY_REQUESTS=429]="TOO_MANY_REQUESTS",a[a.REQUEST_HEADER_FIELDS_TOO_LARGE=431]="REQUEST_HEADER_FIELDS_TOO_LARGE",a[a.UNAVAILABLE_FOR_LEGAL_REASONS=451]="UNAVAILABLE_FOR_LEGAL_REASONS",a[a.INTERNAL_SERVER_ERROR=500]="INTERNAL_SERVER_ERROR",a[a.NOT_IMPLEMENTED=501]="NOT_IMPLEMENTED",a[a.BAD_GATEWAY=502]="BAD_GATEWAY",a[a.SERVICE_UNAVAILABLE=503]="SERVICE_UNAVAILABLE",a[a.GATEWAY_TIMEOUT=504]="GATEWAY_TIMEOUT",a[a.HTTP_VERSION_NOT_SUPPORTED=505]="HTTP_VERSION_NOT_SUPPORTED",a[a.VARIANT_ALSO_NEGOTIATES=506]="VARIANT_ALSO_NEGOTIATES",a[a.INSUFFICIENT_STORAGE=507]="INSUFFICIENT_STORAGE",a[a.LOOP_DETECTED=508]="LOOP_DETECTED",a[a.BANDWIDTH_LIMIT_EXCEEDED=509]="BANDWIDTH_LIMIT_EXCEEDED",a[a.NOT_EXTENDED=510]="NOT_EXTENDED",a[a.NETWORK_AUTHENTICATION_REQUIRED=511]="NETWORK_AUTHENTICATION_REQUIRED"})(p0||(p0={}));var g;(function(a){a.Afghanistan="AF",a.Albania="AL",a.Algeria="DZ",a.AmericanSamoa="AS",a.Andorra="AD",a.Angola="AO",a.Anguilla="AI",a.Antarctica="AQ",a.AntiguaAndBarbuda="AG",a.Argentina="AR",a.Armenia="AM",a.Aruba="AW",a.Australia="AU",a.Austria="AT",a.Azerbaijan="AZ",a.Bahamas="BS",a.Bahrain="BH",a.Bangladesh="BD",a.Barbados="BB",a.Belarus="BY",a.Belgium="BE",a.Belize="BZ",a.Benin="BJ",a.Bermuda="BM",a.Bhutan="BT",a.Bolivia="BO",a.BosniaAndHerzegovina="BA",a.Botswana="BW",a.BouvetIsland="BV",a.Brazil="BR",a.BritishIndianOceanTerritory="IO",a.Brunei="BN",a.Bulgaria="BG",a.BurkinaFaso="BF",a.Burundi="BI",a.Cambodia="KH",a.Cameroon="CM",a.Canada="CA",a.CapeVerde="CV",a.CaymanIslands="KY",a.CentralAfricanRepublic="CF",a.Chad="TD",a.Chile="CL",a.China="CN",a.ChristmasIsland="CX",a.CocosKeelingIslands="CC",a.Colombia="CO",a.Comoros="KM",a.Congo="CG",a.CongoTheDemocraticRepublicOfThe="CD",a.CookIslands="CK",a.CostaRica="CR",a.CoteDIvoire="CI",a.Croatia="HR",a.Cuba="CU",a.Cyprus="CY",a.CzechRepublic="CZ",a.Denmark="DK",a.Djibouti="DJ",a.Dominica="DM",a.DominicanRepublic="DO",a.Ecuador="EC",a.Egypt="EG",a.ElSalvador="SV",a.EquatorialGuinea="GQ",a.Eritrea="ER",a.Estonia="EE",a.Ethiopia="ET",a.FalklandIslands="FK",a.FaroeIslands="FO",a.Fiji="FJ",a.Finland="FI",a.France="FR",a.FrenchGuiana="GF",a.FrenchPolynesia="PF",a.FrenchSouthernTerritories="TF",a.Gabon="GA",a.Gambia="GM",a.Georgia="GE",a.Germany="DE",a.Ghana="GH",a.Gibraltar="GI",a.Greece="GR",a.Greenland="GL",a.Grenada="GD",a.Guadeloupe="GP",a.Guam="GU",a.Guatemala="GT",a.Guernsey="GG",a.Guinea="GN",a.GuineaBissau="GW",a.Guyana="GY",a.Haiti="HT",a.HeardIslandMcdonaldIslands="HM",a.HolySeeVaticanCityState="VA",a.Honduras="HN",a.HongKong="HK",a.Hungary="HU",a.Iceland="IS",a.India="IN",a.Indonesia="ID",a.Iran="IR",a.Iraq="IQ",a.Ireland="IE",a.IsleOfMan="IM",a.Israel="IL",a.Italy="IT",a.Jamaica="JM",a.Japan="JP",a.Jersey="JE",a.Jordan="JO",a.Kazakhstan="KZ",a.Kenya="KE",a.Kiribati="KI",a.Kuwait="KW",a.Kyrgyzstan="KG",a.Laos="LA",a.Latvia="LV",a.Lebanon="LB",a.Lesotho="LS",a.Liberia="LR",a.Libya="LY",a.Liechtenstein="LI",a.Lithuania="LT",a.Luxembourg="LU",a.Macau="MO",a.Madagascar="MG",a.Malawi="MW",a.Malaysia="MY",a.Maldives="MV",a.Mali="ML",a.Malta="MT",a.MarshallIslands="MH",a.Martinique="MQ",a.Mauritania="MR",a.Mauritius="MU",a.Mayotte="YT",a.Mexico="MX",a.MicronesiaFederatedStatesOf="FM",a.Moldova="MD",a.Monaco="MC",a.Mongolia="MN",a.Montenegro="ME",a.Montserrat="MS",a.Morocco="MA",a.Mozambique="MZ",a.Myanmar="MM",a.Namibia="NA",a.Nauru="NR",a.Nepal="NP",a.Netherlands="NL",a.NetherlandsAntilles="AN",a.NewCaledonia="NC",a.NewZealand="NZ",a.NorthKorea="KP",a.Nicaragua="NI",a.Niger="NE",a.Nigeria="NG",a.Niue="NU",a.NorfolkIsland="NF",a.NorthMacedonia="MK",a.NorthernMarianaIslands="MP",a.Norway="NO",a.Oman="OM",a.Pakistan="PK",a.Palau="PW",a.PalestinianTerritoryOccupied="PS",a.Panama="PA",a.PapuaNewGuinea="PG",a.Paraguay="PY",a.Peru="PE",a.Philippines="PH",a.Pitcairn="PN",a.Poland="PL",a.Portugal="PT",a.PuertoRico="PR",a.Qatar="QA",a.Reunion="RE",a.Romania="RO",a.RussianFederation="RU",a.Rwanda="RW",a.SaintBarthelemy="BL",a.SaintHelena="SH",a.SaintKittsAndNevis="KN",a.SaintLucia="LC",a.SaintMartin="MF",a.SaintPierreAndMiquelon="PM",a.SaintVincentAndTheGrenadines="VC",a.Samoa="WS",a.SanMarino="SM",a.SaoTomeAndPrincipe="ST",a.SaudiArabia="SA",a.Senegal="SN",a.Serbia="RS",a.SerbiaAndMontenegro="CS",a.Seychelles="SC",a.SierraLeone="SL",a.Singapore="SG",a.Slovakia="SK",a.Slovenia="SI",a.SolomonIslands="SB",a.Somalia="SO",a.SouthAfrica="ZA",a.SouthGeorgiaAndTheSouthSandwichIslands="GS",a.SouthKorea="KR",a.Spain="ES",a.SriLanka="LK",a.Sudan="SD",a.Suriname="SR",a.SvalbardAndJanMayen="SJ",a.Swaziland="SZ",a.Sweden="SE",a.Switzerland="CH",a.Syria="SY",a.Taiwan="TW",a.Tajikistan="TJ",a.Tanzania="TZ",a.Thailand="TH",a.TimorLeste="TL",a.Togo="TG",a.Tokelau="TK",a.Tonga="TO",a.TrinidadAndTobago="TT",a.Tunisia="TN",a.Turkey="TR",a.Turkmenistan="TM",a.TurksAndCaicosIslands="TC",a.Tuvalu="TV",a.Uganda="UG",a.Ukraine="UA",a.UnitedArabEmirates="AE",a.UnitedKingdom="GB",a.UnitedStates="US",a.UnitedStatesMinorOutlyingIslands="UM",a.Uruguay="UY",a.Uzbekistan="UZ",a.Vanuatu="VU",a.Venezuela="VE",a.Vietnam="VN",a.VirginIslandsBritish="VG",a.VirginIslandsUS="VI",a.WallisAndFutuna="WF",a.WesternSahara="EH",a.Yemen="YE",a.Zambia="ZM",a.Zimbabwe="ZW"})(g||(g={}));var y;(function(a){a.AfghanistanAfghani="AFN",a.AlbaniaLek="ALL",a.ArmeniaDram="AMD",a.AlgeriaDinar="DZD",a.AmericanSamoaTala="WST",a.AngolaKwanza="AOA",a.ArgentinaPeso="ARS",a.AustraliaDollar="AUD",a.ArubaFlorin="AWG",a.AzerbaijanNewManat="AZN",a.BosniaAndHerzegovinaConvertibleMark="BAM",a.BahrainDinar="BHD",a.BarbadosDollar="BBD",a.BangladeshTaka="BDT",a.BelgiumFranc="BGN",a.BermudaDollar="BMD",a.BruneiDollar="BND",a.BoliviaBoliviano="BOB",a.BrazilReal="BRL",a.BahamasDollar="BSD",a.BhutanNgultrum="BTN",a.BotswanaPula="BWP",a.BelarusRuble="BYN",a.BelizeDollar="BZD",a.BulgariaLev="BGN",a.BurundiFranc="BIF",a.BritishPound="GBP",a.CanadaDollar="CAD",a.CambodiaRiel="KHR",a.ComorosFranc="KMF",a.CaymanIslandsDollar="KYD",a.ChilePeso="CLP",a.ChinaYuan="CNY",a.ColombiaPeso="COP",a.CostaRicaColon="CRC",a.CroatiaKuna="HRK",a.CubaConvertiblePeso="CUC",a.CubaPeso="CUP",a.CapeVerdeEscudo="CVE",a.CyprusPound="CYP",a.CzechRepublicKoruna="CZK",a.DjiboutiFranc="DJF",a.DenmarkKrone="DKK",a.DominicaDollar="XCD",a.DominicanRepublicPeso="DOP",a.EastCaribbeanDollar="XCD",a.EgyptPound="EGP",a.ElSalvadorColon="SVC",a.EquatorialGuineaEkwele="GQE",a.EritreaNakfa="ERN",a.EstoniaKroon="EEK",a.EthiopiaBirr="ETB",a.Euro="EUR",a.FijiDollar="FJD",a.FalklandIslandsPound="FKP",a.GambiaDalasi="GMD",a.GabonFranc="GMD",a.GeorgiaLari="GEL",a.GhanaCedi="GHS",a.GibraltarPound="GIP",a.GuatemalaQuetzal="GTQ",a.GuernseyPound="GGP",a.GuineaBissauPeso="GWP",a.GuyanaDollar="GYD",a.HongKongDollar="HKD",a.HondurasLempira="HNL",a.HaitiGourde="HTG",a.HungaryForint="HUF",a.IndonesiaRupiah="IDR",a.IsleOfManPound="IMP",a.IsraelNewShekel="ILS",a.IndiaRupee="INR",a.IraqDinar="IQD",a.IranRial="IRR",a.IcelandKrona="ISK",a.JamaicaDollar="JMD",a.JapanYen="JPY",a.JerseyPound="JEP",a.JordanDinar="JOD",a.KazakhstanTenge="KZT",a.KenyaShilling="KES",a.KyrgyzstanSom="KGS",a.NorthKoreaWon="KPW",a.SouthKoreaWon="KRW",a.KuwaitDinar="KWD",a.LaosKip="LAK",a.LebanonPound="LBP",a.LiberiaDollar="LRD",a.LesothoLoti="LSL",a.LibyanDinar="LYD",a.LithuaniaLitas="LTL",a.LatviaLats="LVL",a.LibyaDinar="LYD",a.MacauPataca="MOP",a.MaldivesRufiyaa="MVR",a.MalawiKwacha="MWK",a.MaltaLira="MTL",a.MauritiusRupee="MUR",a.MongoliaTughrik="MNT",a.MoroccoDirham="MAD",a.MoldovaLeu="MDL",a.MozambiqueMetical="MZN",a.MadagascarAriary="MGA",a.MacedoniaDenar="MKD",a.MexicoPeso="MXN",a.MalaysiaRinggit="MYR",a.MyanmarKyat="MMK",a.MicronesiaFederatedStatesDollar="USD",a.NicaraguaCordoba="NIO",a.NamibiaDollar="NAD",a.NetherlandsAntillesGuilder="ANG",a.NewCaledoniaFranc="XPF",a.NigeriaNaira="NGN",a.NicaraguaCordobaOro="NIO",a.NigerCFAFranc="XOF",a.NorwayKrone="NOK",a.NepalRupee="NPR",a.NewZealandDollar="NZD",a.OmanRial="OMR",a.PanamaBalboa="PAB",a.PeruNuevoSol="PEN",a.PapuaNewGuineaKina="PGK",a.PhilippinesPeso="PHP",a.PakistanRupee="PKR",a.PeruNuevo="PEN",a.PolandZloty="PLN",a.ParaguayGuarani="PYG",a.QatarRial="QAR",a.RomaniaNewLeu="RON",a.SerbiaDinar="RSD",a.SriLankaRupee="LKR",a.RussiaRuble="RUB",a.RwandaFranc="RWF",a.SaudiArabiaRiyal="SAR",a.SlovakiaKoruna="SKK",a.SloveniaTolar="SIT",a.SolomonIslandsDollar="SBD",a.SeychellesRupee="SCR",a.SudanPound="SDG",a.SwedenKrona="SEK",a.SingaporeDollar="SGD",a.SaintHelenaPound="SHP",a.SierraLeoneLeone="SLL",a.SomaliaShilling="SOS",a.SurinameDollar="SRD",a.SintMaartenPound="SXD",a.SyriaPound="SYP",a.SwazilandLilangeni="SZL",a.SwitzerlandFranc="CHF",a.ThailandBaht="THB",a.TajikistanSomoni="TJS",a.TurkmenistanManat="TMT",a.TunisiaDinar="TND",a.TongaPaanga="TOP",a.TurkeyLira="TRY",a.TrinidadAndTobagoDollar="TTD",a.TaiwanNewDollar="TWD",a.TanzaniaShilling="TZS",a.UnitedArabEmiratesDirham="AED",a.UkraineHryvnia="UAH",a.UgandaShilling="UGX",a.UnitedKingdomPound="GBP",a.UnitedStatesDollar="USD",a.UruguayPeso="UYU",a.UzbekistanSom="UZS",a.VenezuelaBolivar="VEF",a.VietnamDong="VND",a.VanuatuVatu="VUV",a.SamoaTala="WST",a.YemenRial="YER",a.SouthAfricaRand="ZAR",a.ZambiaKwacha="ZMW",a.ZimbabweDollar="ZWL"})(y||(y={}));y.AfghanistanAfghani,g.Afghanistan,y.AlbaniaLek,g.Albania,y.AlgeriaDinar,g.Algeria,y.ArgentinaPeso,g.Argentina,y.ArmeniaDram,g.Armenia,y.ArubaFlorin,g.Aruba,y.AustraliaDollar,g.Australia,y.AzerbaijanNewManat,g.Azerbaijan,y.BahrainDinar,g.Bahrain,y.BangladeshTaka,g.Bangladesh,y.BarbadosDollar,g.Barbados,y.BelarusRuble,g.Belarus,y.BelizeDollar,g.Belize,y.BermudaDollar,g.Bermuda,y.BoliviaBoliviano,g.Bolivia,y.BosniaAndHerzegovinaConvertibleMark,g.BosniaAndHerzegovina,y.BotswanaPula,g.Botswana,y.BrazilReal,g.Brazil,y.BruneiDollar,g.Brunei,y.BulgariaLev,g.Bulgaria,y.BurundiFranc,g.Burundi,y.CambodiaRiel,g.Cambodia,y.CanadaDollar,g.Canada,y.CapeVerdeEscudo,g.CapeVerde,y.CaymanIslandsDollar,g.CaymanIslands,y.ChilePeso,g.Chile,y.ChinaYuan,g.China,y.ColombiaPeso,g.Colombia,y.ComorosFranc,g.Comoros,y.CostaRicaColon,g.CostaRica,y.CroatiaKuna,g.Croatia,y.CubaConvertiblePeso,g.Cuba,y.CubaPeso,g.Cuba,y.CyprusPound,g.Cyprus,y.CzechRepublicKoruna,g.CzechRepublic,y.DenmarkKrone,g.Denmark,y.DjiboutiFranc,g.Djibouti,y.DominicanRepublicPeso,g.DominicanRepublic,y.EastCaribbeanDollar,g.AntiguaAndBarbuda,g.Dominica,g.Grenada,g.SaintKittsAndNevis,g.SaintLucia,g.SaintVincentAndTheGrenadines,y.EgyptPound,g.Egypt,y.ElSalvadorColon,g.ElSalvador,y.EquatorialGuineaEkwele,g.EquatorialGuinea,y.EritreaNakfa,g.Eritrea,y.EstoniaKroon,g.Estonia,y.EthiopiaBirr,g.Ethiopia,y.Euro,g.Andorra,g.Austria,g.Belgium,g.Cyprus,g.Estonia,g.Finland,g.France,g.Germany,g.Greece,g.Ireland,g.Italy,g.Latvia,g.Lithuania,g.Luxembourg,g.Malta,g.Monaco,g.Netherlands,g.Portugal,g.Spain,g.Sweden,g.UnitedKingdom,y.FalklandIslandsPound,g.FalklandIslands,y.FijiDollar,g.Fiji,y.GambiaDalasi,g.Gambia,y.GeorgiaLari,g.Georgia,y.GhanaCedi,g.Ghana,y.GibraltarPound,g.Gibraltar,y.GuatemalaQuetzal,g.Guatemala,y.GuernseyPound,g.Guernsey,y.GuineaBissauPeso,g.GuineaBissau,y.GuyanaDollar,g.Guyana,y.HaitiGourde,g.Haiti,y.HondurasLempira,g.Honduras,y.HongKongDollar,g.HongKong,y.HungaryForint,g.Hungary,y.IcelandKrona,g.Iceland,y.IndiaRupee,g.India,g.Bhutan,y.IndonesiaRupiah,g.Indonesia,y.IranRial,g.Iran,y.IsleOfManPound,g.IsleOfMan,y.IsraelNewShekel,g.Israel,y.JamaicaDollar,g.Jamaica,y.JapanYen,g.Japan,y.JerseyPound,g.Jersey,y.JordanDinar,g.Jordan,y.KazakhstanTenge,g.Kazakhstan,y.KenyaShilling,g.Kenya,y.KuwaitDinar,g.Kuwait,y.KyrgyzstanSom,g.Kyrgyzstan,y.LaosKip,g.Laos,y.LatviaLats,g.Latvia,y.LebanonPound,g.Lebanon,y.LesothoLoti,g.Lesotho,y.LiberiaDollar,g.Liberia,y.LibyanDinar,g.Libya,y.LithuaniaLitas,g.Lithuania,y.MacauPataca,g.Macau,y.MacedoniaDenar,g.NorthMacedonia,y.MadagascarAriary,g.Madagascar,y.MalawiKwacha,g.Malawi,y.MalaysiaRinggit,g.Malaysia,y.MaldivesRufiyaa,g.Maldives,y.MaltaLira,g.Malta,y.MauritiusRupee,g.Mauritius,y.MexicoPeso,g.Mexico,y.MoldovaLeu,g.Moldova,y.MongoliaTughrik,g.Mongolia,y.MoroccoDirham,g.Morocco,y.MozambiqueMetical,g.Mozambique,y.MyanmarKyat,g.Myanmar,y.NamibiaDollar,g.Namibia,y.NepalRupee,g.Nepal,y.NetherlandsAntillesGuilder,g.NetherlandsAntilles,y.NewCaledoniaFranc,g.NewCaledonia,y.NewZealandDollar,g.NewZealand,y.NicaraguaCordoba,g.Nicaragua,y.NigerCFAFranc,g.Niger,y.NigeriaNaira,g.Nigeria,y.NorthKoreaWon,g.NorthKorea,y.NorwayKrone,g.Norway,y.OmanRial,g.Oman,y.PakistanRupee,g.Pakistan,y.PanamaBalboa,g.Panama,y.ParaguayGuarani,g.Paraguay,y.PeruNuevo,g.Peru,y.PhilippinesPeso,g.Philippines,y.PolandZloty,g.Poland,y.QatarRial,g.Qatar,y.RomaniaNewLeu,g.Romania,y.RussiaRuble,g.RussianFederation,y.RwandaFranc,g.Rwanda,y.SaudiArabiaRiyal,g.SaudiArabia,y.SerbiaDinar,g.Serbia,y.SeychellesRupee,g.Seychelles,y.SingaporeDollar,g.Singapore,y.SlovakiaKoruna,g.Slovakia,y.SloveniaTolar,g.Slovenia,y.SolomonIslandsDollar,g.SolomonIslands,y.SomaliaShilling,g.Somalia,y.SouthAfricaRand,g.SouthAfrica,y.SouthKoreaWon,g.SouthKorea,y.SriLankaRupee,g.SriLanka,y.SudanPound,g.Sudan,y.SurinameDollar,g.Suriname,y.SwazilandLilangeni,g.Swaziland,y.SwedenKrona,g.Sweden,y.SwitzerlandFranc,g.Switzerland,y.SyriaPound,g.Syria,y.TaiwanNewDollar,g.Taiwan,y.TajikistanSomoni,g.Tajikistan,y.TanzaniaShilling,g.Tanzania,y.ThailandBaht,g.Thailand,y.TunisiaDinar,g.Tunisia,y.TurkeyLira,g.Turkey,y.TurkmenistanManat,g.Turkmenistan,y.UgandaShilling,g.Uganda,y.UkraineHryvnia,g.Ukraine,y.UnitedArabEmiratesDirham,g.UnitedArabEmirates,y.UnitedKingdomPound,g.UnitedKingdom,y.UnitedStatesDollar,g.UnitedStates,y.UruguayPeso,g.Uruguay,y.UzbekistanSom,g.Uzbekistan,y.VanuatuVatu,g.Vanuatu,y.VenezuelaBolivar,g.Venezuela,y.VietnamDong,g.Vietnam,y.YemenRial,g.Yemen,y.ZambiaKwacha,g.Zambia,y.ZimbabweDollar,g.Zimbabwe;var v0;(function(a){a.Bitcoin="BTC",a.Ethereum="ETH",a.Litecoin="LTC",a.Ripple="XRP",a.Dash="DASH",a.Zcash="ZEC",a.Dogecoin="DOGE",a.Monero="XMR",a.BitcoinCash="BCH",a.EOS="EOS",a.Binance="BNB",a.Stellar="XLM",a.Cardano="ADA",a.IOTA="IOTA",a.Tezos="XTZ",a.NEO="NEO",a.TRON="TRX",a.EOSClassic="EOSC",a.Ontology="ONT",a.VeChain="VEN",a.QTUM="QTUM",a.Lisk="LSK",a.Waves="WAVES",a.OmiseGO="OMG",a.Zilliqa="ZIL",a.BitcoinGold="BTG",a.Decred="DCR",a.Stratis="STRAT",a.Populous="PPT",a.Augur="REP",a.Golem="GNT",a.Siacoin="SC",a.BasicAttentionToken="BAT",a.ZCoin="XZC",a.StratisHedged="SNT",a.VeChainHedged="VEN",a.PowerLedger="POWR",a.WavesHedged="WAVE",a.ZilliqaHedged="ZRX",a.BitcoinDiamond="BCD",a.DigiByte="DGB",a.DigiByteHedged="DGB",a.Bytecoin="BCN",a.BytecoinHedged="BCN"})(v0||(v0={}));var v;(function(a){a.Afrikaans="af",a.Albanian="sq",a.Amharic="am",a.Arabic="ar",a.Armenian="hy",a.Azerbaijani="az",a.Bashkir="ba",a.Basque="eu",a.Belarusian="be",a.Bengali="bn",a.Berber="ber",a.Bhutani="dz",a.Bihari="bh",a.Bislama="bi",a.Bosnian="bs",a.Breten="br",a.Bulgarian="bg",a.Burmese="my",a.Cantonese="yue",a.Catalan="ca",a.Chinese="zh",a.Chuvash="cv",a.Corsican="co",a.Croatian="hr",a.Czech="cs",a.Danish="da",a.Dari="prs",a.Divehi="dv",a.Dutch="nl",a.English="en",a.Esperanto="eo",a.Estonian="et",a.Faroese="fo",a.Farsi="fa",a.Filipino="fil",a.Finnish="fi",a.French="fr",a.Frisian="fy",a.Galician="gl",a.Georgian="ka",a.German="de",a.Greek="el",a.Greenlandic="kl",a.Gujarati="gu",a.Haitian="ht",a.Hausa="ha",a.Hebrew="he",a.Hindi="hi",a.Hungarian="hu",a.Icelandic="is",a.Igbo="ig",a.Indonesian="id",a.Irish="ga",a.Italian="it",a.Japanese="ja",a.Javanese="jv",a.Kannada="kn",a.Karelian="krl",a.Kazakh="kk",a.Khmer="km",a.Komi="kv",a.Konkani="kok",a.Korean="ko",a.Kurdish="ku",a.Kyrgyz="ky",a.Lao="lo",a.Latin="la",a.Latvian="lv",a.Lithuanian="lt",a.Luxembourgish="lb",a.Ossetian="os",a.Macedonian="mk",a.Malagasy="mg",a.Malay="ms",a.Malayalam="ml",a.Maltese="mt",a.Maori="mi",a.Marathi="mr",a.Mari="mhr",a.Mongolian="mn",a.Montenegrin="me",a.Nepali="ne",a.NorthernSotho="nso",a.Norwegian="no",a.NorwegianBokmal="nb",a.NorwegianNynorsk="nn",a.Oriya="or",a.Pashto="ps",a.Persian="fa",a.Polish="pl",a.Portuguese="pt",a.Punjabi="pa",a.Quechua="qu",a.Romanian="ro",a.Russian="ru",a.Sakha="sah",a.Sami="se",a.Samoan="sm",a.Sanskrit="sa",a.Scots="gd",a.Serbian="sr",a.SerbianCyrillic="sr-Cyrl",a.Sesotho="st",a.Shona="sn",a.Sindhi="sd",a.Sinhala="si",a.Slovak="sk",a.Slovenian="sl",a.Somali="so",a.Spanish="es",a.Sudanese="su",a.Sutu="sx",a.Swahili="sw",a.Swedish="sv",a.Syriac="syr",a.Tagalog="tl",a.Tajik="tg",a.Tamazight="tmh",a.Tamil="ta",a.Tatar="tt",a.Telugu="te",a.Thai="th",a.Tibetan="bo",a.Tsonga="ts",a.Tswana="tn",a.Turkish="tr",a.Turkmen="tk",a.Ukrainian="uk",a.Urdu="ur",a.Uzbek="uz",a.Vietnamese="vi",a.Welsh="cy",a.Xhosa="xh",a.Yiddish="yi",a.Yoruba="yo",a.Zulu="zu"})(v||(v={}));var u;(function(a){a.Afrikaans="af",a.AfrikaansSouthAfrica="af-ZA",a.Albanian="sq",a.AlbanianAlbania="sq-AL",a.Amharic="am",a.AmharicEthiopia="am-ET",a.Arabic="ar",a.ArabicAlgeria="ar-DZ",a.ArabicBahrain="ar-BH",a.ArabicEgypt="ar-EG",a.ArabicIraq="ar-IQ",a.ArabicJordan="ar-JO",a.ArabicKuwait="ar-KW",a.ArabicLebanon="ar-LB",a.ArabicLibya="ar-LY",a.ArabicMorocco="ar-MA",a.ArabicOman="ar-OM",a.ArabicQatar="ar-QA",a.ArabicSaudiArabia="ar-SA",a.ArabicSyria="ar-SY",a.ArabicTunisia="ar-TN",a.ArabicUnitedArabEmirates="ar-AE",a.ArabicYemen="ar-YE",a.Armenian="hy",a.ArmenianArmenia="hy-AM",a.Azerbaijani="az",a.AzerbaijaniAzerbaijan="az-AZ",a.AzerbaijaniCyrillicAzerbaijan="az-Cyrl-AZ",a.Bashkir="ba",a.Basque="eu",a.BasqueSpain="eu-ES",a.Belarusian="be",a.BelarusianBelarus="be-BY",a.Bengali="bn",a.BengaliBangladesh="bn-BD",a.BengaliIndia="bn-IN",a.Berber="ber",a.Bhutani="dz",a.BhutaniBhutan="dz-BT",a.Bosnian="bs",a.BosnianBosniaAndHerzegovina="bs-BA",a.Breton="br",a.Bulgarian="bg",a.BulgarianBosniaAndHerzegovina="bg-BG",a.BulgarianBulgaria="bg-BG",a.Burmese="my",a.BurmeseMyanmar="my-MM",a.Cantonese="yue",a.CantoneseHongKong="yue-HK",a.Catalan="ca",a.CatalanSpain="ca-ES",a.Chechen="ce",a.Cherokee="chr",a.Chinese="zh",a.ChineseSimplified="zh-Hans",a.ChineseSimplifiedChina="zh-Hans-CN",a.ChineseSimplifiedHongKong="zh-Hans-HK",a.ChineseSimplifiedMacau="zh-Hans-MO",a.ChineseSimplifiedSingapore="zh-Hans-SG",a.ChineseTraditional="zh-Hant",a.ChineseTraditionalHongKong="zh-Hant-HK",a.ChineseTraditionalMacau="zh-Hant-MO",a.ChineseTraditionalSingapore="zh-Hant-SG",a.ChineseTraditionalTaiwan="zh-Hant-TW",a.Chuvash="cv",a.CorsicanFrance="co-FR",a.Croatian="hr",a.CroatianBosniaAndHerzegovina="hr-BA",a.CroatianCroatia="hr-HR",a.Czech="cs",a.CzechCzechRepublic="cs-CZ",a.Danish="da",a.DanishDenmark="da-DK",a.Dari="prs",a.DariAfghanistan="prs-AF",a.Divehi="dv",a.DivehiMaldives="dv-MV",a.Dutch="nl",a.DutchBelgium="nl-BE",a.DutchNetherlands="nl-NL",a.English="en",a.EnglishAustralia="en-AU",a.EnglishBelgium="en-BE",a.EnglishBelize="en-BZ",a.EnglishCanada="en-CA",a.EnglishCaribbean="en-029",a.EnglishIreland="en-IE",a.EnglishJamaica="en-JM",a.EnglishNewZealand="en-NZ",a.EnglishPhilippines="en-PH",a.EnglishSingapore="en-SG",a.EnglishSouthAfrica="en-ZA",a.EnglishTrinidadAndTobago="en-TT",a.EnglishUnitedKingdom="en-GB",a.EnglishUnitedStates="en-US",a.EnglishZimbabwe="en-ZW",a.Esperanto="eo",a.Estonian="et",a.EstonianEstonia="et-EE",a.Faroese="fo",a.FaroeseFaroeIslands="fo-FO",a.Farsi="fa",a.FarsiIran="fa-IR",a.Filipino="fil",a.FilipinoPhilippines="fil-PH",a.Finnish="fi",a.FinnishFinland="fi-FI",a.French="fr",a.FrenchBelgium="fr-BE",a.FrenchCanada="fr-CA",a.FrenchFrance="fr-FR",a.FrenchLuxembourg="fr-LU",a.FrenchMonaco="fr-MC",a.FrenchReunion="fr-RE",a.FrenchSwitzerland="fr-CH",a.Frisian="fy",a.FrisianNetherlands="fy-NL",a.Galician="gl",a.GalicianSpain="gl-ES",a.Georgian="ka",a.GeorgianGeorgia="ka-GE",a.German="de",a.GermanAustria="de-AT",a.GermanBelgium="de-BE",a.GermanGermany="de-DE",a.GermanLiechtenstein="de-LI",a.GermanLuxembourg="de-LU",a.GermanSwitzerland="de-CH",a.Greenlandic="kl",a.GreenlandicGreenland="kl-GL",a.Greek="el",a.GreekGreece="el-GR",a.Gujarati="gu",a.GujaratiIndia="gu-IN",a.Haitian="ht",a.Hausa="ha",a.HausaGhana="ha-GH",a.HausaNiger="ha-NE",a.HausaNigeria="ha-NG",a.Hebrew="he",a.HebrewIsrael="he-IL",a.Hindi="hi",a.HindiIndia="hi-IN",a.Hungarian="hu",a.HungarianHungary="hu-HU",a.Icelandic="is",a.IcelandicIceland="is-IS",a.Igbo="ig",a.IgboNigeria="ig-NG",a.Indonesian="id",a.IndonesianIndonesia="id-ID",a.Irish="ga",a.IrishIreland="ga-IE",a.Italian="it",a.ItalianItaly="it-IT",a.ItalianSwitzerland="it-CH",a.Japanese="ja",a.JapaneseJapan="ja-JP",a.Javanese="jv",a.Kannada="kn",a.KannadaIndia="kn-IN",a.Karelian="krl",a.Kazakh="kk",a.KazakhKazakhstan="kk-KZ",a.Khmer="km",a.KhmerCambodia="km-KH",a.KinyarwandaRwanda="rw-RW",a.Komi="kv",a.Konkani="kok",a.KonkaniIndia="kok-IN",a.Korean="ko",a.KoreanSouthKorea="ko-KR",a.Kurdish="ku",a.KurdishIraq="ku-IQ",a.KurdishTurkey="ku-TR",a.Kyrgyz="ky",a.KyrgyzKyrgyzstan="ky-KG",a.Lao="lo",a.LaoLaos="lo-LA",a.Latin="la",a.Latvian="lv",a.LatvianLatvia="lv-LV",a.Lithuanian="lt",a.LithuanianLithuania="lt-LT",a.Luxembourgish="lb",a.LuxembourgishBelgium="lb-LU",a.LuxembourgishLuxembourg="lb-LU",a.Macedonian="mk",a.MacedonianNorthMacedonia="mk-MK",a.Malagasy="mg",a.Malay="ms",a.MalayBrunei="ms-BN",a.MalayIndia="ms-IN",a.MalayMalaysia="ms-MY",a.MalaySingapore="ms-SG",a.Malayalam="ml",a.MalayalamIndia="ml-IN",a.Maltese="mt",a.MalteseMalta="mt-MT",a.Maori="mi",a.MaoriNewZealand="mi-NZ",a.Marathi="mr",a.MarathiIndia="mr-IN",a.Mari="chm",a.Mongolian="mn",a.MongolianMongolia="mn-MN",a.Montenegrin="me",a.MontenegrinMontenegro="me-ME",a.Nepali="ne",a.NepaliNepal="ne-NP",a.NorthernSotho="ns",a.NorthernSothoSouthAfrica="ns-ZA",a.Norwegian="nb",a.NorwegianBokmalNorway="nb-NO",a.NorwegianNynorskNorway="nn-NO",a.Oriya="or",a.OriyaIndia="or-IN",a.Ossetian="os",a.Pashto="ps",a.PashtoAfghanistan="ps-AF",a.Persian="fa",a.PersianIran="fa-IR",a.Polish="pl",a.PolishPoland="pl-PL",a.Portuguese="pt",a.PortugueseBrazil="pt-BR",a.PortuguesePortugal="pt-PT",a.Punjabi="pa",a.PunjabiIndia="pa-IN",a.PunjabiPakistan="pa-PK",a.Quechua="qu",a.QuechuaBolivia="qu-BO",a.QuechuaEcuador="qu-EC",a.QuechuaPeru="qu-PE",a.Romanian="ro",a.RomanianRomania="ro-RO",a.Russian="ru",a.RussianKazakhstan="ru-KZ",a.RussianKyrgyzstan="ru-KG",a.RussianRussia="ru-RU",a.RussianUkraine="ru-UA",a.Sakha="sah",a.Sanskrit="sa",a.SanskritIndia="sa-IN",a.Sami="se",a.SamiNorway="se-NO",a.SamiSweden="se-SE",a.SamiFinland="se-FI",a.Samoan="sm",a.SamoanSamoa="sm-WS",a.Scots="gd",a.Serbian="sr",a.SerbianBosniaAndHerzegovina="sr-BA",a.SerbianSerbiaAndMontenegro="sr-SP",a.SerbianCyrillic="sr-SP-Cyrl",a.SerbianCyrillicBosniaAndHerzegovina="sr-Cyrl-BA",a.SerbianCyrillicSerbiaAndMontenegro="sr-Cyrl-SP",a.Sesotho="st",a.SesothoSouthAfrica="st-ZA",a.Shona="sn",a.ShonaZimbabwe="sn-ZW",a.Sindhi="sd",a.SindhiPakistan="sd-PK",a.Sinhala="si",a.SinhalaSriLanka="si-LK",a.Slovak="sk",a.SlovakSlovakia="sk-SK",a.Slovenian="sl",a.SlovenianSlovenia="sl-SI",a.Somali="so",a.SomaliSomalia="so-SO",a.Spanish="es",a.SpanishArgentina="es-AR",a.SpanishBolivia="es-BO",a.SpanishChile="es-CL",a.SpanishColombia="es-CO",a.SpanishCostaRica="es-CR",a.SpanishCuba="es-CU",a.SpanishDominicanRepublic="es-DO",a.SpanishEcuador="es-EC",a.SpanishEquatorialGuinea="es-GQ",a.SpanishElSalvador="es-SV",a.SpanishGuatemala="es-GT",a.SpanishHonduras="es-HN",a.SpanishMexico="es-MX",a.SpanishNicaragua="es-NI",a.SpanishPanama="es-PA",a.SpanishParaguay="es-PY",a.SpanishPeru="es-PE",a.SpanishPuertoRico="es-PR",a.SpanishSpain="es-ES",a.SpanishUnitedStates="es-US",a.SpanishUruguay="es-UY",a.SpanishVenezuela="es-VE",a.Sudanese="su",a.Sutu="st",a.SutuSouthAfrica="st-ZA",a.Swahili="sw",a.SwahiliKenya="sw-KE",a.Swedish="sv",a.SwedishFinland="sv-FI",a.SwedishSweden="sv-SE",a.Syriac="syr",a.SyriacSyria="syr-SY",a.Tajik="tg",a.TajikTajikistan="tg-TJ",a.Tagalog="tl",a.TagalogPhilippines="tl-PH",a.Tamazight="tmh",a.Tamil="ta",a.TamilIndia="ta-IN",a.Tatar="tt",a.Telugu="te",a.TeluguIndia="te-IN",a.Thai="th",a.ThaiThailand="th-TH",a.Tibetan="bo",a.TibetanBhutan="bo-BT",a.TibetanChina="bo-CN",a.TibetanIndia="bo-IN",a.Tsonga="ts",a.Tswana="tn",a.TswanaSouthAfrica="tn-ZA",a.Turkish="tr",a.TurkishTurkey="tr-TR",a.Turkmen="tk",a.Ukrainian="uk",a.UkrainianUkraine="uk-UA",a.Urdu="ur",a.UrduAfghanistan="ur-AF",a.UrduIndia="ur-IN",a.UrduPakistan="ur-PK",a.Uzbek="uz",a.UzbekCyrillic="uz-Cyrl-UZ",a.UzbekLatin="uz-Latn-UZ",a.UzbekUzbekistan="uz-UZ",a.Vietnamese="vi",a.VietnameseVietnam="vi-VN",a.Welsh="cy",a.WelshUnitedKingdom="cy-GB",a.Xhosa="xh",a.XhosaSouthAfrica="xh-ZA",a.Yiddish="yi",a.Yoruba="yo",a.YorubaNigeria="yo-NG",a.ZhuyinMandarinChina="yue-Hant-CN",a.Zulu="zu",a.ZuluSouthAfrica="zu-ZA"})(u||(u={}));var I;(function(a){a.AfricaAbidjan="Africa/Abidjan",a.AfricaAccra="Africa/Accra",a.AfricaAddisAbaba="Africa/Addis_Ababa",a.AfricaAlgiers="Africa/Algiers",a.AfricaAsmara="Africa/Asmara",a.AfricaBamako="Africa/Bamako",a.AfricaBangui="Africa/Bangui",a.AfricaBanjul="Africa/Banjul",a.AfricaBissau="Africa/Bissau",a.AfricaBlantyre="Africa/Blantyre",a.AfricaBrazzaville="Africa/Brazzaville",a.AfricaBujumbura="Africa/Bujumbura",a.AfricaCairo="Africa/Cairo",a.AfricaCasablanca="Africa/Casablanca",a.AfricaCeuta="Africa/Ceuta",a.AfricaConakry="Africa/Conakry",a.AfricaDakar="Africa/Dakar",a.AfricaDarEsSalaam="Africa/Dar_es_Salaam",a.AfricaDjibouti="Africa/Djibouti",a.AfricaDouala="Africa/Douala",a.AfricaElAaiun="Africa/El_Aaiun",a.AfricaFreetown="Africa/Freetown",a.AfricaGaborone="Africa/Gaborone",a.AfricaHarare="Africa/Harare",a.AfricaJohannesburg="Africa/Johannesburg",a.AfricaJuba="Africa/Juba",a.AfricaKampala="Africa/Kampala",a.AfricaKhartoum="Africa/Khartoum",a.AfricaKigali="Africa/Kigali",a.AfricaKinshasa="Africa/Kinshasa",a.AfricaLagos="Africa/Lagos",a.AfricaLibreville="Africa/Libreville",a.AfricaLome="Africa/Lome",a.AfricaLuanda="Africa/Luanda",a.AfricaLubumbashi="Africa/Lubumbashi",a.AfricaLusaka="Africa/Lusaka",a.AfricaMalabo="Africa/Malabo",a.AfricaMaputo="Africa/Maputo",a.AfricaMaseru="Africa/Maseru",a.AfricaMbabane="Africa/Mbabane",a.AfricaMogadishu="Africa/Mogadishu",a.AfricaMonrovia="Africa/Monrovia",a.AfricaNairobi="Africa/Nairobi",a.AfricaNdjamena="Africa/Ndjamena",a.AfricaNiamey="Africa/Niamey",a.AfricaNouakchott="Africa/Nouakchott",a.AfricaOuagadougou="Africa/Ouagadougou",a.AfricaPortoNovo="Africa/Porto-Novo",a.AfricaSaoTome="Africa/Sao_Tome",a.AfricaTripoli="Africa/Tripoli",a.AfricaTunis="Africa/Tunis",a.AfricaWindhoek="Africa/Windhoek",a.AmericaAdak="America/Adak",a.AmericaAnchorage="America/Anchorage",a.AmericaAnguilla="America/Anguilla",a.AmericaAntigua="America/Antigua",a.AmericaAraguaina="America/Araguaina",a.AmericaArgentinaBuenosAires="America/Argentina/Buenos_Aires",a.AmericaArgentinaCatamarca="America/Argentina/Catamarca",a.AmericaArgentinaCordoba="America/Argentina/Cordoba",a.AmericaArgentinaJujuy="America/Argentina/Jujuy",a.AmericaArgentinaLaRioja="America/Argentina/La_Rioja",a.AmericaArgentinaMendoza="America/Argentina/Mendoza",a.AmericaArgentinaRioGallegos="America/Argentina/Rio_Gallegos",a.AmericaArgentinaSalta="America/Argentina/Salta",a.AmericaArgentinaSanJuan="America/Argentina/San_Juan",a.AmericaArgentinaSanLuis="America/Argentina/San_Luis",a.AmericaArgentinaTucuman="America/Argentina/Tucuman",a.AmericaArgentinaUshuaia="America/Argentina/Ushuaia",a.AmericaAruba="America/Aruba",a.AmericaAsuncion="America/Asuncion",a.AmericaAtikokan="America/Atikokan",a.AmericaAtka="America/Atka",a.AmericaBahia="America/Bahia",a.AmericaBahiaBanderas="America/Bahia_Banderas",a.AmericaBarbados="America/Barbados",a.AmericaBelem="America/Belem",a.AmericaBelize="America/Belize",a.AmericaBlancSablon="America/Blanc-Sablon",a.AmericaBoaVista="America/Boa_Vista",a.AmericaBogota="America/Bogota",a.AmericaBoise="America/Boise",a.AmericaCambridgeBay="America/Cambridge_Bay",a.AmericaCampoGrande="America/Campo_Grande",a.AmericaCancun="America/Cancun",a.AmericaCaracas="America/Caracas",a.AmericaCayenne="America/Cayenne",a.AmericaCayman="America/Cayman",a.AmericaChicago="America/Chicago",a.AmericaChihuahua="America/Chihuahua",a.AmericaCoralHarbour="America/Coral_Harbour",a.AmericaCordoba="America/Cordoba",a.AmericaCostaRica="America/Costa_Rica",a.AmericaCreston="America/Creston",a.AmericaCuiaba="America/Cuiaba",a.AmericaCuracao="America/Curacao",a.AmericaDanmarkshavn="America/Danmarkshavn",a.AmericaDawson="America/Dawson",a.AmericaDawsonCreek="America/Dawson_Creek",a.AmericaDenver="America/Denver",a.AmericaDetroit="America/Detroit",a.AmericaDominica="America/Dominica",a.AmericaEdmonton="America/Edmonton",a.AmericaEirunepe="America/Eirunepe",a.AmericaElSalvador="America/El_Salvador",a.AmericaFortaleza="America/Fortaleza",a.AmericaGlaceBay="America/Glace_Bay",a.AmericaGodthab="America/Godthab",a.AmericaGooseBay="America/Goose_Bay",a.AmericaGrandTurk="America/Grand_Turk",a.AmericaGrenada="America/Grenada",a.AmericaGuadeloupe="America/Guadeloupe",a.AmericaGuatemala="America/Guatemala",a.AmericaGuayaquil="America/Guayaquil",a.AmericaGuyana="America/Guyana",a.AmericaHalifax="America/Halifax",a.AmericaHavana="America/Havana",a.AmericaHermosillo="America/Hermosillo",a.AmericaIndianaIndianapolis="America/Indiana/Indianapolis",a.AmericaIndianaKnox="America/Indiana/Knox",a.AmericaIndianaMarengo="America/Indiana/Marengo",a.AmericaIndianaPetersburg="America/Indiana/Petersburg",a.AmericaIndianaTellCity="America/Indiana/Tell_City",a.AmericaIndianaVevay="America/Indiana/Vevay",a.AmericaIndianaVincennes="America/Indiana/Vincennes",a.AmericaIndianaWinamac="America/Indiana/Winamac",a.AmericaInuvik="America/Inuvik",a.AmericaIqaluit="America/Iqaluit",a.AmericaJamaica="America/Jamaica",a.AmericaJuneau="America/Juneau",a.AmericaKentuckyLouisville="America/Kentucky/Louisville",a.AmericaKentuckyMonticello="America/Kentucky/Monticello",a.AmericaKralendijk="America/Kralendijk",a.AmericaLaPaz="America/La_Paz",a.AmericaLima="America/Lima",a.AmericaLosAngeles="America/Los_Angeles",a.AmericaLouisville="America/Louisville",a.AmericaLowerPrinces="America/Lower_Princes",a.AmericaMaceio="America/Maceio",a.AmericaManagua="America/Managua",a.AmericaManaus="America/Manaus",a.AmericaMarigot="America/Marigot",a.AmericaMartinique="America/Martinique",a.AmericaMatamoros="America/Matamoros",a.AmericaMazatlan="America/Mazatlan",a.AmericaMenominee="America/Menominee",a.AmericaMerida="America/Merida",a.AmericaMetlakatla="America/Metlakatla",a.AmericaMexicoCity="America/Mexico_City",a.AmericaMiquelon="America/Miquelon",a.AmericaMoncton="America/Moncton",a.AmericaMonterrey="America/Monterrey",a.AmericaMontevideo="America/Montevideo",a.AmericaMontserrat="America/Montserrat",a.AmericaMontreal="America/Montreal",a.AmericaNassau="America/Nassau",a.AmericaNewYork="America/New_York",a.AmericaNipigon="America/Nipigon",a.AmericaNome="America/Nome",a.AmericaNoronha="America/Noronha",a.AmericaNorthDakotaBeulah="America/North_Dakota/Beulah",a.AmericaNorthDakotaCenter="America/North_Dakota/Center",a.AmericaNorthDakotaNewSalem="America/North_Dakota/New_Salem",a.AmericaOjinaga="America/Ojinaga",a.AmericaPanama="America/Panama",a.AmericaPangnirtung="America/Pangnirtung",a.AmericaParamaribo="America/Paramaribo",a.AmericaPhoenix="America/Phoenix",a.AmericaPortAuPrince="America/Port-au-Prince",a.AmericaPortOfSpain="America/Port_of_Spain",a.AmericaPortoVelho="America/Porto_Velho",a.AmericaPuertoRico="America/Puerto_Rico",a.AmericaRainyRiver="America/Rainy_River",a.AmericaRankinInlet="America/Rankin_Inlet",a.AmericaRecife="America/Recife",a.AmericaRegina="America/Regina",a.AmericaResolute="America/Resolute",a.AmericaRioBranco="America/Rio_Branco",a.AmericaSantaIsabel="America/Santa_Isabel",a.AmericaSantarem="America/Santarem",a.AmericaSantiago="America/Santiago",a.AmericaSantoDomingo="America/Santo_Domingo",a.AmericaSaoPaulo="America/Sao_Paulo",a.AmericaScoresbysund="America/Scoresbysund",a.AmericaShiprock="America/Shiprock",a.AmericaSitka="America/Sitka",a.AmericaStBarthelemy="America/St_Barthelemy",a.AmericaStJohns="America/St_Johns",a.AmericaStKitts="America/St_Kitts",a.AmericaStLucia="America/St_Lucia",a.AmericaStThomas="America/St_Thomas",a.AmericaStVincent="America/St_Vincent",a.AmericaSwiftCurrent="America/Swift_Current",a.AmericaTegucigalpa="America/Tegucigalpa",a.AmericaThule="America/Thule",a.AmericaThunderBay="America/Thunder_Bay",a.AmericaTijuana="America/Tijuana",a.AmericaToronto="America/Toronto",a.AmericaTortola="America/Tortola",a.AmericaVancouver="America/Vancouver",a.AmericaWhitehorse="America/Whitehorse",a.AmericaWinnipeg="America/Winnipeg",a.AmericaYakutat="America/Yakutat",a.AmericaYellowknife="America/Yellowknife",a.AntarcticaCasey="Antarctica/Casey",a.AntarcticaDavis="Antarctica/Davis",a.AntarcticaDumontDUrville="Antarctica/DumontDUrville",a.AntarcticaMacquarie="Antarctica/Macquarie",a.AntarcticaMawson="Antarctica/Mawson",a.AntarcticaMcMurdo="Antarctica/McMurdo",a.AntarcticaPalmer="Antarctica/Palmer",a.AntarcticaRothera="Antarctica/Rothera",a.AntarcticaSyowa="Antarctica/Syowa",a.AntarcticaTroll="Antarctica/Troll",a.AntarcticaVostok="Antarctica/Vostok",a.ArcticLongyearbyen="Arctic/Longyearbyen",a.AsiaAden="Asia/Aden",a.AsiaAlmaty="Asia/Almaty",a.AsiaAmman="Asia/Amman",a.AsiaAnadyr="Asia/Anadyr",a.AsiaAqtau="Asia/Aqtau",a.AsiaAqtobe="Asia/Aqtobe",a.AsiaAshgabat="Asia/Ashgabat",a.AsiaBaghdad="Asia/Baghdad",a.AsiaBahrain="Asia/Bahrain",a.AsiaBaku="Asia/Baku",a.AsiaBangkok="Asia/Bangkok",a.AsiaBarnaul="Asia/Barnaul",a.AsiaBeirut="Asia/Beirut",a.AsiaBishkek="Asia/Bishkek",a.AsiaBrunei="Asia/Brunei",a.AsiaChita="Asia/Chita",a.AsiaChoibalsan="Asia/Choibalsan",a.AsiaColombo="Asia/Colombo",a.AsiaDamascus="Asia/Damascus",a.AsiaDhaka="Asia/Dhaka",a.AsiaDili="Asia/Dili",a.AsiaDubai="Asia/Dubai",a.AsiaDushanbe="Asia/Dushanbe",a.AsiaFamagusta="Asia/Famagusta",a.AsiaGaza="Asia/Gaza",a.AsiaHebron="Asia/Hebron",a.AsiaHoChiMinh="Asia/Ho_Chi_Minh",a.AsiaHongKong="Asia/Hong_Kong",a.AsiaHovd="Asia/Hovd",a.AsiaIrkutsk="Asia/Irkutsk",a.AsiaJakarta="Asia/Jakarta",a.AsiaJayapura="Asia/Jayapura",a.AsiaJerusalem="Asia/Jerusalem",a.AsiaKabul="Asia/Kabul",a.AsiaKamchatka="Asia/Kamchatka",a.AsiaKarachi="Asia/Karachi",a.AsiaKathmandu="Asia/Kathmandu",a.AsiaKhandyga="Asia/Khandyga",a.AsiaKolkata="Asia/Kolkata",a.AsiaKrasnoyarsk="Asia/Krasnoyarsk",a.AsiaKualaLumpur="Asia/Kuala_Lumpur",a.AsiaKuching="Asia/Kuching",a.AsiaKuwait="Asia/Kuwait",a.AsiaMacau="Asia/Macau",a.AsiaMagadan="Asia/Magadan",a.AsiaMakassar="Asia/Makassar",a.AsiaManila="Asia/Manila",a.AsiaMuscat="Asia/Muscat",a.AsiaNicosia="Asia/Nicosia",a.AsiaNovokuznetsk="Asia/Novokuznetsk",a.AsiaNovosibirsk="Asia/Novosibirsk",a.AsiaOmsk="Asia/Omsk",a.AsiaOral="Asia/Oral",a.AsiaPhnomPenh="Asia/Phnom_Penh",a.AsiaPontianak="Asia/Pontianak",a.AsiaPyongyang="Asia/Pyongyang",a.AsiaQatar="Asia/Qatar",a.AsiaQyzylorda="Asia/Qyzylorda",a.AsiaRangoon="Asia/Rangoon",a.AsiaRiyadh="Asia/Riyadh",a.AsiaSakhalin="Asia/Sakhalin",a.AsiaSamarkand="Asia/Samarkand",a.AsiaSeoul="Asia/Seoul",a.AsiaShanghai="Asia/Shanghai",a.AsiaSingapore="Asia/Singapore",a.AsiaSrednekolymsk="Asia/Srednekolymsk",a.AsiaTaipei="Asia/Taipei",a.AsiaTashkent="Asia/Tashkent",a.AsiaTbilisi="Asia/Tbilisi",a.AsiaTehran="Asia/Tehran",a.AsiaThimphu="Asia/Thimphu",a.AsiaTokyo="Asia/Tokyo",a.AsiaTomsk="Asia/Tomsk",a.AsiaUlaanbaatar="Asia/Ulaanbaatar",a.AsiaUrumqi="Asia/Urumqi",a.AsiaUstNera="Asia/Ust-Nera",a.AsiaVientiane="Asia/Vientiane",a.AsiaVladivostok="Asia/Vladivostok",a.AsiaYakutsk="Asia/Yakutsk",a.AsiaYekaterinburg="Asia/Yekaterinburg",a.AsiaYerevan="Asia/Yerevan",a.AtlanticAzores="Atlantic/Azores",a.AtlanticBermuda="Atlantic/Bermuda",a.AtlanticCanary="Atlantic/Canary",a.AtlanticCapeVerde="Atlantic/Cape_Verde",a.AtlanticFaroe="Atlantic/Faroe",a.AtlanticMadeira="Atlantic/Madeira",a.AtlanticReykjavik="Atlantic/Reykjavik",a.AtlanticSouthGeorgia="Atlantic/South_Georgia",a.AtlanticStHelena="Atlantic/St_Helena",a.AtlanticStanley="Atlantic/Stanley",a.AustraliaAdelaide="Australia/Adelaide",a.AustraliaBrisbane="Australia/Brisbane",a.AustraliaBrokenHill="Australia/Broken_Hill",a.AustraliaCanberra="Australia/Canberra",a.AustraliaCurrie="Australia/Currie",a.AustraliaDarwin="Australia/Darwin",a.AustraliaEucla="Australia/Eucla",a.AustraliaHobart="Australia/Hobart",a.AustraliaLindeman="Australia/Lindeman",a.AustraliaLordHowe="Australia/Lord_Howe",a.AustraliaMelbourne="Australia/Melbourne",a.AustraliaPerth="Australia/Perth",a.AustraliaSydney="Australia/Sydney",a.EuropeAmsterdam="Europe/Amsterdam",a.EuropeAndorra="Europe/Andorra",a.EuropeAthens="Europe/Athens",a.EuropeBelgrade="Europe/Belgrade",a.EuropeBerlin="Europe/Berlin",a.EuropeBratislava="Europe/Bratislava",a.EuropeBrussels="Europe/Brussels",a.EuropeBucharest="Europe/Bucharest",a.EuropeBudapest="Europe/Budapest",a.EuropeBusingen="Europe/Busingen",a.EuropeChisinau="Europe/Chisinau",a.EuropeCopenhagen="Europe/Copenhagen",a.EuropeDublin="Europe/Dublin",a.EuropeGibraltar="Europe/Gibraltar",a.EuropeGuernsey="Europe/Guernsey",a.EuropeHelsinki="Europe/Helsinki",a.EuropeIsleOfMan="Europe/Isle_of_Man",a.EuropeIstanbul="Europe/Istanbul",a.EuropeJersey="Europe/Jersey",a.EuropeKaliningrad="Europe/Kaliningrad",a.EuropeKiev="Europe/Kiev",a.EuropeKirov="Europe/Kirov",a.EuropeLisbon="Europe/Lisbon",a.EuropeLjubljana="Europe/Ljubljana",a.EuropeLondon="Europe/London",a.EuropeLuxembourg="Europe/Luxembourg",a.EuropeMadrid="Europe/Madrid",a.EuropeMalta="Europe/Malta",a.EuropeMariehamn="Europe/Mariehamn",a.EuropeMinsk="Europe/Minsk",a.EuropeMonaco="Europe/Monaco",a.EuropeMoscow="Europe/Moscow",a.EuropeOslo="Europe/Oslo",a.EuropeParis="Europe/Paris",a.EuropePodgorica="Europe/Podgorica",a.EuropePrague="Europe/Prague",a.EuropeRiga="Europe/Riga",a.EuropeRome="Europe/Rome",a.EuropeSamara="Europe/Samara",a.EuropeSanMarino="Europe/San_Marino",a.EuropeSarajevo="Europe/Sarajevo",a.EuropeSimferopol="Europe/Simferopol",a.EuropeSkopje="Europe/Skopje",a.EuropeSofia="Europe/Sofia",a.EuropeStockholm="Europe/Stockholm",a.EuropeTallinn="Europe/Tallinn",a.EuropeTirane="Europe/Tirane",a.EuropeUzhgorod="Europe/Uzhgorod",a.EuropeVaduz="Europe/Vaduz",a.EuropeVatican="Europe/Vatican",a.EuropeVienna="Europe/Vienna",a.EuropeVilnius="Europe/Vilnius",a.EuropeVolgograd="Europe/Volgograd",a.EuropeWarsaw="Europe/Warsaw",a.EuropeZagreb="Europe/Zagreb",a.EuropeZaporozhye="Europe/Zaporozhye",a.EuropeZurich="Europe/Zurich",a.GMT="GMT",a.IndianAntananarivo="Indian/Antananarivo",a.IndianChagos="Indian/Chagos",a.IndianChristmas="Indian/Christmas",a.IndianCocos="Indian/Cocos",a.IndianComoro="Indian/Comoro",a.IndianKerguelen="Indian/Kerguelen",a.IndianMahe="Indian/Mahe",a.IndianMaldives="Indian/Maldives",a.IndianMauritius="Indian/Mauritius",a.IndianMayotte="Indian/Mayotte",a.IndianReunion="Indian/Reunion",a.PacificApia="Pacific/Apia",a.PacificAuckland="Pacific/Auckland",a.PacificBougainville="Pacific/Bougainville",a.PacificChatham="Pacific/Chatham",a.PacificChuuk="Pacific/Chuuk",a.PacificEaster="Pacific/Easter",a.PacificEfate="Pacific/Efate",a.PacificEnderbury="Pacific/Enderbury",a.PacificFakaofo="Pacific/Fakaofo",a.PacificFiji="Pacific/Fiji",a.PacificFunafuti="Pacific/Funafuti",a.PacificGalapagos="Pacific/Galapagos",a.PacificGambier="Pacific/Gambier",a.PacificGuadalcanal="Pacific/Guadalcanal",a.PacificGuam="Pacific/Guam",a.PacificHonolulu="Pacific/Honolulu",a.PacificJohnston="Pacific/Johnston",a.PacificKiritimati="Pacific/Kiritimati",a.PacificKosrae="Pacific/Kosrae",a.PacificKwajalein="Pacific/Kwajalein",a.PacificMajuro="Pacific/Majuro",a.PacificMarquesas="Pacific/Marquesas",a.PacificMidway="Pacific/Midway",a.PacificNauru="Pacific/Nauru",a.PacificNiue="Pacific/Niue",a.PacificNorfolk="Pacific/Norfolk",a.PacificNoumea="Pacific/Noumea",a.PacificPagoPago="Pacific/Pago_Pago",a.PacificPalau="Pacific/Palau",a.PacificPitcairn="Pacific/Pitcairn",a.PacificPohnpei="Pacific/Pohnpei",a.PacificPonape="Pacific/Ponape",a.PacificPortMoresby="Pacific/Port_Moresby",a.PacificRarotonga="Pacific/Rarotonga",a.PacificSaipan="Pacific/Saipan",a.PacificSamoa="Pacific/Samoa",a.PacificTahiti="Pacific/Tahiti",a.PacificTarawa="Pacific/Tarawa",a.PacificTongatapu="Pacific/Tongatapu",a.PacificTruk="Pacific/Truk",a.PacificWake="Pacific/Wake",a.PacificWallis="Pacific/Wallis",a.PacificYap="Pacific/Yap"})(I||(I={}));var o;(function(a){a.UTC_MINUS_12="UTC-12",a.UTC_MINUS_11_30="UTC-11:30",a.UTC_MINUS_11="UTC-11",a.UTC_MINUS_10_30="UTC-10:30",a.UTC_MINUS_10="UTC-10",a.UTC_MINUS_9_30="UTC-9:30",a.UTC_MINUS_9="UTC-09",a.UTC_MINUS_8_45="UTC-8:45",a.UTC_MINUS_8="UTC-08",a.UTC_MINUS_7="UTC-07",a.UTC_MINUS_6_30="UTC-6:30",a.UTC_MINUS_6="UTC-06",a.UTC_MINUS_5_45="UTC-5:45",a.UTC_MINUS_5_30="UTC-5:30",a.UTC_MINUS_5="UTC-05",a.UTC_MINUS_4_30="UTC-4:30",a.UTC_MINUS_4="UTC-04",a.UTC_MINUS_3_30="UTC-3:30",a.UTC_MINUS_3="UTC-03",a.UTC_MINUS_2_30="UTC-2:30",a.UTC_MINUS_2="UTC-02",a.UTC_MINUS_1="UTC-01",a.UTC_0="UTC+00",a.UTC_PLUS_1="UTC+01",a.UTC_PLUS_2="UTC+02",a.UTC_PLUS_3="UTC+03",a.UTC_PLUS_3_30="UTC+3:30",a.UTC_PLUS_4="UTC+04",a.UTC_PLUS_4_30="UTC+4:30",a.UTC_PLUS_5="UTC+05",a.UTC_PLUS_5_30="UTC+5:30",a.UTC_PLUS_5_45="UTC+5:45",a.UTC_PLUS_6="UTC+06",a.UTC_PLUS_6_30="UTC+6:30",a.UTC_PLUS_7="UTC+07",a.UTC_PLUS_8="UTC+08",a.UTC_PLUS_8_45="UTC+8:45",a.UTC_PLUS_9="UTC+09",a.UTC_PLUS_9_30="UTC+9:30",a.UTC_PLUS_10="UTC+10",a.UTC_PLUS_10_30="UTC+10:30",a.UTC_PLUS_11="UTC+11",a.UTC_PLUS_11_30="UTC+11:30",a.UTC_PLUS_12="UTC+12",a.UTC_PLUS_12_45="UTC+12:45",a.UTC_PLUS_13="UTC+13",a.UTC_PLUS_13_45="UTC+13:45",a.UTC_PLUS_14="UTC+14"})(o||(o={}));var A;(function(a){a.AcreTime="ACT",a.AfghanistanTime="AFT",a.AIXCentralEuropeanTime="DFT",a.AlaskaDaylightTime="AKDT",a.AlaskaStandardTime="AKST",a.AlmaAtaTime="ALMT",a.AmazonSummerTime="AMST",a.AmazonTime="AMT",a.AnadyrTime="ANAT",a.AqtobeTime="AQTT",a.ArabiaStandardTime="AST",a.ArgentinaTime="ART",a.ArmeniaTime="AMT",a.ASEANCommonTime="ASEAN",a.AtlanticDaylightTime="ADT",a.AtlanticStandardTime="AST",a.AustralianCentralDaylightSavingTime="ACDT",a.AustralianCentralStandardTime="ACST",a.AustralianCentralWesternStandardTime="ACWST",a.AustralianEasternDaylightSavingTime="AEDT",a.AustralianEasternStandardTime="AEST",a.AustralianEasternTime="AET",a.AustralianWesternStandardTime="AWST",a.AzerbaijanTime="AZT",a.AzoresStandardTime="AZOT",a.AzoresSummerTime="AZOST",a.BakerIslandTime="BIT",a.BangladeshStandardTime="BST",a.BhutanTime="BTT",a.BoliviaTime="BOT",a.BougainvilleStandardTime="BST",a.BrasiliaSummerTime="BRST",a.BrasiliaTime="BRT",a.BritishIndianOceanTime="BIOT",a.BritishSummerTime="BST",a.BruneiTime="BNT",a.CapeVerdeTime="CVT",a.CentralAfricaTime="CAT",a.CentralDaylightTime="CDT",a.CentralEuropeanSummerTime="CEST",a.CentralEuropeanTime="CET",a.CentralIndonesiaTime="WITA",a.CentralStandardTime="CST",a.CentralTime="CT",a.CentralWesternStandardTime="CWST",a.ChamorroStandardTime="CHST",a.ChathamDaylightTime="CHADT",a.ChathamStandardTime="CHAST",a.ChileStandardTime="CLT",a.ChileSummerTime="CLST",a.ChinaStandardTime="CST",a.ChoibalsanStandardTime="CHOT",a.ChoibalsanSummerTime="CHOST",a.ChristmasIslandTime="CXT",a.ChuukTime="CHUT",a.ClipptertonIslandStandardTime="CIST",a.CocosIslandsTime="CCT",a.ColombiaSummerTime="COST",a.ColombiaTime="COT",a.CookIslandTime="CKT",a.CoordinatedUniversalTime="UTC",a.CubaDaylightTime="CDT",a.CubaStandardTime="CST",a.DavisTime="DAVT",a.DumontDUrvilleTime="DDUT",a.EastAfricaTime="EAT",a.EasterIslandStandardTime="EAST",a.EasterIslandSummerTime="EASST",a.EasternCaribbeanTime="ECT",a.EasternDaylightTime="EDT",a.EasternEuropeanSummerTime="EEST",a.EasternEuropeanTime="EET",a.EasternGreenlandSummerTime="EGST",a.EasternGreenlandTime="EGT",a.EasternIndonesianTime="WIT",a.EasternStandardTime="EST",a.EasternTime="ET",a.EcuadorTime="ECT",a.FalklandIslandsSummerTime="FKST",a.FalklandIslandsTime="FKT",a.FernandoDeNoronhaTime="FNT",a.FijiTime="FJT",a.FrenchGuianaTime="GFT",a.FrenchSouthernAndAntarcticTime="TFT",a.FurtherEasternEuropeanTime="FET",a.GalapagosTime="GALT",a.GambierIslandTime="GIT",a.GambierIslandsTime="GAMT",a.GeorgiaStandardTime="GET",a.GilbertIslandTime="GILT",a.GreenwichMeanTime="GMT",a.GulfStandardTime="GST",a.GuyanaTime="GYT",a.HawaiiAleutianDaylightTime="HDT",a.HawaiiAleutianStandardTime="HST",a.HeardAndMcDonaldIslandsTime="HMT",a.HeureAvanceeDEuropeCentraleTime="HAEC",a.HongKongTime="HKT",a.HovdSummerTime="HOVST",a.HovdTime="HOVT",a.IndianOceanTime="IOT",a.IndianStandardTime="IST",a.IndochinaTime="ICT",a.InternationalDayLineWestTime="IDLW",a.IranDaylightTime="IRDT",a.IranStandardTime="IRST",a.IrishStandardTime="IST",a.IrkutskSummerTime="IRKST",a.IrkutskTime="IRKT",a.IsraelDaylightTime="IDT",a.IsraelStandardTime="IST",a.JapanStandardTime="JST",a.KaliningradTime="KALT",a.KamchatkaTime="KAMT",a.KoreaStandardTime="KST",a.KosraeTime="KOST",a.KrasnoyarskSummerTime="KRAST",a.KrasnoyarskTime="KRAT",a.KyrgyzstanTime="KGT",a.LineIslandsTime="LINT",a.KazakhstanStandardTime="KAST",a.LordHoweStandardTime="LHST",a.LordHoweSummerTime="LHST",a.MacquarieIslandStationTime="MIST",a.MagadanTime="MAGT",a.MalaysiaStandardTime="MST",a.MalaysiaTime="MYT",a.MaldivesTime="MVT",a.MarquesasIslandsTime="MART",a.MarshallIslandsTime="MHT",a.MauritiusTime="MUT",a.MawsonStationTime="MAWT",a.MiddleEuropeanSummerTime="MEDT",a.MiddleEuropeanTime="MET",a.MoscowTime="MSK",a.MountainDaylightTime="MDT",a.MountainStandardTime="MST",a.MyanmarStandardTime="MMT",a.NepalTime="NCT",a.NauruTime="NRT",a.NewCaledoniaTime="NCT",a.NewZealandDaylightTime="NZDT",a.NewZealandStandardTime="NZST",a.NewfoundlandDaylightTime="NDT",a.NewfoundlandStandardTime="NST",a.NewfoundlandTime="NT",a.NiueTime="NUT",a.NorfolkIslandTime="NFT",a.NovosibirskTime="NOVT",a.OmskTime="OMST",a.OralTime="ORAT",a.PacificDaylightTime="PDT",a.PacificStandardTime="PST",a.PakistanStandardTime="PKT",a.PalauTime="PWT",a.PapuaNewGuineaTime="PGT",a.ParaguaySummerTime="PYST",a.ParaguayTime="PYT",a.PeruTime="PET",a.PhilippineStandardTime="PHST",a.PhilippineTime="PHT",a.PhoenixIslandTime="PHOT",a.PitcairnTime="PST",a.PohnpeiStandardTime="PONT",a.ReunionTime="RET",a.RotheraResearchStationTime="ROTT",a.SaintPierreAndMiquelonDaylightTime="PMDT",a.SaintPierreAndMiquelonStandardTime="PMST",a.SakhalinIslandTime="SAKT",a.SamaraTime="SAMT",a.SamoaDaylightTime="SDT",a.SamoaStandardTime="SST",a.SeychellesTime="SCT",a.ShowaStationTime="SYOT",a.SingaporeStandardTime="SST",a.SingaporeTime="SGT",a.SolomonIslandsTime="SBT",a.SouthAfricanStandardTime="SAST",a.SouthGeorgiaAndTheSouthSandwichIslandsTime="GST",a.SrednekolymskTime="SRET",a.SriLankaStandardTime="SLST",a.SurinameTime="SRT",a.TahitiTime="TAHT",a.TajikistanTime="TJT",a.ThailandStandardTime="THA",a.TimorLesteTime="TLT",a.TokelauTime="TKT",a.TongaTime="TOT",a.TurkeyTime="TRT",a.TurkmenistanTime="TMT",a.TuvaluTime="TVT",a.UlaanbaatarStandardTime="ULAT",a.UlaanbaatarSummerTime="ULAST",a.UruguayStandardTime="UYT",a.UruguaySummerTime="UYST",a.UzbekistanTime="UZT",a.VanuatuTime="VUT",a.VenezuelaStandardTime="VET",a.VladivostokTime="VLAT",a.VolgogradTime="VOLT",a.VostokStationTime="VOST",a.WakeIslandTime="WAKT",a.WestAfricaSummerTime="WAST",a.WestAfricaTime="WAT",a.WestGreenlandSummerTime="WGST",a.WestGreenlandTime="WGT",a.WestKazakhstanTime="WKT",a.WesternEuropeanSummerTime="WEDT",a.WesternEuropeanTime="WET",a.WesternIndonesianTime="WIT",a.WesternStandardTime="WST",a.YakutskTime="YAKT",a.YekaterinburgTime="YEKT"})(A||(A={}));A.AcreTime,o.UTC_MINUS_5;A.AfghanistanTime,o.UTC_PLUS_4_30;A.AIXCentralEuropeanTime,o.UTC_PLUS_1;A.AlaskaDaylightTime,o.UTC_MINUS_8;A.AlaskaStandardTime,o.UTC_MINUS_9;A.AlmaAtaTime,o.UTC_PLUS_6;A.AmazonSummerTime,o.UTC_MINUS_3;A.AmazonTime,o.UTC_MINUS_4;A.AnadyrTime,o.UTC_PLUS_12;A.AqtobeTime,o.UTC_PLUS_5;A.ArabiaStandardTime,o.UTC_PLUS_3;A.ArgentinaTime,o.UTC_MINUS_3;A.ArmeniaTime,o.UTC_PLUS_4;A.AtlanticDaylightTime,o.UTC_MINUS_3;A.AtlanticStandardTime,o.UTC_MINUS_4;A.AustralianCentralDaylightSavingTime,o.UTC_PLUS_10_30;A.AustralianCentralStandardTime,o.UTC_PLUS_9_30;A.AustralianCentralWesternStandardTime,o.UTC_PLUS_8_45;A.AustralianEasternDaylightSavingTime,o.UTC_PLUS_11;A.AustralianEasternStandardTime,o.UTC_PLUS_10;A.AustralianEasternTime,o.UTC_PLUS_10;A.AustralianWesternStandardTime,o.UTC_PLUS_8;A.AzerbaijanTime,o.UTC_PLUS_4;A.AzoresStandardTime,o.UTC_MINUS_1;A.AzoresSummerTime,o.UTC_0;A.BakerIslandTime,o.UTC_MINUS_12;A.BangladeshStandardTime,o.UTC_PLUS_6;A.BhutanTime,o.UTC_PLUS_6;A.BoliviaTime,o.UTC_MINUS_4;A.BougainvilleStandardTime,o.UTC_PLUS_11;A.BrasiliaSummerTime,o.UTC_MINUS_2;A.BrasiliaTime,o.UTC_MINUS_3;A.BritishIndianOceanTime,o.UTC_PLUS_6;A.BritishSummerTime,o.UTC_PLUS_1;A.BruneiTime,o.UTC_PLUS_8;A.CapeVerdeTime,o.UTC_MINUS_1;A.CentralAfricaTime,o.UTC_PLUS_2;A.CentralDaylightTime,o.UTC_MINUS_5;A.CentralEuropeanSummerTime,o.UTC_PLUS_2;A.CentralEuropeanTime,o.UTC_PLUS_1;A.CentralIndonesiaTime,o.UTC_PLUS_8;A.CentralStandardTime,o.UTC_MINUS_6;A.CentralTime,o.UTC_MINUS_5;A.CentralWesternStandardTime,o.UTC_PLUS_8_45;A.ChamorroStandardTime,o.UTC_PLUS_10;A.ChathamDaylightTime,o.UTC_PLUS_13_45;A.ChathamStandardTime,o.UTC_PLUS_12_45;A.ChileStandardTime,o.UTC_MINUS_4;A.ChileSummerTime,o.UTC_MINUS_3;A.ChinaStandardTime,o.UTC_PLUS_8;A.ChoibalsanStandardTime,o.UTC_PLUS_8;A.ChoibalsanSummerTime,o.UTC_PLUS_9;A.ChristmasIslandTime,o.UTC_PLUS_7;A.ChuukTime,o.UTC_PLUS_10;A.ClipptertonIslandStandardTime,o.UTC_MINUS_8;A.CocosIslandsTime,o.UTC_PLUS_6_30;A.ColombiaSummerTime,o.UTC_MINUS_4;A.ColombiaTime,o.UTC_MINUS_5;A.CookIslandTime,o.UTC_MINUS_10;A.CoordinatedUniversalTime,o.UTC_0;A.CubaDaylightTime,o.UTC_MINUS_4;A.CubaStandardTime,o.UTC_MINUS_5;A.DavisTime,o.UTC_PLUS_7;A.DumontDUrvilleTime,o.UTC_PLUS_10;A.EastAfricaTime,o.UTC_PLUS_3;A.EasterIslandStandardTime,o.UTC_MINUS_6;A.EasterIslandSummerTime,o.UTC_MINUS_5;A.EasternCaribbeanTime,o.UTC_MINUS_4;A.EasternDaylightTime,o.UTC_MINUS_4;A.EasternEuropeanSummerTime,o.UTC_PLUS_3;A.EasternEuropeanTime,o.UTC_PLUS_2;A.EasternGreenlandSummerTime,o.UTC_0;A.EasternGreenlandTime,o.UTC_MINUS_1;A.EasternIndonesianTime,o.UTC_PLUS_9;A.EasternStandardTime,o.UTC_MINUS_5;A.EasternTime,o.UTC_MINUS_5;A.EcuadorTime,o.UTC_MINUS_5;A.FalklandIslandsSummerTime,o.UTC_MINUS_3;A.FalklandIslandsTime,o.UTC_MINUS_4;A.FernandoDeNoronhaTime,o.UTC_MINUS_2;A.FijiTime,o.UTC_PLUS_12;A.FrenchGuianaTime,o.UTC_MINUS_3;A.FrenchSouthernAndAntarcticTime,o.UTC_PLUS_5;A.FurtherEasternEuropeanTime,o.UTC_PLUS_3;A.GalapagosTime,o.UTC_MINUS_6;A.GambierIslandTime,o.UTC_MINUS_9;A.GambierIslandsTime,o.UTC_MINUS_9;A.GeorgiaStandardTime,o.UTC_PLUS_4;A.GilbertIslandTime,o.UTC_PLUS_12;A.GreenwichMeanTime,o.UTC_0;A.GulfStandardTime,o.UTC_PLUS_4;A.GuyanaTime,o.UTC_MINUS_4;A.HawaiiAleutianDaylightTime,o.UTC_MINUS_9;A.HawaiiAleutianStandardTime,o.UTC_MINUS_10;A.HeardAndMcDonaldIslandsTime,o.UTC_PLUS_5;A.HongKongTime,o.UTC_PLUS_8;A.HovdSummerTime,o.UTC_PLUS_8;A.HovdTime,o.UTC_PLUS_7;A.IndianOceanTime,o.UTC_PLUS_3;A.IndianStandardTime,o.UTC_PLUS_5_30;A.IndochinaTime,o.UTC_PLUS_7;A.InternationalDayLineWestTime,o.UTC_MINUS_12;A.IranDaylightTime,o.UTC_PLUS_4_30;A.IranStandardTime,o.UTC_PLUS_3_30;A.IrishStandardTime,o.UTC_PLUS_1;A.IrkutskTime,o.UTC_PLUS_8;A.IsraelDaylightTime,o.UTC_PLUS_3;A.IsraelStandardTime,o.UTC_PLUS_2;A.JapanStandardTime,o.UTC_PLUS_9;A.KaliningradTime,o.UTC_PLUS_2;A.KamchatkaTime,o.UTC_PLUS_12;A.KoreaStandardTime,o.UTC_PLUS_9;A.KosraeTime,o.UTC_PLUS_11;A.KrasnoyarskTime,o.UTC_PLUS_7;A.KyrgyzstanTime,o.UTC_PLUS_6;A.LineIslandsTime,o.UTC_PLUS_14;A.LordHoweStandardTime,o.UTC_PLUS_10_30;A.LordHoweSummerTime,o.UTC_PLUS_11;A.MacquarieIslandStationTime,o.UTC_PLUS_11;A.MagadanTime,o.UTC_PLUS_12;A.MalaysiaStandardTime,o.UTC_PLUS_8;A.MalaysiaTime,o.UTC_PLUS_8;A.MaldivesTime,o.UTC_PLUS_5;A.MarquesasIslandsTime,o.UTC_PLUS_9_30;A.MarshallIslandsTime,o.UTC_PLUS_12;A.MauritiusTime,o.UTC_PLUS_4;A.MawsonStationTime,o.UTC_PLUS_5;A.MiddleEuropeanSummerTime,o.UTC_PLUS_2;A.MiddleEuropeanTime,o.UTC_PLUS_1;A.MoscowTime,o.UTC_PLUS_3;A.MountainDaylightTime,o.UTC_MINUS_6;A.MountainStandardTime,o.UTC_MINUS_7;A.MyanmarStandardTime,o.UTC_PLUS_6_30;A.NepalTime,o.UTC_PLUS_5_45;A.NauruTime,o.UTC_PLUS_12;A.NewCaledoniaTime,o.UTC_PLUS_11;A.NewZealandDaylightTime,o.UTC_PLUS_13;A.NewZealandStandardTime,o.UTC_PLUS_12;A.NewfoundlandDaylightTime,o.UTC_MINUS_2_30;A.NewfoundlandTime,o.UTC_MINUS_3_30;A.NiueTime,o.UTC_MINUS_11;A.NorfolkIslandTime,o.UTC_PLUS_11;A.NovosibirskTime,o.UTC_PLUS_7;A.OmskTime,o.UTC_PLUS_6;A.OralTime,o.UTC_PLUS_5;A.PacificDaylightTime,o.UTC_MINUS_7;A.PacificStandardTime,o.UTC_MINUS_8;A.PakistanStandardTime,o.UTC_PLUS_5;A.PalauTime,o.UTC_PLUS_9;A.PapuaNewGuineaTime,o.UTC_PLUS_10;A.ParaguaySummerTime,o.UTC_MINUS_3;A.ParaguayTime,o.UTC_MINUS_4;A.PeruTime,o.UTC_MINUS_5;A.PhilippineStandardTime,o.UTC_PLUS_8;A.PhilippineTime,o.UTC_PLUS_8;A.PhoenixIslandTime,o.UTC_PLUS_13;A.PitcairnTime,o.UTC_MINUS_8;A.PohnpeiStandardTime,o.UTC_PLUS_11;A.ReunionTime,o.UTC_PLUS_4;A.RotheraResearchStationTime,o.UTC_MINUS_3;A.SaintPierreAndMiquelonDaylightTime,o.UTC_MINUS_2;A.SaintPierreAndMiquelonStandardTime,o.UTC_MINUS_3;A.SakhalinIslandTime,o.UTC_PLUS_11;A.SamaraTime,o.UTC_PLUS_4;A.SamoaDaylightTime,o.UTC_MINUS_10;A.SamoaStandardTime,o.UTC_MINUS_11;A.SeychellesTime,o.UTC_PLUS_4;A.ShowaStationTime,o.UTC_PLUS_3;A.SingaporeStandardTime,o.UTC_PLUS_8;A.SingaporeTime,o.UTC_PLUS_8;A.SolomonIslandsTime,o.UTC_PLUS_11;A.SouthAfricanStandardTime,o.UTC_PLUS_2;A.SouthGeorgiaAndTheSouthSandwichIslandsTime,o.UTC_MINUS_2;A.SrednekolymskTime,o.UTC_PLUS_11;A.SriLankaStandardTime,o.UTC_PLUS_5_30;A.SurinameTime,o.UTC_MINUS_3;A.TahitiTime,o.UTC_MINUS_10;A.TajikistanTime,o.UTC_PLUS_5;A.ThailandStandardTime,o.UTC_PLUS_7;A.TimorLesteTime,o.UTC_PLUS_9;A.TokelauTime,o.UTC_PLUS_13;A.TongaTime,o.UTC_PLUS_13;A.TurkeyTime,o.UTC_PLUS_3;A.TurkmenistanTime,o.UTC_PLUS_5;A.TuvaluTime,o.UTC_PLUS_12;A.UlaanbaatarStandardTime,o.UTC_PLUS_8;A.UlaanbaatarSummerTime,o.UTC_PLUS_9;A.UruguayStandardTime,o.UTC_MINUS_3;A.UruguaySummerTime,o.UTC_MINUS_2;A.UzbekistanTime,o.UTC_PLUS_5;A.VanuatuTime,o.UTC_PLUS_11;A.VenezuelaStandardTime,o.UTC_MINUS_4;A.VladivostokTime,o.UTC_PLUS_10;A.VolgogradTime,o.UTC_PLUS_4;A.VostokStationTime,o.UTC_PLUS_6;A.WakeIslandTime,o.UTC_PLUS_12;A.WestAfricaSummerTime,o.UTC_PLUS_2;A.WestAfricaTime,o.UTC_PLUS_1;A.WestGreenlandSummerTime,o.UTC_MINUS_2;A.WestGreenlandTime,o.UTC_MINUS_3;A.WestKazakhstanTime,o.UTC_PLUS_5;A.WesternEuropeanSummerTime,o.UTC_PLUS_1;A.WesternEuropeanTime,o.UTC_0;A.WesternIndonesianTime,o.UTC_PLUS_7;A.WesternStandardTime,o.UTC_PLUS_8;A.YakutskTime,o.UTC_PLUS_9;A.YekaterinburgTime,o.UTC_PLUS_5;var $a;(function(a){a.Africa="Africa",a.Americas="Americas",a.Asia="Asia",a.Europe="Europe",a.Oceania="Oceania",a.Polar="Polar"})($a||($a={}));var Qa;(function(a){a.CentralAmerica="Central America",a.EasternAsia="Eastern Asia",a.EasternEurope="Eastern Europe",a.EasternAfrica="Eastern Africa",a.MiddleAfrica="Middle Africa",a.MiddleEast="Middle East",a.NorthernAfrica="Northern Africa",a.NorthernAmerica="Northern America",a.NorthernEurope="Northern Europe",a.Polynesia="Polynesia",a.SouthAmerica="South America",a.SouthernAfrica="Southern Africa",a.SouthernAsia="Southern Asia",a.SouthernEurope="Southern Europe",a.WesternAfrica="Western Africa",a.WesternAsia="Western Asia",a.WesternEurope="Western Europe",a.WesternAustralia="Western Australia"})(Qa||(Qa={}));y.AfghanistanAfghani,u.Pashto,u.Dari,u.Turkmen,u.Uzbek,o.UTC_PLUS_4_30,I.AsiaKabul,A.AfghanistanTime,g.Afghanistan,g.Afghanistan,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greenlandic+"",u.Greek+"",u.Gujarati+"",u.Haitian+"",u.Hausa+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Polish+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tatar+"",u.Tamil+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Welsh+"",u.Xhosa+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"",$a.Asia,Qa.SouthernAsia,y.AlbaniaLek,u.Albanian,u.Greek,u.Turkish,o.UTC_PLUS_1,I.EuropeBrussels,A.CentralEuropeanTime,g.Albania,g.Albania,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greenlandic+"",u.Greek+"",u.Gujarati+"",u.Haitian+"",u.Hausa+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tamil+"",u.Tatar+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Welsh+"",u.Xhosa+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"",$a.Europe,Qa.SouthernEurope,y.AlgeriaDinar,u.Arabic,u.French,u.Berber,u.Tamazight,o.UTC_PLUS_1,o.UTC_PLUS_2,I.AfricaAlgiers,A.CentralEuropeanTime,g.Algeria,g.Algeria,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greenlandic+"",u.Greek+"",u.Gujarati+"",u.Haitian+"",u.Hausa+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tamil+"",u.Tatar+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Welsh+"",u.Xhosa+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"",$a.Africa,Qa.NorthernAfrica,y.AmericanSamoaTala,u.English,u.Samoan,o.UTC_MINUS_11,I.PacificSamoa,A.SamoaStandardTime,g.AmericanSamoa,g.AmericanSamoa,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greenlandic+"",u.Greek+"",u.Gujarati+"",u.Haitian+"",u.Hausa+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tamil+"",u.Tatar+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Welsh+"",u.Xhosa+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"",$a.Oceania,Qa.Polynesia,y.Euro,u.Catalan,u.Spanish,o.UTC_PLUS_1,o.UTC_PLUS_2,I.EuropeAndorra,A.CentralEuropeanTime,g.Andorra,g.Andorra,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greek+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tamil+"",u.Tatar+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Welsh+"",u.Xhosa+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"",$a.Europe,Qa.SouthernEurope,y.AngolaKwanza,u.Portuguese,u.Spanish,u.French,u.Italian,u.German,u.English,o.UTC_0,o.UTC_PLUS_1,o.UTC_PLUS_2,I.AfricaLuanda,A.WestAfricaTime,g.Angola,g.Angola,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greenlandic+"",u.Greek+"",u.Gujarati+"",u.Haitian+"",u.Hausa+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tamil+"",u.Tatar+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Xhosa+"",u.Welsh+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"",y.DominicaDollar,y.EastCaribbeanDollar,y.Euro,y.UnitedStatesDollar,y.BritishPound,u.English,u.Spanish,o.UTC_MINUS_4,I.AmericaAnguilla,A.AtlanticStandardTime,g.Anguilla,g.Anguilla,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greenlandic+"",u.Greek+"",u.Gujarati+"",u.Haitian+"",u.Hausa+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tamil+"",u.Tatar+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Welsh+"",u.Xhosa+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"",y.UnitedStatesDollar,y.Euro,u.English,u.Spanish,u.French,u.Portuguese,u.Italian,u.Dutch,u.German,u.Swedish,u.Norwegian,u.Danish,u.Finnish,o.UTC_PLUS_1,o.UTC_PLUS_2,I.AntarcticaCasey,I.AntarcticaDavis,I.AntarcticaMcMurdo,I.AntarcticaPalmer,I.AntarcticaRothera,A.AtlanticStandardTime,A.CentralTime,A.EasternTime,A.AtlanticStandardTime,A.AzoresStandardTime,A.NewfoundlandStandardTime,g.Antarctica,g.Antarctica,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greenlandic+"",u.Greek+"",u.Gujarati+"",u.Haitian+"",u.Hausa+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tamil+"",u.Tatar+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Welsh+"",u.Xhosa+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"",y.ArmeniaDram,u.Armenian,o.UTC_PLUS_4,I.AsiaJakarta,A.ArmeniaTime,g.Armenia,g.Armenia,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greenlandic+"",u.Greek+"",u.Gujarati+"",u.Haitian+"",u.Hausa+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tamil+"",u.Tatar+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Welsh+"",u.Xhosa+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"",g.AmericanSamoa,g.AmericanSamoa,u.Afrikaans+"",u.Albanian+"",u.Amharic+"",u.Arabic+"",u.Armenian+"",u.Azerbaijani+"",u.Bashkir+"",u.Basque+"",u.Belarusian+"",u.Bengali+"",u.Berber+"",u.Bhutani+"",u.Bosnian+"",u.Breton+"",u.Bulgarian+"",u.Burmese+"",u.Catalan+"",u.Chinese+"",u.Croatian+"",u.Czech+"",u.Danish+"",u.Dutch+"",u.English+"",u.Esperanto+"",u.Estonian+"",u.Finnish+"",u.French+"",u.Frisian+"",u.Galician+"",u.Georgian+"",u.German+"",u.Greenlandic+"",u.Greek+"",u.Gujarati+"",u.Haitian+"",u.Hausa+"",u.Hebrew+"",u.Hindi+"",u.Hungarian+"",u.Icelandic+"",u.Igbo+"",u.Indonesian+"",u.Irish+"",u.Italian+"",u.Japanese+"",u.Javanese+"",u.Kannada+"",u.Kazakh+"",u.Khmer+"",u.Korean+"",u.Kurdish+"",u.Kyrgyz+"",u.Lao+"",u.Latin+"",u.Latvian+"",u.Lithuanian+"",u.Luxembourgish+"",u.Macedonian+"",u.Malagasy+"",u.Malay+"",u.Malayalam+"",u.Maltese+"",u.Maori+"",u.Marathi+"",u.Mongolian+"",u.Nepali+"",u.Norwegian+"",u.Pashto+"",u.Persian+"",u.Polish+"",u.Portuguese+"",u.Punjabi+"",u.Romanian+"",u.Russian+"",u.Samoan+"",u.Sanskrit+"",u.Scots+"",u.Serbian+"",u.Sesotho+"",u.Shona+"",u.Sindhi+"",u.Sinhala+"",u.Slovak+"",u.Slovenian+"",u.Somali+"",u.Spanish+"",u.Sudanese+"",u.Swahili+"",u.Swedish+"",u.Tagalog+"",u.Tajik+"",u.Tamil+"",u.Tatar+"",u.Telugu+"",u.Thai+"",u.Tibetan+"",u.Turkish+"",u.Ukrainian+"",u.Urdu+"",u.Uzbek+"",u.Vietnamese+"",u.Welsh+"",u.Xhosa+"",u.Yiddish+"",u.Yoruba+"",u.Zulu+"";u.Afrikaans,v.Afrikaans;g.SouthAfrica,u.AfrikaansSouthAfrica,v.Afrikaans;u.Albanian,v.Albanian;g.Albania,u.AlbanianAlbania,v.Albanian;u.Amharic,v.Amharic;g.Ethiopia,u.AmharicEthiopia,v.Amharic;u.Arabic,v.Arabic;g.Algeria,u.ArabicAlgeria,v.Arabic;g.Bahrain,u.ArabicBahrain,v.Arabic;g.Egypt,u.ArabicEgypt,v.Arabic;g.Iraq,u.ArabicIraq,v.Arabic;g.Jordan,u.ArabicJordan,v.Arabic;g.Kuwait,u.ArabicKuwait,v.Arabic;g.Lebanon,u.ArabicLebanon,v.Arabic;g.Libya,u.ArabicLibya,v.Arabic;g.Morocco,u.ArabicMorocco,v.Arabic;g.Oman,u.ArabicOman,v.Arabic;g.Qatar,u.ArabicQatar,v.Arabic;g.SaudiArabia,u.ArabicSaudiArabia,v.Arabic;g.Tunisia,u.ArabicTunisia,v.Arabic;g.UnitedArabEmirates,u.ArabicUnitedArabEmirates,v.Arabic;g.Yemen,u.ArabicYemen,v.Arabic;u.Armenian,v.Armenian;g.Armenia,u.ArmenianArmenia,v.Armenian;u.Azerbaijani,v.Azerbaijani;g.Azerbaijan,u.AzerbaijaniAzerbaijan,v.Azerbaijani;u.Basque,v.Basque;g.Spain,u.BasqueSpain,v.Basque;u.Belarusian,v.Belarusian;g.Belarus,u.BelarusianBelarus,v.Belarusian;u.Bengali,v.Bengali;g.Bangladesh,u.BengaliBangladesh,v.Bengali;u.Bhutani,v.Bhutani;g.Bhutan,u.BhutaniBhutan,v.Bhutani;u.Bulgarian,v.Bulgarian;g.Bulgaria,u.BulgarianBulgaria,v.Bulgarian;u.Burmese,v.Burmese;g.Myanmar,u.BurmeseMyanmar,v.Burmese;u.Cantonese,v.Cantonese;g.HongKong,u.CantoneseHongKong,v.Cantonese;u.Catalan,v.Catalan;g.Spain,u.CatalanSpain,v.Catalan;u.ChineseSimplified,v.Chinese;g.China,u.ChineseSimplifiedChina,v.Chinese;g.HongKong,u.ChineseSimplifiedHongKong,v.Chinese;g.Macau,u.ChineseSimplifiedMacau,v.Chinese;g.Singapore,u.ChineseSimplifiedSingapore,v.Chinese;u.ChineseTraditional,v.Chinese;g.HongKong,u.ChineseTraditionalHongKong,v.Chinese;g.Macau,u.ChineseTraditionalMacau,v.Chinese;g.Singapore,u.ChineseTraditionalSingapore,v.Chinese;u.Croatian,v.Croatian;g.BosniaAndHerzegovina,u.CroatianBosniaAndHerzegovina,v.Croatian;g.Croatia,u.CroatianCroatia,v.Croatian;u.Czech,v.Czech;g.CzechRepublic,u.CzechCzechRepublic,v.Czech;u.Danish,v.Danish;g.Denmark,u.DanishDenmark,v.Danish;u.Divehi,v.Divehi;g.Maldives,u.DivehiMaldives,v.Divehi;u.Dutch,v.Dutch;g.Belgium,u.DutchBelgium,v.Dutch;g.Netherlands,u.DutchNetherlands,v.Dutch;u.English,v.English;g.Australia,u.EnglishAustralia,v.English;g.Belgium,u.EnglishBelgium,v.English;g.Canada,u.EnglishCanada,v.English;g.Ireland,u.EnglishIreland,v.English;g.Jamaica,u.EnglishJamaica,v.English;g.NewZealand,u.EnglishNewZealand,v.English;g.Philippines,u.EnglishPhilippines,v.English;g.Singapore,u.EnglishSingapore,v.English;g.SouthAfrica,u.EnglishSouthAfrica,v.English;g.TrinidadAndTobago,u.EnglishTrinidadAndTobago,v.English;g.UnitedKingdom,u.EnglishUnitedKingdom,v.English;g.UnitedStates,u.EnglishUnitedStates,v.English;g.Zimbabwe,u.EnglishZimbabwe,v.English;u.Esperanto,v.Esperanto;u.Estonian,v.Estonian;g.Estonia,u.EstonianEstonia,v.Estonian;u.Faroese,v.Faroese;g.FaroeIslands,u.FaroeseFaroeIslands,v.Faroese;u.Farsi,v.Farsi;g.Iran,u.FarsiIran,v.Farsi;u.Filipino,v.Filipino;g.Philippines,u.FilipinoPhilippines,v.Filipino;u.Finnish,v.Finnish;g.Finland,u.FinnishFinland,v.Finnish;u.French,v.French;g.Belgium,u.FrenchBelgium,v.French;g.Canada,u.FrenchCanada,v.French;g.France,u.FrenchFrance,v.French;g.Luxembourg,u.FrenchLuxembourg,v.French;g.Monaco,u.FrenchMonaco,v.French;g.Reunion,u.FrenchReunion,v.French;g.Switzerland,u.FrenchSwitzerland,v.French;u.Frisian,v.Frisian;g.Netherlands,u.FrisianNetherlands,v.Frisian;u.Galician,v.Galician;g.Spain,u.GalicianSpain,v.Galician;u.Georgian,v.Georgian;g.Georgia,u.GeorgianGeorgia,v.Georgian;u.German,v.German;g.Austria,u.GermanAustria,v.German;g.Belgium,u.GermanBelgium,v.German;g.Switzerland,u.GermanSwitzerland,v.German;g.Liechtenstein,u.GermanLiechtenstein,v.German;g.Luxembourg,u.GermanLuxembourg,v.German;u.Greek,v.Greek;g.Greece,u.GreekGreece,v.Greek;u.Greenlandic,v.Greenlandic;g.Greenland,u.GreenlandicGreenland,v.Greenlandic;u.Gujarati,v.Gujarati;g.India,u.GujaratiIndia,v.Gujarati;u.Hausa,v.Hausa;g.Ghana,u.HausaGhana,v.Hausa;g.Niger,u.HausaNiger,v.Hausa;g.Nigeria,u.HausaNigeria,v.Hausa;u.Hebrew,v.Hebrew;g.Israel,u.HebrewIsrael,v.Hebrew;u.Hindi,v.Hindi;g.India,u.HindiIndia,v.Hindi;u.Hungarian,v.Hungarian;g.Hungary,u.HungarianHungary,v.Hungarian;u.Icelandic,v.Icelandic;g.Iceland,u.IcelandicIceland,v.Icelandic;u.Igbo,v.Igbo;u.Indonesian,v.Indonesian;g.Indonesia,u.IndonesianIndonesia,v.Indonesian;u.Irish,v.Irish;g.Ireland,u.IrishIreland,v.Irish;u.Italian,v.Italian;g.Italy,u.ItalianItaly,v.Italian;g.Switzerland,u.ItalianSwitzerland,v.Italian;u.Japanese,v.Japanese;g.Japan,u.JapaneseJapan,v.Japanese;u.Kannada,v.Kannada;g.India,u.KannadaIndia,v.Kannada;u.Kazakh,v.Kazakh;g.Kazakhstan,u.KazakhKazakhstan,v.Kazakh;u.Khmer,v.Khmer;g.Cambodia,u.KhmerCambodia,v.Khmer;u.Konkani,v.Konkani;g.India,u.KonkaniIndia,v.Konkani;u.Korean,v.Korean;g.SouthKorea,u.KoreanSouthKorea,v.Korean;u.Kurdish,v.Kurdish;g.Iraq,u.KurdishIraq,v.Kurdish;g.Turkey,u.KurdishTurkey,v.Kurdish;u.Kyrgyz,v.Kyrgyz;g.Kyrgyzstan,u.KyrgyzKyrgyzstan,v.Kyrgyz;u.Lao,v.Lao;g.Laos,u.LaoLaos,v.Lao;u.Latvian,v.Latvian;g.Latvia,u.LatvianLatvia,v.Latvian;u.Lithuanian,v.Lithuanian;g.Lithuania,u.LithuanianLithuania,v.Lithuanian;u.Luxembourgish,v.Luxembourgish;g.Belgium,u.LuxembourgishBelgium,v.Luxembourgish;g.Luxembourg,u.LuxembourgishLuxembourg,v.Luxembourgish;u.Macedonian,v.Macedonian;g.NorthMacedonia,u.MacedonianNorthMacedonia,v.Macedonian;u.Malay,v.Malay;g.Brunei,u.MalayBrunei,v.Malay;g.Malaysia,u.MalayMalaysia,v.Malay;g.Singapore,u.MalaySingapore,v.Malay;g.India,u.MalayIndia,v.Malay;u.Maltese,v.Maltese;g.Malta,u.MalteseMalta,v.Maltese;u.Maori,v.Maori;g.NewZealand,u.MaoriNewZealand,v.Maori;u.Marathi,v.Marathi;g.India,u.MarathiIndia,v.Marathi;u.Mongolian,v.Mongolian;g.Mongolia,u.MongolianMongolia,v.Mongolian;u.Montenegrin,v.Montenegrin;g.Montenegro,u.MontenegrinMontenegro,v.Montenegrin;u.Nepali,v.Nepali;g.Nepal,u.NepaliNepal,v.Nepali;u.NorthernSotho,v.NorthernSotho;g.SouthAfrica,u.NorthernSothoSouthAfrica,v.NorthernSotho;u.Norwegian,v.Norwegian;g.Norway,u.NorwegianBokmalNorway,v.NorwegianBokmal;g.Norway,u.NorwegianNynorskNorway,v.NorwegianNynorsk;u.Oriya,v.Oriya;g.India,u.OriyaIndia,v.Oriya;u.Pashto,v.Pashto;g.Afghanistan,u.PashtoAfghanistan,v.Pashto;u.Persian,v.Persian;g.Iran,u.PersianIran,v.Persian;u.Polish,v.Polish;g.Poland,u.PolishPoland,v.Polish;u.Portuguese,v.Portuguese;g.Brazil,u.PortugueseBrazil,v.Portuguese;g.Portugal,u.PortuguesePortugal,v.Portuguese;u.Punjabi,v.Punjabi;g.Pakistan,u.PunjabiPakistan,v.Punjabi;g.India,u.PunjabiIndia,v.Punjabi;u.Quechua,v.Quechua;g.Bolivia,u.QuechuaBolivia,v.Quechua;g.Ecuador,u.QuechuaEcuador,v.Quechua;g.Peru,u.QuechuaPeru,v.Quechua;u.Romanian,v.Romanian;g.Romania,u.RomanianRomania,v.Romanian;u.Russian,v.Russian;g.RussianFederation,u.RussianRussia,v.Russian;g.Ukraine,u.RussianUkraine,v.Russian;g.Kazakhstan,u.RussianKazakhstan,v.Russian;g.Kyrgyzstan,u.RussianKyrgyzstan,v.Russian;u.Sanskrit,v.Sanskrit;g.India,u.SanskritIndia,v.Sanskrit;u.Sami,v.Sami;g.Finland,u.SamiFinland,v.Sami;g.Norway,u.SamiNorway,v.Sami;g.Sweden,u.SamiSweden,v.Sami;u.Samoan,v.Samoan;g.Samoa,u.SamoanSamoa,v.Samoan;u.Serbian,v.Serbian;g.BosniaAndHerzegovina,u.SerbianBosniaAndHerzegovina,v.Serbian;g.SerbiaAndMontenegro,u.SerbianSerbiaAndMontenegro,v.Serbian;u.SerbianCyrillic,v.SerbianCyrillic;g.BosniaAndHerzegovina,u.SerbianCyrillicBosniaAndHerzegovina,v.SerbianCyrillic;g.SerbiaAndMontenegro,u.SerbianCyrillicSerbiaAndMontenegro,v.SerbianCyrillic;u.Slovak,v.Slovak;g.Slovakia,u.SlovakSlovakia,v.Slovak;u.Slovenian,v.Slovenian;g.Slovenia,u.SlovenianSlovenia,v.Slovenian;u.Somali,v.Somali;g.Somalia,u.SomaliSomalia,v.Somali;u.Spanish,v.Spanish;g.Argentina,u.SpanishArgentina,v.Spanish;g.Bolivia,u.SpanishBolivia,v.Spanish;g.Chile,u.SpanishChile,v.Spanish;g.Colombia,u.SpanishColombia,v.Spanish;g.CostaRica,u.SpanishCostaRica,v.Spanish;g.Cuba,u.SpanishCuba,v.Spanish;g.DominicanRepublic,u.SpanishDominicanRepublic,v.Spanish;g.Ecuador,u.SpanishEcuador,v.Spanish;g.ElSalvador,u.SpanishElSalvador,v.Spanish;g.EquatorialGuinea,u.SpanishEquatorialGuinea,v.Spanish;g.Guatemala,u.SpanishGuatemala,v.Spanish;g.Honduras,u.SpanishHonduras,v.Spanish;g.Mexico,u.SpanishMexico,v.Spanish;g.Nicaragua,u.SpanishNicaragua,v.Spanish;g.Panama,u.SpanishPanama,v.Spanish;g.Paraguay,u.SpanishParaguay,v.Spanish;g.Peru,u.SpanishPeru,v.Spanish;g.PuertoRico,u.SpanishPuertoRico,v.Spanish;g.Uruguay,u.SpanishUruguay,v.Spanish;g.Venezuela,u.SpanishVenezuela,v.Spanish;g.SouthAfrica,u.SutuSouthAfrica,v.Sutu;u.Swahili,v.Swahili;g.Kenya,u.SwahiliKenya,v.Swahili;u.Swedish,v.Swedish;g.Finland,u.SwedishFinland,v.Swedish;g.Sweden,u.SwedishSweden,v.Swedish;u.Syriac,v.Syriac;g.Syria,u.SyriacSyria,v.Syriac;u.Tajik,v.Tajik;g.Tajikistan,u.TajikTajikistan,v.Tajik;u.Tagalog,v.Tagalog;g.Philippines,u.TagalogPhilippines,v.Tagalog;u.Tamil,v.Tamil;g.India,u.TamilIndia,v.Tamil;u.Telugu,v.Telugu;g.India,u.TeluguIndia,v.Telugu;u.Thai,v.Thai;g.Thailand,u.ThaiThailand,v.Thai;u.Tibetan,v.Tibetan;g.China,u.TibetanChina,v.Tibetan;g.Bhutan,u.TibetanBhutan,v.Tibetan;g.India,u.TibetanIndia,v.Tibetan;u.Tsonga,v.Tsonga;u.Tswana,v.Tswana;g.SouthAfrica,u.TswanaSouthAfrica,v.Tswana;u.Turkish,v.Turkish;g.Turkey,u.TurkishTurkey,v.Turkish;u.Ukrainian,v.Ukrainian;g.Ukraine,u.UkrainianUkraine,v.Ukrainian;u.Urdu,v.Urdu;g.Afghanistan,u.UrduAfghanistan,v.Urdu;g.India,u.UrduIndia,v.Urdu;g.Pakistan,u.UrduPakistan,v.Urdu;u.Uzbek,v.Uzbek;g.Uzbekistan,u.UzbekUzbekistan,v.Uzbek;g.Uzbekistan,u.UzbekCyrillic,v.Uzbek;u.Vietnamese,v.Vietnamese;g.Vietnam,u.VietnameseVietnam,v.Vietnamese;u.Welsh,v.Welsh;g.UnitedKingdom,u.WelshUnitedKingdom,v.Welsh;u.Xhosa,v.Xhosa;g.SouthAfrica,u.XhosaSouthAfrica,v.Xhosa;u.Yiddish,v.Yiddish;u.Yoruba,v.Yoruba;g.Nigeria,u.YorubaNigeria,v.Yoruba;u.Zulu,v.Zulu;g.SouthAfrica,u.ZuluSouthAfrica,v.Zulu;I.AfricaAbidjan,o.UTC_0,A.CoordinatedUniversalTime;I.AfricaAccra,o.UTC_0,A.CoordinatedUniversalTime;I.AfricaAddisAbaba,o.UTC_PLUS_3,A.EastAfricaTime;I.AfricaAlgiers,o.UTC_PLUS_1,A.CentralEuropeanTime;I.AfricaAsmara,o.UTC_PLUS_3,A.EastAfricaTime;I.AfricaBamako,o.UTC_0,A.CoordinatedUniversalTime;I.AfricaBangui,o.UTC_PLUS_1,A.WestAfricaTime;I.AfricaBanjul,o.UTC_0,A.CoordinatedUniversalTime;I.AfricaBissau,o.UTC_0,A.CoordinatedUniversalTime;I.AfricaBlantyre,o.UTC_PLUS_2,A.CentralAfricaTime;I.AfricaBrazzaville,o.UTC_PLUS_1,A.WestAfricaTime;I.AfricaBujumbura,o.UTC_PLUS_2,A.CentralAfricaTime;I.AfricaCairo,o.UTC_PLUS_2,A.EasternEuropeanTime;I.AfricaCasablanca,o.UTC_PLUS_1,A.WesternEuropeanTime;I.AfricaCeuta,o.UTC_PLUS_1,A.CentralEuropeanTime;I.AfricaConakry,o.UTC_0,A.CoordinatedUniversalTime;I.AfricaDakar,o.UTC_0,A.CoordinatedUniversalTime;I.AfricaDarEsSalaam,o.UTC_PLUS_3,A.EastAfricaTime;I.AfricaDjibouti,o.UTC_PLUS_3,A.EastAfricaTime;I.AfricaDouala,o.UTC_PLUS_1,A.WestAfricaTime;I.AfricaElAaiun,o.UTC_PLUS_1,A.WestAfricaTime;I.AfricaFreetown,o.UTC_0,A.CoordinatedUniversalTime;I.AfricaGaborone,o.UTC_PLUS_2,A.CentralAfricaTime;I.AfricaHarare,o.UTC_PLUS_2,A.CentralAfricaTime;I.AfricaJohannesburg,o.UTC_PLUS_2,A.SouthAfricanStandardTime;I.AfricaJuba,o.UTC_PLUS_3,A.EastAfricaTime;I.AfricaKampala,o.UTC_PLUS_3,A.EastAfricaTime;I.AfricaKhartoum,o.UTC_PLUS_2,A.EastAfricaTime;I.AfricaKigali,o.UTC_PLUS_2,A.CentralAfricaTime;I.AfricaKinshasa,o.UTC_PLUS_1,A.WestAfricaTime;I.AfricaLagos,o.UTC_PLUS_1,A.WestAfricaTime;I.AfricaLibreville,o.UTC_PLUS_1,A.WestAfricaTime;I.AfricaLome,o.UTC_0,A.CoordinatedUniversalTime;I.AfricaLuanda,o.UTC_PLUS_1,A.WestAfricaTime;I.AfricaLubumbashi,o.UTC_PLUS_2,A.CentralAfricaTime;I.AfricaLusaka,o.UTC_PLUS_2,A.CentralAfricaTime;I.AfricaMalabo,o.UTC_PLUS_1,A.WestAfricaTime;I.AfricaMaputo,o.UTC_PLUS_2,A.CentralAfricaTime;I.AfricaMaseru,o.UTC_PLUS_2,A.SouthAfricanStandardTime;I.AfricaMbabane,o.UTC_PLUS_2,A.SouthAfricanStandardTime;I.AfricaMogadishu,o.UTC_PLUS_3,A.EastAfricaTime;I.AfricaMonrovia,o.UTC_0,A.CoordinatedUniversalTime;I.AfricaNairobi,o.UTC_PLUS_3,A.EastAfricaTime;I.AfricaNdjamena,o.UTC_PLUS_1,A.WestAfricaTime;I.AfricaNiamey,o.UTC_PLUS_1,A.WestAfricaTime;I.AfricaNouakchott,o.UTC_0,A.GreenwichMeanTime;I.AfricaOuagadougou,o.UTC_0,A.CoordinatedUniversalTime;I.AfricaPortoNovo,o.UTC_PLUS_1,A.WestAfricaTime;I.AfricaSaoTome,o.UTC_0,A.CoordinatedUniversalTime;I.AfricaTripoli,o.UTC_0,A.CoordinatedUniversalTime;I.AfricaTunis,o.UTC_0,A.CoordinatedUniversalTime;I.AfricaWindhoek,o.UTC_PLUS_2,A.WestAfricaTime;I.AmericaAdak,o.UTC_PLUS_10,A.HawaiiAleutianStandardTime;I.AmericaAnchorage,o.UTC_PLUS_9,A.AlaskaStandardTime;I.AmericaAnguilla,o.UTC_0,A.AtlanticStandardTime;I.AmericaAntigua,o.UTC_0,A.AtlanticStandardTime;I.AmericaAraguaina,o.UTC_MINUS_3,A.BrasiliaTime;I.AmericaArgentinaBuenosAires,o.UTC_MINUS_3,A.ArgentinaTime;I.AmericaArgentinaCatamarca,o.UTC_MINUS_3,A.ArgentinaTime;I.AmericaArgentinaCordoba,o.UTC_MINUS_3,A.ArgentinaTime;I.AmericaArgentinaJujuy,o.UTC_MINUS_3,A.ArgentinaTime;I.AmericaArgentinaLaRioja,o.UTC_MINUS_3,A.ArgentinaTime;I.AmericaArgentinaMendoza,o.UTC_MINUS_3,A.ArgentinaTime;I.AmericaArgentinaRioGallegos,o.UTC_MINUS_3,A.ArgentinaTime;I.AmericaArgentinaSalta,o.UTC_MINUS_3,A.ArgentinaTime;I.AmericaArgentinaSanJuan,o.UTC_MINUS_3,A.ArgentinaTime;I.AmericaArgentinaSanLuis,o.UTC_MINUS_3,A.ArgentinaTime;I.AmericaArgentinaTucuman,o.UTC_MINUS_3,A.ArgentinaTime;I.AmericaArgentinaUshuaia,o.UTC_MINUS_3,A.ArgentinaTime;I.AmericaAruba,o.UTC_0,A.AtlanticStandardTime;I.AmericaAsuncion,o.UTC_MINUS_4,A.ParaguayTime;I.AmericaAtikokan,o.UTC_0,A.EasternStandardTime;I.AmericaAtka,o.UTC_MINUS_10,A.HawaiiAleutianStandardTime;I.AmericaBahia,o.UTC_MINUS_3,A.BrasiliaTime;I.AmericaBahiaBanderas,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaBarbados,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaBelem,o.UTC_MINUS_3,A.BrasiliaTime;I.AmericaBelize,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaBlancSablon,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaBoaVista,o.UTC_MINUS_4,A.AmazonTime;I.AmericaBogota,o.UTC_MINUS_5,A.ColombiaTime;I.AmericaBoise,o.UTC_MINUS_7,A.MountainStandardTime;I.AmericaCambridgeBay,o.UTC_MINUS_7,A.MountainStandardTime;I.AmericaCampoGrande,o.UTC_MINUS_4,A.AmazonTime;I.AmericaCancun,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaCaracas,o.UTC_MINUS_4,A.VenezuelaStandardTime;I.AmericaCayenne,o.UTC_MINUS_3,A.FrenchGuianaTime;I.AmericaCayman,o.UTC_0,A.AtlanticStandardTime;I.AmericaChicago,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaChihuahua,o.UTC_MINUS_7,A.MountainStandardTime;I.AmericaCoralHarbour,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaCordoba,o.UTC_MINUS_3,A.ArgentinaTime;I.AmericaCostaRica,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaCreston,o.UTC_MINUS_7,A.MountainStandardTime;I.AmericaCuiaba,o.UTC_MINUS_4,A.AmazonTime;I.AmericaCuracao,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaDanmarkshavn,o.UTC_0,A.GreenwichMeanTime;I.AmericaDawson,o.UTC_MINUS_8,A.PacificStandardTime;I.AmericaDawsonCreek,o.UTC_MINUS_8,A.PacificStandardTime;I.AmericaDenver,o.UTC_MINUS_7,A.MountainStandardTime;I.AmericaDetroit,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaDominica,o.UTC_0,A.AtlanticStandardTime;I.AmericaEdmonton,o.UTC_MINUS_7,A.MountainStandardTime;I.AmericaEirunepe,o.UTC_MINUS_5,A.AcreTime;I.AmericaElSalvador,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaFortaleza,o.UTC_MINUS_3,A.BrasiliaTime;I.AmericaGlaceBay,o.UTC_0,A.AtlanticStandardTime;I.AmericaGodthab,o.UTC_MINUS_3,A.WestGreenlandTime;I.AmericaGooseBay,o.UTC_0,A.AtlanticStandardTime;I.AmericaGrandTurk,o.UTC_0,A.AtlanticStandardTime;I.AmericaGrenada,o.UTC_0,A.AtlanticStandardTime;I.AmericaGuadeloupe,o.UTC_0,A.AtlanticStandardTime;I.AmericaGuatemala,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaGuayaquil,o.UTC_MINUS_5,A.EcuadorTime;I.AmericaGuyana,o.UTC_0,A.AtlanticStandardTime;I.AmericaHalifax,o.UTC_0,A.AtlanticStandardTime;I.AmericaHavana,o.UTC_MINUS_5,A.CubaStandardTime;I.AmericaHermosillo,o.UTC_MINUS_7,A.MountainStandardTime;I.AmericaIndianaIndianapolis,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaIndianaKnox,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaIndianaMarengo,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaIndianaPetersburg,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaIndianaTellCity,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaIndianaVevay,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaIndianaVincennes,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaIndianaWinamac,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaInuvik,o.UTC_MINUS_7,A.MountainStandardTime;I.AmericaIqaluit,o.UTC_0,A.EasternStandardTime;I.AmericaJamaica,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaJuneau,o.UTC_MINUS_9,A.AlaskaStandardTime;I.AmericaKentuckyLouisville,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaKentuckyMonticello,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaKralendijk,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaLaPaz,o.UTC_MINUS_4,A.BoliviaTime;I.AmericaLima,o.UTC_MINUS_5,A.PeruTime;I.AmericaLosAngeles,o.UTC_MINUS_8,A.PacificStandardTime;I.AmericaLouisville,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaLowerPrinces,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaMaceio,o.UTC_MINUS_3,A.BrasiliaTime;I.AmericaManagua,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaManaus,o.UTC_MINUS_4,A.AmazonTime;I.AmericaMarigot,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaMartinique,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaMatamoros,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaMazatlan,o.UTC_MINUS_7,A.MountainStandardTime;I.AmericaMenominee,o.UTC_MINUS_5,A.CentralStandardTime;I.AmericaMerida,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaMetlakatla,o.UTC_MINUS_9,A.AlaskaStandardTime;I.AmericaMexicoCity,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaMiquelon,o.UTC_MINUS_3,A.SaintPierreAndMiquelonStandardTime;I.AmericaMoncton,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaMonterrey,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaMontevideo,o.UTC_MINUS_3,A.UruguayStandardTime;I.AmericaMontreal,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaMontserrat,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaNassau,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaNewYork,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaNipigon,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaNome,o.UTC_MINUS_9,A.AlaskaStandardTime;I.AmericaNoronha,o.UTC_MINUS_2,A.FernandoDeNoronhaTime;I.AmericaNorthDakotaBeulah,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaNorthDakotaCenter,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaNorthDakotaNewSalem,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaOjinaga,o.UTC_MINUS_7,A.MountainStandardTime;I.AmericaPanama,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaPangnirtung,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaParamaribo,o.UTC_MINUS_3,A.SurinameTime;I.AmericaPhoenix,o.UTC_MINUS_7,A.MountainStandardTime;I.AmericaPortAuPrince,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaPortOfSpain,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaPortoVelho,o.UTC_MINUS_4,A.AmazonTime;I.AmericaPuertoRico,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaRainyRiver,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaRankinInlet,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaRecife,o.UTC_MINUS_3,A.BrasiliaTime;I.AmericaRegina,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaResolute,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaRioBranco,o.UTC_MINUS_5,A.AcreTime;I.AmericaSantaIsabel,o.UTC_MINUS_8,A.PacificStandardTime;I.AmericaSantarem,o.UTC_MINUS_3,A.BrasiliaTime;I.AmericaSantiago,o.UTC_MINUS_4,A.ChileStandardTime;I.AmericaSantoDomingo,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaSaoPaulo,o.UTC_MINUS_3,A.BrasiliaTime;I.AmericaScoresbysund,o.UTC_MINUS_1,A.EasternGreenlandTime;I.AmericaShiprock,o.UTC_MINUS_7,A.MountainStandardTime;I.AmericaSitka,o.UTC_MINUS_9,A.AlaskaStandardTime;I.AmericaStBarthelemy,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaStJohns,o.UTC_MINUS_3,A.NewfoundlandStandardTime;I.AmericaStKitts,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaStLucia,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaStThomas,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaStVincent,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaSwiftCurrent,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaTegucigalpa,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaThule,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaThunderBay,o.UTC_MINUS_4,A.EasternStandardTime;I.AmericaTijuana,o.UTC_MINUS_8,A.PacificStandardTime;I.AmericaToronto,o.UTC_MINUS_5,A.EasternStandardTime;I.AmericaTortola,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AmericaVancouver,o.UTC_MINUS_8,A.PacificStandardTime;I.AmericaWhitehorse,o.UTC_MINUS_8,A.PacificStandardTime;I.AmericaWinnipeg,o.UTC_MINUS_6,A.CentralStandardTime;I.AmericaYakutat,o.UTC_MINUS_9,A.AlaskaStandardTime;I.AmericaYellowknife,o.UTC_MINUS_6,A.MountainStandardTime;I.AntarcticaCasey,o.UTC_MINUS_8,A.WesternStandardTime;I.AntarcticaDavis,o.UTC_MINUS_7,A.NewfoundlandStandardTime;I.AntarcticaDumontDUrville,o.UTC_MINUS_10,A.CentralStandardTime;I.AntarcticaMacquarie,o.UTC_MINUS_11,A.CentralStandardTime;I.AntarcticaMawson,o.UTC_MINUS_6,A.CentralStandardTime;I.AntarcticaMcMurdo,o.UTC_MINUS_12,A.NewZealandStandardTime;I.AntarcticaPalmer,o.UTC_MINUS_4,A.ChathamStandardTime;I.AntarcticaRothera,o.UTC_MINUS_3,A.RotheraResearchStationTime;I.AntarcticaSyowa,o.UTC_MINUS_3,A.ShowaStationTime;I.AntarcticaTroll,o.UTC_MINUS_2,A.CentralStandardTime;I.AntarcticaVostok,o.UTC_MINUS_6,A.CentralStandardTime;I.ArcticLongyearbyen,o.UTC_MINUS_1,A.CentralEuropeanTime;I.AsiaAden,o.UTC_PLUS_3,A.ArabiaStandardTime;I.AsiaAlmaty,o.UTC_PLUS_6,A.AlmaAtaTime;I.AsiaAmman,o.UTC_PLUS_2,A.EasternEuropeanTime;I.AsiaAnadyr,o.UTC_PLUS_12,A.NewCaledoniaTime;I.AsiaAqtau,o.UTC_PLUS_5,A.AqtobeTime;I.AsiaAqtobe,o.UTC_PLUS_5,A.AqtobeTime;I.AsiaAshgabat,o.UTC_PLUS_5,A.TurkmenistanTime;I.AsiaBaghdad,o.UTC_PLUS_3,A.ArabiaStandardTime;I.AsiaBahrain,o.UTC_PLUS_3,A.ArabiaStandardTime;I.AsiaBaku,o.UTC_PLUS_4,A.AzerbaijanTime;I.AsiaBangkok,o.UTC_PLUS_7,A.IndochinaTime;I.AsiaBarnaul,o.UTC_PLUS_7,A.KrasnoyarskTime;I.AsiaBeirut,o.UTC_PLUS_2,A.EasternEuropeanTime;I.AsiaBishkek,o.UTC_PLUS_6,A.KyrgyzstanTime;I.AsiaBrunei,o.UTC_PLUS_8,A.BruneiTime;I.AsiaChita,o.UTC_PLUS_9,A.YakutskTime;I.AsiaChoibalsan,o.UTC_PLUS_8,A.ChoibalsanStandardTime;I.AsiaColombo,o.UTC_PLUS_5,A.IndianStandardTime;I.AsiaDamascus,o.UTC_PLUS_2,A.EasternEuropeanTime;I.AsiaDhaka,o.UTC_PLUS_6,A.BangladeshStandardTime;I.AsiaDili,o.UTC_PLUS_9,A.JapanStandardTime;I.AsiaDubai,o.UTC_PLUS_4,A.GulfStandardTime;I.AsiaDushanbe,o.UTC_PLUS_5,A.TajikistanTime;I.AsiaFamagusta,o.UTC_PLUS_2,A.EasternEuropeanTime;I.AsiaGaza,o.UTC_PLUS_2,A.EasternEuropeanTime;I.AsiaHebron,o.UTC_PLUS_2,A.EasternEuropeanTime;I.AsiaHoChiMinh,o.UTC_PLUS_7,A.IndochinaTime;I.AsiaHongKong,o.UTC_PLUS_8,A.HongKongTime;I.AsiaHovd,o.UTC_PLUS_7,A.HovdTime;I.AsiaIrkutsk,o.UTC_PLUS_8,A.IrkutskTime;I.AsiaJakarta,o.UTC_PLUS_7,A.WesternIndonesianTime;I.AsiaJayapura,o.UTC_PLUS_9,A.JapanStandardTime;I.AsiaJerusalem,o.UTC_PLUS_2,A.EasternEuropeanTime;I.AsiaKabul,o.UTC_PLUS_4,A.AfghanistanTime;I.AsiaKamchatka,o.UTC_PLUS_12,A.KamchatkaTime;I.AsiaKarachi,o.UTC_PLUS_5,A.PakistanStandardTime;I.AsiaKathmandu,o.UTC_PLUS_5,A.NepalTime;I.AsiaKhandyga,o.UTC_PLUS_9,A.YakutskTime;I.AsiaKolkata,o.UTC_PLUS_5,A.IndianStandardTime;I.AsiaKrasnoyarsk,o.UTC_PLUS_7,A.KrasnoyarskTime;I.AsiaKualaLumpur,o.UTC_PLUS_8,A.MalaysiaStandardTime;I.AsiaKuching,o.UTC_PLUS_8,A.MalaysiaStandardTime;I.AsiaKuwait,o.UTC_PLUS_3,A.ArabiaStandardTime;I.AsiaMacau,o.UTC_PLUS_8,A.ChinaStandardTime;I.AsiaMagadan,o.UTC_PLUS_11,A.MagadanTime;I.AsiaMakassar,o.UTC_PLUS_8,A.MalaysiaTime;I.AsiaManila,o.UTC_PLUS_8,A.PhilippineTime;I.AsiaMuscat,o.UTC_PLUS_4,A.GulfStandardTime;I.AsiaNovokuznetsk,o.UTC_PLUS_6,A.NovosibirskTime;I.AsiaNovosibirsk,o.UTC_PLUS_6,A.NovosibirskTime;I.AsiaOmsk,o.UTC_PLUS_6,A.OmskTime;I.AsiaOral,o.UTC_PLUS_5,A.OralTime;I.AsiaPhnomPenh,o.UTC_PLUS_7,A.IndochinaTime;I.AsiaPontianak,o.UTC_PLUS_7,A.WesternIndonesianTime;I.AsiaPyongyang,o.UTC_PLUS_9,A.KoreaStandardTime;I.AsiaQatar,o.UTC_PLUS_3,A.ArabiaStandardTime;I.AsiaQyzylorda,o.UTC_PLUS_5,A.WestKazakhstanTime;I.AsiaRangoon,o.UTC_PLUS_6,A.MyanmarStandardTime;I.AsiaRiyadh,o.UTC_PLUS_3,A.ArabiaStandardTime;I.AsiaSakhalin,o.UTC_PLUS_11,A.SakhalinIslandTime;I.AsiaSamarkand,o.UTC_PLUS_5,A.UzbekistanTime;I.AsiaSeoul,o.UTC_PLUS_9,A.KoreaStandardTime;I.AsiaShanghai,o.UTC_PLUS_8,A.ChinaStandardTime;I.AsiaSingapore,o.UTC_PLUS_8,A.SingaporeStandardTime;I.AsiaSrednekolymsk,o.UTC_PLUS_11,A.SrednekolymskTime;I.AsiaTaipei,o.UTC_PLUS_8,A.ChinaStandardTime;I.AsiaTashkent,o.UTC_PLUS_5,A.UzbekistanTime;I.AsiaTbilisi,o.UTC_PLUS_4,A.GeorgiaStandardTime;I.AsiaTehran,o.UTC_PLUS_3,A.IranStandardTime;I.AsiaThimphu,o.UTC_PLUS_6,A.BhutanTime;I.AsiaTokyo,o.UTC_PLUS_9,A.JapanStandardTime;I.AsiaTomsk,o.UTC_PLUS_6,A.KrasnoyarskTime;I.AsiaUlaanbaatar,o.UTC_PLUS_8,A.UlaanbaatarStandardTime;I.AsiaUrumqi,o.UTC_PLUS_8,A.ChinaStandardTime;I.AsiaUstNera,o.UTC_PLUS_10,A.VladivostokTime;I.AsiaVientiane,o.UTC_PLUS_7,A.IndochinaTime;I.AsiaVladivostok,o.UTC_PLUS_10,A.VladivostokTime;I.AsiaYakutsk,o.UTC_PLUS_9,A.YakutskTime;I.AsiaYekaterinburg,o.UTC_PLUS_5,A.YekaterinburgTime;I.AsiaYerevan,o.UTC_PLUS_4,A.ArmeniaTime;I.AtlanticAzores,o.UTC_MINUS_1,A.AzoresStandardTime;I.AtlanticBermuda,o.UTC_MINUS_4,A.AtlanticStandardTime;I.AtlanticCanary,o.UTC_MINUS_1,A.WesternEuropeanTime;I.AtlanticCapeVerde,o.UTC_0,A.CapeVerdeTime;I.AtlanticFaroe,o.UTC_0,A.GreenwichMeanTime;I.AtlanticMadeira,o.UTC_0,A.WesternEuropeanTime;I.AtlanticReykjavik,o.UTC_0,A.GreenwichMeanTime;I.AtlanticSouthGeorgia,o.UTC_0,A.CoordinatedUniversalTime;I.AtlanticStHelena,o.UTC_0,A.GreenwichMeanTime;I.AtlanticStanley,o.UTC_0,A.FalklandIslandsTime;I.AustraliaAdelaide,o.UTC_PLUS_9_30,A.AustralianCentralStandardTime;I.AustraliaBrisbane,o.UTC_PLUS_10,A.AustralianEasternStandardTime;I.AustraliaBrokenHill,o.UTC_PLUS_9_30,A.AustralianCentralStandardTime;I.AustraliaCanberra,o.UTC_PLUS_10,A.AustralianEasternStandardTime;I.AustraliaCurrie,o.UTC_PLUS_10,A.AustralianEasternStandardTime;I.AustraliaDarwin,o.UTC_PLUS_9_30,A.AustralianCentralStandardTime;I.AustraliaEucla,o.UTC_PLUS_8_45,A.AustralianCentralWesternStandardTime;I.AustraliaHobart,o.UTC_PLUS_10,A.AustralianEasternStandardTime;I.AustraliaLindeman,o.UTC_PLUS_10,A.AustralianEasternStandardTime;I.AustraliaLordHowe,o.UTC_PLUS_10_30,A.LordHoweStandardTime;I.AustraliaMelbourne,o.UTC_PLUS_10,A.AustralianEasternStandardTime;I.AustraliaPerth,o.UTC_PLUS_8,A.AustralianWesternStandardTime;I.AustraliaSydney,o.UTC_PLUS_10,A.AustralianEasternStandardTime;I.EuropeAmsterdam,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeAndorra,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeAthens,o.UTC_PLUS_2,A.EasternEuropeanTime;I.EuropeBelgrade,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeBerlin,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeBratislava,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeBrussels,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeBucharest,o.UTC_PLUS_2,A.EasternEuropeanTime;I.EuropeBudapest,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeBusingen,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeChisinau,o.UTC_PLUS_2,A.EasternEuropeanTime;I.EuropeCopenhagen,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeDublin,o.UTC_0,A.GreenwichMeanTime;I.EuropeGibraltar,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeGuernsey,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeHelsinki,o.UTC_PLUS_2,A.EasternEuropeanTime;I.EuropeIsleOfMan,o.UTC_0,A.GreenwichMeanTime;I.EuropeIstanbul,o.UTC_PLUS_3,A.EasternEuropeanTime;I.EuropeJersey,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeKaliningrad,o.UTC_PLUS_2,A.EasternEuropeanTime;I.EuropeKiev,o.UTC_PLUS_2,A.EasternEuropeanTime;I.EuropeLisbon,o.UTC_0,A.GreenwichMeanTime;I.EuropeLjubljana,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeLondon,o.UTC_0,A.GreenwichMeanTime;I.EuropeLuxembourg,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeMadrid,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeMalta,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeMariehamn,o.UTC_PLUS_2,A.EasternEuropeanTime;I.EuropeMinsk,o.UTC_PLUS_3,A.EasternEuropeanTime;I.EuropeMonaco,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeMoscow,o.UTC_PLUS_3,A.EasternEuropeanTime;I.EuropeOslo,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeParis,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropePodgorica,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropePrague,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeRiga,o.UTC_PLUS_2,A.EasternEuropeanTime;I.EuropeRome,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeSamara,o.UTC_PLUS_4,A.EasternEuropeanTime;I.EuropeSanMarino,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeSarajevo,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeSimferopol,o.UTC_PLUS_3,A.EasternEuropeanTime;I.EuropeSkopje,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeSofia,o.UTC_PLUS_2,A.EasternEuropeanTime;I.EuropeStockholm,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeTallinn,o.UTC_PLUS_2,A.EasternEuropeanTime;I.EuropeTirane,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeUzhgorod,o.UTC_PLUS_2,A.EasternEuropeanTime;I.EuropeVaduz,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeVatican,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeVienna,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeVilnius,o.UTC_PLUS_2,A.EasternEuropeanTime;I.EuropeVolgograd,o.UTC_PLUS_4,A.EasternEuropeanTime;I.EuropeWarsaw,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeZagreb,o.UTC_PLUS_1,A.CentralEuropeanTime;I.EuropeZaporozhye,o.UTC_PLUS_2,A.EasternEuropeanTime;I.EuropeZurich,o.UTC_PLUS_1,A.CentralEuropeanTime;I.IndianAntananarivo,o.UTC_PLUS_3,A.EastAfricaTime;I.IndianChagos,o.UTC_PLUS_6,A.IndianOceanTime;I.IndianChristmas,o.UTC_PLUS_7,A.ChristmasIslandTime;I.IndianCocos,o.UTC_PLUS_6,A.CocosIslandsTime;I.IndianComoro,o.UTC_PLUS_3,A.EastAfricaTime;I.IndianKerguelen,o.UTC_PLUS_5,A.FrenchSouthernAndAntarcticTime;I.IndianMahe,o.UTC_PLUS_4,A.SeychellesTime;I.IndianMaldives,o.UTC_PLUS_5,A.MaldivesTime;I.IndianMauritius,o.UTC_PLUS_4,A.MauritiusTime;I.IndianMayotte,o.UTC_PLUS_3,A.EastAfricaTime;I.IndianReunion,o.UTC_PLUS_4,A.ReunionTime;I.PacificApia,o.UTC_PLUS_13,A.SamoaStandardTime;I.PacificAuckland,o.UTC_PLUS_13,A.NewZealandStandardTime;I.PacificChatham,o.UTC_PLUS_13,A.ChathamStandardTime;I.PacificEaster,o.UTC_PLUS_6,A.EasterIslandStandardTime;I.PacificEfate,o.UTC_PLUS_11,A.VanuatuTime;I.PacificEnderbury,o.UTC_PLUS_13,A.TongaTime;I.PacificFakaofo,o.UTC_PLUS_13,A.TongaTime;I.PacificFiji,o.UTC_PLUS_12,A.FijiTime;I.PacificFunafuti,o.UTC_PLUS_12,A.TuvaluTime;I.PacificGalapagos,o.UTC_PLUS_6,A.GalapagosTime;I.PacificGambier,o.UTC_PLUS_9,A.GambierIslandTime;I.PacificGuadalcanal,o.UTC_PLUS_11,A.SolomonIslandsTime;I.PacificGuam,o.UTC_PLUS_10,A.ChamorroStandardTime;I.PacificHonolulu,o.UTC_PLUS_10,A.HawaiiAleutianStandardTime;I.PacificJohnston,o.UTC_PLUS_10,A.HawaiiAleutianStandardTime;I.PacificKiritimati,o.UTC_PLUS_14,A.LineIslandsTime;I.PacificKosrae,o.UTC_PLUS_11,A.KosraeTime;I.PacificKwajalein,o.UTC_PLUS_12,A.MarshallIslandsTime;I.PacificMajuro,o.UTC_PLUS_12,A.MarshallIslandsTime;I.PacificMarquesas,o.UTC_PLUS_9,A.MarquesasIslandsTime;I.PacificMidway,o.UTC_PLUS_11,A.SamoaStandardTime;I.PacificNauru,o.UTC_PLUS_12,A.NauruTime;I.PacificNiue,o.UTC_PLUS_11,A.NiueTime;I.PacificNorfolk,o.UTC_PLUS_11,A.NorfolkIslandTime;I.PacificNoumea,o.UTC_PLUS_11,A.NewCaledoniaTime;I.PacificPagoPago,o.UTC_PLUS_11,A.SamoaStandardTime;I.PacificPalau,o.UTC_PLUS_9,A.PalauTime;I.PacificPitcairn,o.UTC_PLUS_8,A.PitcairnTime;I.PacificPonape,o.UTC_PLUS_11,A.PohnpeiStandardTime;I.PacificPortMoresby,o.UTC_PLUS_10,A.PapuaNewGuineaTime;I.PacificRarotonga,o.UTC_PLUS_10,A.CookIslandTime;I.PacificSaipan,o.UTC_PLUS_10,A.ChamorroStandardTime;I.PacificTahiti,o.UTC_PLUS_10,A.TahitiTime;I.PacificTarawa,o.UTC_PLUS_12,A.GilbertIslandTime;I.PacificTongatapu,o.UTC_PLUS_13,A.TongaTime;I.PacificChuuk,o.UTC_PLUS_10,A.ChuukTime;I.PacificPohnpei,o.UTC_PLUS_11,A.PohnpeiStandardTime;I.PacificYap,o.UTC_PLUS_10,A.ChuukTime;var pm=[{property:"name",enumerable:!1},{property:"message",enumerable:!1},{property:"stack",enumerable:!1},{property:"code",enumerable:!0}],Oe=Symbol(".toJSON was called"),vm=a=>{a[Oe]=!0;let B=a.toJSON();return delete a[Oe],B},b0=({from:a,seen:B,to_:N,forceEnumerable:G,maxDepth:L,depth:O})=>{let j=N||(Array.isArray(a)?[]:{});if(B.push(a),O>=L)return j;if(typeof a.toJSON=="function"&&a[Oe]!==!0)return vm(a);for(let[H,$]of Object.entries(a)){if(typeof Buffer=="function"&&Buffer.isBuffer($)){j[H]="[object Buffer]";continue}if(typeof $!="function"){if(!$||typeof $!="object"){j[H]=$;continue}if(!B.includes(a[H])){O++,j[H]=b0({from:a[H],seen:[...B],forceEnumerable:G,maxDepth:L,depth:O});continue}j[H]="[Circular]"}}for(let{property:H,enumerable:$}of pm)typeof a[H]=="string"&&Object.defineProperty(j,H,{value:a[H],enumerable:G?!0:$,configurable:!0,writable:!0});return j};function bm(a,B={}){let{maxDepth:N=Number.POSITIVE_INFINITY}=B;return typeof a=="object"&&a!==null?b0({from:a,seen:[],forceEnumerable:!0,maxDepth:N,depth:0}):typeof a=="function"?`[Function: ${a.name||"anonymous"}]`:a}var F;(function(a){a[a.Warning=999]="Warning",a[a.Exception=1e3]="Exception",a[a.UnmanagedException=1001]="UnmanagedException",a[a.CaughtException=1002]="CaughtException",a[a.UncaughtException=1003]="UncaughtException",a[a.UnhandledPromiseRejectionException=1004]="UnhandledPromiseRejectionException",a[a.AuthenticationException=2e3]="AuthenticationException",a[a.AuthenticationExpiredAccessTokenException=2001]="AuthenticationExpiredAccessTokenException",a[a.AuthenticationInvalidAccessTokenException=2002]="AuthenticationInvalidAccessTokenException",a[a.AuthenticationMissingAccessTokenException=2003]="AuthenticationMissingAccessTokenException",a[a.AuthenticationExpiredRefreshTokenException=2004]="AuthenticationExpiredRefreshTokenException",a[a.AuthenticationInvalidRefreshTokenException=2005]="AuthenticationInvalidRefreshTokenException",a[a.AuthenticationMissingRefreshTokenException=2006]="AuthenticationMissingRefreshTokenException",a[a.AuthenticationMissingDeviceKeyException=2007]="AuthenticationMissingDeviceKeyException",a[a.AuthenticationUnAuthorizedAccessException=2008]="AuthenticationUnAuthorizedAccessException",a[a.AuthenticationCodeMismatchException=2009]="AuthenticationCodeMismatchException",a[a.AuthenticationExpiredCodeException=2010]="AuthenticationExpiredCodeException",a[a.AuthenticationLoginException=2011]="AuthenticationLoginException",a[a.AuthenticationLoginInvalidCredentialsException=2012]="AuthenticationLoginInvalidCredentialsException",a[a.AuthenticationLoginTooManyFailedAttemptsException=2013]="AuthenticationLoginTooManyFailedAttemptsException",a[a.AuthenticationLimitExceededException=2014]="AuthenticationLimitExceededException",a[a.AuthenticationUnauthorizedAccessException=2015]="AuthenticationUnauthorizedAccessException",a[a.AuthenticationTooManyRequestsException=2016]="AuthenticationTooManyRequestsException",a[a.AuthenticationUserNotFoundException=2017]="AuthenticationUserNotFoundException",a[a.AuthenticationSignupException=2018]="AuthenticationSignupException",a[a.AuthenticationUsernameAvailabilityCheckException=2019]="AuthenticationUsernameAvailabilityCheckException",a[a.AuthenticationUsernameExistsException=2020]="AuthenticationUsernameExistsException",a[a.AuthenticationAliasExistException=2021]="AuthenticationAliasExistException",a[a.AuthenticationCodeDeliveryFailureException=2022]="AuthenticationCodeDeliveryFailureException",a[a.AuthenticationMFAMethodNotFoundException=2023]="AuthenticationMFAMethodNotFoundException",a[a.AuthenticationNotAuthorizedException=2024]="AuthenticationNotAuthorizedException",a[a.AuthenticationPasswordResetRequiredException=2025]="AuthenticationPasswordResetRequiredException",a[a.AuthenticationUserNotConfirmedException=2026]="AuthenticationUserNotConfirmedException",a[a.DatabaseException=3e3]="DatabaseException",a[a.SequelizeNotInitializedException=3001]="SequelizeNotInitializedException",a[a.ProcessException=4e3]="ProcessException",a[a.ProcessWarningException=4001]="ProcessWarningException",a[a.KillProcessException=4002]="KillProcessException",a[a.FatalException=4003]="FatalException",a[a.ProcessSigTermException=4004]="ProcessSigTermException",a[a.ProcessSigIntException=4005]="ProcessSigIntException",a[a.MissingEnvironmentVariable=4006]="MissingEnvironmentVariable",a[a.NetworkException=5e3]="NetworkException",a[a.HttpException=5001]="HttpException",a[a.HttpRequestException=5002]="HttpRequestException",a[a.HttpRequestResourceNotFoundException=5003]="HttpRequestResourceNotFoundException",a[a.HttpResponseException=5004]="HttpResponseException",a[a.ServiceProviderException=6e3]="ServiceProviderException",a[a.AWSException=6001]="AWSException",a[a.AWSMissingAccessKeyException=6002]="AWSMissingAccessKeyException",a[a.AWSMissingSecretKeyException=6003]="AWSMissingSecretKeyException",a[a.CognitoException=6004]="CognitoException",a[a.CognitoInternalErrorException=6005]="CognitoInternalErrorException",a[a.CognitoInvalidEmailRoleAccessPolicyException=6006]="CognitoInvalidEmailRoleAccessPolicyException",a[a.CognitoInvalidLambdaResponseException=6007]="CognitoInvalidLambdaResponseException",a[a.CognitoUserLambdaValidationException=6008]="CognitoUserLambdaValidationException",a[a.CognitoInvalidParameterException=6009]="CognitoInvalidParameterException",a[a.CognitoInvalidSmsRoleAccessPolicyException=6010]="CognitoInvalidSmsRoleAccessPolicyException",a[a.CognitoInvalidSmsRoleTrustRelationshipException=6011]="CognitoInvalidSmsRoleTrustRelationshipException",a[a.CognitoInvalidUserPoolConfigurationException=6012]="CognitoInvalidUserPoolConfigurationException",a[a.CognitoResourceNotFoundException=6013]="CognitoResourceNotFoundException",a[a.CognitoMissingUserPoolClientIdException=6014]="CognitoMissingUserPoolClientIdException",a[a.CognitoMissingUserPoolIdException=6015]="CognitoMissingUserPoolIdException",a[a.CognitoUnexpectedLambdaException=6016]="CognitoUnexpectedLambdaException",a[a.StripeException=6017]="StripeException",a[a.StripeMissingSecretKeyException=6018]="StripeMissingSecretKeyException",a[a.StripeSubscriptionCreationFailedException=6019]="StripeSubscriptionCreationFailedException",a[a.StripePaymentMethodRequiredException=6020]="StripePaymentMethodRequiredException",a[a.UserException=7e3]="UserException",a[a.NullUserException=7001]="NullUserException",a[a.UserStateConflictException=7002]="UserStateConflictException",a[a.NullAccountException=7003]="NullAccountException",a[a.ValidationException=8e3]="ValidationException",a[a.InvalidTypeException=8001]="InvalidTypeException",a[a.MissingArgumentException=8002]="MissingArgumentException",a[a.MissingPropertyException=8003]="MissingPropertyException",a[a.InvalidArgumentException=8004]="InvalidArgumentException",a[a.InvalidPropertyException=8005]="InvalidPropertyException",a[a.MissingRequestBodyPropertyException=8006]="MissingRequestBodyPropertyException",a[a.MissingRequestUrlParameterException=8007]="MissingRequestUrlParameterException",a[a.MissingCookieException=8008]="MissingCookieException"})(F||(F={}));var Bm=Tm(),Sa=class extends Error{constructor(a,B){super(a);S(this,"cause"),S(this,"code",F.Exception),S(this,"context"),S(this,"created"),S(this,"data"),S(this,"description"),S(this,"model"),S(this,"environment",Bm.id),S(this,"form"),S(this,"friendlyMessage","An unknown error has occurred. :("),S(this,"id"),S(this,"logLevel",z.Exception),S(this,"origin"),S(this,"pii"),S(this,"request"),S(this,"response"),S(this,"scope"),S(this,"remediation"),S(this,"tags"),S(this,"task"),S(this,"user"),S(this,"__proto__");var N,G,L,O;let j=new.target.prototype;if(this.__proto__=j,Error.captureStackTrace&&Error.captureStackTrace((N=B==null?void 0:B.cause)!=null?N:this,Sa),this.id=Im(),this.name=this.constructor.name,this.created=new Date().toString(),this.description=(G=B==null?void 0:B.description)!=null?G:this.description,this.remediation=(L=B==null?void 0:B.remediation)!=null?L:this.remediation,this.scope=(O=B==null?void 0:B.scope)!=null?O:this.scope,B){let{cause:H,context:$,data:X,model:ca,form:Aa,origin:la,pii:Ea,request:sa,response:J,tags:Q,task:da,user:ma}=B;this.cause=H,this.context=$,this.data=X,this.model=ca,this.form=Aa,this.origin=la,this.pii=Ea,this.request=sa,this.response=J,this.task=da,this.tags=Q,this.user=ma}}toJSON(){return bm(this)}},Ta;(function(a){a.Simple="simple",a.ExponentialBackoff="exponential",a.CircuitBreaker="circuit_breaker"})(Ta||(Ta={}));var Um=class extends Sa{constructor(){super(...arguments);S(this,"code",F.UnmanagedException),S(this,"description",`An "Error" object that isn't managed by AppLab`),S(this,"friendlyMessage","An unknown error has occurred."),S(this,"remediation",{response:{code:500},retry:{limit:3}})}},Nm=class extends Sa{constructor(){super(...arguments);S(this,"code",F.CaughtException),S(this,"description","An exception was caught within a try block."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3}})}},Dm=class extends Sa{constructor(){super(...arguments);S(this,"code",F.UncaughtException),S(this,"description","An uncaught exception bubbled up and was caught automatically."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3}})}},Pm=class extends Sa{constructor(){super(...arguments);S(this,"code",F.UnhandledPromiseRejectionException),S(this,"description","An unhandled promise rejection was caught automatically."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3}})}},Xa=class extends Sa{constructor(){super(...arguments);S(this,"code",F.ProcessException),S(this,"description","A exception was caught in a process."),S(this,"logLevel",z.Exception)}},ym=class extends Xa{constructor(){super(...arguments);S(this,"code",F.ProcessWarningException),S(this,"description","A warning was caught in a process."),S(this,"logLevel",z.Warning)}},Fm=class extends Xa{constructor(){super(...arguments);S(this,"code",F.KillProcessException),S(this,"description",'Exception thrown to kill a Node.js "gracefully".'),S(this,"logLevel",z.Critical)}},km=class extends Xa{constructor(){super(...arguments);S(this,"code",F.ProcessSigTermException),S(this,"description","Process received SIGTERM termination code."),S(this,"logLevel",z.Critical)}},Mm=class extends Xa{constructor(){super(...arguments);S(this,"code",F.ProcessSigIntException),S(this,"description","Process received SIGINT termination code."),S(this,"logLevel",z.Critical)}},Lm=class extends Xa{constructor(){super(...arguments);S(this,"code",F.FatalException),S(this,"description","An fatal exception occurred which has crashed the server."),S(this,"logLevel",z.Critical)}},qm=class extends Xa{constructor(){super(...arguments);S(this,"code",F.MissingEnvironmentVariable),S(this,"description","An environment variable is not set or unavailable."),S(this,"logLevel",z.Critical)}},gB=new se,pa=class extends Sa{constructor(){super(...arguments);S(this,"code",F.AuthenticationException),S(this,"description","Generic or unknown exceptions associated with user authentication."),S(this,"friendlyMessage","An unknown error occurred."),S(this,"logLevel",z.Warning),S(this,"remediation",{response:{code:401},retry:{limit:3,strategy:Ta.CircuitBreaker}})}},Gm=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationUnauthorizedAccessException),S(this,"description","User lacks permissions to access the requested resource."),S(this,"logLevel",z.Warning),S(this,"remediation",{response:{code:403},retry:!1})}},wm=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationLimitExceededException),S(this,"description","This exception is thrown when a user exceeds the limit for a requested AWS resource"),S(this,"friendlyMessage","You are trying to access this resource too often."),S(this,"logLevel",z.Warning),S(this,"remediation",{response:{code:429},retry:!1})}},Km=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationNotAuthorizedException),S(this,"description","The Auth user does not have permission to perform this action."),S(this,"friendlyMessage","You need to be logged in or have proper permissions to access this resource."),S(this,"logLevel",z.Warning),S(this,"remediation",{response:{code:403},retry:!1})}},xm=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationTooManyRequestsException),S(this,"description","This exception is thrown when the user has made too many requests for a given operation."),S(this,"friendlyMessage","You are trying to access this resource too often."),S(this,"logLevel",z.Warning),S(this,"remediation",{response:{code:429},retry:!1})}},Om=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationUserNotFoundException),S(this,"description","This exception is thrown when the Auth service cannot find a user with the provided username."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:!1})}},jm=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationPasswordResetRequiredException),S(this,"description","This exception is thrown when a password reset is required."),S(this,"friendlyMessage","A password reset is required in order to login."),S(this,"logLevel",z.Warning),S(this,"remediation",{response:{code:403},retry:!1})}},Hm=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationLoginException),S(this,"description","An exception occurred while logging a user in."),S(this,"friendlyMessage","An unknown error occurred."),S(this,"logLevel",z.Critical),S(this,"remediation",{response:{code:500},retry:!0})}},Wm=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationLoginInvalidCredentialsException),S(this,"description","Incorrect username or password provided."),S(this,"friendlyMessage","Incorrect username or password."),S(this,"logLevel",z.Info),S(this,"remediation",{response:{code:401},retry:!1})}},zm=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationLoginTooManyFailedAttemptsException),S(this,"description","This exception is thrown when the user has provided an incorrect username or password too many times."),S(this,"friendlyMessage","You've provided an incorrect username or password too many times."),S(this,"logLevel",z.Warning),S(this,"remediation",{response:{code:429},retry:!1})}},Vm=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationMFAMethodNotFoundException),S(this,"description","This exception is thrown when the Auth service cannot find a multi-factor authentication (MFA) method."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:403},retry:{limit:3,strategy:Ta.Simple}})}},Rm=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationSignupException),S(this,"description","An exception occurred while signing up a user."),S(this,"friendlyMessage","An error occurred while signing up."),S(this,"logLevel",z.Critical),S(this,"remediation",{response:{code:500},retry:!0})}},je=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationUsernameAvailabilityCheckException),S(this,"description","An exception occurred while checking if a username is available."),S(this,"friendlyMessage","An error occurred while checking if a username is available."),S(this,"logLevel",z.Critical),S(this,"remediation",{response:{code:500},retry:!0})}},Jm=class extends je{constructor(){super(...arguments);S(this,"code",F.AuthenticationUsernameExistsException),S(this,"description","User with email or phone number already exists."),S(this,"friendlyMessage","A user with that email already exists."),S(this,"logLevel",z.Warning),S(this,"remediation",{response:{code:400},retry:!1})}},Ym=class extends je{constructor(){super(...arguments);S(this,"code",F.AuthenticationAliasExistException),S(this,"description","This exception is thrown when a user tries to confirm the account with an email or phone number that has already been supplied as an alias from a different account. This exception tells user that an account with this email or phone already exists"),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:400},retry:!1})}},Zm=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationExpiredRefreshTokenException),S(this,"description","The refresh token associated with a session has expired."),S(this,"logLevel",z.Warning),S(this,"remediation",{response:{code:401},retry:!1})}},$m=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationInvalidRefreshTokenException),S(this,"description","The refresh token associated with a session is invalid."),S(this,"logLevel",z.Warning),S(this,"remediation",{response:{code:401},retry:!1})}},B0=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationMissingRefreshTokenException),S(this,"description","The refresh token associated with a session is missing."),S(this,"logLevel",z.Warning),S(this,"remediation",{response:{code:401},retry:!1})}},Qm=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationCodeDeliveryFailureException),S(this,"description","This exception is thrown when a verification code fails to deliver successfully."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:Ta.Simple}})}},Xm=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationCodeMismatchException),S(this,"description","The verification code provided is incorrect"),S(this,"logLevel",z.Warning),S(this,"remediation",{response:{code:400},retry:!1})}},Cm=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationExpiredCodeException),S(this,"description","The verification code provided has expired"),S(this,"logLevel",z.Warning),S(this,"remediation",{response:{code:403},retry:!1})}},ac=class extends pa{constructor(){super(...arguments);S(this,"code",F.AuthenticationUserNotConfirmedException),S(this,"description","This exception is thrown when a user who is not confirmed attempts to login."),S(this,"friendlyMessage","You haven't verified your email address or telephone number yet"),S(this,"logLevel",z.Warning),S(this,"remediation",{response:{code:403},retry:!1})}},U0=class extends Sa{constructor(){super(...arguments);S(this,"code",F.DatabaseException),S(this,"description","Generic or unknown database exceptions."),S(this,"logLevel",z.Exception)}},ec=class extends U0{constructor(){super(...arguments);S(this,"code",F.SequelizeNotInitializedException),S(this,"description","Generic or unknown database exceptions."),S(this,"logLevel",z.Exception)}},N0=class extends Sa{constructor(){super(...arguments);S(this,"code",F.NetworkException),S(this,"description","A network related issue has occurred."),S(this,"logLevel",z.Exception)}},He=class extends N0{constructor(){super(...arguments);S(this,"code",F.HttpException),S(this,"description","A generic or unknown exception occurred related to an HTTP request."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:Ta.CircuitBreaker}})}},oe=class extends He{constructor(){super(...arguments);S(this,"code",F.HttpRequestException),S(this,"description","Base class for generic or unknown exceptions occuring during an HTTP request."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:Ta.CircuitBreaker}})}},ic=class extends oe{constructor(){super(...arguments);S(this,"code",F.HttpRequestResourceNotFoundException),S(this,"description","The requested HTTP resource could not be found."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:404},retry:{limit:3,strategy:Ta.CircuitBreaker}})}},uc=class extends oe{constructor(){super(...arguments);S(this,"code",F.MissingRequestBodyPropertyException),S(this,"description","HTTP request body is missing a required property."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:400},retry:!1})}},nc=class extends oe{constructor(){super(...arguments);S(this,"code",F.MissingRequestUrlParameterException),S(this,"description","HTTP request URL is missing a required parameter."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:400},retry:!1})}},sc=class extends oe{constructor(){super(...arguments);S(this,"code",F.MissingCookieException),S(this,"description","A required cookie is missing."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:!1})}},rc=class extends He{constructor(){super(...arguments);S(this,"code",F.HttpRequestException),S(this,"description","Generic or unknown exceptions related to HTTP responses."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:!1})}},We=class extends Sa{constructor(){super(...arguments);S(this,"code",F.ServiceProviderException),S(this,"description","An error originating from a third-party or service provider occurred."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:Ta.Simple}})}},ze=class extends We{constructor(){super(...arguments);S(this,"code",F.AWSException),S(this,"description","An exception originating from the AWS integration occurred."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:Ta.Simple}})}},D0=class extends ze{constructor(){super(...arguments);S(this,"code",F.StripeMissingSecretKeyException),S(this,"description","Missing AWS access key token."),S(this,"logLevel",z.Critical),S(this,"remediation",{response:{code:500},retry:!1})}},ka=class extends ze{constructor(){super(...arguments);S(this,"code",F.AWSException),S(this,"description","An exception originating from the AWS Cognito integration occurred."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:Ta.Simple}})}},tc=class extends ka{constructor(){super(...arguments);S(this,"code",F.CognitoInternalErrorException),S(this,"description","An internal error occurred originating from AWS Cognito."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:Ta.Simple}})}},lc=class extends ka{constructor(){super(...arguments);S(this,"code",F.CognitoInvalidUserPoolConfigurationException),S(this,"description","This exception is thrown when the user pool configuration is invalid."),S(this,"logLevel",z.Critical),S(this,"remediation",{response:{code:500},retry:!1})}},mc=class extends ka{constructor(){super(...arguments);S(this,"code",F.CognitoInvalidEmailRoleAccessPolicyException),S(this,"description","There is an access policy exception for the role provided for email configuration."),S(this,"logLevel",z.Critical),S(this,"remediation",{response:{code:500},retry:!1})}},cc=class extends ka{constructor(){super(...arguments);S(this,"code",F.CognitoInvalidSmsRoleAccessPolicyException),S(this,"description","This exception is returned when the role provided for SMS configuration does not have permission to publish using Amazon SNS."),S(this,"logLevel",z.Critical),S(this,"remediation",{response:{code:500},retry:!1})}},oc=class extends ka{constructor(){super(...arguments);S(this,"code",F.CognitoInvalidSmsRoleTrustRelationshipException),S(this,"description","This exception is thrown when the trust relationship is invalid for the role provided for SMS configuration. This can happen if you do not trust -idp.amazonaws.com or the external ID provided in the role does not match what is provided in the SMS configuration for the user pool."),S(this,"logLevel",z.Critical),S(this,"remediation",{response:{code:500},retry:!1})}},Ac=class extends ka{constructor(){super(...arguments);S(this,"code",F.CognitoMissingUserPoolClientIdException),S(this,"description","Cognito user pool client ID configuration is missing."),S(this,"logLevel",z.Critical)}},dc=class extends ka{constructor(){super(...arguments);S(this,"code",F.CognitoMissingUserPoolIdException),S(this,"description","Cognito user pool ID configuration is missing."),S(this,"logLevel",z.Critical)}},fc=class extends ka{constructor(){super(...arguments);S(this,"code",F.CognitoUnexpectedLambdaException),S(this,"description","This exception is thrown when the Auth service encounters an unexpected exception with the AWS Lambda service."),S(this,"logLevel",z.Critical),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:Ta.Simple}})}},Ic=class extends ka{constructor(){super(...arguments);S(this,"code",F.CognitoInvalidParameterException),S(this,"description","This exception is thrown when the Cognito service encounters an invalid parameter."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:Ta.Simple}})}},_c=class extends ka{constructor(){super(...arguments);S(this,"code",F.CognitoInvalidLambdaResponseException),S(this,"description","This exception is thrown when the Amazon service encounters an invalid AWS Lambda response."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:Ta.Simple}})}},hc=class extends ka{constructor(){super(...arguments);S(this,"code",F.CognitoResourceNotFoundException),S(this,"description","This exception is thrown when the Cognito service cannot find the requested resource."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:Ta.Simple}})}},gc=class extends ka{constructor(){super(...arguments);S(this,"code",F.CognitoUserLambdaValidationException),S(this,"description","This exception is thrown when the Cognito service encounters a user validation exception with the AWS Lambda service."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:Ta.Simple}})}},be=class extends We{constructor(){super(...arguments);S(this,"code",F.StripeException),S(this,"description","An exception occurred relating to Stripe."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:Ta.Simple}})}},Ec=class extends be{constructor(){super(...arguments);S(this,"code",F.StripeMissingSecretKeyException),S(this,"description","The Stripe secret key token is missing."),S(this,"logLevel",z.Critical),S(this,"remediation",{response:{code:500},retry:!1})}},Sc=class extends be{constructor(){super(...arguments);S(this,"code",F.StripeSubscriptionCreationFailedException),S(this,"description","Stripe subscription creation failed."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:Ta.Simple}})}},Tc=class extends be{constructor(){super(...arguments);S(this,"code",F.StripePaymentMethodRequiredException),S(this,"description","An updated payment method is required."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:Ta.Simple}})}},Ve=class extends Sa{constructor(){super(...arguments);S(this,"code",F.UserException),S(this,"description","Generic or unknown exceptions related to a user."),S(this,"logLevel",z.Exception)}},pc=class extends Ve{constructor(){super(...arguments);S(this,"code",F.NullUserException),S(this,"description","An operation was performed on behalf a user that cannot be found in the database."),S(this,"logLevel",z.Critical)}},vc=class extends Ve{constructor(){super(...arguments);S(this,"code",F.UserStateConflictException),S(this,"description","Exception used for user state that exists in one system or another and isn't being actively managed, or synced between all systems, or at least differences accounted for."),S(this,"logLevel",z.Critical)}},bc=class extends Sa{constructor(){super(...arguments);S(this,"code",F.ValidationException),S(this,"description","Generic or otherwise unknown input validation exception."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:400},retry:!1})}},Bc=class extends Sa{constructor(){super(...arguments);S(this,"code",F.InvalidTypeException),S(this,"description","Instance type is invalid."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:400},retry:!1})}},Uc=class extends Sa{constructor(){super(...arguments);S(this,"code",F.MissingArgumentException),S(this,"description","A required argument is missing."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:400},retry:!1})}},Nc=class extends Sa{constructor(){super(...arguments);S(this,"code",F.MissingPropertyException),S(this,"description","A required property is missing."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:400},retry:!1})}},Dc=class extends Sa{constructor(){super(...arguments);S(this,"code",F.InvalidArgumentException),S(this,"description","An argument is invalid."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:400},retry:!1})}},Pc=class extends Sa{constructor(){super(...arguments);S(this,"code",F.InvalidPropertyException),S(this,"description","An object property is invalid."),S(this,"logLevel",z.Exception),S(this,"remediation",{response:{code:400},retry:!1})}},EB={[F.Exception]:Sa,[F.UnmanagedException]:Um,[F.CaughtException]:Nm,[F.UncaughtException]:Dm,[F.UnhandledPromiseRejectionException]:Pm,[F.AuthenticationException]:pa,[F.AuthenticationExpiredRefreshTokenException]:Zm,[F.AuthenticationInvalidRefreshTokenException]:$m,[F.AuthenticationLoginException]:Hm,[F.AuthenticationLoginInvalidCredentialsException]:Wm,[F.AuthenticationLoginTooManyFailedAttemptsException]:zm,[F.AuthenticationMissingDeviceKeyException]:B0,[F.AuthenticationMissingRefreshTokenException]:B0,[F.AuthenticationUnauthorizedAccessException]:Gm,[F.AuthenticationCodeMismatchException]:Xm,[F.AuthenticationExpiredCodeException]:Cm,[F.AuthenticationLimitExceededException]:wm,[F.AuthenticationNotAuthorizedException]:Km,[F.AuthenticationTooManyRequestsException]:xm,[F.AuthenticationUserNotFoundException]:Om,[F.AuthenticationSignupException]:Rm,[F.AuthenticationUsernameAvailabilityCheckException]:je,[F.AuthenticationAliasExistException]:Ym,[F.AuthenticationUsernameExistsException]:Jm,[F.AuthenticationCodeDeliveryFailureException]:Qm,[F.AuthenticationMFAMethodNotFoundException]:Vm,[F.AuthenticationPasswordResetRequiredException]:jm,[F.AuthenticationUserNotConfirmedException]:ac,[F.DatabaseException]:U0,[F.SequelizeNotInitializedException]:ec,[F.ServiceProviderException]:We,[F.AWSException]:ze,[F.AWSMissingAccessKeyException]:D0,[F.AWSMissingSecretKeyException]:D0,[F.CognitoException]:ka,[F.CognitoInternalErrorException]:tc,[F.CognitoInvalidEmailRoleAccessPolicyException]:mc,[F.CognitoInvalidSmsRoleAccessPolicyException]:cc,[F.CognitoInvalidSmsRoleTrustRelationshipException]:oc,[F.CognitoUnexpectedLambdaException]:fc,[F.CognitoInvalidUserPoolConfigurationException]:lc,[F.CognitoInvalidLambdaResponseException]:_c,[F.CognitoInvalidParameterException]:Ic,[F.CognitoMissingUserPoolIdException]:dc,[F.CognitoMissingUserPoolClientIdException]:Ac,[F.CognitoResourceNotFoundException]:hc,[F.CognitoUserLambdaValidationException]:gc,[F.StripeException]:be,[F.StripeSubscriptionCreationFailedException]:Sc,[F.StripeMissingSecretKeyException]:Ec,[F.StripePaymentMethodRequiredException]:Tc,[F.NetworkException]:N0,[F.HttpException]:He,[F.HttpRequestException]:oe,[F.HttpRequestResourceNotFoundException]:ic,[F.HttpResponseException]:rc,[F.MissingRequestBodyPropertyException]:uc,[F.MissingRequestUrlParameterException]:nc,[F.MissingCookieException]:sc,[F.ValidationException]:bc,[F.InvalidArgumentException]:Dc,[F.InvalidPropertyException]:Pc,[F.InvalidTypeException]:Bc,[F.MissingArgumentException]:Uc,[F.MissingPropertyException]:Nc,[F.ProcessException]:Xa,[F.ProcessWarningException]:ym,[F.ProcessSigTermException]:km,[F.ProcessSigIntException]:Mm,[F.FatalException]:Lm,[F.MissingEnvironmentVariable]:qm,[F.KillProcessException]:Fm,[F.UserException]:Ve,[F.NullUserException]:pc,[F.UserStateConflictException]:vc};qn.config.update({region:process.env.AWS_REGION});var P0=new se;async function yc(a){try{let B=new qn.SSM({region:process.env.AWS_REGION}),N={Names:a,WithDecryption:!1},G=await B.getParameters(N).promise();return P0.debug({data:G.Parameters,message:"AWS SSM Parameters"}),G.Parameters}catch(B){let N=new Sa(`Error caught in getParameters(): ${B.name}`,{cause:B,tags:{file:""}});P0.exception(N)}}var Ca=yn(zl(),1),ae=yn(am(),1),y0=class{constructor(a){this.db={},this.connection=a.connection,this.models=a.models}async getDbCluster(){var O,j,H;let a=await yc(["/app-lab-test/db/aurora-postgresql-cluster"]);if(!a)return;let B={DBClusterIdentifier:(O=a==null?void 0:a[0])==null?void 0:O.Value},L=(j=(await new Fc.RDS().describeDBClusters(B).promise()).DBClusters)==null?void 0:j[0];if(L)return this.cluster={database:L.DatabaseName,host:L.Endpoint,password:(H=this.connection)==null?void 0:H.password,port:L.Port,username:L.MasterUsername},L}async getClient(){var a,B;if(!(!this.cluster||!this.cluster.database||!this.cluster.username||!this.cluster.password||!this.cluster.host)){this.client=new Mc(this.cluster.database,this.cluster.username,this.cluster.password,{dialect:"postgres",host:this.cluster.host,port:this.cluster.port,ssl:!0});for(let[N,G]of Object.entries(this.models)){let L=G(this.client,kc);this.db[N]=L}for(let[N,G]of Object.entries(this.db))(B=(a=this.db[N])==null?void 0:a.associate)==null||B.call(a,this.db);return this.client}}async connect({alter:a=!1,force:B=!1}){var N,G;if(await this.getDbCluster(),await this.getClient(),this.cluster&&!((G=(N=this.connection)==null?void 0:N.bastion)==null?void 0:G.host)&&this.client)return this.client.sync({alter:a,force:B})}async create(a,B){var G,L;let N="";if(Object.entries(this.db).forEach(([O,j])=>{O===(0,Ca.singular)((0,ae.pascalCase)(a))&&(N=O)}),!!N)return Array.isArray(B)?(G=this.db[N])==null?void 0:G.bulkCreate(B):(L=this.db[N])==null?void 0:L.create(B)}async deleteMany(a,B){var L,O;let N="";return Object.entries(this.db).forEach(([j,H])=>{j===(0,Ca.singular)((0,ae.pascalCase)(a))&&(N=j)}),N?await((O=(L=this.db)==null?void 0:L[N])==null?void 0:O.destroy({where:{id:B}})):void 0}async deleteOne(a,B){var L,O;let N="";return Object.entries(this.db).forEach(([j,H])=>{j===(0,Ca.singular)((0,ae.pascalCase)(a))&&(N=j)}),!N||!B?void 0:await((O=(L=this.db)==null?void 0:L[N])==null?void 0:O.destroy({where:{id:B}}))}async getOne(a,B){var G,L;let N="";if(Object.entries(this.db).forEach(([O,j])=>{O===(0,Ca.singular)((0,ae.pascalCase)(a))&&(N=O)}),!!N)return(L=(G=this.db)==null?void 0:G[N])==null?void 0:L.findOne({where:{id:B}})}async getMany(a,B){var G,L;let N="";if(Object.entries(this.db).forEach(([O,j])=>{O===(0,Ca.singular)((0,ae.pascalCase)(a))&&(N=O)}),!!N)return(L=(G=this.db)==null?void 0:G[N])==null?void 0:L.findAll()}async updateMany(a,B){var L,O;let N="";return Object.entries(this.db).forEach(([j,H])=>{j===(0,Ca.singular)((0,ae.pascalCase)(a))&&(N=j)}),N?await((O=(L=this.db)==null?void 0:L[N])==null?void 0:O.upsert(B)):void 0}async updateOne(a,B,N){var O,j;let G="";if(Object.entries(this.db).forEach(([H,$])=>{H===(0,Ca.singular)((0,ae.pascalCase)(a))&&(G=H)}),!G)return;let L=await((j=(O=this.db)==null?void 0:O[G])==null?void 0:j.findOne({where:{id:B}}));if(!!L)return await L.update(N),L}};var F0=new se,qc=class{constructor(B){this.config=B}async start(){var N;if(F0.info("Starting Core API Server"),!((N=this.config)==null?void 0:N.connection))throw new ne("Core API Server config is missing connection");this.db=new y0({connection:this.config.connection,models:this.config.models}),new Lc({endpoints:[{handler:Oa({dataClient:this.db}).create,method:Ga.Post,route:"/:model"},{handler:Oa({dataClient:this.db}).deleteMany,method:Ga.Delete,route:"/:model"},{handler:Oa({dataClient:this.db}).deleteOne,method:Ga.Delete,route:"/:model/:id"},{handler:Oa({dataClient:this.db}).getMany,method:Ga.Get,route:"/:model"},{handler:Oa({dataClient:this.db}).getOne,method:Ga.Get,route:"/:model/:id"},{handler:Oa({dataClient:this.db}).updateMany,method:Ga.Put,route:"/:model"},{handler:Oa({dataClient:this.db}).updateOne,method:Ga.Put,route:"/:model/:id"}],name:"core-api"}).listen(),await this.db.connect({alter:!1,force:!1}),F0.info("Core API Server started")}};export{qc as CoreAPIServer};
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/** @license React v17.0.2
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v17.0.2
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
//# sourceMappingURL=index.es.js.map
