var uc=Object.create;var ve=Object.defineProperty;var lc=Object.getOwnPropertyDescriptor;var oc=Object.getOwnPropertyNames,He=Object.getOwnPropertySymbols,mc=Object.getPrototypeOf,nn=Object.prototype.hasOwnProperty,Zr=Object.prototype.propertyIsEnumerable;var en=(a,b,N)=>b in a?ve(a,b,{enumerable:!0,configurable:!0,writable:!0,value:N}):a[b]=N,sn=(a,b)=>{for(var N in b||(b={}))nn.call(b,N)&&en(a,N,b[N]);if(He)for(var N of He(b))Zr.call(b,N)&&en(a,N,b[N]);return a};var $r=a=>ve(a,"__esModule",{value:!0});var Qr=(a,b)=>{var N={};for(var x in a)nn.call(a,x)&&b.indexOf(x)<0&&(N[x]=a[x]);if(a!=null&&He)for(var x of He(a))b.indexOf(x)<0&&Zr.call(a,x)&&(N[x]=a[x]);return N};var cc=(a,b)=>{for(var N in b)ve(a,N,{get:b[N],enumerable:!0})},Xr=(a,b,N,x)=>{if(b&&typeof b=="object"||typeof b=="function")for(let L of oc(b))!nn.call(a,L)&&(N||L!=="default")&&ve(a,L,{get:()=>b[L],enumerable:!(x=lc(b,L))||x.enumerable});return a},be=(a,b)=>Xr($r(ve(a!=null?uc(mc(a)):{},"default",!b&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),Ac=(a=>(b,N)=>a&&a.get(b)||(N=Xr($r({}),b,1),a&&a.set(b,N),N))(typeof WeakMap!="undefined"?new WeakMap:0);var p=(a,b,N)=>(en(a,typeof b!="symbol"?b+"":b,N),N);var _A={};cc(_A,{CoreAPIServer:()=>om});var rn;(function(a){a.Comment="comment",a.Create="create",a.Delete="delete",a.Edit="edit",a.Invoice="invoice",a.Message="message",a.PageView="pageView",a.Paid="paid",a.Payment="payment",a.Purchase="purchase",a.Referral="referral",a.Renewal="renewal",a.Signup="signup",a.Subscription="subscription",a.Upgrade="upgrade"})(rn||(rn={}));var tn;(function(a){a.Business="business",a.Engineering="engineering",a.Exception="exception",a.LogMessage="log-message",a.Marketing="marketing",a.PageLeave="page-leave",a.PageView="page-view",a.Product="product",a.QualityManagement="quality-management",a.UserAccess="user-access",a.UserLogin="user-login",a.UserLogout="user-logout",a.UserSignup="user-signup",a.UserPreferencesChanged="user-preferences-changed",a.WebsiteVisit="website-visit"})(tn||(tn={}));var un;(function(a){a.CloseTab="close-tab",a.ExternalLink="external-link",a.NavigateAway="navigate-away",a.Unknown="unknown"})(un||(un={}));var ln;(function(a){a.Ecs="Ecs"})(ln||(ln={}));var on;(function(a){a.Finished="Finished",a.Queued="Queued",a.Running="Running",a.Started="Started"})(on||(on={}));var mn;(function(a){a.Mobile="mobile",a.TV="tv",a.Watch="watch",a.Web="web"})(mn||(mn={}));var cn;(function(a){a.Development="Development",a.NonProduction="NonProduction",a.Production="Production"})(cn||(cn={}));var An;(function(a){a.Completed="completed",a.Started="started",a.Uncompleted="uncompleted"})(An||(An={}));var dn;(function(a){a.Build="Build",a.Deployment="Deployment",a.Test="Test"})(dn||(dn={}));var fn;(function(a){a.Canceled="Canceled",a.Completed="Completed",a.Failed="Failed",a.Running="Running",a.Queued="Queued",a.Waiting="Waiting"})(fn||(fn={}));var gn;(function(a){a.Canceled="Canceled",a.Completed="Completed",a.Failed="Failed",a.Running="Running",a.Queued="Queued",a.Waiting="Waiting"})(gn||(gn={}));var hn;(function(a){a.ForgotPassword="forgot_password",a.Index="index",a.Login="login",a.PageNotFound="404",a.Signup="signup",a.VerifyCode="verify_code"})(hn||(hn={}));var _n;(function(a){a.Info="info",a.Warning="warning",a.Error="error",a.Success="success"})(_n||(_n={}));var In;(function(a){a.Details="details",a.Dialog="dialog"})(In||(In={}));var pn;(function(a){a.Info="info",a.Warning="warning",a.Error="error",a.Success="success"})(pn||(pn={}));var Sn;(function(a){a.AccountBalance="AccountBalance",a.UserAssets="UserAssets",a.UserCreditCardDebt="UserCreditCardDebt",a.UserCreditLimit="UserCreditLimit",a.UserCreditUtilization="UserCreditUtilization",a.UserDebt="UserDebt",a.UserInvestments="UserInvestments",a.UserRetirement="UserRetirement",a.UserSavings="UserSavings"})(Sn||(Sn={}));var En;(function(a){a.DateTime="date_time",a.True="true",a.False="false",a.UniqueId="unique_id"})(En||(En={}));var Tn;(function(a){a.DomainModel="domain_entity",a.GenericModel="generic_entity"})(Tn||(Tn={}));var vn;(function(a){a.AirportCode="airport-code",a.BankIDCode="bank-id-code",a.BitcoinAddress="bitcoin-address",a.Boolean="boolean",a.City="city",a.Color="color",a.CountryCode="country-code",a.CreditCard="credit-card",a.CurrencyAmount="currency-amount",a.CurrencyCode="currency-code",a.DataURI="data-uri",a.Date="date",a.DateRange="date-range",a.DateTime="date-time",a.DayOfMonth="day-of-month",a.DomainName="domain-name",a.EmailAddress="email-address",a.EthereumAddress="ethereum-address",a.EAN="european-article-number",a.EIN="employer-identification-number",a.Float="float",a.GeographicCoordinate="geographic-coordinate",a.GeographicCoordinates="geographic-coordinates",a.GitRepositoryURL="git-repository-url",a.HSLColor="hsl-color",a.HexColor="hex-color",a.Hexadecimal="hexadecimal",a.IBAN="international-bank-account-number",a.IMEI="international-mobile-equipment-identifier",a.IPAddress="ip-address",a.IPAddressRange="ip-address-range",a.ISBN="international-standard-book-number",a.ISIN="international-stock-number",a.ISMN="international-standard-music-number",a.ISSN="international-standard-serial-number",a.ISO8601="iso-8601",a.ISO31661Alpha2="iso-31661-alpha-2",a.ISO31661Alpha3="iso-31661-alpha-3",a.ISO4217="iso-4217",a.Image="image",a.Integer="integer",a.JSON="json",a.LanguageCode="language-code",a.LicensePlateNumber="license-plate-number",a.LongText="long-text",a.MD5="md5",a.Markdown="markdown",a.Menu="menu",a.Number="number",a.MACAddress="mac-address",a.MagnetURI="magnet-uri",a.MimeType="mime-type",a.Month="month",a.Password="password",a.PassportNumber="passport-number",a.Percent="percent",a.PhoneNumber="phone-number",a.Port="port",a.PostalCode="postal-code",a.Province="province",a.RFC3339="rfc-3339",a.RGBColor="rgb-color",a.SemanticVersion="semantic-version",a.SSN="social-security-number",a.State="state",a.StreetAddress="street-address",a.String="string",a.Tags="tags",a.TaxIDNumber="tax-id-number",a.Time="time",a.TimeOfDay="time-of-day",a.TimeRange="time-range",a.TimezoneRegion="timezone-region",a.URL="url",a.URLPath="url-path",a.UUID="uuid",a.VATIDNumber="value-added-tax-id-number",a.VerificationCode="verification-code",a.Video="video",a.Weekday="weekday",a.Year="year"})(vn||(vn={}));var bn;(function(a){a.Critical="Critical",a.Error="Error",a.Fatal="Fatal",a.Warning="Warning"})(bn||(bn={}));var Un;(function(a){a.Contains="contains",a.HasCharacterCount="has-character-count",a.HasNumberCount="has-number-count",a.HasLetterCount="has-letter-count",a.HasLowercaseCount="has-lowercase-count",a.HasSpacesCount="has-spaces-count",a.HasSymbolCount="has-symbol-count",a.HasUppercaseCount="has-uppercase-count",a.IsAfter="is-after",a.IsAfterOrEqual="is-after-or-equal",a.IsAirport="is-airport",a.IsAlpha="is-alpha",a.IsAlphanumeric="is-alphanumeric",a.IsAlgorithmHash="is-algorithm-hash",a.IsAscii="is-ascii",a.IsBase64="is-base-64",a.IsBefore="is-before",a.IsBeforeOrAfter="is-before-or-after",a.IsBeforeOrEqual="is-before-or-equal",a.IsBetween="is-between",a.IsBIC="is-bic",a.IsBitcoinAddress="is-bitcoin-address",a.IsBoolean="is-boolean",a.IsColor="is-color",a.IsComplexEnough="is-complex-enough",a.IsCountry="is-country",a.IsCreditCard="is-credit-card",a.IsCurrency="is-currency",a.IsDataURI="is-data-uri",a.IsDate="is-date",a.IsDateRange="is-date-range",a.IsDateTime="is-date-time",a.IsDayOfMonth="is-day-of-month",a.IsDecimal="is-decimal",a.IsDivisibleBy="is-divisible-by",a.IsDomainName="is-domain-name",a.IsEmailAddress="is-email-address",a.IsEthereumAddress="is-ethereum-address",a.IsEAN="is-ean",a.IsEIN="is-ein",a.IsEqual="is-equal",a.IsEvenNumber="is-even-number",a.IsFloat="is-float",a.IsIBAN="is-iban",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsHSLColor="is-hsl-color",a.IsHexColor="is-hex-color",a.IsHexadecimal="is-hexadecimal",a.IsIdentityCardCode="is-identity-card-code",a.IsIMEI="is-imei",a.IsInIPAddressRange="is-in-ip-address-range",a.IsInList="is-in-list",a.IsInTheLast="is-in-the-last",a.IsInteger="is-integer",a.IsIPAddress="is-ip-address",a.IsIPAddressRange="is-ip-address-range",a.IsISBN="is-isbn",a.IsISIN="is-isin",a.IsISMN="is-ismn",a.IsISRC="is-isrc",a.IsISSN="is-issn",a.IsISO4217="is-iso-4217",a.IsISO8601="is-iso-8601",a.IsISO31661Alpha2="is-iso-31661-alpha-2",a.IsISO31661Alpha3="is-iso-31661-alpha-3",a.IsJSON="is-json",a.IsLanguage="is-language",a.IsLatitude="is-latitude",a.IsLongitude="is-longitude",a.IsLengthEqual="is-length-equal",a.IsLengthGreaterThan="is-length-greater-than",a.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",a.IsLengthLessThan="is-length-less-than",a.IsLengthLessThanOrEqual="is-length-less-than-or-equal",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsLicensePlateNumber="is-license-plate-number",a.IsLowercase="is-lowercase",a.IsOctal="is-octal",a.IsMACAddress="is-mac-address",a.IsMD5="is-md5",a.IsMagnetURI="is-magnet-uri",a.IsMarkdown="is-markdown",a.IsMimeType="is-mime-type",a.IsMonth="is-month",a.IsNegativeNumber="is-negative-number",a.IsNotDate="is-not-date",a.IsNotEqual="is-not-equal",a.IsNotInIPAddressRange="is-not-in-ip-address-range",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsNotRegexMatch="is-not-regex-match",a.IsNotToday="is-not-today",a.IsNumber="is-number",a.IsNumeric="is-numeric",a.IsOddNumber="is-odd-number",a.IsPassportNumber="is-passport-number",a.IsPhoneNumber="is-phone-number",a.IsPort="is-port",a.IsPositiveNumber="is-positive-number",a.IsPostalCode="is-postal-code",a.IsProvince="is-province",a.IsRGBColor="is-rgb-color",a.IsRegexMatch="is-regex-match",a.IsRequired="is-required",a.IsSemanticVersion="is-semantic-version",a.IsSlug="is-slug",a.IsSSN="is-ssn",a.IsState="is-state",a.IsStreetAddress="is-street-address",a.IsString="is-string",a.IsStrongPassword="is-strong-password",a.IsTags="is-tags",a.IsTaxIDNumber="is-tax-id-number",a.IsThisMonth="is-this-month",a.IsThisQuarter="is-this-quarter",a.IsThisWeek="is-this-week",a.IsThisWeekend="is-this-weekend",a.IsThisYear="is-this-year",a.IsTime="is-time",a.IsTimeOfDay="is-time-of-day",a.IsTimeRange="is-time-range",a.IsToday="is-today",a.IsURL="is-url",a.IsUUID="is-uuid",a.IsUppercase="is-uppercase",a.IsUsernameAvailable="is-username-available",a.IsValidStreetAddress="is-valid-street-address",a.IsVATIDNumber="is-vat-id-number",a.IsWeekday="is-weekday",a.IsWeekend="is-weekend",a.IsYear="is-year"})(Un||(Un={}));var Nn;(function(a){a.IsAuthenticated="is-authenticated",a.IsNotAuthenticated="is-not-authenticated",a.IsUsernameAvailable="is-username-available",a.PasswordMismatch="password-mismatch"})(Nn||(Nn={}));var Bn;(function(a){a.IsHSLColor="is-hsl-color",a.IsHexColor="is-hex-color",a.IsNotNull="is-not-null",a.IsRGBColor="is-rgb-color",a.IsString="is-string"})(Bn||(Bn={}));var Pn;(function(a){a.IsBetween="is-between",a.IsCurrency="is-currency",a.IsDecimal="is-decimal",a.IsDivisibleBy="is-divisible-by",a.IsEvenNumber="is-even-number",a.IsFloat="is-float",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsInteger="is-integer",a.IsISO8601="is-iso-8601",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsNegativeNumber="is-negative-number",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsNumber="is-number",a.IsOddNumber="is-odd-number",a.IsPositiveNumber="is-positive-number"})(Pn||(Pn={}));var yn;(function(a){a.IsBitcoinAddress="is-bitcoin-address",a.IsEqual="is-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null"})(yn||(yn={}));var kn;(function(a){a.IsEthereumAddress="is-ethereum-address",a.IsEqual="is-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null"})(kn||(kn={}));var Mn;(function(a){a.IsEqual="is-equal",a.IsJSON="is-json",a.IsLanguage="is-language",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null"})(Mn||(Mn={}));var Dn;(function(a){a.IsAlpha="is-alpha",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string"})(Dn||(Dn={}));var xn;(function(a){a.IsAlpha="is-alpha",a.IsCountry="is-country",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string"})(xn||(xn={}));var Fn;(function(a){a.IsEqual="is-equal",a.IsFloat="is-float",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsNumeric="is-numeric"})(Fn||(Fn={}));var Ln;(function(a){a.IsEqual="is-equal",a.IsFloat="is-float",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsNumeric="is-numeric"})(Ln||(Ln={}));var wn;(function(a){a.IsEqual="is-equal",a.IsNotEqual="is-not-equal",a.IsPostalCode="is-postal-code",a.IsNotNull="is-not-null"})(wn||(wn={}));var Gn;(function(a){a.IsAlpha="is-alpha",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsProvince="is-province",a.IsString="is-string"})(Gn||(Gn={}));var qn;(function(a){a.IsAlpha="is-alpha",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsState="is-state",a.IsString="is-string"})(qn||(qn={}));var Kn;(function(a){a.IsAlphanumeric="is-alphanumeric",a.IsEqual="is-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsString="is-string",a.IsStreetAddress="is-street-address"})(Kn||(Kn={}));var On;(function(a){a.IsAirport="is-airport",a.IsAlpha="is-alpha",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string"})(On||(On={}));var jn;(function(a){a.IsAlgorithmHash="is-algorithm-hash",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string"})(jn||(jn={}));var Hn;(function(a){a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsSemanticVersion="is-semantic-version",a.IsString="is-string"})(Hn||(Hn={}));var Wn;(function(a){a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string",a.IsUUID="is-uuid"})(Wn||(Wn={}));var zn;(function(a){a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsMD5="is-md5",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string"})(zn||(zn={}));var Vn;(function(a){a.IsBoolean="is-boolean",a.IsEqual="is-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null"})(Vn||(Vn={}));var Rn;(function(a){a.IsAfter="is-after",a.IsAfterOrEqual="is-after-or-equal",a.IsBefore="is-before",a.IsBeforeOrEqual="is-before-or-equal",a.IsBetween="is-between",a.IsDate="is-date",a.IsEqual="is-equal",a.IsNotDate="is-not-date",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsNotToday="is-not-today",a.IsThisWeek="is-this-week",a.IsThisMonth="is-this-month",a.IsThisQuarter="is-this-quarter",a.IsThisYear="is-this-year",a.IsToday="is-today",a.IsWeekend="is-weekend"})(Rn||(Rn={}));var Yn;(function(a){a.IsAfter="is-after",a.IsBefore="is-before",a.IsBeforeOrAfter="is-before-or-after",a.IsBetween="is-between",a.IsDate="is-date",a.IsDateRange="is-date-range",a.IsEqual="is-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null"})(Yn||(Yn={}));var Jn;(function(a){a.IsAfter="is-after",a.IsAfterOrEqual="is-after-or-equal",a.IsBefore="is-before",a.IsBeforeOrEqual="is-before-or-equal",a.IsBetween="is-between",a.IsDate="is-date",a.IsEqual="is-equal",a.IsNotDate="is-not-date",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsNotToday="is-not-today",a.IsThisWeek="is-this-week",a.IsThisMonth="is-this-month",a.IsThisQuarter="is-this-quarter",a.IsThisYear="is-this-year",a.IsToday="is-today",a.IsWeekend="is-weekend"})(Jn||(Jn={}));var Zn;(function(a){a.IsAfter="is-after",a.IsAfterOrEqual="is-after-or-equal",a.IsBefore="is-before",a.IsBeforeOrEqual="is-before-or-equal",a.IsBetween="is-between",a.IsDayOfMonth="is-day-of-month",a.IsEvenNumber="is-even-number",a.IsEqual="is-equal",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsInteger="is-integer",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsNumber="is-number",a.IsOddNumber="is-odd-number",a.IsToday="is-today",a.IsWeekday="is-weekday",a.IsWeekend="is-weekend"})(Zn||(Zn={}));var $n;(function(a){a.IsAfter="is-after",a.IsAfterOrEqual="is-after-or-equal",a.IsBefore="is-before",a.IsBeforeOrEqual="is-before-or-equal",a.IsBetween="is-between",a.IsEvenNumber="is-even-number",a.IsEqual="is-equal",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsInteger="is-integer",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsMonth="is-month",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsNumber="is-number",a.IsOddNumber="is-odd-number",a.IsThisMonth="is-this-month"})($n||($n={}));var Qn;(function(a){a.IsAfter="is-after",a.IsAfterOrEqual="is-after-or-equal",a.IsBefore="is-before",a.IsBeforeOrEqual="is-before-or-equal",a.IsBetween="is-between",a.IsEqual="is-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsTime="is-time"})(Qn||(Qn={}));var Xn;(function(a){a.IsAfter="is-after",a.IsBefore="is-before",a.IsBeforeOrAfter="is-before-or-after",a.IsBetween="is-between",a.IsTime="is-time",a.IsEqual="is-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsTimeRange="is-time-range"})(Xn||(Xn={}));var Cn;(function(a){a.IsAfter="is-after",a.IsBefore="is-before",a.IsBeforeOrAfter="is-before-or-after",a.IsBetween="is-between",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsTimeOfDay="is-time-of-day",a.IsTimeRange="is-time-range"})(Cn||(Cn={}));var as;(function(a){a.IsAfter="is-after",a.IsAfterOrEqual="is-after-or-equal",a.IsBefore="is-before",a.IsBeforeOrEqual="is-before-or-equal",a.IsBetween="is-between",a.IsEvenNumber="is-even-number",a.IsEqual="is-equal",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsNumber="is-number",a.IsOddNumber="is-odd-number",a.IsWeekday="is-weekday",a.IsWeekend="is-weekend"})(as||(as={}));var es;(function(a){a.IsAfter="is-after",a.IsAfterOrEqual="is-after-or-equal",a.IsBefore="is-before",a.IsBeforeOrEqual="is-before-or-equal",a.IsBetween="is-between",a.IsEvenNumber="is-even-number",a.IsEqual="is-equal",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsInteger="is-integer",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsNumber="is-number",a.IsOddNumber="is-odd-number",a.IsThisYear="is-this-year",a.IsYear="is-year"})(es||(es={}));var is;(function(a){a.IsEqual="is-equal",a.IsHexadecimal="is-hexadecimal",a.IsLengthEqual="is-length-equal",a.IsLengthGreaterThan="is-length-greater-than",a.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",a.IsLengthLessThan="is-length-less-than",a.IsLengthLessThanOrEqual="is-length-less-than-or-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsString="is-string"})(is||(is={}));var ns;(function(a){a.IsEqual="is-equal",a.IsJSON="is-json",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null"})(ns||(ns={}));var ss;(function(a){a.IsEqual="is-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsMarkdown="is-markdown",a.IsString="is-string"})(ss||(ss={}));var rs;(function(a){a.Contains="contains",a.IsEqual="is-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null"})(rs||(rs={}));var ts;(function(a){a.Contains="contains",a.IsEqual="is-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null"})(ts||(ts={}));var us;(function(a){a.Contains="contains",a.IsDataURI="is-data-uri",a.IsEqual="is-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsString="is-string"})(us||(us={}));var ls;(function(a){a.Contains="contains",a.IsDomainName="is-domain-name",a.IsEqual="is-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsString="is-string"})(ls||(ls={}));var os;(function(a){a.Contains="contains",a.IsEmailAddress="is-email-address",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string"})(os||(os={}));var ms;(function(a){a.Contains="contains",a.IsEqual="is-equal",a.IsIPAddress="is-ip-address",a.IsInIPAddressRange="is-in-ip-address-range",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotInIPAddressRange="is-not-in-ip-address-range",a.IsNotNull="is-not-null",a.IsString="is-string"})(ms||(ms={}));var cs;(function(a){a.IsEqual="is-equal",a.IsIPAddressRange="is-ip-address-range",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotInIPAddressRange="is-not-in-ip-address-range",a.IsNotNull="is-not-null",a.IsString="is-string"})(cs||(cs={}));var As;(function(a){a.IsEqual="is-equal",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsInteger="is-integer",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null"})(As||(As={}));var ds;(function(a){a.Contains="contains",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsMACAddress="is-mac-address",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string"})(ds||(ds={}));var fs;(function(a){a.Contains="contains",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsMagnetURI="is-magnet-uri",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string"})(fs||(fs={}));var gs;(function(a){a.Contains="contains",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsMimeType="is-mime-type",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string"})(gs||(gs={}));var hs;(function(a){a.Contains="contains",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string",a.IsSlug="is-slug"})(hs||(hs={}));var _s;(function(a){a.Contains="contains",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string",a.IsURL="is-url"})(_s||(_s={}));var Is;(function(a){a.IsAfter="is-after",a.IsAfterOrEqual="is-after-or-equal",a.IsBefore="is-before",a.IsBeforeOrEqual="is-before-or-equal",a.IsBetween="is-between",a.IsDecimal="is-decimal",a.IsDivisibleBy="is-divisible-by",a.IsEAN="is-ean",a.IsEIN="is-ein",a.IsEqual="is-equal",a.IsEvenNumber="is-even-number",a.IsFloat="is-float",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsInt="is-integer",a.IsISBN="is-isbn",a.IsISMN="is-ismn",a.IsISSN="is-issn",a.IsLatitude="is-latitude",a.IsLongitude="is-longitude",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsMACAddress="is-mac-address",a.IsNumber="is-number",a.IsNegativeNumber="is-negative-number",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsOddNumber="is-odd-number",a.IsPassportNumber="is-passport-number",a.IsPhoneNumber="is-phone-number",a.IsPort="is-port",a.IsPositiveNumber="is-positive-number",a.IsPostalCode="is-postal-code",a.IsSemanticVersion="is-semantic-version",a.IsSSN="is-ssn",a.IsTaxIDNumber="is-tax-id-number",a.IsUUID="is-uuid",a.IsVATIDNumber="is-vat-id-number"})(Is||(Is={}));var ps;(function(a){a.IsEqual="is-equal",a.IsFloat="is-float",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsNumber="is-number",a.IsNumeric="is-numeric"})(ps||(ps={}));var Ss;(function(a){a.IsEqual="is-equal",a.IsInteger="is-integer",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsNumber="is-number",a.IsNumeric="is-numeric"})(Ss||(Ss={}));var Es;(function(a){a.IsCreditCard="is-credit-card",a.IsEqual="is-equal",a.IsLengthEqual="is-length-equal",a.IsLengthGreaterThan="is-length-greater-than",a.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",a.IsLengthLessThan="is-length-less-than",a.IsLengthLessThanOrEqual="is-length-less-than-or-equal",a.IsNotEqual="is-not-equal",a.IsNotNull="is-not-null",a.IsRegexMatch="is-regex-match",a.IsNotRegexMatch="is-not-regex-match"})(Es||(Es={}));var Ts;(function(a){a.isEmailAddress="is-email-address",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsLengthEqual="is-length-equal",a.IsLengthGreaterThan="is-length-greater-than",a.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",a.IsLengthLessThan="is-length-less-than",a.IsLengthLessThanOrEqual="is-length-less-than-or-equal",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsRegexMatch="is-regex-match",a.IsNotRegexMatch="is-not-regex-match"})(Ts||(Ts={}));var Cr;(function(a){a.IsLicensePlateNumber="is-license-plate-number",a.IsNotNull="is-not-null",a.IsNotRegexMatch="is-not-regex-match",a.IsString="is-string",a.IsRegexMatch="is-regex-match"})(Cr||(Cr={}));var vs;(function(a){a.IsNotNull="is-not-null",a.IsPassportNumber="is-passport-number",a.IsString="is-string",a.IsRegexMatch="is-regex-match"})(vs||(vs={}));var bs;(function(a){a.IsComplexEnough="is-complex-enough",a.IsInList="is-in-list",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsNotRegexMatch="is-not-regex-match",a.IsLengthGreaterThan="is-length-greater-than",a.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",a.IsLengthLessThan="is-length-less-than",a.IsLengthLessThanOrEqual="is-length-less-than-or-equal",a.IsStrongPassword="is-strong-password",a.IsString="is-string",a.IsRegexMatch="is-regex-match"})(bs||(bs={}));var Us;(function(a){a.IsNotNull="is-not-null",a.IsNotRegexMatch="is-not-regex-match",a.IsNumber="is-number",a.IsPhoneNumber="is-phone-number",a.IsRegexMatch="is-regex-match"})(Us||(Us={}));var Ns;(function(a){a.IsNotNull="is-not-null",a.IsSSN="is-ssn",a.IsString="is-string",a.IsRegexMatch="is-regex-match"})(Ns||(Ns={}));var Bs;(function(a){a.Contains="contains",a.IsBIC="is-bic",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string"})(Bs||(Bs={}));var Ps;(function(a){a.Contains="contains",a.IsEAN="is-ean",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string"})(Ps||(Ps={}));var ys;(function(a){a.Contains="contains",a.IsEIN="is-ein",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string"})(ys||(ys={}));var ks;(function(a){a.Contains="contains",a.IsEqual="is-equal",a.IsIBAN="is-iban",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string"})(ks||(ks={}));var Ms;(function(a){a.Contains="contains",a.IsEqual="is-equal",a.IsISBN="is-isbn",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string"})(Ms||(Ms={}));var Ds;(function(a){a.Contains="contains",a.IsEqual="is-equal",a.IsISIN="is-isin",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string"})(Ds||(Ds={}));var xs;(function(a){a.Contains="contains",a.IsEqual="is-equal",a.IsISMN="is-ismn",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string"})(xs||(xs={}));var Fs;(function(a){a.Contains="contains",a.IsEqual="is-equal",a.IsISSN="is-issn",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string"})(Fs||(Fs={}));var Ls;(function(a){a.Contains="contains",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string",a.IsTaxIDNumber="is-tax-id-number"})(Ls||(Ls={}));var ws;(function(a){a.Contains="contains",a.IsEqual="is-equal",a.IsInList="is-in-list",a.IsNotEqual="is-not-equal",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsString="is-string",a.IsVATIDNumber="is-vat-id-number"})(ws||(ws={}));var Gs;(function(a){a.Contains="contains",a.HasNumberCount="has-number-count",a.HasLowercaseCount="has-lowercase-count",a.HasLetterCount="has-letter-count",a.HasSpacesCount="has-spaces-count",a.HasSymbolCount="has-symbol-count",a.HasUppercaseCount="has-uppercase-count",a.IsAlpha="is-alpha",a.IsAlphanumeric="is-alphanumeric",a.IsAscii="is-ascii",a.IsBase64="is-base-64",a.IsColor="is-color",a.IsComplexEnough="is-complex-enough",a.IsCreditCard="is-credit-card",a.IsDataURI="is-data-uri",a.IsDomainName="is-domain-name",a.IsEmailAddress="is-email-address",a.IsEthereumAddress="is-ethereum-address",a.IsEAN="is-ean",a.IsEIN="is-ein",a.IsEqual="is-equal",a.IsIBAN="is-iban",a.IsHSLColor="is-hsl-color",a.IsHexColor="is-hex-color",a.IsHexadecimal="is-hexadecimal",a.IsIdentityCardCode="is-identity-card-code",a.IsIMEI="is-imei",a.IsInList="is-in-list",a.IsIPAddress="is-ip-address",a.IsInIPAddressRange="is-in-ip-address-range",a.IsISBN="is-isbn",a.IsISIN="is-isin",a.IsISMN="is-ismn",a.IsISRC="is-isrc",a.IsISSN="is-issn",a.IsLanguage="is-language",a.IsLatitude="is-latitude",a.IsLongitude="is-longitude",a.IsLengthEqual="is-length-equal",a.IsLengthGreaterThan="is-length-greater-than",a.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",a.IsLengthLessThan="is-length-less-than",a.IsLengthLessThanOrEqual="is-length-less-than-or-equal",a.IsLicensePlateNumber="is-license-plate-number",a.IsLowercase="is-lowercase",a.IsOctal="is-octal",a.IsMACAddress="is-mac-address",a.IsMD5="is-md5",a.IsMagnetURI="is-magnet-uri",a.IsMarkdown="is-markdown",a.IsMimeType="is-mime-type",a.IsMonth="is-month",a.IsNotInIPAddressRange="is-not-in-ip-address-range",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsNotRegexMatch="is-not-regex-match",a.IsNumber="is-number",a.IsNumeric="is-numeric",a.IsPassportNumber="is-passport-number",a.IsPhoneNumber="is-phone-number",a.IsPort="is-port",a.IsPostalCode="is-postal-code",a.IsProvince="is-province",a.IsRegexMatch="is-regex-match",a.IsSemanticVersion="is-semantic-version",a.IsSlug="is-slug",a.IsSSN="is-ssn",a.IsState="is-state",a.IsStreetAddress="is-street-address",a.IsString="is-string",a.IsTaxIDNumber="is-tax-id-number",a.IsURL="is-url",a.IsUUID="is-uuid",a.IsUppercase="is-uppercase",a.IsVATIDNumber="is-vat-id-number",a.IsWeekday="is-weekday",a.IsWeekend="is-weekend",a.IsYear="is-year"})(Gs||(Gs={}));var qs;(function(a){a.Contains="contains",a.IsAlpha="is-alpha",a.IsAlphanumeric="is-alphanumeric",a.IsInList="is-in-list",a.IsMarkdown="is-markdown",a.IsNotInList="is-not-in-list",a.IsNumeric="is-numeric",a.IsLowercase="is-lowercase",a.IsString="is-string",a.IsUppercase="is-uppercase"})(qs||(qs={}));var Ks;(function(a){a.InvalidCharacters="invalid-characters",a.InvalidPattern="invalid-pattern",a.NotComplexEnough="not-complex-enough",a.NotUnique="not-unique",a.NotValidEmail="not-valid-email",a.TooLong="too-long",a.TooShort="too-short",a.Required="required"})(Ks||(Ks={}));var Os;(function(a){a[a.Allowed=0]="Allowed",a[a.Blocked=1]="Blocked"})(Os||(Os={}));var js;(function(a){a.Canceled="Canceled",a.Completed="Completed",a.Created="Created",a.Faulted="Faulted",a.Queued="Queued",a.Running="Running",a.Waiting="Waiting"})(js||(js={}));var Hs;(function(a){a.Archived="ARCHIVED",a.Compromised="COMPROMISED",a.Confirmed="CONFIRMED",a.ForcePasswordChange="FORCE_CHANGE_PASSWORD",a.ResetRequired="RESET_REQUIRED",a.Unconfirmed="UNCONFIRMED",a.Unknown="UNKNOWN"})(Hs||(Hs={}));var at;(function(a){a.Code="code",a.Link="link"})(at||(at={}));var Ws;(function(a){a.Owner="Owner",a.Admin="Admin",a.User="User",a.Visitor="Visitor"})(Ws||(Ws={}));var zs;(function(a){a.RequiresPaymentMethod="requires_payment_method",a.RequiresConfirmation="requires_confirmation",a.RequiresAction="requires_action",a.Processing="processing",a.RequiresCapture="requires_capture",a.Canceled="canceled",a.Succeeded="succeeded"})(zs||(zs={}));var Vs;(function(a){a.Incomplete="incomplete",a.IncompleteExpired="incomplete_expired",a.Trialing="trialing",a.Active="active",a.PastDue="past_due",a.Canceled="canceled",a.Unpaid="unpaid"})(Vs||(Vs={}));var Rs;(function(a){a.Monthly="monthly",a.Quarterly="quarterly",a.Yearly="yearly",a.Lifetime="lifetime"})(Rs||(Rs={}));var Ys;(function(a){a.Delivered="delivered",a.Read="read",a.Sending="sending",a.Sent="sent"})(Ys||(Ys={}));var Js;(function(a){a.Audio="audio",a.File="file",a.Image="image",a.Text="text",a.Video="video"})(Js||(Js={}));var Zs;(function(a){a.Audio="audio",a.File="file",a.Image="image",a.Video="video"})(Zs||(Zs={}));var $s;(function(a){a.Angry="angry",a.Laugh="laugh",a.Like="like",a.Love="love",a.Sad="sad",a.Wow="wow",a.Wink="wink",a.Yay="yay"})($s||($s={}));var Qs;(function(a){a.Email="email",a.PhoneNumber="phone_number"})(Qs||(Qs={}));var V;(function(a){a.Analytics="analytics",a.Critical="critical",a.Debug="debug",a.Exception="exception",a.Http="http",a.Info="info",a.Warning="warning"})(V||(V={}));var Ka;(function(a){a.Delete="delete",a.Get="get",a.Head="head",a.Patch="patch",a.Post="post",a.Put="put"})(Ka||(Ka={}));var Xs;(function(a){a[a.CONTINUE=100]="CONTINUE",a[a.SWITCHING_PROTOCOLS=101]="SWITCHING_PROTOCOLS",a[a.PROCESSING=102]="PROCESSING",a[a.OK=200]="OK",a[a.CREATED=201]="CREATED",a[a.ACCEPTED=202]="ACCEPTED",a[a.NON_AUTHORITATIVE_INFORMATION=203]="NON_AUTHORITATIVE_INFORMATION",a[a.NO_CONTENT=204]="NO_CONTENT",a[a.RESET_CONTENT=205]="RESET_CONTENT",a[a.PARTIAL_CONTENT=206]="PARTIAL_CONTENT",a[a.MULTI_STATUS=207]="MULTI_STATUS",a[a.ALREADY_REPORTED=208]="ALREADY_REPORTED",a[a.IM_USED=226]="IM_USED",a[a.MULTIPLE_CHOICES=300]="MULTIPLE_CHOICES",a[a.MOVED_PERMANENTLY=301]="MOVED_PERMANENTLY",a[a.FOUND=302]="FOUND",a[a.SEE_OTHER=303]="SEE_OTHER",a[a.NOT_MODIFIED=304]="NOT_MODIFIED",a[a.USE_PROXY=305]="USE_PROXY",a[a.SWITCH_PROXY=306]="SWITCH_PROXY",a[a.TEMPORARY_REDIRECT=307]="TEMPORARY_REDIRECT",a[a.PERMANENT_REDIRECT=308]="PERMANENT_REDIRECT",a[a.BAD_REQUEST=400]="BAD_REQUEST",a[a.UNAUTHORIZED=401]="UNAUTHORIZED",a[a.PAYMENT_REQUIRED=402]="PAYMENT_REQUIRED",a[a.FORBIDDEN=403]="FORBIDDEN",a[a.NOT_FOUND=404]="NOT_FOUND",a[a.METHOD_NOT_ALLOWED=405]="METHOD_NOT_ALLOWED",a[a.NOT_ACCEPTABLE=406]="NOT_ACCEPTABLE",a[a.PROXY_AUTHENTICATION_REQUIRED=407]="PROXY_AUTHENTICATION_REQUIRED",a[a.REQUEST_TIMEOUT=408]="REQUEST_TIMEOUT",a[a.CONFLICT=409]="CONFLICT",a[a.GONE=410]="GONE",a[a.LENGTH_REQUIRED=411]="LENGTH_REQUIRED",a[a.PRECONDITION_FAILED=412]="PRECONDITION_FAILED",a[a.PAYLOAD_TOO_LARGE=413]="PAYLOAD_TOO_LARGE",a[a.URI_TOO_LONG=414]="URI_TOO_LONG",a[a.UNSUPPORTED_MEDIA_TYPE=415]="UNSUPPORTED_MEDIA_TYPE",a[a.RANGE_NOT_SATISFIABLE=416]="RANGE_NOT_SATISFIABLE",a[a.EXPECTATION_FAILED=417]="EXPECTATION_FAILED",a[a.I_AM_A_TEAPOT=418]="I_AM_A_TEAPOT",a[a.MISDIRECTED_REQUEST=421]="MISDIRECTED_REQUEST",a[a.UNPROCESSABLE_ENTITY=422]="UNPROCESSABLE_ENTITY",a[a.LOCKED=423]="LOCKED",a[a.FAILED_DEPENDENCY=424]="FAILED_DEPENDENCY",a[a.TOO_EARLY=425]="TOO_EARLY",a[a.UPGRADE_REQUIRED=426]="UPGRADE_REQUIRED",a[a.PRECONDITION_REQUIRED=428]="PRECONDITION_REQUIRED",a[a.TOO_MANY_REQUESTS=429]="TOO_MANY_REQUESTS",a[a.REQUEST_HEADER_FIELDS_TOO_LARGE=431]="REQUEST_HEADER_FIELDS_TOO_LARGE",a[a.UNAVAILABLE_FOR_LEGAL_REASONS=451]="UNAVAILABLE_FOR_LEGAL_REASONS",a[a.INTERNAL_SERVER_ERROR=500]="INTERNAL_SERVER_ERROR",a[a.NOT_IMPLEMENTED=501]="NOT_IMPLEMENTED",a[a.BAD_GATEWAY=502]="BAD_GATEWAY",a[a.SERVICE_UNAVAILABLE=503]="SERVICE_UNAVAILABLE",a[a.GATEWAY_TIMEOUT=504]="GATEWAY_TIMEOUT",a[a.HTTP_VERSION_NOT_SUPPORTED=505]="HTTP_VERSION_NOT_SUPPORTED",a[a.VARIANT_ALSO_NEGOTIATES=506]="VARIANT_ALSO_NEGOTIATES",a[a.INSUFFICIENT_STORAGE=507]="INSUFFICIENT_STORAGE",a[a.LOOP_DETECTED=508]="LOOP_DETECTED",a[a.BANDWIDTH_LIMIT_EXCEEDED=509]="BANDWIDTH_LIMIT_EXCEEDED",a[a.NOT_EXTENDED=510]="NOT_EXTENDED",a[a.NETWORK_AUTHENTICATION_REQUIRED=511]="NETWORK_AUTHENTICATION_REQUIRED"})(Xs||(Xs={}));var g;(function(a){a.Afghanistan="AF",a.Albania="AL",a.Algeria="DZ",a.AmericanSamoa="AS",a.Andorra="AD",a.Angola="AO",a.Anguilla="AI",a.Antarctica="AQ",a.AntiguaAndBarbuda="AG",a.Argentina="AR",a.Armenia="AM",a.Aruba="AW",a.Australia="AU",a.Austria="AT",a.Azerbaijan="AZ",a.Bahamas="BS",a.Bahrain="BH",a.Bangladesh="BD",a.Barbados="BB",a.Belarus="BY",a.Belgium="BE",a.Belize="BZ",a.Benin="BJ",a.Bermuda="BM",a.Bhutan="BT",a.Bolivia="BO",a.BosniaAndHerzegovina="BA",a.Botswana="BW",a.BouvetIsland="BV",a.Brazil="BR",a.BritishIndianOceanTerritory="IO",a.Brunei="BN",a.Bulgaria="BG",a.BurkinaFaso="BF",a.Burundi="BI",a.Cambodia="KH",a.Cameroon="CM",a.Canada="CA",a.CapeVerde="CV",a.CaymanIslands="KY",a.CentralAfricanRepublic="CF",a.Chad="TD",a.Chile="CL",a.China="CN",a.ChristmasIsland="CX",a.CocosKeelingIslands="CC",a.Colombia="CO",a.Comoros="KM",a.Congo="CG",a.CongoTheDemocraticRepublicOfThe="CD",a.CookIslands="CK",a.CostaRica="CR",a.CoteDIvoire="CI",a.Croatia="HR",a.Cuba="CU",a.Cyprus="CY",a.CzechRepublic="CZ",a.Denmark="DK",a.Djibouti="DJ",a.Dominica="DM",a.DominicanRepublic="DO",a.Ecuador="EC",a.Egypt="EG",a.ElSalvador="SV",a.EquatorialGuinea="GQ",a.Eritrea="ER",a.Estonia="EE",a.Ethiopia="ET",a.FalklandIslands="FK",a.FaroeIslands="FO",a.Fiji="FJ",a.Finland="FI",a.France="FR",a.FrenchGuiana="GF",a.FrenchPolynesia="PF",a.FrenchSouthernTerritories="TF",a.Gabon="GA",a.Gambia="GM",a.Georgia="GE",a.Germany="DE",a.Ghana="GH",a.Gibraltar="GI",a.Greece="GR",a.Greenland="GL",a.Grenada="GD",a.Guadeloupe="GP",a.Guam="GU",a.Guatemala="GT",a.Guernsey="GG",a.Guinea="GN",a.GuineaBissau="GW",a.Guyana="GY",a.Haiti="HT",a.HeardIslandMcdonaldIslands="HM",a.HolySeeVaticanCityState="VA",a.Honduras="HN",a.HongKong="HK",a.Hungary="HU",a.Iceland="IS",a.India="IN",a.Indonesia="ID",a.Iran="IR",a.Iraq="IQ",a.Ireland="IE",a.IsleOfMan="IM",a.Israel="IL",a.Italy="IT",a.Jamaica="JM",a.Japan="JP",a.Jersey="JE",a.Jordan="JO",a.Kazakhstan="KZ",a.Kenya="KE",a.Kiribati="KI",a.Kuwait="KW",a.Kyrgyzstan="KG",a.Laos="LA",a.Latvia="LV",a.Lebanon="LB",a.Lesotho="LS",a.Liberia="LR",a.Libya="LY",a.Liechtenstein="LI",a.Lithuania="LT",a.Luxembourg="LU",a.Macau="MO",a.Madagascar="MG",a.Malawi="MW",a.Malaysia="MY",a.Maldives="MV",a.Mali="ML",a.Malta="MT",a.MarshallIslands="MH",a.Martinique="MQ",a.Mauritania="MR",a.Mauritius="MU",a.Mayotte="YT",a.Mexico="MX",a.MicronesiaFederatedStatesOf="FM",a.Moldova="MD",a.Monaco="MC",a.Mongolia="MN",a.Montenegro="ME",a.Montserrat="MS",a.Morocco="MA",a.Mozambique="MZ",a.Myanmar="MM",a.Namibia="NA",a.Nauru="NR",a.Nepal="NP",a.Netherlands="NL",a.NetherlandsAntilles="AN",a.NewCaledonia="NC",a.NewZealand="NZ",a.NorthKorea="KP",a.Nicaragua="NI",a.Niger="NE",a.Nigeria="NG",a.Niue="NU",a.NorfolkIsland="NF",a.NorthMacedonia="MK",a.NorthernMarianaIslands="MP",a.Norway="NO",a.Oman="OM",a.Pakistan="PK",a.Palau="PW",a.PalestinianTerritoryOccupied="PS",a.Panama="PA",a.PapuaNewGuinea="PG",a.Paraguay="PY",a.Peru="PE",a.Philippines="PH",a.Pitcairn="PN",a.Poland="PL",a.Portugal="PT",a.PuertoRico="PR",a.Qatar="QA",a.Reunion="RE",a.Romania="RO",a.RussianFederation="RU",a.Rwanda="RW",a.SaintBarthelemy="BL",a.SaintHelena="SH",a.SaintKittsAndNevis="KN",a.SaintLucia="LC",a.SaintMartin="MF",a.SaintPierreAndMiquelon="PM",a.SaintVincentAndTheGrenadines="VC",a.Samoa="WS",a.SanMarino="SM",a.SaoTomeAndPrincipe="ST",a.SaudiArabia="SA",a.Senegal="SN",a.Serbia="RS",a.SerbiaAndMontenegro="CS",a.Seychelles="SC",a.SierraLeone="SL",a.Singapore="SG",a.Slovakia="SK",a.Slovenia="SI",a.SolomonIslands="SB",a.Somalia="SO",a.SouthAfrica="ZA",a.SouthGeorgiaAndTheSouthSandwichIslands="GS",a.SouthKorea="KR",a.Spain="ES",a.SriLanka="LK",a.Sudan="SD",a.Suriname="SR",a.SvalbardAndJanMayen="SJ",a.Swaziland="SZ",a.Sweden="SE",a.Switzerland="CH",a.Syria="SY",a.Taiwan="TW",a.Tajikistan="TJ",a.Tanzania="TZ",a.Thailand="TH",a.TimorLeste="TL",a.Togo="TG",a.Tokelau="TK",a.Tonga="TO",a.TrinidadAndTobago="TT",a.Tunisia="TN",a.Turkey="TR",a.Turkmenistan="TM",a.TurksAndCaicosIslands="TC",a.Tuvalu="TV",a.Uganda="UG",a.Ukraine="UA",a.UnitedArabEmirates="AE",a.UnitedKingdom="GB",a.UnitedStates="US",a.UnitedStatesMinorOutlyingIslands="UM",a.Uruguay="UY",a.Uzbekistan="UZ",a.Vanuatu="VU",a.Venezuela="VE",a.Vietnam="VN",a.VirginIslandsBritish="VG",a.VirginIslandsUS="VI",a.WallisAndFutuna="WF",a.WesternSahara="EH",a.Yemen="YE",a.Zambia="ZM",a.Zimbabwe="ZW"})(g||(g={}));var y;(function(a){a.AfghanistanAfghani="AFN",a.AlbaniaLek="ALL",a.ArmeniaDram="AMD",a.AlgeriaDinar="DZD",a.AmericanSamoaTala="WST",a.AngolaKwanza="AOA",a.ArgentinaPeso="ARS",a.AustraliaDollar="AUD",a.ArubaFlorin="AWG",a.AzerbaijanNewManat="AZN",a.BosniaAndHerzegovinaConvertibleMark="BAM",a.BahrainDinar="BHD",a.BarbadosDollar="BBD",a.BangladeshTaka="BDT",a.BelgiumFranc="BGN",a.BermudaDollar="BMD",a.BruneiDollar="BND",a.BoliviaBoliviano="BOB",a.BrazilReal="BRL",a.BahamasDollar="BSD",a.BhutanNgultrum="BTN",a.BotswanaPula="BWP",a.BelarusRuble="BYN",a.BelizeDollar="BZD",a.BulgariaLev="BGN",a.BurundiFranc="BIF",a.BritishPound="GBP",a.CanadaDollar="CAD",a.CambodiaRiel="KHR",a.ComorosFranc="KMF",a.CaymanIslandsDollar="KYD",a.ChilePeso="CLP",a.ChinaYuan="CNY",a.ColombiaPeso="COP",a.CostaRicaColon="CRC",a.CroatiaKuna="HRK",a.CubaConvertiblePeso="CUC",a.CubaPeso="CUP",a.CapeVerdeEscudo="CVE",a.CyprusPound="CYP",a.CzechRepublicKoruna="CZK",a.DjiboutiFranc="DJF",a.DenmarkKrone="DKK",a.DominicaDollar="XCD",a.DominicanRepublicPeso="DOP",a.EastCaribbeanDollar="XCD",a.EgyptPound="EGP",a.ElSalvadorColon="SVC",a.EquatorialGuineaEkwele="GQE",a.EritreaNakfa="ERN",a.EstoniaKroon="EEK",a.EthiopiaBirr="ETB",a.Euro="EUR",a.FijiDollar="FJD",a.FalklandIslandsPound="FKP",a.GambiaDalasi="GMD",a.GabonFranc="GMD",a.GeorgiaLari="GEL",a.GhanaCedi="GHS",a.GibraltarPound="GIP",a.GuatemalaQuetzal="GTQ",a.GuernseyPound="GGP",a.GuineaBissauPeso="GWP",a.GuyanaDollar="GYD",a.HongKongDollar="HKD",a.HondurasLempira="HNL",a.HaitiGourde="HTG",a.HungaryForint="HUF",a.IndonesiaRupiah="IDR",a.IsleOfManPound="IMP",a.IsraelNewShekel="ILS",a.IndiaRupee="INR",a.IraqDinar="IQD",a.IranRial="IRR",a.IcelandKrona="ISK",a.JamaicaDollar="JMD",a.JapanYen="JPY",a.JerseyPound="JEP",a.JordanDinar="JOD",a.KazakhstanTenge="KZT",a.KenyaShilling="KES",a.KyrgyzstanSom="KGS",a.NorthKoreaWon="KPW",a.SouthKoreaWon="KRW",a.KuwaitDinar="KWD",a.LaosKip="LAK",a.LebanonPound="LBP",a.LiberiaDollar="LRD",a.LesothoLoti="LSL",a.LibyanDinar="LYD",a.LithuaniaLitas="LTL",a.LatviaLats="LVL",a.LibyaDinar="LYD",a.MacauPataca="MOP",a.MaldivesRufiyaa="MVR",a.MalawiKwacha="MWK",a.MaltaLira="MTL",a.MauritiusRupee="MUR",a.MongoliaTughrik="MNT",a.MoroccoDirham="MAD",a.MoldovaLeu="MDL",a.MozambiqueMetical="MZN",a.MadagascarAriary="MGA",a.MacedoniaDenar="MKD",a.MexicoPeso="MXN",a.MalaysiaRinggit="MYR",a.MyanmarKyat="MMK",a.MicronesiaFederatedStatesDollar="USD",a.NicaraguaCordoba="NIO",a.NamibiaDollar="NAD",a.NetherlandsAntillesGuilder="ANG",a.NewCaledoniaFranc="XPF",a.NigeriaNaira="NGN",a.NicaraguaCordobaOro="NIO",a.NigerCFAFranc="XOF",a.NorwayKrone="NOK",a.NepalRupee="NPR",a.NewZealandDollar="NZD",a.OmanRial="OMR",a.PanamaBalboa="PAB",a.PeruNuevoSol="PEN",a.PapuaNewGuineaKina="PGK",a.PhilippinesPeso="PHP",a.PakistanRupee="PKR",a.PeruNuevo="PEN",a.PolandZloty="PLN",a.ParaguayGuarani="PYG",a.QatarRial="QAR",a.RomaniaNewLeu="RON",a.SerbiaDinar="RSD",a.SriLankaRupee="LKR",a.RussiaRuble="RUB",a.RwandaFranc="RWF",a.SaudiArabiaRiyal="SAR",a.SlovakiaKoruna="SKK",a.SloveniaTolar="SIT",a.SolomonIslandsDollar="SBD",a.SeychellesRupee="SCR",a.SudanPound="SDG",a.SwedenKrona="SEK",a.SingaporeDollar="SGD",a.SaintHelenaPound="SHP",a.SierraLeoneLeone="SLL",a.SomaliaShilling="SOS",a.SurinameDollar="SRD",a.SintMaartenPound="SXD",a.SyriaPound="SYP",a.SwazilandLilangeni="SZL",a.SwitzerlandFranc="CHF",a.ThailandBaht="THB",a.TajikistanSomoni="TJS",a.TurkmenistanManat="TMT",a.TunisiaDinar="TND",a.TongaPaanga="TOP",a.TurkeyLira="TRY",a.TrinidadAndTobagoDollar="TTD",a.TaiwanNewDollar="TWD",a.TanzaniaShilling="TZS",a.UnitedArabEmiratesDirham="AED",a.UkraineHryvnia="UAH",a.UgandaShilling="UGX",a.UnitedKingdomPound="GBP",a.UnitedStatesDollar="USD",a.UruguayPeso="UYU",a.UzbekistanSom="UZS",a.VenezuelaBolivar="VEF",a.VietnamDong="VND",a.VanuatuVatu="VUV",a.SamoaTala="WST",a.YemenRial="YER",a.SouthAfricaRand="ZAR",a.ZambiaKwacha="ZMW",a.ZimbabweDollar="ZWL"})(y||(y={}));var dc={AfghanistanAfghani:{code:y.AfghanistanAfghani,countries:[g.Afghanistan],decimal_digits:2,decimal_separator:".",name:"Afghan Afghani",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u060B",symbol_native:"\u060B",symbol_placement:"before",thousands_separator:","},AlbaniaLek:{code:y.AlbaniaLek,countries:[g.Albania],decimal_digits:2,decimal_separator:",",name:"Albanian Lek",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Lek",symbol_native:"Lek",symbol_placement:"before",thousands_separator:"."},AlgeriaDinar:{code:y.AlgeriaDinar,countries:[g.Algeria],decimal_digits:2,decimal_separator:".",name:"Algerian Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u062F.\u062C",symbol_native:"\u062F.\u062C",symbol_placement:"before",thousands_separator:","},ArgentinaPeso:{code:y.ArgentinaPeso,countries:[g.Argentina],decimal_digits:2,decimal_separator:".",name:"Argentine Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ArmeniaDram:{code:y.ArmeniaDram,countries:[g.Armenia],decimal_digits:2,decimal_separator:",",name:"Armenian Dram",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0564\u0580.",symbol_native:"\u0564\u0580.",symbol_placement:"before",thousands_separator:"."},ArubaFlorin:{code:y.ArubaFlorin,countries:[g.Aruba],decimal_digits:2,decimal_separator:".",name:"Aruban Florin",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0192",symbol_native:"\u0192",symbol_placement:"before",thousands_separator:","},AustraliaDollar:{code:y.AustraliaDollar,countries:[g.Australia],decimal_digits:2,decimal_separator:".",name:"Australian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},AzerbaijanManat:{code:y.AzerbaijanNewManat,countries:[g.Azerbaijan],decimal_digits:2,decimal_separator:".",name:"Azerbaijani Manat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u043C\u0430\u043D",symbol_native:"\u043C\u0430\u043D",symbol_placement:"before",thousands_separator:","},BahrainDinar:{code:y.BahrainDinar,countries:[g.Bahrain],decimal_digits:3,decimal_separator:".",name:"Bahraini Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:".\u062F.\u0628",symbol_native:".\u062F.\u0628",symbol_placement:"before",thousands_separator:","},BangladeshTaka:{code:y.BangladeshTaka,countries:[g.Bangladesh],decimal_digits:2,decimal_separator:".",name:"Bangladeshi Taka",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u09F3",symbol_native:"\u09F3",symbol_placement:"before",thousands_separator:","},BarbadosDollar:{code:y.BarbadosDollar,countries:[g.Barbados],decimal_digits:2,decimal_separator:".",name:"Barbadian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},BelarusRuble:{code:y.BelarusRuble,countries:[g.Belarus],decimal_digits:2,decimal_separator:".",name:"Belarusian Ruble",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Br",symbol_native:"Br",symbol_placement:"before",thousands_separator:"."},BelizeDollar:{code:y.BelizeDollar,countries:[g.Belize],decimal_digits:2,decimal_separator:".",name:"Belize Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"BZ$",symbol_native:"BZ$",symbol_placement:"before",thousands_separator:","},BermudaDollar:{code:y.BermudaDollar,countries:[g.Bermuda],decimal_digits:2,decimal_separator:".",name:"Bermudian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},BoliviaBoliviano:{code:y.BoliviaBoliviano,countries:[g.Bolivia],decimal_digits:2,decimal_separator:".",name:"Bolivian Boliviano",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$b",symbol_native:"$b",symbol_placement:"before",thousands_separator:","},BosniaAndHerzegovinaConvertibleMarka:{code:y.BosniaAndHerzegovinaConvertibleMark,countries:[g.BosniaAndHerzegovina],decimal_digits:2,decimal_separator:",",name:"Bosnia and Herzegovina Convertible Marka",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KM",symbol_native:"KM",symbol_placement:"before",thousands_separator:"."},BotswanaPula:{code:y.BotswanaPula,countries:[g.Botswana],decimal_digits:2,decimal_separator:".",name:"Botswana Pula",negative_sign:"-",positive_sign:"",rounding:0,symbol:"P",symbol_native:"P",symbol_placement:"before",thousands_separator:","},BrazilReal:{code:y.BrazilReal,countries:[g.Brazil],decimal_digits:2,decimal_separator:",",name:"Brazilian Real",negative_sign:"-",positive_sign:"",rounding:0,symbol:"R$",symbol_native:"R$",symbol_placement:"before",thousands_separator:"."},BruneiDollar:{code:y.BruneiDollar,countries:[g.Brunei],decimal_digits:2,decimal_separator:".",name:"Brunei Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},BulgariaLev:{code:y.BulgariaLev,countries:[g.Bulgaria],decimal_digits:2,decimal_separator:".",name:"Bulgarian Lev",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u043B\u0432",symbol_native:"\u043B\u0432",symbol_placement:"before",thousands_separator:"."},BurundiFranc:{code:y.BurundiFranc,countries:[g.Burundi],decimal_digits:0,decimal_separator:".",name:"Burundian Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"FBu",symbol_native:"FBu",symbol_placement:"before",thousands_separator:","},CambodiaRiel:{code:y.CambodiaRiel,countries:[g.Cambodia],decimal_digits:2,decimal_separator:",",name:"Cambodian Riel",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u17DB",symbol_native:"\u17DB",symbol_placement:"before",thousands_separator:"."},CanadaDollar:{code:y.CanadaDollar,countries:[g.Canada],decimal_digits:2,decimal_separator:".",name:"Canadian Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},CapeVerdeEscudo:{code:y.CapeVerdeEscudo,countries:[g.CapeVerde],decimal_digits:2,decimal_separator:".",name:"Cape Verde Escudo",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Esc",symbol_native:"Esc",symbol_placement:"before",thousands_separator:","},CaymanIslandsDollar:{code:y.CaymanIslandsDollar,countries:[g.CaymanIslands],decimal_digits:2,decimal_separator:".",name:"Cayman Islands Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ChilePeso:{code:y.ChilePeso,countries:[g.Chile],decimal_digits:0,decimal_separator:".",name:"Chilean Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ChinaYuanRenminbi:{code:y.ChinaYuan,countries:[g.China],decimal_digits:2,decimal_separator:".",name:"Chinese Yuan",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA5",symbol_native:"\xA5",symbol_placement:"before",thousands_separator:","},ColombiaPeso:{code:y.ColombiaPeso,countries:[g.Colombia],decimal_digits:2,decimal_separator:".",name:"Colombian Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},ComorosFranc:{code:y.ComorosFranc,countries:[g.Comoros],decimal_digits:0,decimal_separator:".",name:"Comoros Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"CF",symbol_native:"CF",symbol_placement:"before",thousands_separator:","},CostaRicaColon:{code:y.CostaRicaColon,countries:[g.CostaRica],decimal_digits:2,decimal_separator:".",name:"Costa Rican Colon",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A1",symbol_native:"\u20A1",symbol_placement:"before",thousands_separator:","},CroatiaKuna:{code:y.CroatiaKuna,countries:[g.Croatia],decimal_digits:2,decimal_separator:",",name:"Croatian Kuna",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kn",symbol_native:"kn",symbol_placement:"before",thousands_separator:"."},CubaConvertiblePeso:{code:y.CubaConvertiblePeso,countries:[g.Cuba],decimal_digits:2,decimal_separator:",",name:"Cuba Convertible Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},CubaPeso:{code:y.CubaPeso,countries:[g.Cuba],decimal_digits:2,decimal_separator:",",name:"Cuba Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},CyprusPound:{code:y.CyprusPound,countries:[g.Cyprus],decimal_digits:2,decimal_separator:",",name:"Cyprus Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},CzechRepublicKoruna:{code:y.CzechRepublicKoruna,countries:[g.CzechRepublic],decimal_digits:2,decimal_separator:",",name:"Czech Republic Koruna",negative_sign:"-",positive_sign:"",rounding:0,symbol:"K\u010D",symbol_native:"K\u010D",symbol_placement:"before",thousands_separator:"."},DenmarkKrone:{code:y.DenmarkKrone,countries:[g.Denmark],decimal_digits:2,decimal_separator:",",name:"Denmark Krone",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},DjiboutiFranc:{code:y.DjiboutiFranc,countries:[g.Djibouti],decimal_digits:0,decimal_separator:".",name:"Djibouti Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Fdj",symbol_native:"Fdj",symbol_placement:"before",thousands_separator:","},DominicanRepublicPeso:{code:y.DominicanRepublicPeso,countries:[g.DominicanRepublic],decimal_digits:2,decimal_separator:",",name:"Dominican Republic Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"RD$",symbol_native:"RD$",symbol_placement:"before",thousands_separator:"."},EastCaribbeanDollar:{code:y.EastCaribbeanDollar,countries:[g.AntiguaAndBarbuda,g.Dominica,g.Grenada,g.SaintKittsAndNevis,g.SaintLucia,g.SaintVincentAndTheGrenadines],decimal_digits:2,decimal_separator:".",name:"East Caribbean Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:","},EgyptPound:{code:y.EgyptPound,countries:[g.Egypt],decimal_digits:2,decimal_separator:".",name:"Egypt Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:","},ElSalvadorColon:{code:y.ElSalvadorColon,countries:[g.ElSalvador],decimal_digits:2,decimal_separator:",",name:"El Salvador Colon",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A1",symbol_native:"\u20A1",symbol_placement:"before",thousands_separator:"."},EquatorialGuineaEkwele:{code:y.EquatorialGuineaEkwele,countries:[g.EquatorialGuinea],decimal_digits:0,decimal_separator:".",name:"Equatorial Guinea Ekwele",negative_sign:"-",positive_sign:"",rounding:0,symbol:"GQE",symbol_native:"GQE",symbol_placement:"before",thousands_separator:","},EritreaNakfa:{code:y.EritreaNakfa,countries:[g.Eritrea],decimal_digits:2,decimal_separator:",",name:"Eritrea Nakfa",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Nfk",symbol_native:"Nfk",symbol_placement:"before",thousands_separator:"."},EstoniaKroon:{code:y.EstoniaKroon,countries:[g.Estonia],decimal_digits:2,decimal_separator:",",name:"Estonia Kroon",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},EthiopiaBirr:{code:y.EthiopiaBirr,countries:[g.Ethiopia],decimal_digits:2,decimal_separator:",",name:"Ethiopia Birr",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Br",symbol_native:"Br",symbol_placement:"before",thousands_separator:"."},Euro:{code:y.Euro,countries:[g.Andorra,g.Austria,g.Belgium,g.Cyprus,g.Estonia,g.Finland,g.France,g.Germany,g.Greece,g.Ireland,g.Italy,g.Latvia,g.Lithuania,g.Luxembourg,g.Malta,g.Monaco,g.Netherlands,g.Portugal,g.Spain,g.Sweden,g.UnitedKingdom],decimal_digits:2,decimal_separator:",",name:"Euro",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AC",symbol_native:"\u20AC",symbol_placement:"before",thousands_separator:"."},FalklandIslandsPound:{code:y.FalklandIslandsPound,countries:[g.FalklandIslands],decimal_digits:2,decimal_separator:",",name:"Equatorial Guinea Ekwele",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},FijiDollar:{code:y.FijiDollar,countries:[g.Fiji],decimal_digits:2,decimal_separator:",",name:"Fiji Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},GambiaDalasi:{code:y.GambiaDalasi,countries:[g.Gambia],decimal_digits:2,decimal_separator:",",name:"Gambia Dalasi",negative_sign:"-",positive_sign:"",rounding:0,symbol:"D",symbol_native:"D",symbol_placement:"before",thousands_separator:"."},GeorgiaLari:{code:y.GeorgiaLari,countries:[g.Georgia],decimal_digits:2,decimal_separator:",",name:"Georgia Lari",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20BE",symbol_native:"\u20BE",symbol_placement:"before",thousands_separator:"."},GhanaCedi:{code:y.GhanaCedi,countries:[g.Ghana],decimal_digits:2,decimal_separator:",",name:"Ghana Cedi",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B5",symbol_native:"\u20B5",symbol_placement:"before",thousands_separator:"."},GibraltarPound:{code:y.GibraltarPound,countries:[g.Gibraltar],decimal_digits:2,decimal_separator:",",name:"Gibraltar Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},GuatemalaQuetzal:{code:y.GuatemalaQuetzal,countries:[g.Guatemala],decimal_digits:2,decimal_separator:",",name:"Guatemala Quetzal",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Q",symbol_native:"Q",symbol_placement:"before",thousands_separator:"."},GuernseyPound:{code:y.GuernseyPound,countries:[g.Guernsey],decimal_digits:2,decimal_separator:",",name:"Guernsey Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},GuineaBissauPeso:{code:y.GuineaBissauPeso,countries:[g.GuineaBissau],decimal_digits:2,decimal_separator:",",name:"Guinea-Bissau Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B5",symbol_native:"\u20B5",symbol_placement:"before",thousands_separator:"."},GuyanaDollar:{code:y.GuyanaDollar,countries:[g.Guyana],decimal_digits:2,decimal_separator:",",name:"Guyana Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},HaitiGourde:{code:y.HaitiGourde,countries:[g.Haiti],decimal_digits:2,decimal_separator:",",name:"Haiti Gourde",negative_sign:"-",positive_sign:"",rounding:0,symbol:"G",symbol_native:"G",symbol_placement:"before",thousands_separator:"."},HondurasLempira:{code:y.HondurasLempira,countries:[g.Honduras],decimal_digits:2,decimal_separator:",",name:"Honduras Lempira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"L",symbol_native:"L",symbol_placement:"before",thousands_separator:"."},HongKongDollar:{code:y.HongKongDollar,countries:[g.HongKong],decimal_digits:2,decimal_separator:",",name:"Hong Kong Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},HungaryForint:{code:y.HungaryForint,countries:[g.Hungary],decimal_digits:2,decimal_separator:",",name:"Hungary Forint",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Ft",symbol_native:"Ft",symbol_placement:"before",thousands_separator:"."},IcelandKrona:{code:y.IcelandKrona,countries:[g.Iceland],decimal_digits:0,decimal_separator:",",name:"Iceland Krona",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},IndianRupee:{code:y.IndiaRupee,countries:[g.India,g.Bhutan],decimal_digits:2,decimal_separator:",",name:"Indian Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B9",symbol_native:"\u20B9",symbol_placement:"before",thousands_separator:"."},IndonesiaRupiah:{code:y.IndonesiaRupiah,countries:[g.Indonesia],decimal_digits:0,decimal_separator:",",name:"Indonesia Rupiah",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Rp",symbol_native:"Rp",symbol_placement:"before",thousands_separator:"."},IranRial:{code:y.IranRial,countries:[g.Iran],decimal_digits:0,decimal_separator:",",name:"Iran Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},IsleOfManPound:{code:y.IsleOfManPound,countries:[g.IsleOfMan],decimal_digits:2,decimal_separator:",",name:"Isle of Man Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},IsraeliShekel:{code:y.IsraelNewShekel,countries:[g.Israel],decimal_digits:2,decimal_separator:",",name:"Israeli Shekel",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AA",symbol_native:"\u20AA",symbol_placement:"before",thousands_separator:"."},JamaicaDollar:{code:y.JamaicaDollar,countries:[g.Jamaica],decimal_digits:2,decimal_separator:",",name:"Jamaica Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"J$",symbol_native:"J$",symbol_placement:"before",thousands_separator:"."},JapanYen:{code:y.JapanYen,countries:[g.Japan],decimal_digits:0,decimal_separator:",",name:"Japan Yen",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA5",symbol_native:"\uFFE5",symbol_placement:"before",thousands_separator:"."},JerseyPound:{code:y.JerseyPound,countries:[g.Jersey],decimal_digits:2,decimal_separator:",",name:"Jersey Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},JordanDinar:{code:y.JordanDinar,countries:[g.Jordan],decimal_digits:3,decimal_separator:",",name:"Jordan Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"JD",symbol_native:"JD",symbol_placement:"before",thousands_separator:"."},KazakhstanTenge:{code:y.KazakhstanTenge,countries:[g.Kazakhstan],decimal_digits:2,decimal_separator:",",name:"Kazakhstan Tenge",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B8",symbol_native:"\u20B8",symbol_placement:"before",thousands_separator:"."},KenyaShilling:{code:y.KenyaShilling,countries:[g.Kenya],decimal_digits:2,decimal_separator:",",name:"Kenya Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KSh",symbol_native:"KSh",symbol_placement:"before",thousands_separator:"."},KuwaitDinar:{code:y.KuwaitDinar,countries:[g.Kuwait],decimal_digits:3,decimal_separator:",",name:"Kuwait Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KD",symbol_native:"KD",symbol_placement:"before",thousands_separator:"."},KyrgyzstanSom:{code:y.KyrgyzstanSom,countries:[g.Kyrgyzstan],decimal_digits:2,decimal_separator:",",name:"Kyrgyzstan Som",negative_sign:"-",positive_sign:"",rounding:0,symbol:"KGS",symbol_native:"KGS",symbol_placement:"before",thousands_separator:"."},LaosKip:{code:y.LaosKip,countries:[g.Laos],decimal_digits:0,decimal_separator:",",name:"Laos Kip",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AD",symbol_native:"\u20AD",symbol_placement:"before",thousands_separator:"."},LatviaLats:{code:y.LatviaLats,countries:[g.Latvia],decimal_digits:2,decimal_separator:",",name:"Latvia Lat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Ls",symbol_native:"Ls",symbol_placement:"before",thousands_separator:"."},LebanonPound:{code:y.LebanonPound,countries:[g.Lebanon],decimal_digits:0,decimal_separator:",",name:"Lebanon Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},LesothoLoti:{code:y.LesothoLoti,countries:[g.Lesotho],decimal_digits:2,decimal_separator:",",name:"Lesotho Loti",negative_sign:"-",positive_sign:"",rounding:0,symbol:"M",symbol_native:"M",symbol_placement:"before",thousands_separator:"."},LiberiaDollar:{code:y.LiberiaDollar,countries:[g.Liberia],decimal_digits:2,decimal_separator:",",name:"Liberia Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},LibyanDinar:{code:y.LibyanDinar,countries:[g.Libya],decimal_digits:3,decimal_separator:",",name:"Libyan Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"LD",symbol_native:"LD",symbol_placement:"before",thousands_separator:"."},LithuaniaLitas:{code:y.LithuaniaLitas,countries:[g.Lithuania],decimal_digits:2,decimal_separator:",",name:"Lithuania Litas",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Lt",symbol_native:"Lt",symbol_placement:"before",thousands_separator:"."},MacauPataca:{code:y.MacauPataca,countries:[g.Macau],decimal_digits:2,decimal_separator:",",name:"Macau Pataca",negative_sign:"-",positive_sign:"",rounding:0,symbol:"MOP$",symbol_native:"MOP$",symbol_placement:"before",thousands_separator:"."},MacedoniaDenar:{code:y.MacedoniaDenar,countries:[g.NorthMacedonia],decimal_digits:2,decimal_separator:",",name:"Macedonia Denar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0434\u0435\u043D",symbol_native:"\u0434\u0435\u043D",symbol_placement:"before",thousands_separator:"."},MadagascarAriary:{code:y.MadagascarAriary,countries:[g.Madagascar],decimal_digits:0,decimal_separator:",",name:"Madagascar Ariary",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Ar",symbol_native:"Ar",symbol_placement:"before",thousands_separator:"."},MalawiKwacha:{code:y.MalawiKwacha,countries:[g.Malawi],decimal_digits:2,decimal_separator:",",name:"Malawi Kwacha",negative_sign:"-",positive_sign:"",rounding:0,symbol:"MK",symbol_native:"MK",symbol_placement:"before",thousands_separator:"."},MalaysiaRinggit:{code:y.MalaysiaRinggit,countries:[g.Malaysia],decimal_digits:2,decimal_separator:",",name:"Malaysia Ringgit",negative_sign:"-",positive_sign:"",rounding:0,symbol:"RM",symbol_native:"RM",symbol_placement:"before",thousands_separator:"."},MaldivesRufiyaa:{code:y.MaldivesRufiyaa,countries:[g.Maldives],decimal_digits:2,decimal_separator:",",name:"Maldives Rufiyaa",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Rf",symbol_native:"Rf",symbol_placement:"before",thousands_separator:"."},MaltaLira:{code:y.MaltaLira,countries:[g.Malta],decimal_digits:2,decimal_separator:",",name:"Malta Lira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Lm",symbol_native:"Lm",symbol_placement:"before",thousands_separator:"."},MauritiusRupee:{code:y.MauritiusRupee,countries:[g.Mauritius],decimal_digits:2,decimal_separator:",",name:"Mauritius Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},MexicoPeso:{code:y.MexicoPeso,countries:[g.Mexico],decimal_digits:2,decimal_separator:",",name:"Mexico Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},MoldovaLeu:{code:y.MoldovaLeu,countries:[g.Moldova],decimal_digits:2,decimal_separator:",",name:"Moldova Leu",negative_sign:"-",positive_sign:"",rounding:0,symbol:"L",symbol_native:"L",symbol_placement:"before",thousands_separator:"."},MongoliaTughrik:{code:y.MongoliaTughrik,countries:[g.Mongolia],decimal_digits:2,decimal_separator:",",name:"Mongolia Tughrik",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AE",symbol_native:"\u20AE",symbol_placement:"before",thousands_separator:"."},MoroccoDirham:{code:y.MoroccoDirham,countries:[g.Morocco],decimal_digits:2,decimal_separator:",",name:"Morocco Dirham",negative_sign:"-",positive_sign:"",rounding:0,symbol:"DH",symbol_native:"DH",symbol_placement:"before",thousands_separator:"."},MozambiqueMetical:{code:y.MozambiqueMetical,countries:[g.Mozambique],decimal_digits:2,decimal_separator:",",name:"Mozambique Metical",negative_sign:"-",positive_sign:"",rounding:0,symbol:"MT",symbol_native:"MT",symbol_placement:"before",thousands_separator:"."},MyanmarKyat:{code:y.MyanmarKyat,countries:[g.Myanmar],decimal_digits:0,decimal_separator:",",name:"Myanmar Kyat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"K",symbol_native:"K",symbol_placement:"before",thousands_separator:"."},NamibiaDollar:{code:y.NamibiaDollar,countries:[g.Namibia],decimal_digits:2,decimal_separator:",",name:"Namibia Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},NepalRupee:{code:y.NepalRupee,countries:[g.Nepal],decimal_digits:2,decimal_separator:",",name:"Nepal Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},NetherlandsAntillesGuilder:{code:y.NetherlandsAntillesGuilder,countries:[g.NetherlandsAntilles],decimal_digits:2,decimal_separator:",",name:"Netherlands Antilles Guilder",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0192",symbol_native:"\u0192",symbol_placement:"before",thousands_separator:"."},NewCaledoniaFranc:{code:y.NewCaledoniaFranc,countries:[g.NewCaledonia],decimal_digits:0,decimal_separator:",",name:"New Caledonia Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A3",symbol_native:"\u20A3",symbol_placement:"before",thousands_separator:"."},NewZealandDollar:{code:y.NewZealandDollar,countries:[g.NewZealand],decimal_digits:2,decimal_separator:",",name:"New Zealand Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},NicaraguaCordoba:{code:y.NicaraguaCordoba,countries:[g.Nicaragua],decimal_digits:2,decimal_separator:",",name:"Nicaragua Cordoba",negative_sign:"-",positive_sign:"",rounding:0,symbol:"C$",symbol_native:"C$",symbol_placement:"before",thousands_separator:"."},NigerCFAFranc:{code:y.NigerCFAFranc,countries:[g.Niger],decimal_digits:0,decimal_separator:",",name:"Niger CFA Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"CFA",symbol_native:"CFA",symbol_placement:"before",thousands_separator:"."},NigeriaNaira:{code:y.NigeriaNaira,countries:[g.Nigeria],decimal_digits:2,decimal_separator:",",name:"Nigeria Naira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A6",symbol_native:"\u20A6",symbol_placement:"before",thousands_separator:"."},NorthKoreaWon:{code:y.NorthKoreaWon,countries:[g.NorthKorea],decimal_digits:0,decimal_separator:",",name:"North Korea Won",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A9",symbol_native:"\u20A9",symbol_placement:"before",thousands_separator:"."},NorwayKrone:{code:y.NorwayKrone,countries:[g.Norway],decimal_digits:2,decimal_separator:",",name:"Norway Krone",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},OmanRial:{code:y.OmanRial,countries:[g.Oman],decimal_digits:3,decimal_separator:",",name:"Oman Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},PakistanRupee:{code:y.PakistanRupee,countries:[g.Pakistan],decimal_digits:2,decimal_separator:",",name:"Pakistan Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},PanamaBalboa:{code:y.PanamaBalboa,countries:[g.Panama],decimal_digits:2,decimal_separator:",",name:"Panama Balboa",negative_sign:"-",positive_sign:"",rounding:0,symbol:"B/.",symbol_native:"B/.",symbol_placement:"before",thousands_separator:"."},ParaguayGuarani:{code:y.ParaguayGuarani,countries:[g.Paraguay],decimal_digits:0,decimal_separator:",",name:"Paraguay Guarani",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Gs",symbol_native:"Gs",symbol_placement:"before",thousands_separator:"."},PeruvianNuevo:{code:y.PeruNuevo,countries:[g.Peru],decimal_digits:2,decimal_separator:",",name:"Peruvian Nuevo",negative_sign:"-",positive_sign:"",rounding:0,symbol:"S/.",symbol_native:"S/.",symbol_placement:"before",thousands_separator:"."},PhilippinesPeso:{code:y.PhilippinesPeso,countries:[g.Philippines],decimal_digits:2,decimal_separator:",",name:"Philippines Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B1",symbol_native:"\u20B1",symbol_placement:"before",thousands_separator:"."},PolandZloty:{code:y.PolandZloty,countries:[g.Poland],decimal_digits:2,decimal_separator:",",name:"Poland Zloty",negative_sign:"-",positive_sign:"",rounding:0,symbol:"z\u0142",symbol_native:"z\u0142",symbol_placement:"before",thousands_separator:"."},QatarRial:{code:y.QatarRial,countries:[g.Qatar],decimal_digits:2,decimal_separator:",",name:"Qatar Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},RomaniaNewLeu:{code:y.RomaniaNewLeu,countries:[g.Romania],decimal_digits:2,decimal_separator:",",name:"Romania New Leu",negative_sign:"-",positive_sign:"",rounding:0,symbol:"lei",symbol_native:"lei",symbol_placement:"before",thousands_separator:"."},RussiaRuble:{code:y.RussiaRuble,countries:[g.RussianFederation],decimal_digits:2,decimal_separator:",",name:"Russia Ruble",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20BD",symbol_native:"\u20BD",symbol_placement:"before",thousands_separator:"."},RwandaFranc:{code:y.RwandaFranc,countries:[g.Rwanda],decimal_digits:0,decimal_separator:",",name:"Rwanda Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"RF",symbol_native:"RF",symbol_placement:"before",thousands_separator:"."},SaudiArabiaRiyal:{code:y.SaudiArabiaRiyal,countries:[g.SaudiArabia],decimal_digits:2,decimal_separator:",",name:"Saudi Arabia Riyal",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},SerbiaDinar:{code:y.SerbiaDinar,countries:[g.Serbia],decimal_digits:0,decimal_separator:",",name:"Serbia Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0414\u0438\u043D.",symbol_native:"\u0414\u0438\u043D.",symbol_placement:"before",thousands_separator:"."},SeychellesRupee:{code:y.SeychellesRupee,countries:[g.Seychelles],decimal_digits:2,decimal_separator:",",name:"Seychelles Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},SingaporeDollar:{code:y.SingaporeDollar,countries:[g.Singapore],decimal_digits:2,decimal_separator:",",name:"Singapore Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},SlovakiaKoruna:{code:y.SlovakiaKoruna,countries:[g.Slovakia],decimal_digits:2,decimal_separator:",",name:"Slovakia Koruna",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Sk",symbol_native:"Sk",symbol_placement:"before",thousands_separator:"."},SloveniaTolar:{code:y.SloveniaTolar,countries:[g.Slovenia],decimal_digits:2,decimal_separator:",",name:"Slovenia Tolar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"SIT",symbol_native:"SIT",symbol_placement:"before",thousands_separator:"."},SolomonIslandsDollar:{code:y.SolomonIslandsDollar,countries:[g.SolomonIslands],decimal_digits:2,decimal_separator:",",name:"Solomon Islands Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},SomaliaShilling:{code:y.SomaliaShilling,countries:[g.Somalia],decimal_digits:0,decimal_separator:",",name:"Somalia Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"S",symbol_native:"S",symbol_placement:"before",thousands_separator:"."},SouthAfricaRand:{code:y.SouthAfricaRand,countries:[g.SouthAfrica],decimal_digits:2,decimal_separator:",",name:"South Africa Rand",negative_sign:"-",positive_sign:"",rounding:0,symbol:"R",symbol_native:"R",symbol_placement:"before",thousands_separator:"."},SouthKoreaWon:{code:y.SouthKoreaWon,countries:[g.SouthKorea],decimal_digits:0,decimal_separator:",",name:"South Korea Won",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A9",symbol_native:"\u20A9",symbol_placement:"before",thousands_separator:"."},SriLankaRupee:{code:y.SriLankaRupee,countries:[g.SriLanka],decimal_digits:2,decimal_separator:",",name:"Sri Lanka Rupee",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20A8",symbol_native:"\u20A8",symbol_placement:"before",thousands_separator:"."},SudanPound:{code:y.SudanPound,countries:[g.Sudan],decimal_digits:2,decimal_separator:",",name:"Sudan Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},SurinameDollar:{code:y.SurinameDollar,countries:[g.Suriname],decimal_digits:2,decimal_separator:",",name:"Suriname Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},SwazilandLilangeni:{code:y.SwazilandLilangeni,countries:[g.Swaziland],decimal_digits:2,decimal_separator:",",name:"Swaziland Lilangeni",negative_sign:"-",positive_sign:"",rounding:0,symbol:"E",symbol_native:"E",symbol_placement:"before",thousands_separator:"."},SwedenKrona:{code:y.SwedenKrona,countries:[g.Sweden],decimal_digits:2,decimal_separator:",",name:"Sweden Krona",negative_sign:"-",positive_sign:"",rounding:0,symbol:"kr",symbol_native:"kr",symbol_placement:"before",thousands_separator:"."},SwitzerlandFranc:{code:y.SwitzerlandFranc,countries:[g.Switzerland],decimal_digits:2,decimal_separator:",",name:"Switzerland Franc",negative_sign:"-",positive_sign:"",rounding:0,symbol:"CHF",symbol_native:"CHF",symbol_placement:"before",thousands_separator:"."},SyriaPound:{code:y.SyriaPound,countries:[g.Syria],decimal_digits:2,decimal_separator:",",name:"Syria Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},TaiwanNewDollar:{code:y.TaiwanNewDollar,countries:[g.Taiwan],decimal_digits:2,decimal_separator:",",name:"Taiwan New Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"NT$",symbol_native:"NT$",symbol_placement:"before",thousands_separator:"."},TajikistanSomoni:{code:y.TajikistanSomoni,countries:[g.Tajikistan],decimal_digits:2,decimal_separator:",",name:"Tajikistan Somoni",negative_sign:"-",positive_sign:"",rounding:0,symbol:"TJS",symbol_native:"TJS",symbol_placement:"before",thousands_separator:"."},TanzaniaShilling:{code:y.TanzaniaShilling,countries:[g.Tanzania],decimal_digits:2,decimal_separator:",",name:"Tanzania Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"TSh",symbol_native:"TSh",symbol_placement:"before",thousands_separator:"."},ThailandBaht:{code:y.ThailandBaht,countries:[g.Thailand],decimal_digits:2,decimal_separator:",",name:"Thailand Baht",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u0E3F",symbol_native:"\u0E3F",symbol_placement:"before",thousands_separator:"."},TunisiaDinar:{code:y.TunisiaDinar,countries:[g.Tunisia],decimal_digits:3,decimal_separator:",",name:"Tunisia Dinar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u062F.\u062A",symbol_native:"\u062F.\u062A",symbol_placement:"before",thousands_separator:"."},TurkeyLira:{code:y.TurkeyLira,countries:[g.Turkey],decimal_digits:2,decimal_separator:",",name:"Turkey Lira",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20BA",symbol_native:"\u20BA",symbol_placement:"before",thousands_separator:"."},TurkmenistanManat:{code:y.TurkmenistanManat,countries:[g.Turkmenistan],decimal_digits:2,decimal_separator:",",name:"Turkmenistan Manat",negative_sign:"-",positive_sign:"",rounding:0,symbol:"m",symbol_native:"m",symbol_placement:"before",thousands_separator:"."},UgandaShilling:{code:y.UgandaShilling,countries:[g.Uganda],decimal_digits:0,decimal_separator:",",name:"Uganda Shilling",negative_sign:"-",positive_sign:"",rounding:0,symbol:"USh",symbol_native:"USh",symbol_placement:"before",thousands_separator:"."},UkraineHryvnia:{code:y.UkraineHryvnia,countries:[g.Ukraine],decimal_digits:2,decimal_separator:",",name:"Ukraine Hryvnia",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20B4",symbol_native:"\u20B4",symbol_placement:"before",thousands_separator:"."},UnitedArabEmiratesDirham:{code:y.UnitedArabEmiratesDirham,countries:[g.UnitedArabEmirates],decimal_digits:2,decimal_separator:",",name:"United Arab Emirates Dirham",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u062F.\u0625",symbol_native:"\u062F.\u0625",symbol_placement:"before",thousands_separator:"."},UnitedKingdomPound:{code:y.UnitedKingdomPound,countries:[g.UnitedKingdom],decimal_digits:2,decimal_separator:",",name:"United Kingdom Pound",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\xA3",symbol_native:"\xA3",symbol_placement:"before",thousands_separator:"."},UnitedStatesDollar:{code:y.UnitedStatesDollar,countries:[g.UnitedStates],decimal_digits:2,decimal_separator:",",name:"United States Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$",symbol_native:"$",symbol_placement:"before",thousands_separator:"."},UruguayPeso:{code:y.UruguayPeso,countries:[g.Uruguay],decimal_digits:2,decimal_separator:",",name:"Uruguay Peso",negative_sign:"-",positive_sign:"",rounding:0,symbol:"$U",symbol_native:"$U",symbol_placement:"before",thousands_separator:"."},UzbekistanSom:{code:y.UzbekistanSom,countries:[g.Uzbekistan],decimal_digits:2,decimal_separator:",",name:"Uzbekistan Som",negative_sign:"-",positive_sign:"",rounding:0,symbol:"UZS",symbol_native:"UZS",symbol_placement:"before",thousands_separator:"."},VanuatuVatu:{code:y.VanuatuVatu,countries:[g.Vanuatu],decimal_digits:0,decimal_separator:",",name:"Vanuatu Vatu",negative_sign:"-",positive_sign:"",rounding:0,symbol:"VT",symbol_native:"VT",symbol_placement:"before",thousands_separator:"."},VenezuelaBolivar:{code:y.VenezuelaBolivar,countries:[g.Venezuela],decimal_digits:2,decimal_separator:",",name:"Venezuela Bolivar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"Bs. F",symbol_native:"Bs. F",symbol_placement:"before",thousands_separator:"."},VietnamDong:{code:y.VietnamDong,countries:[g.Vietnam],decimal_digits:0,decimal_separator:",",name:"Vietnam Dong",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AB",symbol_native:"\u20AB",symbol_placement:"before",thousands_separator:"."},YemenRial:{code:y.YemenRial,countries:[g.Yemen],decimal_digits:2,decimal_separator:",",name:"Yemen Rial",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\uFDFC",symbol_native:"\uFDFC",symbol_placement:"before",thousands_separator:"."},ZambiaKwacha:{code:y.ZambiaKwacha,countries:[g.Zambia],decimal_digits:2,decimal_separator:",",name:"Zambia Kwacha",negative_sign:"-",positive_sign:"",rounding:0,symbol:"ZK",symbol_native:"ZK",symbol_placement:"before",thousands_separator:"."},ZimbabweDollar:{code:y.ZimbabweDollar,countries:[g.Zimbabwe],decimal_digits:2,decimal_separator:",",name:"Zimbabwe Dollar",negative_sign:"-",positive_sign:"",rounding:0,symbol:"\u20AB",symbol_native:"\u20AB",symbol_placement:"before",thousands_separator:"."}},Cs;(function(a){a.Bitcoin="BTC",a.Ethereum="ETH",a.Litecoin="LTC",a.Ripple="XRP",a.Dash="DASH",a.Zcash="ZEC",a.Dogecoin="DOGE",a.Monero="XMR",a.BitcoinCash="BCH",a.EOS="EOS",a.Binance="BNB",a.Stellar="XLM",a.Cardano="ADA",a.IOTA="IOTA",a.Tezos="XTZ",a.NEO="NEO",a.TRON="TRX",a.EOSClassic="EOSC",a.Ontology="ONT",a.VeChain="VEN",a.QTUM="QTUM",a.Lisk="LSK",a.Waves="WAVES",a.OmiseGO="OMG",a.Zilliqa="ZIL",a.BitcoinGold="BTG",a.Decred="DCR",a.Stratis="STRAT",a.Populous="PPT",a.Augur="REP",a.Golem="GNT",a.Siacoin="SC",a.BasicAttentionToken="BAT",a.ZCoin="XZC",a.StratisHedged="SNT",a.VeChainHedged="VEN",a.PowerLedger="POWR",a.WavesHedged="WAVE",a.ZilliqaHedged="ZRX",a.BitcoinDiamond="BCD",a.DigiByte="DGB",a.DigiByteHedged="DGB",a.Bytecoin="BCN",a.BytecoinHedged="BCN"})(Cs||(Cs={}));var E;(function(a){a.Afrikaans="af",a.Albanian="sq",a.Amharic="am",a.Arabic="ar",a.Armenian="hy",a.Azerbaijani="az",a.Bashkir="ba",a.Basque="eu",a.Belarusian="be",a.Bengali="bn",a.Berber="ber",a.Bhutani="dz",a.Bihari="bh",a.Bislama="bi",a.Bosnian="bs",a.Breten="br",a.Bulgarian="bg",a.Burmese="my",a.Cantonese="yue",a.Catalan="ca",a.Chinese="zh",a.Chuvash="cv",a.Corsican="co",a.Croatian="hr",a.Czech="cs",a.Danish="da",a.Dari="prs",a.Divehi="dv",a.Dutch="nl",a.English="en",a.Esperanto="eo",a.Estonian="et",a.Faroese="fo",a.Farsi="fa",a.Filipino="fil",a.Finnish="fi",a.French="fr",a.Frisian="fy",a.Galician="gl",a.Georgian="ka",a.German="de",a.Greek="el",a.Greenlandic="kl",a.Gujarati="gu",a.Haitian="ht",a.Hausa="ha",a.Hebrew="he",a.Hindi="hi",a.Hungarian="hu",a.Icelandic="is",a.Igbo="ig",a.Indonesian="id",a.Irish="ga",a.Italian="it",a.Japanese="ja",a.Javanese="jv",a.Kannada="kn",a.Karelian="krl",a.Kazakh="kk",a.Khmer="km",a.Komi="kv",a.Konkani="kok",a.Korean="ko",a.Kurdish="ku",a.Kyrgyz="ky",a.Lao="lo",a.Latin="la",a.Latvian="lv",a.Lithuanian="lt",a.Luxembourgish="lb",a.Ossetian="os",a.Macedonian="mk",a.Malagasy="mg",a.Malay="ms",a.Malayalam="ml",a.Maltese="mt",a.Maori="mi",a.Marathi="mr",a.Mari="mhr",a.Mongolian="mn",a.Montenegrin="me",a.Nepali="ne",a.NorthernSotho="nso",a.Norwegian="no",a.NorwegianBokmal="nb",a.NorwegianNynorsk="nn",a.Oriya="or",a.Pashto="ps",a.Persian="fa",a.Polish="pl",a.Portuguese="pt",a.Punjabi="pa",a.Quechua="qu",a.Romanian="ro",a.Russian="ru",a.Sakha="sah",a.Sami="se",a.Samoan="sm",a.Sanskrit="sa",a.Scots="gd",a.Serbian="sr",a.SerbianCyrillic="sr-Cyrl",a.Sesotho="st",a.Shona="sn",a.Sindhi="sd",a.Sinhala="si",a.Slovak="sk",a.Slovenian="sl",a.Somali="so",a.Spanish="es",a.Sudanese="su",a.Sutu="sx",a.Swahili="sw",a.Swedish="sv",a.Syriac="syr",a.Tagalog="tl",a.Tajik="tg",a.Tamazight="tmh",a.Tamil="ta",a.Tatar="tt",a.Telugu="te",a.Thai="th",a.Tibetan="bo",a.Tsonga="ts",a.Tswana="tn",a.Turkish="tr",a.Turkmen="tk",a.Ukrainian="uk",a.Urdu="ur",a.Uzbek="uz",a.Vietnamese="vi",a.Welsh="cy",a.Xhosa="xh",a.Yiddish="yi",a.Yoruba="yo",a.Zulu="zu"})(E||(E={}));var e;(function(a){a.Afrikaans="af",a.AfrikaansSouthAfrica="af-ZA",a.Albanian="sq",a.AlbanianAlbania="sq-AL",a.Amharic="am",a.AmharicEthiopia="am-ET",a.Arabic="ar",a.ArabicAlgeria="ar-DZ",a.ArabicBahrain="ar-BH",a.ArabicEgypt="ar-EG",a.ArabicIraq="ar-IQ",a.ArabicJordan="ar-JO",a.ArabicKuwait="ar-KW",a.ArabicLebanon="ar-LB",a.ArabicLibya="ar-LY",a.ArabicMorocco="ar-MA",a.ArabicOman="ar-OM",a.ArabicQatar="ar-QA",a.ArabicSaudiArabia="ar-SA",a.ArabicSyria="ar-SY",a.ArabicTunisia="ar-TN",a.ArabicUnitedArabEmirates="ar-AE",a.ArabicYemen="ar-YE",a.Armenian="hy",a.ArmenianArmenia="hy-AM",a.Azerbaijani="az",a.AzerbaijaniAzerbaijan="az-AZ",a.AzerbaijaniCyrillicAzerbaijan="az-Cyrl-AZ",a.Bashkir="ba",a.Basque="eu",a.BasqueSpain="eu-ES",a.Belarusian="be",a.BelarusianBelarus="be-BY",a.Bengali="bn",a.BengaliBangladesh="bn-BD",a.BengaliIndia="bn-IN",a.Berber="ber",a.Bhutani="dz",a.BhutaniBhutan="dz-BT",a.Bosnian="bs",a.BosnianBosniaAndHerzegovina="bs-BA",a.Breton="br",a.Bulgarian="bg",a.BulgarianBosniaAndHerzegovina="bg-BG",a.BulgarianBulgaria="bg-BG",a.Burmese="my",a.BurmeseMyanmar="my-MM",a.Cantonese="yue",a.CantoneseHongKong="yue-HK",a.Catalan="ca",a.CatalanSpain="ca-ES",a.Chechen="ce",a.Cherokee="chr",a.Chinese="zh",a.ChineseSimplified="zh-Hans",a.ChineseSimplifiedChina="zh-Hans-CN",a.ChineseSimplifiedHongKong="zh-Hans-HK",a.ChineseSimplifiedMacau="zh-Hans-MO",a.ChineseSimplifiedSingapore="zh-Hans-SG",a.ChineseTraditional="zh-Hant",a.ChineseTraditionalHongKong="zh-Hant-HK",a.ChineseTraditionalMacau="zh-Hant-MO",a.ChineseTraditionalSingapore="zh-Hant-SG",a.ChineseTraditionalTaiwan="zh-Hant-TW",a.Chuvash="cv",a.CorsicanFrance="co-FR",a.Croatian="hr",a.CroatianBosniaAndHerzegovina="hr-BA",a.CroatianCroatia="hr-HR",a.Czech="cs",a.CzechCzechRepublic="cs-CZ",a.Danish="da",a.DanishDenmark="da-DK",a.Dari="prs",a.DariAfghanistan="prs-AF",a.Divehi="dv",a.DivehiMaldives="dv-MV",a.Dutch="nl",a.DutchBelgium="nl-BE",a.DutchNetherlands="nl-NL",a.English="en",a.EnglishAustralia="en-AU",a.EnglishBelgium="en-BE",a.EnglishBelize="en-BZ",a.EnglishCanada="en-CA",a.EnglishCaribbean="en-029",a.EnglishIreland="en-IE",a.EnglishJamaica="en-JM",a.EnglishNewZealand="en-NZ",a.EnglishPhilippines="en-PH",a.EnglishSingapore="en-SG",a.EnglishSouthAfrica="en-ZA",a.EnglishTrinidadAndTobago="en-TT",a.EnglishUnitedKingdom="en-GB",a.EnglishUnitedStates="en-US",a.EnglishZimbabwe="en-ZW",a.Esperanto="eo",a.Estonian="et",a.EstonianEstonia="et-EE",a.Faroese="fo",a.FaroeseFaroeIslands="fo-FO",a.Farsi="fa",a.FarsiIran="fa-IR",a.Filipino="fil",a.FilipinoPhilippines="fil-PH",a.Finnish="fi",a.FinnishFinland="fi-FI",a.French="fr",a.FrenchBelgium="fr-BE",a.FrenchCanada="fr-CA",a.FrenchFrance="fr-FR",a.FrenchLuxembourg="fr-LU",a.FrenchMonaco="fr-MC",a.FrenchReunion="fr-RE",a.FrenchSwitzerland="fr-CH",a.Frisian="fy",a.FrisianNetherlands="fy-NL",a.Galician="gl",a.GalicianSpain="gl-ES",a.Georgian="ka",a.GeorgianGeorgia="ka-GE",a.German="de",a.GermanAustria="de-AT",a.GermanBelgium="de-BE",a.GermanGermany="de-DE",a.GermanLiechtenstein="de-LI",a.GermanLuxembourg="de-LU",a.GermanSwitzerland="de-CH",a.Greenlandic="kl",a.GreenlandicGreenland="kl-GL",a.Greek="el",a.GreekGreece="el-GR",a.Gujarati="gu",a.GujaratiIndia="gu-IN",a.Haitian="ht",a.Hausa="ha",a.HausaGhana="ha-GH",a.HausaNiger="ha-NE",a.HausaNigeria="ha-NG",a.Hebrew="he",a.HebrewIsrael="he-IL",a.Hindi="hi",a.HindiIndia="hi-IN",a.Hungarian="hu",a.HungarianHungary="hu-HU",a.Icelandic="is",a.IcelandicIceland="is-IS",a.Igbo="ig",a.IgboNigeria="ig-NG",a.Indonesian="id",a.IndonesianIndonesia="id-ID",a.Irish="ga",a.IrishIreland="ga-IE",a.Italian="it",a.ItalianItaly="it-IT",a.ItalianSwitzerland="it-CH",a.Japanese="ja",a.JapaneseJapan="ja-JP",a.Javanese="jv",a.Kannada="kn",a.KannadaIndia="kn-IN",a.Karelian="krl",a.Kazakh="kk",a.KazakhKazakhstan="kk-KZ",a.Khmer="km",a.KhmerCambodia="km-KH",a.KinyarwandaRwanda="rw-RW",a.Komi="kv",a.Konkani="kok",a.KonkaniIndia="kok-IN",a.Korean="ko",a.KoreanSouthKorea="ko-KR",a.Kurdish="ku",a.KurdishIraq="ku-IQ",a.KurdishTurkey="ku-TR",a.Kyrgyz="ky",a.KyrgyzKyrgyzstan="ky-KG",a.Lao="lo",a.LaoLaos="lo-LA",a.Latin="la",a.Latvian="lv",a.LatvianLatvia="lv-LV",a.Lithuanian="lt",a.LithuanianLithuania="lt-LT",a.Luxembourgish="lb",a.LuxembourgishBelgium="lb-LU",a.LuxembourgishLuxembourg="lb-LU",a.Macedonian="mk",a.MacedonianNorthMacedonia="mk-MK",a.Malagasy="mg",a.Malay="ms",a.MalayBrunei="ms-BN",a.MalayIndia="ms-IN",a.MalayMalaysia="ms-MY",a.MalaySingapore="ms-SG",a.Malayalam="ml",a.MalayalamIndia="ml-IN",a.Maltese="mt",a.MalteseMalta="mt-MT",a.Maori="mi",a.MaoriNewZealand="mi-NZ",a.Marathi="mr",a.MarathiIndia="mr-IN",a.Mari="chm",a.Mongolian="mn",a.MongolianMongolia="mn-MN",a.Montenegrin="me",a.MontenegrinMontenegro="me-ME",a.Nepali="ne",a.NepaliNepal="ne-NP",a.NorthernSotho="ns",a.NorthernSothoSouthAfrica="ns-ZA",a.Norwegian="nb",a.NorwegianBokmalNorway="nb-NO",a.NorwegianNynorskNorway="nn-NO",a.Oriya="or",a.OriyaIndia="or-IN",a.Ossetian="os",a.Pashto="ps",a.PashtoAfghanistan="ps-AF",a.Persian="fa",a.PersianIran="fa-IR",a.Polish="pl",a.PolishPoland="pl-PL",a.Portuguese="pt",a.PortugueseBrazil="pt-BR",a.PortuguesePortugal="pt-PT",a.Punjabi="pa",a.PunjabiIndia="pa-IN",a.PunjabiPakistan="pa-PK",a.Quechua="qu",a.QuechuaBolivia="qu-BO",a.QuechuaEcuador="qu-EC",a.QuechuaPeru="qu-PE",a.Romanian="ro",a.RomanianRomania="ro-RO",a.Russian="ru",a.RussianKazakhstan="ru-KZ",a.RussianKyrgyzstan="ru-KG",a.RussianRussia="ru-RU",a.RussianUkraine="ru-UA",a.Sakha="sah",a.Sanskrit="sa",a.SanskritIndia="sa-IN",a.Sami="se",a.SamiNorway="se-NO",a.SamiSweden="se-SE",a.SamiFinland="se-FI",a.Samoan="sm",a.SamoanSamoa="sm-WS",a.Scots="gd",a.Serbian="sr",a.SerbianBosniaAndHerzegovina="sr-BA",a.SerbianSerbiaAndMontenegro="sr-SP",a.SerbianCyrillic="sr-SP-Cyrl",a.SerbianCyrillicBosniaAndHerzegovina="sr-Cyrl-BA",a.SerbianCyrillicSerbiaAndMontenegro="sr-Cyrl-SP",a.Sesotho="st",a.SesothoSouthAfrica="st-ZA",a.Shona="sn",a.ShonaZimbabwe="sn-ZW",a.Sindhi="sd",a.SindhiPakistan="sd-PK",a.Sinhala="si",a.SinhalaSriLanka="si-LK",a.Slovak="sk",a.SlovakSlovakia="sk-SK",a.Slovenian="sl",a.SlovenianSlovenia="sl-SI",a.Somali="so",a.SomaliSomalia="so-SO",a.Spanish="es",a.SpanishArgentina="es-AR",a.SpanishBolivia="es-BO",a.SpanishChile="es-CL",a.SpanishColombia="es-CO",a.SpanishCostaRica="es-CR",a.SpanishCuba="es-CU",a.SpanishDominicanRepublic="es-DO",a.SpanishEcuador="es-EC",a.SpanishEquatorialGuinea="es-GQ",a.SpanishElSalvador="es-SV",a.SpanishGuatemala="es-GT",a.SpanishHonduras="es-HN",a.SpanishMexico="es-MX",a.SpanishNicaragua="es-NI",a.SpanishPanama="es-PA",a.SpanishParaguay="es-PY",a.SpanishPeru="es-PE",a.SpanishPuertoRico="es-PR",a.SpanishSpain="es-ES",a.SpanishUnitedStates="es-US",a.SpanishUruguay="es-UY",a.SpanishVenezuela="es-VE",a.Sudanese="su",a.Sutu="st",a.SutuSouthAfrica="st-ZA",a.Swahili="sw",a.SwahiliKenya="sw-KE",a.Swedish="sv",a.SwedishFinland="sv-FI",a.SwedishSweden="sv-SE",a.Syriac="syr",a.SyriacSyria="syr-SY",a.Tajik="tg",a.TajikTajikistan="tg-TJ",a.Tagalog="tl",a.TagalogPhilippines="tl-PH",a.Tamazight="tmh",a.Tamil="ta",a.TamilIndia="ta-IN",a.Tatar="tt",a.Telugu="te",a.TeluguIndia="te-IN",a.Thai="th",a.ThaiThailand="th-TH",a.Tibetan="bo",a.TibetanBhutan="bo-BT",a.TibetanChina="bo-CN",a.TibetanIndia="bo-IN",a.Tsonga="ts",a.Tswana="tn",a.TswanaSouthAfrica="tn-ZA",a.Turkish="tr",a.TurkishTurkey="tr-TR",a.Turkmen="tk",a.Ukrainian="uk",a.UkrainianUkraine="uk-UA",a.Urdu="ur",a.UrduAfghanistan="ur-AF",a.UrduIndia="ur-IN",a.UrduPakistan="ur-PK",a.Uzbek="uz",a.UzbekCyrillic="uz-Cyrl-UZ",a.UzbekLatin="uz-Latn-UZ",a.UzbekUzbekistan="uz-UZ",a.Vietnamese="vi",a.VietnameseVietnam="vi-VN",a.Welsh="cy",a.WelshUnitedKingdom="cy-GB",a.Xhosa="xh",a.XhosaSouthAfrica="xh-ZA",a.Yiddish="yi",a.Yoruba="yo",a.YorubaNigeria="yo-NG",a.ZhuyinMandarinChina="yue-Hant-CN",a.Zulu="zu",a.ZuluSouthAfrica="zu-ZA"})(e||(e={}));var A;(function(a){a.AfricaAbidjan="Africa/Abidjan",a.AfricaAccra="Africa/Accra",a.AfricaAddisAbaba="Africa/Addis_Ababa",a.AfricaAlgiers="Africa/Algiers",a.AfricaAsmara="Africa/Asmara",a.AfricaBamako="Africa/Bamako",a.AfricaBangui="Africa/Bangui",a.AfricaBanjul="Africa/Banjul",a.AfricaBissau="Africa/Bissau",a.AfricaBlantyre="Africa/Blantyre",a.AfricaBrazzaville="Africa/Brazzaville",a.AfricaBujumbura="Africa/Bujumbura",a.AfricaCairo="Africa/Cairo",a.AfricaCasablanca="Africa/Casablanca",a.AfricaCeuta="Africa/Ceuta",a.AfricaConakry="Africa/Conakry",a.AfricaDakar="Africa/Dakar",a.AfricaDarEsSalaam="Africa/Dar_es_Salaam",a.AfricaDjibouti="Africa/Djibouti",a.AfricaDouala="Africa/Douala",a.AfricaElAaiun="Africa/El_Aaiun",a.AfricaFreetown="Africa/Freetown",a.AfricaGaborone="Africa/Gaborone",a.AfricaHarare="Africa/Harare",a.AfricaJohannesburg="Africa/Johannesburg",a.AfricaJuba="Africa/Juba",a.AfricaKampala="Africa/Kampala",a.AfricaKhartoum="Africa/Khartoum",a.AfricaKigali="Africa/Kigali",a.AfricaKinshasa="Africa/Kinshasa",a.AfricaLagos="Africa/Lagos",a.AfricaLibreville="Africa/Libreville",a.AfricaLome="Africa/Lome",a.AfricaLuanda="Africa/Luanda",a.AfricaLubumbashi="Africa/Lubumbashi",a.AfricaLusaka="Africa/Lusaka",a.AfricaMalabo="Africa/Malabo",a.AfricaMaputo="Africa/Maputo",a.AfricaMaseru="Africa/Maseru",a.AfricaMbabane="Africa/Mbabane",a.AfricaMogadishu="Africa/Mogadishu",a.AfricaMonrovia="Africa/Monrovia",a.AfricaNairobi="Africa/Nairobi",a.AfricaNdjamena="Africa/Ndjamena",a.AfricaNiamey="Africa/Niamey",a.AfricaNouakchott="Africa/Nouakchott",a.AfricaOuagadougou="Africa/Ouagadougou",a.AfricaPortoNovo="Africa/Porto-Novo",a.AfricaSaoTome="Africa/Sao_Tome",a.AfricaTripoli="Africa/Tripoli",a.AfricaTunis="Africa/Tunis",a.AfricaWindhoek="Africa/Windhoek",a.AmericaAdak="America/Adak",a.AmericaAnchorage="America/Anchorage",a.AmericaAnguilla="America/Anguilla",a.AmericaAntigua="America/Antigua",a.AmericaAraguaina="America/Araguaina",a.AmericaArgentinaBuenosAires="America/Argentina/Buenos_Aires",a.AmericaArgentinaCatamarca="America/Argentina/Catamarca",a.AmericaArgentinaCordoba="America/Argentina/Cordoba",a.AmericaArgentinaJujuy="America/Argentina/Jujuy",a.AmericaArgentinaLaRioja="America/Argentina/La_Rioja",a.AmericaArgentinaMendoza="America/Argentina/Mendoza",a.AmericaArgentinaRioGallegos="America/Argentina/Rio_Gallegos",a.AmericaArgentinaSalta="America/Argentina/Salta",a.AmericaArgentinaSanJuan="America/Argentina/San_Juan",a.AmericaArgentinaSanLuis="America/Argentina/San_Luis",a.AmericaArgentinaTucuman="America/Argentina/Tucuman",a.AmericaArgentinaUshuaia="America/Argentina/Ushuaia",a.AmericaAruba="America/Aruba",a.AmericaAsuncion="America/Asuncion",a.AmericaAtikokan="America/Atikokan",a.AmericaAtka="America/Atka",a.AmericaBahia="America/Bahia",a.AmericaBahiaBanderas="America/Bahia_Banderas",a.AmericaBarbados="America/Barbados",a.AmericaBelem="America/Belem",a.AmericaBelize="America/Belize",a.AmericaBlancSablon="America/Blanc-Sablon",a.AmericaBoaVista="America/Boa_Vista",a.AmericaBogota="America/Bogota",a.AmericaBoise="America/Boise",a.AmericaCambridgeBay="America/Cambridge_Bay",a.AmericaCampoGrande="America/Campo_Grande",a.AmericaCancun="America/Cancun",a.AmericaCaracas="America/Caracas",a.AmericaCayenne="America/Cayenne",a.AmericaCayman="America/Cayman",a.AmericaChicago="America/Chicago",a.AmericaChihuahua="America/Chihuahua",a.AmericaCoralHarbour="America/Coral_Harbour",a.AmericaCordoba="America/Cordoba",a.AmericaCostaRica="America/Costa_Rica",a.AmericaCreston="America/Creston",a.AmericaCuiaba="America/Cuiaba",a.AmericaCuracao="America/Curacao",a.AmericaDanmarkshavn="America/Danmarkshavn",a.AmericaDawson="America/Dawson",a.AmericaDawsonCreek="America/Dawson_Creek",a.AmericaDenver="America/Denver",a.AmericaDetroit="America/Detroit",a.AmericaDominica="America/Dominica",a.AmericaEdmonton="America/Edmonton",a.AmericaEirunepe="America/Eirunepe",a.AmericaElSalvador="America/El_Salvador",a.AmericaFortaleza="America/Fortaleza",a.AmericaGlaceBay="America/Glace_Bay",a.AmericaGodthab="America/Godthab",a.AmericaGooseBay="America/Goose_Bay",a.AmericaGrandTurk="America/Grand_Turk",a.AmericaGrenada="America/Grenada",a.AmericaGuadeloupe="America/Guadeloupe",a.AmericaGuatemala="America/Guatemala",a.AmericaGuayaquil="America/Guayaquil",a.AmericaGuyana="America/Guyana",a.AmericaHalifax="America/Halifax",a.AmericaHavana="America/Havana",a.AmericaHermosillo="America/Hermosillo",a.AmericaIndianaIndianapolis="America/Indiana/Indianapolis",a.AmericaIndianaKnox="America/Indiana/Knox",a.AmericaIndianaMarengo="America/Indiana/Marengo",a.AmericaIndianaPetersburg="America/Indiana/Petersburg",a.AmericaIndianaTellCity="America/Indiana/Tell_City",a.AmericaIndianaVevay="America/Indiana/Vevay",a.AmericaIndianaVincennes="America/Indiana/Vincennes",a.AmericaIndianaWinamac="America/Indiana/Winamac",a.AmericaInuvik="America/Inuvik",a.AmericaIqaluit="America/Iqaluit",a.AmericaJamaica="America/Jamaica",a.AmericaJuneau="America/Juneau",a.AmericaKentuckyLouisville="America/Kentucky/Louisville",a.AmericaKentuckyMonticello="America/Kentucky/Monticello",a.AmericaKralendijk="America/Kralendijk",a.AmericaLaPaz="America/La_Paz",a.AmericaLima="America/Lima",a.AmericaLosAngeles="America/Los_Angeles",a.AmericaLouisville="America/Louisville",a.AmericaLowerPrinces="America/Lower_Princes",a.AmericaMaceio="America/Maceio",a.AmericaManagua="America/Managua",a.AmericaManaus="America/Manaus",a.AmericaMarigot="America/Marigot",a.AmericaMartinique="America/Martinique",a.AmericaMatamoros="America/Matamoros",a.AmericaMazatlan="America/Mazatlan",a.AmericaMenominee="America/Menominee",a.AmericaMerida="America/Merida",a.AmericaMetlakatla="America/Metlakatla",a.AmericaMexicoCity="America/Mexico_City",a.AmericaMiquelon="America/Miquelon",a.AmericaMoncton="America/Moncton",a.AmericaMonterrey="America/Monterrey",a.AmericaMontevideo="America/Montevideo",a.AmericaMontserrat="America/Montserrat",a.AmericaMontreal="America/Montreal",a.AmericaNassau="America/Nassau",a.AmericaNewYork="America/New_York",a.AmericaNipigon="America/Nipigon",a.AmericaNome="America/Nome",a.AmericaNoronha="America/Noronha",a.AmericaNorthDakotaBeulah="America/North_Dakota/Beulah",a.AmericaNorthDakotaCenter="America/North_Dakota/Center",a.AmericaNorthDakotaNewSalem="America/North_Dakota/New_Salem",a.AmericaOjinaga="America/Ojinaga",a.AmericaPanama="America/Panama",a.AmericaPangnirtung="America/Pangnirtung",a.AmericaParamaribo="America/Paramaribo",a.AmericaPhoenix="America/Phoenix",a.AmericaPortAuPrince="America/Port-au-Prince",a.AmericaPortOfSpain="America/Port_of_Spain",a.AmericaPortoVelho="America/Porto_Velho",a.AmericaPuertoRico="America/Puerto_Rico",a.AmericaRainyRiver="America/Rainy_River",a.AmericaRankinInlet="America/Rankin_Inlet",a.AmericaRecife="America/Recife",a.AmericaRegina="America/Regina",a.AmericaResolute="America/Resolute",a.AmericaRioBranco="America/Rio_Branco",a.AmericaSantaIsabel="America/Santa_Isabel",a.AmericaSantarem="America/Santarem",a.AmericaSantiago="America/Santiago",a.AmericaSantoDomingo="America/Santo_Domingo",a.AmericaSaoPaulo="America/Sao_Paulo",a.AmericaScoresbysund="America/Scoresbysund",a.AmericaShiprock="America/Shiprock",a.AmericaSitka="America/Sitka",a.AmericaStBarthelemy="America/St_Barthelemy",a.AmericaStJohns="America/St_Johns",a.AmericaStKitts="America/St_Kitts",a.AmericaStLucia="America/St_Lucia",a.AmericaStThomas="America/St_Thomas",a.AmericaStVincent="America/St_Vincent",a.AmericaSwiftCurrent="America/Swift_Current",a.AmericaTegucigalpa="America/Tegucigalpa",a.AmericaThule="America/Thule",a.AmericaThunderBay="America/Thunder_Bay",a.AmericaTijuana="America/Tijuana",a.AmericaToronto="America/Toronto",a.AmericaTortola="America/Tortola",a.AmericaVancouver="America/Vancouver",a.AmericaWhitehorse="America/Whitehorse",a.AmericaWinnipeg="America/Winnipeg",a.AmericaYakutat="America/Yakutat",a.AmericaYellowknife="America/Yellowknife",a.AntarcticaCasey="Antarctica/Casey",a.AntarcticaDavis="Antarctica/Davis",a.AntarcticaDumontDUrville="Antarctica/DumontDUrville",a.AntarcticaMacquarie="Antarctica/Macquarie",a.AntarcticaMawson="Antarctica/Mawson",a.AntarcticaMcMurdo="Antarctica/McMurdo",a.AntarcticaPalmer="Antarctica/Palmer",a.AntarcticaRothera="Antarctica/Rothera",a.AntarcticaSyowa="Antarctica/Syowa",a.AntarcticaTroll="Antarctica/Troll",a.AntarcticaVostok="Antarctica/Vostok",a.ArcticLongyearbyen="Arctic/Longyearbyen",a.AsiaAden="Asia/Aden",a.AsiaAlmaty="Asia/Almaty",a.AsiaAmman="Asia/Amman",a.AsiaAnadyr="Asia/Anadyr",a.AsiaAqtau="Asia/Aqtau",a.AsiaAqtobe="Asia/Aqtobe",a.AsiaAshgabat="Asia/Ashgabat",a.AsiaBaghdad="Asia/Baghdad",a.AsiaBahrain="Asia/Bahrain",a.AsiaBaku="Asia/Baku",a.AsiaBangkok="Asia/Bangkok",a.AsiaBarnaul="Asia/Barnaul",a.AsiaBeirut="Asia/Beirut",a.AsiaBishkek="Asia/Bishkek",a.AsiaBrunei="Asia/Brunei",a.AsiaChita="Asia/Chita",a.AsiaChoibalsan="Asia/Choibalsan",a.AsiaColombo="Asia/Colombo",a.AsiaDamascus="Asia/Damascus",a.AsiaDhaka="Asia/Dhaka",a.AsiaDili="Asia/Dili",a.AsiaDubai="Asia/Dubai",a.AsiaDushanbe="Asia/Dushanbe",a.AsiaFamagusta="Asia/Famagusta",a.AsiaGaza="Asia/Gaza",a.AsiaHebron="Asia/Hebron",a.AsiaHoChiMinh="Asia/Ho_Chi_Minh",a.AsiaHongKong="Asia/Hong_Kong",a.AsiaHovd="Asia/Hovd",a.AsiaIrkutsk="Asia/Irkutsk",a.AsiaJakarta="Asia/Jakarta",a.AsiaJayapura="Asia/Jayapura",a.AsiaJerusalem="Asia/Jerusalem",a.AsiaKabul="Asia/Kabul",a.AsiaKamchatka="Asia/Kamchatka",a.AsiaKarachi="Asia/Karachi",a.AsiaKathmandu="Asia/Kathmandu",a.AsiaKhandyga="Asia/Khandyga",a.AsiaKolkata="Asia/Kolkata",a.AsiaKrasnoyarsk="Asia/Krasnoyarsk",a.AsiaKualaLumpur="Asia/Kuala_Lumpur",a.AsiaKuching="Asia/Kuching",a.AsiaKuwait="Asia/Kuwait",a.AsiaMacau="Asia/Macau",a.AsiaMagadan="Asia/Magadan",a.AsiaMakassar="Asia/Makassar",a.AsiaManila="Asia/Manila",a.AsiaMuscat="Asia/Muscat",a.AsiaNicosia="Asia/Nicosia",a.AsiaNovokuznetsk="Asia/Novokuznetsk",a.AsiaNovosibirsk="Asia/Novosibirsk",a.AsiaOmsk="Asia/Omsk",a.AsiaOral="Asia/Oral",a.AsiaPhnomPenh="Asia/Phnom_Penh",a.AsiaPontianak="Asia/Pontianak",a.AsiaPyongyang="Asia/Pyongyang",a.AsiaQatar="Asia/Qatar",a.AsiaQyzylorda="Asia/Qyzylorda",a.AsiaRangoon="Asia/Rangoon",a.AsiaRiyadh="Asia/Riyadh",a.AsiaSakhalin="Asia/Sakhalin",a.AsiaSamarkand="Asia/Samarkand",a.AsiaSeoul="Asia/Seoul",a.AsiaShanghai="Asia/Shanghai",a.AsiaSingapore="Asia/Singapore",a.AsiaSrednekolymsk="Asia/Srednekolymsk",a.AsiaTaipei="Asia/Taipei",a.AsiaTashkent="Asia/Tashkent",a.AsiaTbilisi="Asia/Tbilisi",a.AsiaTehran="Asia/Tehran",a.AsiaThimphu="Asia/Thimphu",a.AsiaTokyo="Asia/Tokyo",a.AsiaTomsk="Asia/Tomsk",a.AsiaUlaanbaatar="Asia/Ulaanbaatar",a.AsiaUrumqi="Asia/Urumqi",a.AsiaUstNera="Asia/Ust-Nera",a.AsiaVientiane="Asia/Vientiane",a.AsiaVladivostok="Asia/Vladivostok",a.AsiaYakutsk="Asia/Yakutsk",a.AsiaYekaterinburg="Asia/Yekaterinburg",a.AsiaYerevan="Asia/Yerevan",a.AtlanticAzores="Atlantic/Azores",a.AtlanticBermuda="Atlantic/Bermuda",a.AtlanticCanary="Atlantic/Canary",a.AtlanticCapeVerde="Atlantic/Cape_Verde",a.AtlanticFaroe="Atlantic/Faroe",a.AtlanticMadeira="Atlantic/Madeira",a.AtlanticReykjavik="Atlantic/Reykjavik",a.AtlanticSouthGeorgia="Atlantic/South_Georgia",a.AtlanticStHelena="Atlantic/St_Helena",a.AtlanticStanley="Atlantic/Stanley",a.AustraliaAdelaide="Australia/Adelaide",a.AustraliaBrisbane="Australia/Brisbane",a.AustraliaBrokenHill="Australia/Broken_Hill",a.AustraliaCanberra="Australia/Canberra",a.AustraliaCurrie="Australia/Currie",a.AustraliaDarwin="Australia/Darwin",a.AustraliaEucla="Australia/Eucla",a.AustraliaHobart="Australia/Hobart",a.AustraliaLindeman="Australia/Lindeman",a.AustraliaLordHowe="Australia/Lord_Howe",a.AustraliaMelbourne="Australia/Melbourne",a.AustraliaPerth="Australia/Perth",a.AustraliaSydney="Australia/Sydney",a.EuropeAmsterdam="Europe/Amsterdam",a.EuropeAndorra="Europe/Andorra",a.EuropeAthens="Europe/Athens",a.EuropeBelgrade="Europe/Belgrade",a.EuropeBerlin="Europe/Berlin",a.EuropeBratislava="Europe/Bratislava",a.EuropeBrussels="Europe/Brussels",a.EuropeBucharest="Europe/Bucharest",a.EuropeBudapest="Europe/Budapest",a.EuropeBusingen="Europe/Busingen",a.EuropeChisinau="Europe/Chisinau",a.EuropeCopenhagen="Europe/Copenhagen",a.EuropeDublin="Europe/Dublin",a.EuropeGibraltar="Europe/Gibraltar",a.EuropeGuernsey="Europe/Guernsey",a.EuropeHelsinki="Europe/Helsinki",a.EuropeIsleOfMan="Europe/Isle_of_Man",a.EuropeIstanbul="Europe/Istanbul",a.EuropeJersey="Europe/Jersey",a.EuropeKaliningrad="Europe/Kaliningrad",a.EuropeKiev="Europe/Kiev",a.EuropeKirov="Europe/Kirov",a.EuropeLisbon="Europe/Lisbon",a.EuropeLjubljana="Europe/Ljubljana",a.EuropeLondon="Europe/London",a.EuropeLuxembourg="Europe/Luxembourg",a.EuropeMadrid="Europe/Madrid",a.EuropeMalta="Europe/Malta",a.EuropeMariehamn="Europe/Mariehamn",a.EuropeMinsk="Europe/Minsk",a.EuropeMonaco="Europe/Monaco",a.EuropeMoscow="Europe/Moscow",a.EuropeOslo="Europe/Oslo",a.EuropeParis="Europe/Paris",a.EuropePodgorica="Europe/Podgorica",a.EuropePrague="Europe/Prague",a.EuropeRiga="Europe/Riga",a.EuropeRome="Europe/Rome",a.EuropeSamara="Europe/Samara",a.EuropeSanMarino="Europe/San_Marino",a.EuropeSarajevo="Europe/Sarajevo",a.EuropeSimferopol="Europe/Simferopol",a.EuropeSkopje="Europe/Skopje",a.EuropeSofia="Europe/Sofia",a.EuropeStockholm="Europe/Stockholm",a.EuropeTallinn="Europe/Tallinn",a.EuropeTirane="Europe/Tirane",a.EuropeUzhgorod="Europe/Uzhgorod",a.EuropeVaduz="Europe/Vaduz",a.EuropeVatican="Europe/Vatican",a.EuropeVienna="Europe/Vienna",a.EuropeVilnius="Europe/Vilnius",a.EuropeVolgograd="Europe/Volgograd",a.EuropeWarsaw="Europe/Warsaw",a.EuropeZagreb="Europe/Zagreb",a.EuropeZaporozhye="Europe/Zaporozhye",a.EuropeZurich="Europe/Zurich",a.GMT="GMT",a.IndianAntananarivo="Indian/Antananarivo",a.IndianChagos="Indian/Chagos",a.IndianChristmas="Indian/Christmas",a.IndianCocos="Indian/Cocos",a.IndianComoro="Indian/Comoro",a.IndianKerguelen="Indian/Kerguelen",a.IndianMahe="Indian/Mahe",a.IndianMaldives="Indian/Maldives",a.IndianMauritius="Indian/Mauritius",a.IndianMayotte="Indian/Mayotte",a.IndianReunion="Indian/Reunion",a.PacificApia="Pacific/Apia",a.PacificAuckland="Pacific/Auckland",a.PacificBougainville="Pacific/Bougainville",a.PacificChatham="Pacific/Chatham",a.PacificChuuk="Pacific/Chuuk",a.PacificEaster="Pacific/Easter",a.PacificEfate="Pacific/Efate",a.PacificEnderbury="Pacific/Enderbury",a.PacificFakaofo="Pacific/Fakaofo",a.PacificFiji="Pacific/Fiji",a.PacificFunafuti="Pacific/Funafuti",a.PacificGalapagos="Pacific/Galapagos",a.PacificGambier="Pacific/Gambier",a.PacificGuadalcanal="Pacific/Guadalcanal",a.PacificGuam="Pacific/Guam",a.PacificHonolulu="Pacific/Honolulu",a.PacificJohnston="Pacific/Johnston",a.PacificKiritimati="Pacific/Kiritimati",a.PacificKosrae="Pacific/Kosrae",a.PacificKwajalein="Pacific/Kwajalein",a.PacificMajuro="Pacific/Majuro",a.PacificMarquesas="Pacific/Marquesas",a.PacificMidway="Pacific/Midway",a.PacificNauru="Pacific/Nauru",a.PacificNiue="Pacific/Niue",a.PacificNorfolk="Pacific/Norfolk",a.PacificNoumea="Pacific/Noumea",a.PacificPagoPago="Pacific/Pago_Pago",a.PacificPalau="Pacific/Palau",a.PacificPitcairn="Pacific/Pitcairn",a.PacificPohnpei="Pacific/Pohnpei",a.PacificPonape="Pacific/Ponape",a.PacificPortMoresby="Pacific/Port_Moresby",a.PacificRarotonga="Pacific/Rarotonga",a.PacificSaipan="Pacific/Saipan",a.PacificSamoa="Pacific/Samoa",a.PacificTahiti="Pacific/Tahiti",a.PacificTarawa="Pacific/Tarawa",a.PacificTongatapu="Pacific/Tongatapu",a.PacificTruk="Pacific/Truk",a.PacificWake="Pacific/Wake",a.PacificWallis="Pacific/Wallis",a.PacificYap="Pacific/Yap"})(A||(A={}));var t;(function(a){a.UTC_MINUS_12="UTC-12",a.UTC_MINUS_11_30="UTC-11:30",a.UTC_MINUS_11="UTC-11",a.UTC_MINUS_10_30="UTC-10:30",a.UTC_MINUS_10="UTC-10",a.UTC_MINUS_9_30="UTC-9:30",a.UTC_MINUS_9="UTC-09",a.UTC_MINUS_8_45="UTC-8:45",a.UTC_MINUS_8="UTC-08",a.UTC_MINUS_7="UTC-07",a.UTC_MINUS_6_30="UTC-6:30",a.UTC_MINUS_6="UTC-06",a.UTC_MINUS_5_45="UTC-5:45",a.UTC_MINUS_5_30="UTC-5:30",a.UTC_MINUS_5="UTC-05",a.UTC_MINUS_4_30="UTC-4:30",a.UTC_MINUS_4="UTC-04",a.UTC_MINUS_3_30="UTC-3:30",a.UTC_MINUS_3="UTC-03",a.UTC_MINUS_2_30="UTC-2:30",a.UTC_MINUS_2="UTC-02",a.UTC_MINUS_1="UTC-01",a.UTC_0="UTC+00",a.UTC_PLUS_1="UTC+01",a.UTC_PLUS_2="UTC+02",a.UTC_PLUS_3="UTC+03",a.UTC_PLUS_3_30="UTC+3:30",a.UTC_PLUS_4="UTC+04",a.UTC_PLUS_4_30="UTC+4:30",a.UTC_PLUS_5="UTC+05",a.UTC_PLUS_5_30="UTC+5:30",a.UTC_PLUS_5_45="UTC+5:45",a.UTC_PLUS_6="UTC+06",a.UTC_PLUS_6_30="UTC+6:30",a.UTC_PLUS_7="UTC+07",a.UTC_PLUS_8="UTC+08",a.UTC_PLUS_8_45="UTC+8:45",a.UTC_PLUS_9="UTC+09",a.UTC_PLUS_9_30="UTC+9:30",a.UTC_PLUS_10="UTC+10",a.UTC_PLUS_10_30="UTC+10:30",a.UTC_PLUS_11="UTC+11",a.UTC_PLUS_11_30="UTC+11:30",a.UTC_PLUS_12="UTC+12",a.UTC_PLUS_12_45="UTC+12:45",a.UTC_PLUS_13="UTC+13",a.UTC_PLUS_13_45="UTC+13:45",a.UTC_PLUS_14="UTC+14"})(t||(t={}));var u;(function(a){a.AcreTime="ACT",a.AfghanistanTime="AFT",a.AIXCentralEuropeanTime="DFT",a.AlaskaDaylightTime="AKDT",a.AlaskaStandardTime="AKST",a.AlmaAtaTime="ALMT",a.AmazonSummerTime="AMST",a.AmazonTime="AMT",a.AnadyrTime="ANAT",a.AqtobeTime="AQTT",a.ArabiaStandardTime="AST",a.ArgentinaTime="ART",a.ArmeniaTime="AMT",a.ASEANCommonTime="ASEAN",a.AtlanticDaylightTime="ADT",a.AtlanticStandardTime="AST",a.AustralianCentralDaylightSavingTime="ACDT",a.AustralianCentralStandardTime="ACST",a.AustralianCentralWesternStandardTime="ACWST",a.AustralianEasternDaylightSavingTime="AEDT",a.AustralianEasternStandardTime="AEST",a.AustralianEasternTime="AET",a.AustralianWesternStandardTime="AWST",a.AzerbaijanTime="AZT",a.AzoresStandardTime="AZOT",a.AzoresSummerTime="AZOST",a.BakerIslandTime="BIT",a.BangladeshStandardTime="BST",a.BhutanTime="BTT",a.BoliviaTime="BOT",a.BougainvilleStandardTime="BST",a.BrasiliaSummerTime="BRST",a.BrasiliaTime="BRT",a.BritishIndianOceanTime="BIOT",a.BritishSummerTime="BST",a.BruneiTime="BNT",a.CapeVerdeTime="CVT",a.CentralAfricaTime="CAT",a.CentralDaylightTime="CDT",a.CentralEuropeanSummerTime="CEST",a.CentralEuropeanTime="CET",a.CentralIndonesiaTime="WITA",a.CentralStandardTime="CST",a.CentralTime="CT",a.CentralWesternStandardTime="CWST",a.ChamorroStandardTime="CHST",a.ChathamDaylightTime="CHADT",a.ChathamStandardTime="CHAST",a.ChileStandardTime="CLT",a.ChileSummerTime="CLST",a.ChinaStandardTime="CST",a.ChoibalsanStandardTime="CHOT",a.ChoibalsanSummerTime="CHOST",a.ChristmasIslandTime="CXT",a.ChuukTime="CHUT",a.ClipptertonIslandStandardTime="CIST",a.CocosIslandsTime="CCT",a.ColombiaSummerTime="COST",a.ColombiaTime="COT",a.CookIslandTime="CKT",a.CoordinatedUniversalTime="UTC",a.CubaDaylightTime="CDT",a.CubaStandardTime="CST",a.DavisTime="DAVT",a.DumontDUrvilleTime="DDUT",a.EastAfricaTime="EAT",a.EasterIslandStandardTime="EAST",a.EasterIslandSummerTime="EASST",a.EasternCaribbeanTime="ECT",a.EasternDaylightTime="EDT",a.EasternEuropeanSummerTime="EEST",a.EasternEuropeanTime="EET",a.EasternGreenlandSummerTime="EGST",a.EasternGreenlandTime="EGT",a.EasternIndonesianTime="WIT",a.EasternStandardTime="EST",a.EasternTime="ET",a.EcuadorTime="ECT",a.FalklandIslandsSummerTime="FKST",a.FalklandIslandsTime="FKT",a.FernandoDeNoronhaTime="FNT",a.FijiTime="FJT",a.FrenchGuianaTime="GFT",a.FrenchSouthernAndAntarcticTime="TFT",a.FurtherEasternEuropeanTime="FET",a.GalapagosTime="GALT",a.GambierIslandTime="GIT",a.GambierIslandsTime="GAMT",a.GeorgiaStandardTime="GET",a.GilbertIslandTime="GILT",a.GreenwichMeanTime="GMT",a.GulfStandardTime="GST",a.GuyanaTime="GYT",a.HawaiiAleutianDaylightTime="HDT",a.HawaiiAleutianStandardTime="HST",a.HeardAndMcDonaldIslandsTime="HMT",a.HeureAvanceeDEuropeCentraleTime="HAEC",a.HongKongTime="HKT",a.HovdSummerTime="HOVST",a.HovdTime="HOVT",a.IndianOceanTime="IOT",a.IndianStandardTime="IST",a.IndochinaTime="ICT",a.InternationalDayLineWestTime="IDLW",a.IranDaylightTime="IRDT",a.IranStandardTime="IRST",a.IrishStandardTime="IST",a.IrkutskSummerTime="IRKST",a.IrkutskTime="IRKT",a.IsraelDaylightTime="IDT",a.IsraelStandardTime="IST",a.JapanStandardTime="JST",a.KaliningradTime="KALT",a.KamchatkaTime="KAMT",a.KoreaStandardTime="KST",a.KosraeTime="KOST",a.KrasnoyarskSummerTime="KRAST",a.KrasnoyarskTime="KRAT",a.KyrgyzstanTime="KGT",a.LineIslandsTime="LINT",a.KazakhstanStandardTime="KAST",a.LordHoweStandardTime="LHST",a.LordHoweSummerTime="LHST",a.MacquarieIslandStationTime="MIST",a.MagadanTime="MAGT",a.MalaysiaStandardTime="MST",a.MalaysiaTime="MYT",a.MaldivesTime="MVT",a.MarquesasIslandsTime="MART",a.MarshallIslandsTime="MHT",a.MauritiusTime="MUT",a.MawsonStationTime="MAWT",a.MiddleEuropeanSummerTime="MEDT",a.MiddleEuropeanTime="MET",a.MoscowTime="MSK",a.MountainDaylightTime="MDT",a.MountainStandardTime="MST",a.MyanmarStandardTime="MMT",a.NepalTime="NCT",a.NauruTime="NRT",a.NewCaledoniaTime="NCT",a.NewZealandDaylightTime="NZDT",a.NewZealandStandardTime="NZST",a.NewfoundlandDaylightTime="NDT",a.NewfoundlandStandardTime="NST",a.NewfoundlandTime="NT",a.NiueTime="NUT",a.NorfolkIslandTime="NFT",a.NovosibirskTime="NOVT",a.OmskTime="OMST",a.OralTime="ORAT",a.PacificDaylightTime="PDT",a.PacificStandardTime="PST",a.PakistanStandardTime="PKT",a.PalauTime="PWT",a.PapuaNewGuineaTime="PGT",a.ParaguaySummerTime="PYST",a.ParaguayTime="PYT",a.PeruTime="PET",a.PhilippineStandardTime="PHST",a.PhilippineTime="PHT",a.PhoenixIslandTime="PHOT",a.PitcairnTime="PST",a.PohnpeiStandardTime="PONT",a.ReunionTime="RET",a.RotheraResearchStationTime="ROTT",a.SaintPierreAndMiquelonDaylightTime="PMDT",a.SaintPierreAndMiquelonStandardTime="PMST",a.SakhalinIslandTime="SAKT",a.SamaraTime="SAMT",a.SamoaDaylightTime="SDT",a.SamoaStandardTime="SST",a.SeychellesTime="SCT",a.ShowaStationTime="SYOT",a.SingaporeStandardTime="SST",a.SingaporeTime="SGT",a.SolomonIslandsTime="SBT",a.SouthAfricanStandardTime="SAST",a.SouthGeorgiaAndTheSouthSandwichIslandsTime="GST",a.SrednekolymskTime="SRET",a.SriLankaStandardTime="SLST",a.SurinameTime="SRT",a.TahitiTime="TAHT",a.TajikistanTime="TJT",a.ThailandStandardTime="THA",a.TimorLesteTime="TLT",a.TokelauTime="TKT",a.TongaTime="TOT",a.TurkeyTime="TRT",a.TurkmenistanTime="TMT",a.TuvaluTime="TVT",a.UlaanbaatarStandardTime="ULAT",a.UlaanbaatarSummerTime="ULAST",a.UruguayStandardTime="UYT",a.UruguaySummerTime="UYST",a.UzbekistanTime="UZT",a.VanuatuTime="VUT",a.VenezuelaStandardTime="VET",a.VladivostokTime="VLAT",a.VolgogradTime="VOLT",a.VostokStationTime="VOST",a.WakeIslandTime="WAKT",a.WestAfricaSummerTime="WAST",a.WestAfricaTime="WAT",a.WestGreenlandSummerTime="WGST",a.WestGreenlandTime="WGT",a.WestKazakhstanTime="WKT",a.WesternEuropeanSummerTime="WEDT",a.WesternEuropeanTime="WET",a.WesternIndonesianTime="WIT",a.WesternStandardTime="WST",a.YakutskTime="YAKT",a.YekaterinburgTime="YEKT"})(u||(u={}));var Id={dst:{is:!1,uses:!0},id:u.AcreTime,name:"Acre Time",offset:t.UTC_MINUS_5},pd={dst:{is:!1,uses:!0},id:u.AfghanistanTime,name:"Afghanistan Time",offset:t.UTC_PLUS_4_30},Sd={dst:{is:!1,uses:!0},id:u.AIXCentralEuropeanTime,name:"AIX Central European Time",offset:t.UTC_PLUS_1},Ed={dst:{is:!0,uses:!0},id:u.AlaskaDaylightTime,name:"Alaska Daylight Time",offset:t.UTC_MINUS_8},Td={dst:{is:!1,uses:!0},id:u.AlaskaStandardTime,name:"Alaska Standard Time",offset:t.UTC_MINUS_9},vd={dst:{is:!1,uses:!0},id:u.AlmaAtaTime,name:"Alma-Ata Time",offset:t.UTC_PLUS_6},bd={dst:{is:!1,uses:!0},id:u.AmazonSummerTime,name:"Amazon Summer Time",offset:t.UTC_MINUS_3},Ud={dst:{is:!1,uses:!0},id:u.AmazonTime,name:"Amazon Time",offset:t.UTC_MINUS_4},Nd={dst:{is:!1,uses:!0},id:u.AnadyrTime,name:"Anadyr Time",offset:t.UTC_PLUS_12},Bd={dst:{is:!1,uses:!0},id:u.AqtobeTime,name:"Aqtobe Time",offset:t.UTC_PLUS_5},Pd={dst:{is:!1,uses:!0},id:u.ArabiaStandardTime,name:"Arabia Standard Time",offset:t.UTC_PLUS_3},yd={dst:{is:!1,uses:!0},id:u.ArgentinaTime,name:"Argentina Time",offset:t.UTC_MINUS_3},kd={dst:{is:!1,uses:!0},id:u.ArmeniaTime,name:"Armenia Time",offset:t.UTC_PLUS_4},Md={dst:{is:!0,uses:!0},id:u.AtlanticDaylightTime,name:"Atlantic Daylight Time",offset:t.UTC_MINUS_3},Dd={dst:{is:!1,uses:!0},id:u.AtlanticStandardTime,name:"Atlantic Standard Time",offset:t.UTC_MINUS_4},xd={dst:{is:!0,uses:!0},id:u.AustralianCentralDaylightSavingTime,name:"Australian Central Daylight Saving Time",offset:t.UTC_PLUS_10_30},Fd={dst:{is:!1,uses:!0},id:u.AustralianCentralStandardTime,name:"Australian Central Standard Time",offset:t.UTC_PLUS_9_30},Ld={dst:{is:!1,uses:!0},id:u.AustralianCentralWesternStandardTime,name:"Australian Central Western Standard Time",offset:t.UTC_PLUS_8_45},wd={dst:{is:!0,uses:!0},id:u.AustralianEasternDaylightSavingTime,name:"Australian Eastern Daylight Saving Time",offset:t.UTC_PLUS_11},Gd={dst:{is:!1,uses:!0},id:u.AustralianEasternStandardTime,name:"Australian Eastern Standard Time",offset:t.UTC_PLUS_10},qd={dst:{is:!1,uses:!0},id:u.AustralianEasternTime,name:"Australian Eastern Time",offset:t.UTC_PLUS_10},Kd={dst:{is:!1,uses:!0},id:u.AustralianWesternStandardTime,name:"Australian Western Standard Time",offset:t.UTC_PLUS_8},Od={dst:{is:!1,uses:!0},id:u.AzerbaijanTime,name:"Azerbaijan Time",offset:t.UTC_PLUS_4},jd={dst:{is:!1,uses:!0},id:u.AzoresStandardTime,name:"Azores Standard Time",offset:t.UTC_MINUS_1},Hd={dst:{is:!0,uses:!0},id:u.AzoresSummerTime,name:"Azores Summer Time",offset:t.UTC_0},Wd={dst:{is:!1,uses:!0},id:u.BakerIslandTime,name:"Baker Island Time",offset:t.UTC_MINUS_12},zd={dst:{is:!1,uses:!0},id:u.BangladeshStandardTime,name:"Bangladesh Standard Time",offset:t.UTC_PLUS_6},Vd={dst:{is:!1,uses:!0},id:u.BhutanTime,name:"Bhutan Time",offset:t.UTC_PLUS_6},Rd={dst:{is:!1,uses:!0},id:u.BoliviaTime,name:"Bolivia Time",offset:t.UTC_MINUS_4},Yd={dst:{is:!1,uses:!0},id:u.BougainvilleStandardTime,name:"Bougainville Standard Time",offset:t.UTC_PLUS_11},Jd={dst:{is:!0,uses:!0},id:u.BrasiliaSummerTime,name:"Brasilia Summer Time",offset:t.UTC_MINUS_2},Zd={dst:{is:!1,uses:!0},id:u.BrasiliaTime,name:"Brasilia Time",offset:t.UTC_MINUS_3},$d={dst:{is:!1,uses:!0},id:u.BritishIndianOceanTime,name:"British Indian Ocean Time",offset:t.UTC_PLUS_6},Qd={dst:{is:!0,uses:!0},id:u.BritishSummerTime,name:"British Summer Time",offset:t.UTC_PLUS_1},Xd={dst:{is:!1,uses:!0},id:u.BruneiTime,name:"Brunei Time",offset:t.UTC_PLUS_8},Cd={dst:{is:!1,uses:!0},id:u.CapeVerdeTime,name:"Cape Verde Time",offset:t.UTC_MINUS_1},af={dst:{is:!1,uses:!0},id:u.CentralAfricaTime,name:"Central Africa Time",offset:t.UTC_PLUS_2},ef={dst:{is:!0,uses:!0},id:u.CentralDaylightTime,name:"Central Daylight Time",offset:t.UTC_MINUS_5},nf={dst:{is:!0,uses:!0},id:u.CentralEuropeanSummerTime,name:"Central European Summer Time",offset:t.UTC_PLUS_2},sf={dst:{is:!1,uses:!0},id:u.CentralEuropeanTime,name:"Central European Time",offset:t.UTC_PLUS_1},rf={dst:{is:!1,uses:!0},id:u.CentralIndonesiaTime,name:"Central Indonesia Time",offset:t.UTC_PLUS_8},tf={dst:{is:!1,uses:!0},id:u.CentralStandardTime,name:"Central Standard Time",offset:t.UTC_MINUS_6},uf={dst:{is:!1,uses:!0},id:u.CentralTime,name:"Central Time",offset:t.UTC_MINUS_5},lf={dst:{is:!1,uses:!0},id:u.CentralWesternStandardTime,name:"Central Western Standard Time",offset:t.UTC_PLUS_8_45},of={dst:{is:!1,uses:!0},id:u.ChamorroStandardTime,name:"Chamorro Standard Time",offset:t.UTC_PLUS_10},mf={dst:{is:!0,uses:!0},id:u.ChathamDaylightTime,name:"Chatham Daylight Time",offset:t.UTC_PLUS_13_45},cf={dst:{is:!1,uses:!0},id:u.ChathamStandardTime,name:"Chatham Standard Time",offset:t.UTC_PLUS_12_45},Af={dst:{is:!1,uses:!0},id:u.ChileStandardTime,name:"Chile Standard Time",offset:t.UTC_MINUS_4},df={dst:{is:!0,uses:!0},id:u.ChileSummerTime,name:"Chile Summer Time",offset:t.UTC_MINUS_3},ff={dst:{is:!1,uses:!0},id:u.ChinaStandardTime,name:"China Standard Time",offset:t.UTC_PLUS_8},gf={dst:{is:!1,uses:!0},id:u.ChoibalsanStandardTime,name:"Choibalsan Standard Time",offset:t.UTC_PLUS_8},hf={dst:{is:!0,uses:!0},id:u.ChoibalsanSummerTime,name:"Choibalsan Summer Time",offset:t.UTC_PLUS_9},_f={dst:{is:!1,uses:!0},id:u.ChristmasIslandTime,name:"Christmas Island Time",offset:t.UTC_PLUS_7},If={dst:{is:!1,uses:!0},id:u.ChuukTime,name:"Chuuk Time",offset:t.UTC_PLUS_10},pf={dst:{is:!1,uses:!0},id:u.ClipptertonIslandStandardTime,name:"Clippterton Island Standard Time",offset:t.UTC_MINUS_8},Sf={dst:{is:!1,uses:!0},id:u.CocosIslandsTime,name:"Cocos Standard Time",offset:t.UTC_PLUS_6_30},Ef={dst:{is:!0,uses:!0},id:u.ColombiaSummerTime,name:"Colombia Summer Time",offset:t.UTC_MINUS_4},Tf={dst:{is:!1,uses:!0},id:u.ColombiaTime,name:"Colombia Time",offset:t.UTC_MINUS_5},vf={dst:{is:!1,uses:!0},id:u.CookIslandTime,name:"Cook Island Time",offset:t.UTC_MINUS_10},bf={dst:{is:!1,uses:!0},id:u.CoordinatedUniversalTime,name:"Coordinated Universal Time",offset:t.UTC_0},Uf={dst:{is:!0,uses:!0},id:u.CubaDaylightTime,name:"Cuba Daylight Time",offset:t.UTC_MINUS_4},Nf={dst:{is:!1,uses:!0},id:u.CubaStandardTime,name:"Cuba Standard Time",offset:t.UTC_MINUS_5},Bf={dst:{is:!1,uses:!0},id:u.DavisTime,name:"Davis Time",offset:t.UTC_PLUS_7},Pf={dst:{is:!1,uses:!0},id:u.DumontDUrvilleTime,name:"Dumont D'Urville Time",offset:t.UTC_PLUS_10},yf={dst:{is:!1,uses:!0},id:u.EastAfricaTime,name:"East Africa Time",offset:t.UTC_PLUS_3},kf={dst:{is:!1,uses:!0},id:u.EasterIslandStandardTime,name:"Easter Island Standard Time",offset:t.UTC_MINUS_6},Mf={dst:{is:!0,uses:!0},id:u.EasterIslandSummerTime,name:"Easter Island Summer Time",offset:t.UTC_MINUS_5},Df={dst:{is:!1,uses:!0},id:u.EasternCaribbeanTime,name:"Eastern Caribbean Time",offset:t.UTC_MINUS_4},xf={dst:{is:!0,uses:!0},id:u.EasternDaylightTime,name:"Eastern Daylight Time",offset:t.UTC_MINUS_4},Ff={dst:{is:!0,uses:!0},id:u.EasternEuropeanSummerTime,name:"Eastern European Summer Time",offset:t.UTC_PLUS_3},Lf={dst:{is:!1,uses:!0},id:u.EasternEuropeanTime,name:"Eastern European Time",offset:t.UTC_PLUS_2},wf={dst:{is:!0,uses:!0},id:u.EasternGreenlandSummerTime,name:"Eastern Greenland Summer Time",offset:t.UTC_0},Gf={dst:{is:!1,uses:!0},id:u.EasternGreenlandTime,name:"Eastern Greenland Time",offset:t.UTC_MINUS_1},qf={dst:{is:!1,uses:!0},id:u.EasternIndonesianTime,name:"Eastern Indonesian Time",offset:t.UTC_PLUS_9},Kf={dst:{is:!1,uses:!0},id:u.EasternStandardTime,name:"Eastern Standard Time",offset:t.UTC_MINUS_5},Of={dst:{is:!1,uses:!0},id:u.EasternTime,name:"Eastern Time",offset:t.UTC_MINUS_5},jf={dst:{is:!1,uses:!0},id:u.EcuadorTime,name:"Ecuador Time",offset:t.UTC_MINUS_5},Hf={dst:{is:!0,uses:!0},id:u.FalklandIslandsSummerTime,name:"Falkland Islands Summer Time",offset:t.UTC_MINUS_3},Wf={dst:{is:!1,uses:!0},id:u.FalklandIslandsTime,name:"Falkland Islands Time",offset:t.UTC_MINUS_4},zf={dst:{is:!1,uses:!0},id:u.FernandoDeNoronhaTime,name:"Fernando de Noronha Time",offset:t.UTC_MINUS_2},Vf={dst:{is:!1,uses:!0},id:u.FijiTime,name:"Fiji Time",offset:t.UTC_PLUS_12},Rf={dst:{is:!1,uses:!0},id:u.FrenchGuianaTime,name:"French Guiana Time",offset:t.UTC_MINUS_3},Yf={dst:{is:!1,uses:!0},id:u.FrenchSouthernAndAntarcticTime,name:"French Southern and Antarctic Time",offset:t.UTC_PLUS_5},Jf={dst:{is:!1,uses:!0},id:u.FurtherEasternEuropeanTime,name:"Further Eastern European Time",offset:t.UTC_PLUS_3},Zf={dst:{is:!1,uses:!0},id:u.GalapagosTime,name:"Galapagos Time",offset:t.UTC_MINUS_6},$f={dst:{is:!1,uses:!0},id:u.GambierIslandTime,name:"Gambier Island Time",offset:t.UTC_MINUS_9},Qf={dst:{is:!1,uses:!0},id:u.GambierIslandsTime,name:"Gambier Islands Time",offset:t.UTC_MINUS_9},Xf={dst:{is:!1,uses:!0},id:u.GeorgiaStandardTime,name:"Georgia Standard Time",offset:t.UTC_PLUS_4},Cf={dst:{is:!1,uses:!0},id:u.GilbertIslandTime,name:"Gilbert Island Time",offset:t.UTC_PLUS_12},ag={dst:{is:!1,uses:!0},id:u.GreenwichMeanTime,name:"Greenwich Mean Time",offset:t.UTC_0},eg={dst:{is:!1,uses:!0},id:u.GulfStandardTime,name:"Gulf Standard Time",offset:t.UTC_PLUS_4},ig={dst:{is:!1,uses:!0},id:u.GuyanaTime,name:"Guyana Time",offset:t.UTC_MINUS_4},ng={dst:{is:!0,uses:!0},id:u.HawaiiAleutianDaylightTime,name:"Hawaii-Aleutian Daylight Time",offset:t.UTC_MINUS_9},sg={dst:{is:!1,uses:!0},id:u.HawaiiAleutianStandardTime,name:"Hawaii-Aleutian Standard Time",offset:t.UTC_MINUS_10},rg={dst:{is:!1,uses:!0},id:u.HeardAndMcDonaldIslandsTime,name:"Heard and McDonald Islands Time",offset:t.UTC_PLUS_5},tg={dst:{is:!1,uses:!0},id:u.HongKongTime,name:"Hong Kong Time",offset:t.UTC_PLUS_8},ug={dst:{is:!0,uses:!0},id:u.HovdSummerTime,name:"Hovd Summer Time",offset:t.UTC_PLUS_8},lg={dst:{is:!1,uses:!0},id:u.HovdTime,name:"Hovd Time",offset:t.UTC_PLUS_7},og={dst:{is:!1,uses:!0},id:u.IndianOceanTime,name:"Indian Ocean Time",offset:t.UTC_PLUS_3},mg={dst:{is:!1,uses:!0},id:u.IndianStandardTime,name:"Indian Standard Time",offset:t.UTC_PLUS_5_30},cg={dst:{is:!1,uses:!0},id:u.IndochinaTime,name:"Indochina Time",offset:t.UTC_PLUS_7},Ag={dst:{is:!1,uses:!0},id:u.InternationalDayLineWestTime,name:"International Day Line West Time",offset:t.UTC_MINUS_12},dg={dst:{is:!0,uses:!0},id:u.IranDaylightTime,name:"Iran Daylight Time",offset:t.UTC_PLUS_4_30},fg={dst:{is:!1,uses:!0},id:u.IranStandardTime,name:"Iran Standard Time",offset:t.UTC_PLUS_3_30},gg={dst:{is:!1,uses:!0},id:u.IrishStandardTime,name:"Irish Standard Time",offset:t.UTC_PLUS_1},hg={dst:{is:!1,uses:!0},id:u.IrkutskTime,name:"Irkutsk Time",offset:t.UTC_PLUS_8},_g={dst:{is:!0,uses:!0},id:u.IsraelDaylightTime,name:"Israel Daylight Time",offset:t.UTC_PLUS_3},Ig={dst:{is:!1,uses:!0},id:u.IsraelStandardTime,name:"Israel Standard Time",offset:t.UTC_PLUS_2},pg={dst:{is:!1,uses:!0},id:u.JapanStandardTime,name:"Japan Standard Time",offset:t.UTC_PLUS_9},Sg={dst:{is:!1,uses:!0},id:u.KaliningradTime,name:"Kaliningrad Time",offset:t.UTC_PLUS_2},Eg={dst:{is:!1,uses:!0},id:u.KamchatkaTime,name:"Kamchatka Time",offset:t.UTC_PLUS_12},Tg={dst:{is:!1,uses:!0},id:u.KoreaStandardTime,name:"Korea Standard Time",offset:t.UTC_PLUS_9},vg={dst:{is:!1,uses:!0},id:u.KosraeTime,name:"Kosrae Time",offset:t.UTC_PLUS_11},bg={dst:{is:!1,uses:!0},id:u.KrasnoyarskTime,name:"Krasnoyarsk Time",offset:t.UTC_PLUS_7},Ug={dst:{is:!1,uses:!0},id:u.KyrgyzstanTime,name:"Kyrgyzstan Time",offset:t.UTC_PLUS_6},Ng={dst:{is:!1,uses:!0},id:u.LineIslandsTime,name:"Line Islands Time",offset:t.UTC_PLUS_14},Bg={dst:{is:!1,uses:!0},id:u.LordHoweStandardTime,name:"Lord Howe Standard Time",offset:t.UTC_PLUS_10_30},Pg={dst:{is:!1,uses:!0},id:u.LordHoweSummerTime,name:"Lord Howe Summer Time",offset:t.UTC_PLUS_11},yg={dst:{is:!1,uses:!0},id:u.MacquarieIslandStationTime,name:"Macquarie Island Station Time",offset:t.UTC_PLUS_11},kg={dst:{is:!1,uses:!0},id:u.MagadanTime,name:"Magadan Time",offset:t.UTC_PLUS_12},Mg={dst:{is:!1,uses:!0},id:u.MalaysiaStandardTime,name:"Malaysia Standard Time",offset:t.UTC_PLUS_8},Dg={dst:{is:!1,uses:!0},id:u.MalaysiaTime,name:"Malaysia Time",offset:t.UTC_PLUS_8},xg={dst:{is:!1,uses:!0},id:u.MaldivesTime,name:"Maldives Time",offset:t.UTC_PLUS_5},Fg={dst:{is:!1,uses:!0},id:u.MarquesasIslandsTime,name:"Marquesas Islands Time",offset:t.UTC_PLUS_9_30},Lg={dst:{is:!1,uses:!0},id:u.MarshallIslandsTime,name:"Marshall Islands Time",offset:t.UTC_PLUS_12},wg={dst:{is:!1,uses:!0},id:u.MauritiusTime,name:"Mauritius Time",offset:t.UTC_PLUS_4},Gg={dst:{is:!1,uses:!0},id:u.MawsonStationTime,name:"Mawson Station Time",offset:t.UTC_PLUS_5},qg={dst:{is:!1,uses:!0},id:u.MiddleEuropeanSummerTime,name:"Middle European Summer Time",offset:t.UTC_PLUS_2},Kg={dst:{is:!1,uses:!0},id:u.MiddleEuropeanTime,name:"Middle European Time",offset:t.UTC_PLUS_1},Og={dst:{is:!1,uses:!0},id:u.MoscowTime,name:"Moscow Time",offset:t.UTC_PLUS_3},jg={dst:{is:!1,uses:!0},id:u.MountainDaylightTime,name:"Mountain Daylight Time",offset:t.UTC_MINUS_6},Hg={dst:{is:!1,uses:!0},id:u.MountainStandardTime,name:"Mountain Standard Time",offset:t.UTC_MINUS_7},Wg={dst:{is:!1,uses:!0},id:u.MyanmarStandardTime,name:"Myanmar Standard Time",offset:t.UTC_PLUS_6_30},zg={dst:{is:!1,uses:!0},id:u.NepalTime,name:"Nepal Time",offset:t.UTC_PLUS_5_45},Vg={dst:{is:!1,uses:!0},id:u.NauruTime,name:"Nauru Time",offset:t.UTC_PLUS_12},Rg={dst:{is:!1,uses:!0},id:u.NewCaledoniaTime,name:"New Caledonia Time",offset:t.UTC_PLUS_11},Yg={dst:{is:!1,uses:!0},id:u.NewZealandDaylightTime,name:"New Zealand Daylight Time",offset:t.UTC_PLUS_13},Jg={dst:{is:!1,uses:!0},id:u.NewZealandStandardTime,name:"New Zealand Standard Time",offset:t.UTC_PLUS_12},Zg={dst:{is:!1,uses:!0},id:u.NewfoundlandDaylightTime,name:"Newfoundland Daylight Time",offset:t.UTC_MINUS_2_30},$g={dst:{is:!1,uses:!0},id:u.NewfoundlandTime,name:"Newfoundland Time",offset:t.UTC_MINUS_3_30},Qg={dst:{is:!1,uses:!0},id:u.NiueTime,name:"Niue Time",offset:t.UTC_MINUS_11},Xg={dst:{is:!1,uses:!0},id:u.NorfolkIslandTime,name:"Norfolk Island Time",offset:t.UTC_PLUS_11},Cg={dst:{is:!1,uses:!0},id:u.NovosibirskTime,name:"Novosibirsk Time",offset:t.UTC_PLUS_7},ah={dst:{is:!1,uses:!0},id:u.OmskTime,name:"Omsk Time",offset:t.UTC_PLUS_6},eh={dst:{is:!1,uses:!0},id:u.OralTime,name:"Oral Time",offset:t.UTC_PLUS_5},ih={dst:{is:!1,uses:!0},id:u.PacificDaylightTime,name:"Pacific Daylight Time",offset:t.UTC_MINUS_7},nh={dst:{is:!1,uses:!0},id:u.PacificStandardTime,name:"Pacific Standard Time",offset:t.UTC_MINUS_8},sh={dst:{is:!1,uses:!0},id:u.PakistanStandardTime,name:"Pakistan Standard Time",offset:t.UTC_PLUS_5},rh={dst:{is:!1,uses:!0},id:u.PalauTime,name:"Palau Time",offset:t.UTC_PLUS_9},th={dst:{is:!1,uses:!0},id:u.PapuaNewGuineaTime,name:"Papua New Guinea Time",offset:t.UTC_PLUS_10},uh={dst:{is:!1,uses:!0},id:u.ParaguaySummerTime,name:"Paraguay Summer Time",offset:t.UTC_MINUS_3},lh={dst:{is:!1,uses:!0},id:u.ParaguayTime,name:"Paraguay Time",offset:t.UTC_MINUS_4},oh={dst:{is:!1,uses:!0},id:u.PeruTime,name:"Peru Time",offset:t.UTC_MINUS_5},mh={dst:{is:!1,uses:!0},id:u.PhilippineStandardTime,name:"Philippine Standard Time",offset:t.UTC_PLUS_8},ch={dst:{is:!1,uses:!0},id:u.PhilippineTime,name:"Philippine Time",offset:t.UTC_PLUS_8},Ah={dst:{is:!1,uses:!0},id:u.PhoenixIslandTime,name:"Phoenix Island Time",offset:t.UTC_PLUS_13},dh={dst:{is:!1,uses:!0},id:u.PitcairnTime,name:"Pitcairn Time",offset:t.UTC_MINUS_8},fh={dst:{is:!1,uses:!0},id:u.PohnpeiStandardTime,name:"Pohnpei Standard Time",offset:t.UTC_PLUS_11},gh={dst:{is:!1,uses:!0},id:u.ReunionTime,name:"Reunion Time",offset:t.UTC_PLUS_4},hh={dst:{is:!1,uses:!0},id:u.RotheraResearchStationTime,name:"Rothera Research Station Time",offset:t.UTC_MINUS_3},_h={dst:{is:!1,uses:!0},id:u.SaintPierreAndMiquelonDaylightTime,name:"Saint Pierre and Miquelon Daylight Time",offset:t.UTC_MINUS_2},Ih={dst:{is:!1,uses:!0},id:u.SaintPierreAndMiquelonStandardTime,name:"Saint Pierre and Miquelon Standard Time",offset:t.UTC_MINUS_3},ph={dst:{is:!1,uses:!0},id:u.SakhalinIslandTime,name:"Sakhalin Island Time",offset:t.UTC_PLUS_11},Sh={dst:{is:!1,uses:!0},id:u.SamaraTime,name:"Samara Time",offset:t.UTC_PLUS_4},Eh={dst:{is:!1,uses:!0},id:u.SamoaDaylightTime,name:"Samoa Daylight Time",offset:t.UTC_MINUS_10},Th={dst:{is:!1,uses:!0},id:u.SamoaStandardTime,name:"Samoa Standard Time",offset:t.UTC_MINUS_11},vh={dst:{is:!1,uses:!0},id:u.SeychellesTime,name:"Seychelles Time",offset:t.UTC_PLUS_4},bh={dst:{is:!1,uses:!0},id:u.ShowaStationTime,name:"Showa Station Time",offset:t.UTC_PLUS_3},Uh={dst:{is:!1,uses:!0},id:u.SingaporeStandardTime,name:"Singapore Standard Time",offset:t.UTC_PLUS_8},Nh={dst:{is:!1,uses:!0},id:u.SingaporeTime,name:"Singapore Time",offset:t.UTC_PLUS_8},Bh={dst:{is:!1,uses:!0},id:u.SolomonIslandsTime,name:"Solomon Islands Time",offset:t.UTC_PLUS_11},Ph={dst:{is:!1,uses:!0},id:u.SouthAfricanStandardTime,name:"South African Standard Time",offset:t.UTC_PLUS_2},yh={dst:{is:!1,uses:!0},id:u.SouthGeorgiaAndTheSouthSandwichIslandsTime,name:"South Georgia and the South Sandwich Islands Time",offset:t.UTC_MINUS_2},kh={dst:{is:!1,uses:!0},id:u.SrednekolymskTime,name:"Srednekolymsk Time",offset:t.UTC_PLUS_11},Mh={dst:{is:!1,uses:!0},id:u.SriLankaStandardTime,name:"Sri Lanka Standard Time",offset:t.UTC_PLUS_5_30},Dh={dst:{is:!1,uses:!0},id:u.SurinameTime,name:"Suriname Time",offset:t.UTC_MINUS_3},xh={dst:{is:!1,uses:!0},id:u.TahitiTime,name:"Tahiti Time",offset:t.UTC_MINUS_10},Fh={dst:{is:!1,uses:!0},id:u.TajikistanTime,name:"Tajikistan Time",offset:t.UTC_PLUS_5},Lh={dst:{is:!1,uses:!0},id:u.ThailandStandardTime,name:"Thailand Standard Time",offset:t.UTC_PLUS_7},wh={dst:{is:!1,uses:!0},id:u.TimorLesteTime,name:"Timor-Leste Time",offset:t.UTC_PLUS_9},Gh={dst:{is:!1,uses:!0},id:u.TokelauTime,name:"Tokelau Time",offset:t.UTC_PLUS_13},qh={dst:{is:!1,uses:!0},id:u.TongaTime,name:"Tonga Time",offset:t.UTC_PLUS_13},Kh={dst:{is:!1,uses:!0},id:u.TurkeyTime,name:"Turkey Time",offset:t.UTC_PLUS_3},Oh={dst:{is:!1,uses:!0},id:u.TurkmenistanTime,name:"Turkmenistan Time",offset:t.UTC_PLUS_5},jh={dst:{is:!1,uses:!0},id:u.TuvaluTime,name:"Tuvalu Time",offset:t.UTC_PLUS_12},Hh={dst:{is:!1,uses:!0},id:u.UlaanbaatarStandardTime,name:"Ulaanbaatar Standard Time",offset:t.UTC_PLUS_8},Wh={dst:{is:!1,uses:!0},id:u.UlaanbaatarSummerTime,name:"Ulaanbaatar Summer Time",offset:t.UTC_PLUS_9},zh={dst:{is:!1,uses:!0},id:u.UruguayStandardTime,name:"Uruguay Standard Time",offset:t.UTC_MINUS_3},Vh={dst:{is:!1,uses:!0},id:u.UruguaySummerTime,name:"Uruguay Summer Time",offset:t.UTC_MINUS_2},Rh={dst:{is:!1,uses:!0},id:u.UzbekistanTime,name:"Uzbekistan Time",offset:t.UTC_PLUS_5},Yh={dst:{is:!1,uses:!0},id:u.VanuatuTime,name:"Vanuatu Time",offset:t.UTC_PLUS_11},Jh={dst:{is:!1,uses:!0},id:u.VenezuelaStandardTime,name:"Venezuela Standard Time",offset:t.UTC_MINUS_4},Zh={dst:{is:!1,uses:!0},id:u.VladivostokTime,name:"Vladivostok Time",offset:t.UTC_PLUS_10},$h={dst:{is:!1,uses:!0},id:u.VolgogradTime,name:"Volgograd Time",offset:t.UTC_PLUS_4},Qh={dst:{is:!1,uses:!0},id:u.VostokStationTime,name:"Vostok Station Time",offset:t.UTC_PLUS_6},Xh={dst:{is:!1,uses:!0},id:u.WakeIslandTime,name:"Wake Island Time",offset:t.UTC_PLUS_12},Ch={dst:{is:!1,uses:!0},id:u.WestAfricaSummerTime,name:"West Africa Summer Time",offset:t.UTC_PLUS_2},a_={dst:{is:!1,uses:!0},id:u.WestAfricaTime,name:"West Africa Time",offset:t.UTC_PLUS_1},e_={dst:{is:!1,uses:!0},id:u.WestGreenlandSummerTime,name:"West Greenland Summer Time",offset:t.UTC_MINUS_2},i_={dst:{is:!1,uses:!0},id:u.WestGreenlandTime,name:"West Greenland Time",offset:t.UTC_MINUS_3},n_={dst:{is:!1,uses:!0},id:u.WestKazakhstanTime,name:"West Kazakhstan Time",offset:t.UTC_PLUS_5},s_={dst:{is:!1,uses:!0},id:u.WesternEuropeanSummerTime,name:"Western European Summer Time",offset:t.UTC_PLUS_1},r_={dst:{is:!1,uses:!0},id:u.WesternEuropeanTime,name:"Western European Time",offset:t.UTC_0},t_={dst:{is:!1,uses:!0},id:u.WesternIndonesianTime,name:"Western Indonesian Time",offset:t.UTC_PLUS_7},u_={dst:{is:!1,uses:!0},id:u.WesternStandardTime,name:"Western Standard Time",offset:t.UTC_PLUS_8},l_={dst:{is:!1,uses:!0},id:u.YakutskTime,name:"Yakutsk Time",offset:t.UTC_PLUS_9},o_={dst:{is:!1,uses:!0},id:u.YekaterinburgTime,name:"Yekaterinburg Time",offset:t.UTC_PLUS_5};var za;(function(a){a.Africa="Africa",a.Americas="Americas",a.Asia="Asia",a.Europe="Europe",a.Oceania="Oceania",a.Polar="Polar"})(za||(za={}));var Va;(function(a){a.CentralAmerica="Central America",a.EasternAsia="Eastern Asia",a.EasternEurope="Eastern Europe",a.EasternAfrica="Eastern Africa",a.MiddleAfrica="Middle Africa",a.MiddleEast="Middle East",a.NorthernAfrica="Northern Africa",a.NorthernAmerica="Northern America",a.NorthernEurope="Northern Europe",a.Polynesia="Polynesia",a.SouthAmerica="South America",a.SouthernAfrica="Southern Africa",a.SouthernAsia="Southern Asia",a.SouthernEurope="Southern Europe",a.WesternAfrica="Western Africa",a.WesternAsia="Western Asia",a.WesternEurope="Western Europe",a.WesternAustralia="Western Australia"})(Va||(Va={}));var fc={Afghanistan:{i18n:{calling_codes:[93],currencies:[y.AfghanistanAfghani],languages:[e.Pashto,e.Dari,e.Turkmen,e.Uzbek],tz:{offsets:[t.UTC_PLUS_4_30],regions:[A.AsiaKabul],timezones:[u.AfghanistanTime]}},id:g.Afghanistan,info:{flag:{emoji:"\u{1F1E6}\u{1F1EB}",emoji_unicode:"U+1F1E6 U+1F1EB",svg:"https://www.countryflags.io/af/flat/64.svg"},tld:[".af"]},iso:{alpha2:g.Afghanistan,alpha3:"AFG",numeric:"004"},name:{alt_spellings:["AF","Af\u0121\u0101nist\u0101n"],demonym:"Afghan",native:{endonym:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},official:"Islamic Republic of Afghanistan",short:"Afghanistan",translations:{[e.Afrikaans]:"Afghanistan",[e.Albanian]:"Shqip\xEBri",[e.Amharic]:"\u12A0\u134D\u130B\u1295",[e.Arabic]:"\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Armenian]:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Basque]:"Afganist\xE1n",[e.Belarusian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Bengali]:"\u0986\u09AB\u0997\u09BE\u09A8\u09BF\u09B8\u09CD\u09A4\u09BE\u09A8",[e.Berber]:"\u0623\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Bhutani]:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F51\u0F7C\u0F53\u0F0B\u0F63\u0F7A\u0F0B\u0F66\u0F90\u0F51\u0F0B\u0F46\u0F0D",[e.Bosnian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Breton]:"Afganistan",[e.Bulgarian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Burmese]:"\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A",[e.Catalan]:"Afganistan",[e.Chinese]:"\u963F\u5BCC\u6C57",[e.Croatian]:"Afganistan",[e.Czech]:"Afganistan",[e.Danish]:"Afghanistan",[e.Dutch]:"Afghanistan",[e.English]:"Afghanistan",[e.Esperanto]:"Afganistan",[e.Estonian]:"Afganistan",[e.Finnish]:"Afghanistan",[e.French]:"Afghanistan",[e.Frisian]:"Afghanistan",[e.Galician]:"Afganist\xE1n",[e.Georgian]:"\u10D0\u10D5\u10E6\u10D0\u10DC\u10D4\u10D7\u10D8",[e.German]:"Afghanistan",[e.Greenlandic]:"Afghanistan",[e.Greek]:"\u0391\u03C6\u03B3\u03B1\u03BD\u03B9\u03C3\u03C4\u03AC\u03BD",[e.Gujarati]:"\u0A85\u0AAB\u0A97\u0ABE\u0AA8\u0ABF\u0AB8\u0ACD\u0AA4\u0ABE\u0AA8",[e.Haitian]:"Afghanistan",[e.Hausa]:"Afghanistan",[e.Hebrew]:"\u05D0\u05E4\u05D2\u05E0\u05D9\u05E1\u05D8\u05DF",[e.Hindi]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Hungarian]:"Afganistan",[e.Icelandic]:"Afghanistan",[e.Igbo]:"Afghanistan",[e.Indonesian]:"Afghanistan",[e.Irish]:"Afghanistan",[e.Italian]:"Afghanistan",[e.Japanese]:"\u30A2\u30D5\u30AC\u30CB\u30B9\u30BF\u30F3",[e.Javanese]:"Afghanistan",[e.Kannada]:"\u0C85\u0CAB\u0C97\u0CBE\u0CA8\u0CBF\u0CB8\u0CCD\u0CA4\u0CBE\u0CA8",[e.Kazakh]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Khmer]:"\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17B7\u1780",[e.Korean]:"\uC544\uD504\uAC00\uB2C8\uC2A4\uD0C4",[e.Kurdish]:"Afghanistan",[e.Kyrgyz]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Lao]:"\u0EAD\u0EB2\u0E9F\u0EB2\u0EA5\u0EBD\u0E99",[e.Latin]:"Afghanistan",[e.Latvian]:"Afghanistan",[e.Lithuanian]:"Afganistanas",[e.Luxembourgish]:"Afghanistan",[e.Macedonian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Malagasy]:"Afghanistan",[e.Malay]:"Afghanistan",[e.Malayalam]:"\u0D05\u0D2B\u0D17\u0D3E\u0D28\u0D3F\u0D38\u0D4D\u0D24\u0D3E\u0D28",[e.Maltese]:"Afghanistan",[e.Maori]:"Afghanistan",[e.Marathi]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Mongolian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Nepali]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Norwegian]:"Afghanistan",[e.Pashto]:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Persian]:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Polish]:"Afganistan",[e.Portuguese]:"Afghanistan",[e.Punjabi]:"Afghanistan",[e.Romanian]:"Afghanistan",[e.Polish]:"Afganistan",[e.Russian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Samoan]:"Afghanistan",[e.Sanskrit]:"\u0905\u092B\u0917\u093E\u0928\u093F\u0938\u094D\u0924\u093E\u0928",[e.Scots]:"Afghanistan",[e.Serbian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Sesotho]:"Afghanistan",[e.Shona]:"Afghanistan",[e.Sindhi]:"Afghanistan",[e.Sinhala]:"\u0D86\u0D9C\u0DCA\u200D\u0DBB\u0DDC\u0D9A\u0DCA\u0D9A\u0DD2\u0DBA\u0DCF\u0DC0",[e.Slovak]:"Afganistan",[e.Slovenian]:"Afganistan",[e.Somali]:"Afghanistan",[e.Spanish]:"Afganist\xE1n",[e.Sudanese]:"Afghanistan",[e.Swahili]:"Afghanistan",[e.Swedish]:"Afghanistan",[e.Tagalog]:"Afghanistan",[e.Tajik]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Tatar]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Tamil]:"\u0B86\u0BAA\u0BCD\u0BAA\u0B95\u0BBE\u0BA9\u0BBF\u0BB8\u0BCD\u0BA4\u0BBE\u0BA9\u0BCD",[e.Telugu]:"\u0C06\u0C2B\u0C4D\u0C18\u0C28\u0C3F\u0C38\u0C4D\u0C24\u0C3E\u0C28\u0C4D",[e.Thai]:"\u0E2D\u0E31\u0E1F\u0E01\u0E32\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19",[e.Tibetan]:"\u0F68\u0F55\u0F0B\u0F42\u0F7A\u0F0B\u0F53\u0F72\u0F66\u0F72\u0F0B\u0F4F\u0F7A\u0F53\u0F66\u0F72\u0F0D",[e.Turkish]:"Afganistan",[e.Ukrainian]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Urdu]:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646",[e.Uzbek]:"\u0410\u0444\u0433\u0430\u043D\u0438\u0441\u0442\u0430\u043D",[e.Vietnamese]:"Afghanistan",[e.Welsh]:"Afghanistan",[e.Xhosa]:"Afghanistan",[e.Yiddish]:"Afghanistan",[e.Yoruba]:"Afghanistan",[e.Zulu]:"Afghanistan"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Kabul",total:341e5}},geography:{area:652230,region:za.Asia,sub_region:Va.SouthernAsia},government:{capital:"Kabul",type:"Islamic Emirate"}}},Albania:{i18n:{calling_codes:[355],currencies:[y.AlbaniaLek],languages:[e.Albanian,e.Greek,e.Turkish],tz:{offsets:[t.UTC_PLUS_1],regions:[A.EuropeBrussels],timezones:[u.CentralEuropeanTime]}},id:g.Albania,info:{flag:{emoji:"\u{1F1E6}\u{1F1F1}",emoji_unicode:"U+1F1E6 U+1F1F1",svg:"https://www.countryflags.io/al/flat/64.svg"},tld:[".al"]},iso:{alpha2:g.Albania,alpha3:"ALB",numeric:"008"},name:{alt_spellings:["AL","Shqip\xEBri","Shqip\xEBria","Shqipnia"],demonym:"Albanian",native:{endonym:"Shqip\xEBri"},official:"Republic of Albania",short:"Albania",translations:{[e.Afrikaans]:"Albania",[e.Albanian]:"Albania",[e.Amharic]:"\u12A0\u120D\u1263\u1295\u12EB",[e.Arabic]:"\u0623\u0644\u0628\u0627\u0646\u064A\u0627",[e.Armenian]:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Basque]:"Albania",[e.Belarusian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Bengali]:"\u0986\u09B2\u09AC\u09BE\u09A8\u09BF\u09AF\u09BC\u09BE",[e.Berber]:"\u0623\u0644\u0628\u0627\u0646\u064A\u0627",[e.Bhutani]:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B",[e.Bosnian]:"Albanija",[e.Breton]:"Albania",[e.Bulgarian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Burmese]:"\u1021\u102C\u1019\u1001\u103B\u1004\u103A\u1010\u1031\u102C\u103A",[e.Catalan]:"Alb\xE0nia",[e.Chinese]:"\u963F\u5C14\u5DF4\u5C3C\u4E9A",[e.Croatian]:"Albanija",[e.Czech]:"Alb\xE1nie",[e.Danish]:"Albanien",[e.Dutch]:"Albani\xEB",[e.English]:"Albania",[e.Esperanto]:"Albanio",[e.Estonian]:"Albaania",[e.Finnish]:"Albania",[e.French]:"Albanie",[e.Frisian]:"Albani\xEB",[e.Galician]:"Alb\xE2nia",[e.Georgian]:"\u10D0\u10DA\u10D1\u10D0\u10DC\u10D8\u10D0",[e.German]:"Albanien",[e.Greenlandic]:"Albania",[e.Greek]:"\u0391\u03BB\u03B2\u03B1\u03BD\u03AF\u03B1",[e.Gujarati]:"\u0A85\u0AB2\u0AAC\u0AA8\u0ABF\u0AAF\u0ABE",[e.Haitian]:"Albanais",[e.Hausa]:"Albania",[e.Hebrew]:"\u05D0\u05DC\u05D1\u05E0\u05D9\u05D4",[e.Hindi]:"\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E",[e.Hungarian]:"Alb\xE1nia",[e.Icelandic]:"Alb\xFAnir",[e.Igbo]:"Albania",[e.Indonesian]:"Albania",[e.Irish]:"Alb\xE1in",[e.Italian]:"Albania",[e.Japanese]:"\u30A2\u30EB\u30D0\u30CB\u30A2",[e.Javanese]:"Albania",[e.Kannada]:"\u0C85\u0CB2\u0CCD\u0CAC\u0CBE\u0CA8\u0CBF\u0CAF\u0CBE",[e.Kazakh]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Khmer]:"\u17A2\u17B6\u17A0\u17D2\u179C\u17D2\u179A\u17C1\u179F\u17CA\u17B8",[e.Korean]:"\uC54C\uBC14\uB2C8\uC544",[e.Kurdish]:"\u0622\u0644\u0628\u0627\u0646\u06CC\u0627",[e.Kyrgyz]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Lao]:"\u0EAD\u0EB2\u0EA5\u0EB2\u0E99\u0EB5",[e.Latin]:"Albania",[e.Latvian]:"Alb\u0101nija",[e.Lithuanian]:"Albanija",[e.Luxembourgish]:"Albani\xEB",[e.Macedonian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430",[e.Malagasy]:"Albania",[e.Malay]:"Albania",[e.Malayalam]:"\u0D05\u0D32\u0D4D\u0D2C\u0D3E\u0D28\u0D3F\u0D2F\u0D3E",[e.Maltese]:"Albania",[e.Maori]:"Albania",[e.Marathi]:"\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E",[e.Mongolian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Nepali]:"\u0905\u0932\u094D\u092C\u093E\u0928\u093F\u092F\u093E",[e.Norwegian]:"Albania",[e.Pashto]:"\u0627\u0627\u0644\u0628\u0627\u0646\u06CC",[e.Persian]:"\u0622\u0644\u0628\u0627\u0646\u06CC",[e.Polish]:"Albania",[e.Portuguese]:"Alb\xE2nia",[e.Punjabi]:"\u0A05\u0A32\u0A2C\u0A28\u0A40\u0A06",[e.Romanian]:"Alb\u0103n",[e.Russian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Samoan]:"Albania",[e.Sanskrit]:"Albani",[e.Scots]:"Alb\xE0inia",[e.Serbian]:"\u0410\u043B\u0431\u0430\u043D\u0438\u0458\u0430",[e.Sesotho]:"Albania",[e.Shona]:"Albania",[e.Sindhi]:"Albania",[e.Sinhala]:"\u0D87\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA",[e.Slovak]:"Alb\xE1nsko",[e.Slovenian]:"Albanija",[e.Somali]:"Albania",[e.Spanish]:"Albania",[e.Sudanese]:"Albania",[e.Swahili]:"Albania",[e.Swedish]:"Albanien",[e.Tagalog]:"Albania",[e.Tajik]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Tamil]:"\u0B85\u0BB2\u0BCD\u0BAA\u0BBE\u0BA9\u0BBF\u0BAF\u0BBE",[e.Tatar]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Telugu]:"\u0C05\u0C32\u0C4D\u0C2C\u0C3E\u0C28\u0C3F\u0C2F\u0C3E",[e.Thai]:"\u0E2D\u0E31\u0E25\u0E41\u0E1A\u0E19\u0E34\u0E19\u0E35",[e.Tibetan]:"\u0F68\u0F63\u0F0B\u0F56\u0F72\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F72",[e.Turkish]:"Albaniye",[e.Ukrainian]:"\u0410\u043B\u0431\u0430\u043D\u0456\u044F",[e.Urdu]:"\u0622\u0644\u0628\u0627\u0646\u06CC",[e.Uzbek]:"\u0410\u043B\u0431\u0430\u043D\u0438\u044F",[e.Vietnamese]:"Albanie",[e.Welsh]:"Albania",[e.Xhosa]:"Albania",[e.Yiddish]:"\u05D0\u05DC\u05D1\u05E0\u05D9\u05E9",[e.Yoruba]:"Albania",[e.Zulu]:"Albania"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Tirana",total:2853e3}},geography:{area:28748,region:za.Europe,sub_region:Va.SouthernEurope},government:{capital:"Tirana",type:"Republic"}}},Algeria:{i18n:{calling_codes:[213],currencies:[y.AlgeriaDinar],languages:[e.Arabic,e.French,e.Berber,e.Tamazight],tz:{offsets:[t.UTC_PLUS_1,t.UTC_PLUS_2],regions:[A.AfricaAlgiers],timezones:[u.CentralEuropeanTime]}},id:g.Algeria,info:{flag:{emoji:"\u{1F1E9}\u{1F1FF}",emoji_unicode:"U+1F1E9 U+1F1FF",svg:"https://www.countryflags.io/dz/flat/64.svg"},tld:[".dz",".\u062C\u0632\u0627\u0626\u0631"]},iso:{alpha2:g.Algeria,alpha3:"DZA",numeric:"012"},name:{alt_spellings:["DZ","Dzayer","Alg\xE9rie"],demonym:"Algerian",native:{endonym:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631"},official:"People's Democratic Republic of Algeria",short:"Algeria",translations:{[e.Afrikaans]:"Algerije",[e.Albanian]:"Algeria",[e.Amharic]:"\u12A0\u120D\u1300\u122D\u1235",[e.Arabic]:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631",[e.Armenian]:"\u0531\u056C\u0563\u0578\u0580\u056B\u0561",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043B\u0436\u0438\u0440",[e.Basque]:"Algeria",[e.Belarusian]:"\u0410\u043B\u0436\u0438\u0440",[e.Bengali]:"\u0986\u09B2\u099C\u09C7\u09B0",[e.Berber]:"\u062C\u0632\u0627\u0626\u0631",[e.Bhutani]:"\u0F62\u0FAB\u0F7C\u0F44\u0F0B\u0F41",[e.Bosnian]:"Al\u017Eir",[e.Breton]:"Algeria",[e.Bulgarian]:"\u0410\u043B\u0436\u0438\u0440",[e.Burmese]:"\u1021\u102C\u101B\u1015\u103A",[e.Catalan]:"Alg\xE8ria",[e.Chinese]:"\u963F\u5C14\u53CA\u5229\u4E9A",[e.Croatian]:"Al\u017Eir",[e.Czech]:"Al\u017E\xEDrsko",[e.Danish]:"Algeriet",[e.Dutch]:"Algerije",[e.English]:"Algeria",[e.Esperanto]:"Al\u011Derio",[e.Estonian]:"Al\u017Eira",[e.Finnish]:"Algeria",[e.French]:"Alg\xE9rie",[e.Frisian]:"Algeri\xEB",[e.Galician]:"Alxeria",[e.Georgian]:"\u10D0\u10DA\u10D2\u10D8\u10E3\u10E0\u10D8",[e.German]:"Algerien",[e.Greenlandic]:"Algeria",[e.Greek]:"\u0391\u03BB\u03B3\u03B5\u03C1\u03AF\u03B1",[e.Gujarati]:"\u0A86\u0AB2\u0AC7\u0A97\u0AB0\u0ABF\u0AAF\u0ABE",[e.Haitian]:"Alg\xE9rie",[e.Hausa]:"Algeria",[e.Hebrew]:"\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4",[e.Hindi]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Hungarian]:"Alg\xE1r",[e.Icelandic]:"Alg\xFAra",[e.Igbo]:"Algeria",[e.Indonesian]:"Aljir",[e.Irish]:"Alg\xE9rie",[e.Italian]:"Algeria",[e.Japanese]:"\u30A2\u30EB\u30B8\u30A7\u30EA\u30A2",[e.Javanese]:"Aljir",[e.Kannada]:"\u0C86\u0CB2\u0CCD\u0C97\u0CC7\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD",[e.Kazakh]:"\u0410\u043B\u0436\u0438\u0440",[e.Khmer]:"\u17A2\u17B6\u179B\u17CB\u1794\u17B6\u1793\u17B8",[e.Korean]:"\uC54C\uC81C\uB9AC",[e.Kurdish]:"\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u062C\u0632\u0627\u06CC\u0631",[e.Kyrgyz]:"\u0410\u043B\u0436\u0438\u0440",[e.Lao]:"\u0EAD\u0EB2\u0EA5\u0EB2\u0E88\u0EB5\u0E99",[e.Latin]:"Algeria",[e.Latvian]:"Al\u017E\u012Brija",[e.Lithuanian]:"Al\u017Eyras",[e.Luxembourgish]:"Algeria",[e.Macedonian]:"\u0410\u043B\u0436\u0438\u0440",[e.Malagasy]:"Alg\xE9rie",[e.Malay]:"Aljir",[e.Malayalam]:"\u0D06\u0D32\u0D02\u0D17\u0D47\u0D30\u0D3F\u0D2F\u0D7B",[e.Maltese]:"Alg\xE9rie",[e.Maori]:"Algeria",[e.Marathi]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Mongolian]:"\u0410\u043B\u0436\u0438\u0440",[e.Nepali]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Norwegian]:"Algeria",[e.Pashto]:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631",[e.Persian]:"\u062C\u0632\u0627\u06CC\u0631 \u0627\u0644\u0639\u0631\u0628",[e.Polish]:"Algieria",[e.Portuguese]:"Alg\xE9ria",[e.Punjabi]:"\u0A06\u0A32\u0A47\u0A17\u0A40\u0A06",[e.Romanian]:"Algeria",[e.Russian]:"\u0410\u043B\u0436\u0438\u0440",[e.Samoan]:"Algeria",[e.Sanskrit]:"\u0906\u0932\u094D\u0917\u0947\u0930\u093F\u092F\u093E",[e.Scots]:"Algeria",[e.Serbian]:"\u0410\u043B\u0436\u0438\u0440",[e.Sesotho]:"Algeria",[e.Shona]:"Algeria",[e.Sindhi]:"Algeria",[e.Sinhala]:"\u0D86\u0DBD\u0DCA\u0DB6\u0DCF\u0DB1\u0DD2\u0DBA",[e.Slovak]:"Al\u017E\xEDrsko",[e.Slovenian]:"Al\u017Eir",[e.Somali]:"Algeria",[e.Spanish]:"Algeria",[e.Sudanese]:"Aljir",[e.Swahili]:"Aljir",[e.Swedish]:"Algeriet",[e.Tagalog]:"Algeria",[e.Tajik]:"\u0410\u043B\u0436\u0438\u0440",[e.Tamil]:"\u0B86\u0BB2\u0BCD\u0B95\u0BC7\u0BB0\u0BBF\u0BAF\u0BBE",[e.Tatar]:"\u0410\u043B\u0436\u0438\u0440",[e.Telugu]:"\u0C06\u0C32\u0C4D\u0C17\u0C47\u0C30\u0C3F\u0C2F\u0C3E",[e.Thai]:"\u0E2D\u0E32\u0E23\u0E32\u0E01\u0E2D\u0E19",[e.Tibetan]:"\u0F68\u0F63\u0F9F\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F61\u0F72",[e.Turkish]:"Cezayir",[e.Ukrainian]:"\u0410\u043B\u0436\u0438\u0440",[e.Urdu]:"\u0622\u0644\u062C\u06CC\u0631",[e.Uzbek]:"\u0410\u043B\u0436\u0438\u0440",[e.Vietnamese]:"\u1EA2\u0301\u1EA1\u1EA3\u1EAD\u1EB5",[e.Welsh]:"Algeria",[e.Xhosa]:"Algeria",[e.Yiddish]:"\u05D0\u05DC\u05D2\u05F3\u05D9\u05E8\u05D9\u05D4",[e.Yoruba]:"Algeria",[e.Zulu]:"Algeria"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Oran",total:371e5}},geography:{area:2381740,region:za.Africa,sub_region:Va.NorthernAfrica},government:{capital:"Algiers",type:"Republic"}}},AmericanSamoa:{i18n:{calling_codes:[1684],currencies:[y.AmericanSamoaTala],languages:[e.English,e.Samoan],tz:{offsets:[t.UTC_MINUS_11],regions:[A.PacificSamoa],timezones:[u.SamoaStandardTime]}},id:g.AmericanSamoa,info:{flag:{emoji:"\u{1F1E6}\u{1F1F8}",emoji_unicode:"U+1F1E6 U+1F1F8",svg:"https://www.countryflags.io/as/flat/64.svg"},tld:[".as"]},iso:{alpha2:g.AmericanSamoa,alpha3:"ASM",numeric:"016"},name:{alt_spellings:["AS","Amerika S\u0101moa","Amelika S\u0101moa","S\u0101moa Amelika"],demonym:"American Samoan",native:{endonym:"American Samoa"},official:"American Samoa",short:"American Samoa",translations:{[e.Afrikaans]:"Amerikaans Samoa",[e.Albanian]:"Samoa Amerikane",[e.Amharic]:"\u1233\u121E\u12A0\u122D",[e.Arabic]:"\u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629",[e.Armenian]:"\u054D\u0561\u0570\u0561\u0574\u0561\u056C\u056B\u0561",[e.Azerbaijani]:"Samoa Amerikana",[e.Bashkir]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0421\u0430\u043C\u043E\u0430",[e.Basque]:"Samoa Amerikana",[e.Belarusian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430",[e.Bengali]:"\u0986\u09AE\u09C7\u09B0\u09BF\u0995\u09BE\u09A8 \u09B8\u09BE\u09AE\u09CB\u09AF\u09BC\u09BE",[e.Berber]:"\u062C\u0632\u0631 \u0633\u0627\u0645\u0648\u0627 \u0627\u0644\u0623\u0645\u0631\u064A\u0643\u064A\u0629",[e.Bhutani]:"\u0F68\u0F62\u0F92\u0FB1\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F58\u0F44\u0F66\u0F0B\u0F66\u0FA4\u0FB2\u0F7C\u0F51\u0F0B\u0F40\u0FB1\u0F72\u0F0B\u0F66\u0F90\u0F56\u0F66\u0F0B\u0F62\u0F92\u0FB1\u0F74\u0F51\u0F0B\u0F46\u0F7A\u0F53\u0F0B\u0F54\u0F7C\u0F0D",[e.Bosnian]:"Ameri\u010Dka Samoa",[e.Breton]:"Samoa Amerikan",[e.Bulgarian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Burmese]:"\u1021\u1019\u1039\u1038\u1019\u101B\u102D\u102F\u1018\u102C\u101E\u102C",[e.Catalan]:"Samoa Americana",[e.Chinese]:"\u7F8E\u5C5E\u8428\u6469\u4E9A",[e.Croatian]:"Ameri\u010Dka Samoa",[e.Czech]:"Americk\xE1 Samoa",[e.Danish]:"Amerikansk Samoa",[e.Dutch]:"Amerikaans Samoa",[e.English]:"American Samoa",[e.Esperanto]:"Samoa Amerika",[e.Estonian]:"Ameerika Samoa",[e.Finnish]:"Amerikka Samoa",[e.French]:"American Samoa",[e.Frisian]:"Amerikaans Samoa",[e.Galician]:"Samoa Americana",[e.Georgian]:"\u10D0\u10DB\u10D4\u10E0\u10D8\u10D9\u10D8\u10E1 \u10E1\u10D0\u10DB\u10DD\u10D0",[e.German]:"Amerikanisch-Samoa",[e.Greenlandic]:"Amerikaans Samoa",[e.Greek]:"\u0391\u03BC\u03B5\u03C1\u03B9\u03BA\u03B1\u03BD\u03B9\u03BA\u03AE \u03A3\u03B1\u03BC\u03CC\u03B1",[e.Gujarati]:"\u0A86\u0AAE\u0AC7\u0AB0\u0ABF\u0A95\u0AA8 \u0AB8\u0ABE\u0AAE\u0ACB\u0AAF\u0ABE",[e.Haitian]:"Amerikaans Samoa",[e.Hausa]:"Amerikaans Samoa",[e.Hebrew]:"\u05D0\u05DE\u05E8\u05D9\u05E7\u05E0\u05D9\u05D4 \u05E1\u05DE\u05D5\u05D0\u05D4",[e.Hindi]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Hungarian]:"Amerikai Szamoa",[e.Icelandic]:"Amerikai Szamoa",[e.Igbo]:"Ikina Amerika",[e.Indonesian]:"Samoa Amerika",[e.Irish]:"Samoa Amerikana",[e.Italian]:"Samoa Americane",[e.Japanese]:"\u30A2\u30E1\u30EA\u30AB\u9818\u30B5\u30E2\u30A2",[e.Javanese]:"Samoa Amerika",[e.Kannada]:"\u0C85\u0CAE\u0CC7\u0CB0\u0CBF\u0C95\u0CA8\u0CCD \u0CB8\u0CAE\u0CCB\u0C86",[e.Kazakh]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430",[e.Khmer]:"\u17A2\u17B6\u1798\u17C9\u17B6\u179A\u17B8\u179F\u17D2\u178F\u1784\u17CB",[e.Korean]:"\uC544\uBA54\uB9AC\uCE74 \uC0AC\uBAA8\uC544",[e.Kurdish]:"Amerikaans Samoa",[e.Kyrgyz]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430",[e.Lao]:"\u0EAD\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94\u0EB2\u0EA1\u0EB2\u0E99\u0EB2\u0E94",[e.Latin]:"Samoa Amerikana",[e.Latvian]:"Amerikas Samoa",[e.Lithuanian]:"Amerikos Samoa",[e.Luxembourgish]:"Amerikaans Samoa",[e.Macedonian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Malagasy]:"Samoa Amerika",[e.Malay]:"Amerika Samo",[e.Malayalam]:"\u0D05\u0D2E\u0D47\u0D30\u0D3F\u0D15\u0D4D\u0D15\u0D28\u0D4D\u0D31\u0D4D \u0D38\u0D2E\u0D4B\u0D06",[e.Maltese]:"Samoa Amerika",[e.Maori]:"Samoa Amerika",[e.Marathi]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Mongolian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438\u0439 \u0421\u0430\u043C\u043E\u0430",[e.Nepali]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Norwegian]:"Amerikansk Samoa",[e.Pashto]:"\u0627\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627",[e.Persian]:"\u0622\u0645\u0631\u06CC\u06A9\u0627\u06CC \u0633\u0645\u0648\u0627",[e.Polish]:"Samoa Ameryka\u0144skie",[e.Portuguese]:"Samoa Americana",[e.Punjabi]:"\u0A05\u0A2E\u0A30\u0A40\u0A15\u0A40 \u0A38\u0A3E\u0A2E\u0A4B\u0A06",[e.Romanian]:"Samoa americane",[e.Russian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430\u044F \u0421\u0430\u043C\u043E\u0430",[e.Samoan]:"Samoa Amerika",[e.Sanskrit]:"\u0905\u092E\u0947\u0930\u093F\u0915\u093E \u0938\u092E\u094B\u0906",[e.Scots]:"Amerikaans Samoa",[e.Serbian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Sesotho]:"Amerikaans Samoa",[e.Shona]:"Amerikaans Samoa",[e.Sindhi]:"Amerikaans Samoa",[e.Sinhala]:"\u0D86\u0DBB\u0DCA\u0DA2\u0DD2\u0DB1\u0DCF\u0DB1\u0DD4 \u0DC3\u0DD0\u0DB8\u0DD0\u0DBD\u0DCA\u0DC0",[e.Slovak]:"Amerikaans Samoa",[e.Slovenian]:"Amerikaans Samoa",[e.Somali]:"Amerikaans Samoa",[e.Spanish]:"Samoa Americana",[e.Sudanese]:"Amerikaans Samoa",[e.Swahili]:"Amerikaans Samoa",[e.Swedish]:"Amerikansk Samoa",[e.Tagalog]:"Amerikaans Samoa",[e.Tajik]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430",[e.Tamil]:"\u0B85\u0BAE\u0BC6\u0BB0\u0BBF\u0B95\u0BCD \u0B9A\u0BAE\u0BCB\u0BB5\u0BBE",[e.Tatar]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430",[e.Telugu]:"\u0C05\u0C2E\u0C46\u0C30\u0C3F\u0C15\u0C4D \u0C38\u0C2E\u0C4B\u0C35\u0C3E",[e.Thai]:"\u0E2A\u0E2B\u0E23\u0E32\u0E0A\u0E2D\u0E32\u0E13\u0E32\u0E08\u0E31\u0E01\u0E23\u0E41\u0E2D\u0E1F\u0E23\u0E34\u0E01\u0E32",[e.Tibetan]:"\u0F68\u0F7A\u0F0B\u0F62\u0F72\u0F0B\u0F40\u0F0B\u0F68\u0F7A\u0F0B\u0F58\u0F72\u0F0B\u0F51\u0F74\u0F0B\u0F61\u0F72\u0F0B\u0F62\u0F72\u0F0B\u0F40",[e.Turkish]:"Amerikan Samoas\u0131",[e.Ukrainian]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u044C\u043A\u0430 \u0421\u0430\u043C\u043E\u0430",[e.Urdu]:"\u0627\u0645\u0631\u06CC\u06A9\u06CC \u0633\u0645\u0648\u0627",[e.Uzbek]:"\u0410\u043C\u0435\u0440\u0438\u043A\u0430\u043D\u0441\u043A\u0438 \u0441\u0430\u043C\u043E\u0430",[e.Vietnamese]:"Amerikaans Samoa",[e.Welsh]:"Amerikaans Samoa",[e.Xhosa]:"Amerikaans Samoa",[e.Yiddish]:"Amerikaans Samoa",[e.Yoruba]:"Amerikaans Samoa",[e.Zulu]:"Amerikaans Samoa"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Pago Pago",total:558e3}},geography:{area:199,region:za.Oceania,sub_region:Va.Polynesia},government:{capital:"Pago Pago",type:"Nonmetropolitan Territory of the US"}}},Andorra:{i18n:{calling_codes:[376],currencies:[y.Euro],languages:[e.Catalan,e.Spanish],tz:{offsets:[t.UTC_PLUS_1,t.UTC_PLUS_2],regions:[A.EuropeAndorra],timezones:[u.CentralEuropeanTime]}},id:g.Andorra,info:{flag:{emoji:"\u{1F1E6}\u{1F1F4}",emoji_unicode:"U+1F1E6 U+1F1F4",svg:"https://www.countryflags.io/ad/flat/64.svg"},tld:[".ad"]},iso:{alpha2:g.Andorra,alpha3:"AND",numeric:"020"},name:{alt_spellings:["AD","Principality of Andorra","Principat d'Andorra"],demonym:"Andorran",native:{endonym:"Andorra"},official:"Principality of Andorra",short:"Andorra",translations:{[e.Afrikaans]:"Andorra",[e.Albanian]:"Andorra",[e.Amharic]:"\u12A0\u1295\u12F6\u122B",[e.Arabic]:"\u0623\u0646\u062F\u0648\u0631\u0627",[e.Armenian]:"\u0540\u0561\u0576\u0564\u0561\u0580\u0561\u057E\u0561\u0575\u0584",[e.Azerbaijani]:"Andorra",[e.Bashkir]:"\u0410\u043D\u0434\u043E\u0440\u0430",[e.Basque]:"Andorra",[e.Belarusian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Bengali]:"\u0985\u09A8\u09CD\u09A1\u09CB\u09B0\u09BE",[e.Berber]:"\u0623\u0646\u062F\u0648\u0631\u0627",[e.Bhutani]:"\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B",[e.Bosnian]:"Andora",[e.Breton]:"Andorra",[e.Bulgarian]:"\u0410\u043D\u0434\u043E\u0440\u0430",[e.Burmese]:"\u1021\u1014\u1039\u1010\u102C\u101B\u102D\u102F\u1038",[e.Catalan]:"Andorra",[e.Chinese]:"\u5B89\u9053\u5C14",[e.Croatian]:"Andora",[e.Czech]:"Andorra",[e.Danish]:"Andorra",[e.Dutch]:"Andorra",[e.English]:"Andorra",[e.Esperanto]:"Andora",[e.Estonian]:"Andorra",[e.Finnish]:"Andorra",[e.French]:"Andorra",[e.Frisian]:"Andorra",[e.Galician]:"Andorra",[e.Georgian]:"\u12A0\u1295\u12F6\u122B",[e.German]:"Andorra",[e.Greek]:"\u0391\u03BD\u03B4\u03CC\u03C1\u03B1",[e.Hebrew]:"\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4",[e.Hindi]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Hungarian]:"Andorra",[e.Icelandic]:"Andorra",[e.Igbo]:"Andorra",[e.Indonesian]:"Andorra",[e.Irish]:"Andorra",[e.Italian]:"Andorra",[e.Japanese]:"\u30A2\u30F3\u30C9\u30E9",[e.Javanese]:"Andorra",[e.Kannada]:"\u0C85\u0C82\u0CA1\u0CCB\u0CB0\u0CBF\u0CAF\u0CA8\u0CCD",[e.Kazakh]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Khmer]:"\u17A2\u1784\u17CB\u178A\u17B6\u179A\u17B6",[e.Korean]:"\uC548\uB3C4\uB77C",[e.Kurdish]:"Andorra",[e.Kyrgyz]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Lao]:"\u0EAD\u0EB1\u0E99\u0EC2\u0E94\u0EA3\u0EB2",[e.Latin]:"Andorra",[e.Latvian]:"Andora",[e.Lithuanian]:"Andora",[e.Luxembourgish]:"Andorra",[e.Macedonian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Malagasy]:"Andorra",[e.Malay]:"Andorra",[e.Malayalam]:"\u0D05\u0D02\u0D21\u0D4B\u0D30\u0D3F\u0D2F\u0D28\u0D4D",[e.Maltese]:"Andorra",[e.Maori]:"Andorra",[e.Marathi]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Mongolian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Nepali]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Norwegian]:"Andorra",[e.Pashto]:"\u0622\u0646\u062F\u0648\u0631\u0627",[e.Persian]:"\u0622\u0646\u062F\u0648\u0631\u0627",[e.Polish]:"Andora",[e.Portuguese]:"Andorra",[e.Punjabi]:"\u0A05\u0A70\u0A21\u0A4B\u0A30\u0A3E",[e.Romanian]:"Andorra",[e.Russian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Samoan]:"Andorra",[e.Sanskrit]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Scots]:"Andorra",[e.Serbian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Sesotho]:"Andorra",[e.Shona]:"Andorra",[e.Sindhi]:"\u0905\u0902\u0921\u094B\u0930\u093E",[e.Sinhala]:"\u0D86\u0DB1\u0DCA\u0DAF\u0DDA",[e.Slovak]:"Andorra",[e.Slovenian]:"Andora",[e.Somali]:"Andorra",[e.Spanish]:"Andorra",[e.Sudanese]:"Andorra",[e.Swahili]:"Andorra",[e.Swedish]:"Andorra",[e.Tagalog]:"Andorra",[e.Tajik]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Tamil]:"\u0B85\u0BA9\u0BCB\u0BB0\u0BCD\u0B9F\u0BBE",[e.Tatar]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Telugu]:"\u0C05\u0C02\u0C21\u0C4B\u0C30\u0C4D\u0C30\u0C3E",[e.Thai]:"\u0E2D\u0E31\u0E19\u0E14\u0E2D\u0E23\u0E4C\u0E23\u0E32",[e.Tibetan]:"\u0F68\u0F53\u0F0B\u0F4C\u0F7C\u0F0B",[e.Turkish]:"Andora",[e.Ukrainian]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Urdu]:"\u0622\u0646\u062F\u0648\u0631\u0627",[e.Uzbek]:"\u0410\u043D\u0434\u043E\u0440\u0440\u0430",[e.Vietnamese]:"Andorra",[e.Welsh]:"Andorra",[e.Xhosa]:"Andorra",[e.Yiddish]:"\u05D0\u05E0\u05D3\u05D5\u05E8\u05D4",[e.Yoruba]:"Andorra",[e.Zulu]:"Andorra"}},statistics:{demographics:{age:{distribution:[{age:"0 to 14 years",percentage:15.3},{age:"15 to 64 years",percentage:66.7},{age:"65 years and over",percentage:14.6}],median_age:35.5},population:{largest_city:"Andorra la Vella",total:78e3}},geography:{area:468,region:za.Europe,sub_region:Va.SouthernEurope},government:{capital:"Andorra la Vella",type:"Constitutional Monarchy"}}},Angola:{i18n:{calling_codes:[244],currencies:[y.AngolaKwanza],languages:[e.Portuguese,e.Spanish,e.French,e.Italian,e.German,e.English],tz:{offsets:[t.UTC_0,t.UTC_PLUS_1,t.UTC_PLUS_2],regions:[A.AfricaLuanda],timezones:[u.WestAfricaTime]}},id:g.Angola,info:{flag:{emoji:"\u{1F1E6}\u{1F1EC}",emoji_unicode:"U+1F1E6 U+1F1EC",svg:"https://www.countryflags.io/ao/flat/64.svg"},tld:[".ao"]},iso:{alpha2:g.Angola,alpha3:"AGO",numeric:"024"},name:{alt_spellings:["AO","Rep\xFAblica de Angola","\u0281\u025Bpublika de an"],demonym:"Angolan",native:{endonym:"Angola"},official:"Republic of Angola",short:"Angola",translations:{[e.Afrikaans]:"Angola",[e.Albanian]:"Ang\xF2la",[e.Amharic]:"\u12A0\u1295\u130E\u120A\u12EB",[e.Arabic]:"\u0623\u0646\u063A\u0648\u0644\u0627",[e.Armenian]:"\u0540\u0561\u0576\u0563\u0561\u056C\u0561\u056F\u0561",[e.Azerbaijani]:"Ang\u0259l",[e.Bashkir]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Basque]:"Angola",[e.Belarusian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Bengali]:"\u0985\u0999\u09CD\u0997\u09B2\u09BE",[e.Berber]:"Angola",[e.Bhutani]:"\u0F60\u0F56\u0FB2\u0F74\u0F42",[e.Bosnian]:"Angola",[e.Breton]:"Angola",[e.Bulgarian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Burmese]:"\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A",[e.Catalan]:"Angola",[e.Chinese]:"\u5B89\u54E5\u62C9",[e.Croatian]:"Angola",[e.Czech]:"Angola",[e.Danish]:"Angola",[e.Dutch]:"Angola",[e.English]:"Angola",[e.Esperanto]:"Angolo",[e.Estonian]:"Angola",[e.Finnish]:"Angola",[e.French]:"Angola",[e.Frisian]:"Angola",[e.Galician]:"Angola",[e.Georgian]:"\u10D0\u10DC\u10D2\u10DD\u10DA\u10D0",[e.German]:"Angola",[e.Greenlandic]:"Angola",[e.Greek]:"\u0391\u03B3\u03BA\u03CC\u03BB\u03B1",[e.Gujarati]:"\u0A85\u0A82\u0A97\u0ACB\u0AB2\u0ABE",[e.Haitian]:"Angola",[e.Hausa]:"Angola",[e.Hebrew]:"\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4",[e.Hindi]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Hungarian]:"Angola",[e.Icelandic]:"Angola",[e.Igbo]:"Angola",[e.Indonesian]:"Angola",[e.Irish]:"Angola",[e.Italian]:"Angola",[e.Japanese]:"\u30A2\u30F3\u30B4\u30E9",[e.Javanese]:"Anggol",[e.Kannada]:"\u0C85\u0C82\u0C97\u0CCB\u0CB2\u0CBE",[e.Kazakh]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Khmer]:"\u17A2\u1784\u17CB\u1780\u17B6\u179B\u17A2\u1784\u17CB\u1782\u17D2\u179B\u17C1\u179F",[e.Korean]:"\uC559\uACE8\uB77C",[e.Kurdish]:"Angola",[e.Kyrgyz]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Lao]:"\u0EAD\u0EB0\u0E99\u0EB2\u0E94\u0EB2",[e.Latin]:"Angola",[e.Latvian]:"Angola",[e.Lithuanian]:"Angola",[e.Luxembourgish]:"Angola",[e.Macedonian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Malagasy]:"Angola",[e.Malay]:"Angola",[e.Malayalam]:"\u0D05\u0D02\u0D17\u0D4B\u0D33\u0D3E",[e.Maltese]:"Angola",[e.Maori]:"Angola",[e.Marathi]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Mongolian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Nepali]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Norwegian]:"Angola",[e.Pashto]:"\u0627\u0646\u06AB\u0648\u0644\u0627",[e.Persian]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Polish]:"Angola",[e.Portuguese]:"Angola",[e.Punjabi]:"\u0A05\u0A19\u0A4D\u0A17\u0A4B\u0A32\u0A3E",[e.Romanian]:"Angole",[e.Russian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Samoan]:"Angola",[e.Sanskrit]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Scots]:"Angola",[e.Serbian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Sesotho]:"Angola",[e.Shona]:"Angola",[e.Sindhi]:"\u0905\u0919\u094D\u0917\u094B\u0932\u093E",[e.Sinhala]:"\u0D86\u0D9C\u0DBD\u0DD2\u0DBA\u0DCF\u0DC0",[e.Slovak]:"Angola",[e.Slovenian]:"Angola",[e.Somali]:"Angola",[e.Spanish]:"Angola",[e.Sudanese]:"Angola",[e.Swahili]:"Angola",[e.Swedish]:"Angola",[e.Tagalog]:"Angola",[e.Tajik]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Tamil]:"\u0B85\u0B99\u0BCD\u0B95\u0BCB\u0BB2\u0BBE",[e.Tatar]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Telugu]:"\u0C05\u0C02\u0C17\u0C4B\u0C32\u0C3E",[e.Thai]:"\u0E2D\u0E07\u0E04\u0E4C\u0E01\u0E32\u0E23\u0E2D\u0E32\u0E19\u0E32\u0E21\u0E34\u0E2A\u0E16\u0E32\u0E19",[e.Tibetan]:"\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B",[e.Turkish]:"Angola",[e.Ukrainian]:"\u0410\u043D\u0433\u043E\u043B\u0430",[e.Urdu]:"\u0627\u0646\u06AF\u0648\u0644\u0627",[e.Uzbek]:"Angola",[e.Vietnamese]:"Angola",[e.Xhosa]:"Angola",[e.Welsh]:"Angola",[e.Yiddish]:"\u05D0\u05E0\u05D2\u05D5\u05DC\u05D4",[e.Yoruba]:"Angola",[e.Zulu]:"Angola"}}},Anguilla:{i18n:{calling_codes:[1264],currencies:[y.DominicaDollar,y.EastCaribbeanDollar,y.Euro,y.UnitedStatesDollar,y.BritishPound],languages:[e.English,e.Spanish],tz:{offsets:[t.UTC_MINUS_4],regions:[A.AmericaAnguilla],timezones:[u.AtlanticStandardTime]}},id:g.Anguilla,info:{flag:{emoji:"\u{1F1E6}\u{1F1EC}",emoji_unicode:"U+1F1E6 U+1F1EC",svg:"https://www.countryflags.io/ai/flat/64.svg"},tld:[".ai"]},iso:{alpha2:g.Anguilla,alpha3:"AIA",numeric:"660"},name:{alt_spellings:["AI"],demonym:"Anguillian",native:{endonym:"Anguilla"},official:"Anguilla",short:"Anguilla",translations:{[e.Afrikaans]:"Anguilla",[e.Albanian]:"Anguilla",[e.Amharic]:"\u12A0\u1295\u1309\u120B",[e.Arabic]:"\u0623\u0646\u063A\u0648\u064A\u0644\u0627",[e.Armenian]:"\u0531\u0576\u0563\u056B\u056C\u0561",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Basque]:"Angila",[e.Belarusian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Bengali]:"\u0985\u0999\u09CD\u0997\u09C0\u09B2\u09BE",[e.Berber]:"\u0623\u0646\u063A\u0648\u064A\u0644\u0627",[e.Bhutani]:"\u0F68\u0F44\u0F0B\u0F63\u0F7C\u0F0B",[e.Bosnian]:"Angila",[e.Breton]:"Angila",[e.Bulgarian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Burmese]:"\u1021\u1004\u103A\u1039\u1002\u101C\u102D\u1010\u103A",[e.Catalan]:"Angilla",[e.Chinese]:"\u5B89\u572D\u62C9",[e.Croatian]:"Angila",[e.Czech]:"Anguilla",[e.Danish]:"Anguilla",[e.Dutch]:"Anguilla",[e.English]:"Anguilla",[e.Esperanto]:"Angila",[e.Estonian]:"Anguilla",[e.Finnish]:"Anguilla",[e.French]:"Anguilla",[e.Frisian]:"Angila",[e.Galician]:"Anguilla",[e.Georgian]:"\u10D0\u10DC\u10D2\u10D8\u10DA\u10D0",[e.German]:"Anguilla",[e.Greenlandic]:"Anguilla",[e.Greek]:"\u0391\u03BD\u03B3\u03BA\u03C5\u03BB\u03AC",[e.Gujarati]:"\u0A85\u0A82\u0A97\u0ACD\u0AAF\u0ABE\u0AB2\u0ABE",[e.Haitian]:"Anguilla",[e.Hausa]:"Anguilla",[e.Hebrew]:"\u05D0\u05E0\u05D2\u05D5\u05D9\u05D0\u05DC\u05D4",[e.Hindi]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Hungarian]:"Anguilla",[e.Icelandic]:"Anguilla",[e.Igbo]:"Anguilla",[e.Indonesian]:"Anguilla",[e.Irish]:"Anguilla",[e.Italian]:"Anguilla",[e.Japanese]:"\u30A2\u30F3\u30AE\u30E9",[e.Javanese]:"Anguilla",[e.Kannada]:"\u0C85\u0C82\u0C97\u0CCD\u0CB5\u0CC7\u0CB2\u0CBE",[e.Kazakh]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Khmer]:"\u17A2\u1784\u17CB\u1780\u17B6\u179A\u17A0\u17D2\u1782\u17B8\u1798",[e.Korean]:"\uC575\uADC8\uB77C",[e.Kurdish]:"Anguilla",[e.Kyrgyz]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Lao]:"\u0EAD\u0EB0\u0E99\u0EB0\u0E88\u0EB3",[e.Latin]:"Anguilla",[e.Latvian]:"Anguilla",[e.Lithuanian]:"Anguilla",[e.Luxembourgish]:"Angilla",[e.Macedonian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Malagasy]:"Angila",[e.Malay]:"Anguilla",[e.Malayalam]:"\u0D05\u0D02\u0D17\u0D4D\u0D35\u0D47\u0D32\u0D3E",[e.Maltese]:"Anguilla",[e.Maori]:"Anguilla",[e.Marathi]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Mongolian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Nepali]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Norwegian]:"Anguilla",[e.Pashto]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Persian]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Polish]:"Anguilla",[e.Portuguese]:"Anguilla",[e.Punjabi]:"\u0A05\u0A02\u0A17\u0A40\u0A32\u0A3E",[e.Romanian]:"Anguilla",[e.Russian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Samoan]:"Anguilla",[e.Sanskrit]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Scots]:"Anguilla",[e.Serbian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Sesotho]:"Anguilla",[e.Shona]:"Anguilla",[e.Sindhi]:"\u0905\u0902\u0917\u094D\u0935\u0947\u0932\u093E",[e.Sinhala]:"\u0D86\u0D82\u0D9C\u0DD2\u0DBD\u0DCF\u0DC0",[e.Slovak]:"Anguilla",[e.Slovenian]:"Anguilla",[e.Somali]:"Anguilla",[e.Spanish]:"Anguilla",[e.Sudanese]:"Anguilla",[e.Swahili]:"Anguilla",[e.Swedish]:"Anguilla",[e.Tagalog]:"Anguilla",[e.Tajik]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Tamil]:"\u0B85\u0B99\u0BCD\u0B95\u0BC8\u0BB2\u0BBE",[e.Tatar]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Telugu]:"\u0C05\u0C02\u0C17\u0C4D\u0C35\u0C47\u0C32\u0C3E",[e.Thai]:"\u0E2D\u0E31\u0E07\u0E01\u0E32\u0E25\u0E32",[e.Tibetan]:"\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B",[e.Turkish]:"Anguilla",[e.Ukrainian]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Urdu]:"\u0622\u0646\u06AF\u0648\u0644\u0627",[e.Uzbek]:"\u0410\u043D\u0433\u0438\u043B\u0438",[e.Vietnamese]:"Anguilla",[e.Welsh]:"Anguilla",[e.Xhosa]:"Anguilla",[e.Yiddish]:"Anguilla",[e.Yoruba]:"Anguilla",[e.Zulu]:"Anguilla"}}},Antarctica:{i18n:{calling_codes:[672],currencies:[y.UnitedStatesDollar,y.Euro],languages:[e.English,e.Spanish,e.French,e.Portuguese,e.Italian,e.Dutch,e.German,e.Swedish,e.Norwegian,e.Danish,e.Finnish],tz:{offsets:[t.UTC_PLUS_1,t.UTC_PLUS_2],regions:[A.AntarcticaCasey,A.AntarcticaDavis,A.AntarcticaMcMurdo,A.AntarcticaPalmer,A.AntarcticaRothera],timezones:[u.AtlanticStandardTime,u.CentralTime,u.EasternTime,u.AtlanticStandardTime,u.AzoresStandardTime,u.NewfoundlandStandardTime]}},id:g.Antarctica,info:{flag:{emoji:"\u{1F1E6}\u{1F1F6}",emoji_unicode:"U+1F1E6 U+1F1F6",svg:"https://www.countryflags.io/aq/flat/64.svg"},tld:[".aq"]},iso:{alpha2:g.Antarctica,alpha3:"ATA",numeric:"010"},name:{alt_spellings:["AQ"],demonym:"Antarctican",native:{endonym:"Antarctica"},official:"Antarctica",short:"Antarctica",translations:{[e.Afrikaans]:"Antarctica",[e.Albanian]:"Antarktika",[e.Amharic]:"\u12A0\u1295\u1272\u120D\u12AB\u1293",[e.Arabic]:"\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627",[e.Armenian]:"\u0540\u0561\u0576\u0561\u0580\u0561\u057F\u056F\u0578",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Basque]:"Antarktika",[e.Belarusian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Bengali]:"\u0985\u09A8\u09CD\u09A4\u09B0\u09BE\u09B6\u09CD\u09AC\u09C0",[e.Berber]:"\u0623\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627",[e.Bhutani]:"\u0F68\u0F44\u0F0B\u0F63\u0F72\u0F0B",[e.Bosnian]:"Antarktika",[e.Breton]:"Antarktika",[e.Bulgarian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Burmese]:"\u1021\u1014\u1039\u1010\u102C\u101B\u102E\u1038\u101A\u102C\u1038",[e.Catalan]:"Ant\xE0rtida",[e.Chinese]:"\u5357\u6781\u6D32",[e.Croatian]:"Antarktika",[e.Czech]:"Antarktida",[e.Danish]:"Antarktis",[e.Dutch]:"Antarctica",[e.English]:"Antarctica",[e.Esperanto]:"Antarktika",[e.Estonian]:"Antarktika",[e.Finnish]:"Antarktis",[e.French]:"Antarctica",[e.Frisian]:"Antarktis",[e.Galician]:"Ant\xE1rtida",[e.Georgian]:"\u10D0\u10DC\u10E2\u10D0\u10E0\u10E5\u10E2\u10D8\u10D9\u10D0",[e.German]:"Antarktis",[e.Greenlandic]:"Antarktis",[e.Greek]:"\u0391\u03BD\u03C4\u03B1\u03C1\u03BA\u03C4\u03B9\u03BA\u03AE",[e.Gujarati]:"\u0A85\u0AA8\u0ACD\u0AA4\u0AB0\u0ABE\u0AB6\u0ACD\u0AB5\u0AC0",[e.Haitian]:"Antarctica",[e.Hausa]:"Antarktika",[e.Hebrew]:"\u05D0\u05E0\u05D8\u05E8\u05E7\u05D8\u05D9\u05E7\u05D4",[e.Hindi]:"\u0905\u0928\u094D\u0924\u0930\u0915\u094D\u0937\u0947\u0924\u094D\u0930",[e.Hungarian]:"Antarktika",[e.Icelandic]:"Antarktis",[e.Igbo]:"Antarktika",[e.Indonesian]:"Antarktika",[e.Irish]:"Antarktika",[e.Italian]:"Antartide",[e.Japanese]:"\u5357\u6975",[e.Javanese]:"Antarktika",[e.Kannada]:"\u0C85\u0CA8\u0CCD\u0CA4\u0CB0\u0CBE\u0CB6\u0CCD\u0CB5\u0CBF",[e.Kazakh]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Khmer]:"\u17A2\u1784\u17CB\u179F\u17D2\u1780\u179A\u17A2\u17B6\u1798\u17C9\u17BB\u1799",[e.Korean]:"\uC564\uD2F0\uCE74\uD1A0\uB2C9",[e.Kurdish]:"Antarktika",[e.Kyrgyz]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Lao]:"\u0EAD\u0EB0\u0E99\u0EAD\u0EA5\u0EB2\u0E81\u0EB4\u0EAA\u0EB0",[e.Latin]:"Antarctica",[e.Latvian]:"Antarktika",[e.Lithuanian]:"Antarktis",[e.Luxembourgish]:"Antarktis",[e.Macedonian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Malagasy]:"Antarctica",[e.Malay]:"Antarktika",[e.Malayalam]:"\u0D05\u0D28\u0D4D\u0D24\u0D30\u0D3E\u0D36\u0D4D\u0D35\u0D3F",[e.Maltese]:"Antarktika",[e.Maori]:"Antarktika",[e.Marathi]:"\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E",[e.Mongolian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Nepali]:"\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E",[e.Norwegian]:"Antarktis",[e.Pashto]:"\u0627\u0646\u062A\u0627\u0631\u0643\u062A\u064A\u0643\u0627",[e.Persian]:"\u0622\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627",[e.Polish]:"Antarktyka",[e.Portuguese]:"Ant\xE1rtida",[e.Punjabi]:"\u0A05\u0A28\u0A4D\u0A24\u0A30\u0A3E\u0A36\u0A3F\u0A15\u0A3E",[e.Romanian]:"Antarctica",[e.Russian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Samoan]:"Antarktika",[e.Sanskrit]:"\u0905\u0928\u094D\u0924\u0930\u093E\u0936\u094D\u0935\u093F\u0915\u093E",[e.Scots]:"Antarktika",[e.Serbian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Sesotho]:"Antarktika",[e.Shona]:"Antarktika",[e.Sindhi]:"Antarktika",[e.Sinhala]:"\u0D86\u0DB1\u0DCA\u0DA7\u0DCA\u0DA7\u0DD2\u0D9A\u0DCF\u0DC0",[e.Slovak]:"Antarktika",[e.Slovenian]:"Antarktika",[e.Somali]:"Antarktika",[e.Spanish]:"Ant\xE1rtida",[e.Sudanese]:"Antarktika",[e.Swahili]:"Antarktika",[e.Swedish]:"Antarktis",[e.Tagalog]:"Antarktika",[e.Tajik]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Tamil]:"\u0B85\u0BA9\u0BCD\u0BA4\u0BBE\u0BB0\u0BCD\u0B95\u0BCD\u0B95\u0BBF\u0B95\u0BCD",[e.Tatar]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Telugu]:"\u0C05\u0C28\u0C4D\u0C24\u0C30\u0C3E\u0C36\u0C4D\u0C35\u0C3F\u0C15\u0C3E",[e.Thai]:"\u0E20\u0E39\u0E21\u0E34\u0E20\u0E32\u0E04\u0E2D\u0E32\u0E19\u0E31\u0E19\u0E15\u0E34\u0E01\u0E32",[e.Tibetan]:"\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72\u0F0B\u0F68\u0F7A\u0F53\u0F0B\u0F4A\u0F72\u0F4A\u0F7A\u0F53\u0F0B\u0F40\u0F72\u0F66\u0F72",[e.Turkish]:"Antarktika",[e.Ukrainian]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Urdu]:"\u0627\u0646\u062A\u0627\u0631\u06A9\u062A\u06CC\u06A9\u0627",[e.Uzbek]:"\u0410\u043D\u0442\u0430\u0440\u043A\u0442\u0438\u043A\u0430",[e.Vietnamese]:"\u0110\u1EA5t Antarktik",[e.Welsh]:"Antarktika",[e.Xhosa]:"Antarktika",[e.Yiddish]:"Antarktika",[e.Yoruba]:"Antarktika",[e.Zulu]:"Antarktika"}}},Armenia:{i18n:{calling_codes:[374],currencies:[y.ArmeniaDram],languages:[e.Armenian],tz:{offsets:[t.UTC_PLUS_4],regions:[A.AsiaJakarta],timezones:[u.ArmeniaTime]}},id:g.Armenia,info:{flag:{emoji:"\u{1F1E6}\u{1F1F2}",emoji_unicode:"U+1F1E6 U+1F1F2",svg:"https://www.countryflags.io/am/flat/64.svg"},tld:[".am"]},iso:{alpha2:g.Armenia,alpha3:"ARM",numeric:"051"},name:{alt_spellings:["AM","Hayastan","Republic of Armenia","\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"],demonym:"Armenian",native:{endonym:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"},official:"Republic of Armenia",short:"Armenia",translations:{[e.Afrikaans]:"Armeni\xEB",[e.Albanian]:"Armenia",[e.Amharic]:"\u12A0\u121B\u122D\u129B",[e.Arabic]:"\u0623\u0631\u0645\u064A\u0646\u064A\u0627",[e.Armenian]:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576",[e.Azerbaijani]:"Az\u0259rbaycan",[e.Bashkir]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Basque]:"Arm\xE9nia",[e.Belarusian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Bengali]:"\u0986\u09B0\u09CD\u09AE\u09C7\u09A8\u09BF",[e.Berber]:"\u0623\u0631\u0645\u064A\u0646\u064A\u0627",[e.Bhutani]:"\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42",[e.Bosnian]:"Armenija",[e.Breton]:"Armeni\xEB",[e.Bulgarian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Burmese]:"\u1021\u102C\u1019\u1010\u102D\u1010\u1039",[e.Catalan]:"Arm\xE8nia",[e.Chinese]:"\u4E9A\u7F8E\u5C3C\u4E9A",[e.Croatian]:"Armenija",[e.Czech]:"Arm\xE9nie",[e.Danish]:"Armenien",[e.Dutch]:"Armeni\xEB",[e.English]:"Armenia",[e.Esperanto]:"Armenia",[e.Estonian]:"Armeenia",[e.Finnish]:"Armenia",[e.French]:"Armenia",[e.Frisian]:"Armeenia",[e.Galician]:"Arm\xE9nia",[e.Georgian]:"\u10D0\u10E0\u10DB\u10DD\u10DC\u10D8",[e.German]:"Armenien",[e.Greenlandic]:"Armenia",[e.Greek]:"\u0391\u03C1\u03BC\u03B5\u03BD\u03AF\u03B1",[e.Gujarati]:"\u0A85\u0AB0\u0ACD\u0AAE\u0AC7\u0AA8\u0ABF",[e.Haitian]:"Armenia",[e.Hausa]:"Armenia",[e.Hebrew]:"\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4",[e.Hindi]:"\u0905\u05E8\u05DE\u05E0\u093F\u092F\u093E",[e.Hungarian]:"\xD6rm\xE9nyorsz\xE1g",[e.Icelandic]:"Armenia",[e.Igbo]:"Armenia",[e.Indonesian]:"Armenia",[e.Irish]:"Armenia",[e.Italian]:"Armenia",[e.Japanese]:"\u30A2\u30EB\u30E1\u30CB\u30A2",[e.Javanese]:"Armenia",[e.Kannada]:"\u0C85\u0CB0\u0CCD\u0CAE\u0CC7\u0CA8\u0CBF",[e.Kazakh]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Khmer]:"\u17A2\u17B6\u1798\u17C9\u17C1\u179A\u17B8",[e.Korean]:"\uC544\uB974\uBA54\uB2C8\uC544",[e.Kurdish]:"Armenia",[e.Kyrgyz]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Lao]:"\u0EAD\u0EB2\u0EAB\u0EBC\u0E99\u0EB2",[e.Latin]:"Armenia",[e.Latvian]:"Armeenia",[e.Lithuanian]:"Arm\u0117nija",[e.Luxembourgish]:"Armenien",[e.Macedonian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430",[e.Malagasy]:"Armenia",[e.Malay]:"Armenia",[e.Malayalam]:"\u0D05\u0D30\u0D4D\u200D\u0D2E\u0D47\u0D28\u0D3F",[e.Maltese]:"Armenia",[e.Maori]:"Armenia",[e.Marathi]:"\u0905\u0930\u094D\u092E\u0947\u0928\u093F",[e.Mongolian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Nepali]:"\u0905\u0930\u094D\u092E\u0947\u0928\u093F",[e.Norwegian]:"Armenia",[e.Pashto]:"\u0622\u0631\u0645\u06CC\u0646\u06CC\u0627",[e.Persian]:"\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646",[e.Polish]:"Armenia",[e.Portuguese]:"Armenia",[e.Punjabi]:"\u0A05\u0A30\u0A2E\u0A40\u0A28\u0A40",[e.Romanian]:"Armenia",[e.Russian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Samoan]:"Armenia",[e.Sanskrit]:"Armenia",[e.Scots]:"Armenia",[e.Serbian]:"\u0410\u0440\u043C\u0435\u043D\u0438\u0458\u0430",[e.Sesotho]:"Armenia",[e.Shona]:"Armenia",[e.Sindhi]:"Armenia",[e.Sinhala]:"\u0D86\u0DBB\u0DCA\u0DB8\u0DD3\u0DB1\u0DD2",[e.Slovak]:"Armenia",[e.Slovenian]:"Armenija",[e.Somali]:"Armenia",[e.Spanish]:"Armenia",[e.Sudanese]:"Armenia",[e.Swahili]:"Armenia",[e.Swedish]:"Armenien",[e.Tagalog]:"Armenia",[e.Tajik]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Tamil]:"\u0B85\u0BB0\u0BCD\u0BAE\u0BC7\u0BA9\u0BBF\u0BAF\u0BA9\u0BCD",[e.Tatar]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Telugu]:"\u0C05\u0C30\u0C4D\u0C2E\u0C47\u0C28\u0C3F",[e.Thai]:"\u0E2D\u0E32\u0E23\u0E4C\u0E40\u0E21\u0E19\u0E34\u0E2A\u0E16\u0E32\u0E19",[e.Tibetan]:"\u0F68\u0F62\u0F0B\u0F58\u0F7A\u0F0B\u0F53\u0F72\u0F0B\u0F61\u0F74\u0F0D",[e.Turkish]:"Ermenistan",[e.Ukrainian]:"\u0410\u0440\u043C\u0435\u043D\u0456\u044F",[e.Urdu]:"\u0627\u0631\u0645\u0646\u0633\u062A\u0627\u0646",[e.Uzbek]:"\u0410\u0440\u043C\u0435\u043D\u0438\u044F",[e.Vietnamese]:"Armenia",[e.Welsh]:"Armenia",[e.Xhosa]:"Armenia",[e.Yiddish]:"\u05D0\u05E8\u05DE\u05E0\u05D9\u05D4",[e.Yoruba]:"Armenia",[e.Zulu]:"Armenia"}}},SomeCountry:{i18n:{calling_codes:[],currencies:[],languages:[],tz:{offsets:[],regions:[],timezones:[]}},id:g.AmericanSamoa,info:{flag:{emoji:"",emoji_unicode:"",svg:""},tld:[]},iso:{alpha2:g.AmericanSamoa,alpha3:"",numeric:""},name:{alt_spellings:[],demonym:"",native:{endonym:""},official:"",short:"",translations:{[e.Afrikaans]:"",[e.Albanian]:"",[e.Amharic]:"",[e.Arabic]:"",[e.Armenian]:"",[e.Azerbaijani]:"",[e.Bashkir]:"",[e.Basque]:"",[e.Belarusian]:"",[e.Bengali]:"",[e.Berber]:"",[e.Bhutani]:"",[e.Bosnian]:"",[e.Breton]:"",[e.Bulgarian]:"",[e.Burmese]:"",[e.Catalan]:"",[e.Chinese]:"",[e.Croatian]:"",[e.Czech]:"",[e.Danish]:"",[e.Dutch]:"",[e.English]:"",[e.Esperanto]:"",[e.Estonian]:"",[e.Finnish]:"",[e.French]:"",[e.Frisian]:"",[e.Galician]:"",[e.Georgian]:"",[e.German]:"",[e.Greenlandic]:"",[e.Greek]:"",[e.Gujarati]:"",[e.Haitian]:"",[e.Hausa]:"",[e.Hebrew]:"",[e.Hindi]:"",[e.Hungarian]:"",[e.Icelandic]:"",[e.Igbo]:"",[e.Indonesian]:"",[e.Irish]:"",[e.Italian]:"",[e.Japanese]:"",[e.Javanese]:"",[e.Kannada]:"",[e.Kazakh]:"",[e.Khmer]:"",[e.Korean]:"",[e.Kurdish]:"",[e.Kyrgyz]:"",[e.Lao]:"",[e.Latin]:"",[e.Latvian]:"",[e.Lithuanian]:"",[e.Luxembourgish]:"",[e.Macedonian]:"",[e.Malagasy]:"",[e.Malay]:"",[e.Malayalam]:"",[e.Maltese]:"",[e.Maori]:"",[e.Marathi]:"",[e.Mongolian]:"",[e.Nepali]:"",[e.Norwegian]:"",[e.Pashto]:"",[e.Persian]:"",[e.Polish]:"",[e.Portuguese]:"",[e.Punjabi]:"",[e.Romanian]:"",[e.Russian]:"",[e.Samoan]:"",[e.Sanskrit]:"",[e.Scots]:"",[e.Serbian]:"",[e.Sesotho]:"",[e.Shona]:"",[e.Sindhi]:"",[e.Sinhala]:"",[e.Slovak]:"",[e.Slovenian]:"",[e.Somali]:"",[e.Spanish]:"",[e.Sudanese]:"",[e.Swahili]:"",[e.Swedish]:"",[e.Tagalog]:"",[e.Tajik]:"",[e.Tamil]:"",[e.Tatar]:"",[e.Telugu]:"",[e.Thai]:"",[e.Tibetan]:"",[e.Turkish]:"",[e.Ukrainian]:"",[e.Urdu]:"",[e.Uzbek]:"",[e.Vietnamese]:"",[e.Welsh]:"",[e.Xhosa]:"",[e.Yiddish]:"",[e.Yoruba]:"",[e.Zulu]:""}}}};var v_={id:e.Afrikaans,language:{code:E.Afrikaans,name:"Afrikaans",native:"Afrikaans"},name:"Afrikaans",native_name:"Afrikaans",rtl:!1},b_={country:{code:g.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.AfrikaansSouthAfrica,language:{code:E.Afrikaans,name:"Afrikaans",native:"Afrikaans"},name:"Afrikaans (South Africa)",native_name:"Afrikaans (Suid-Afrika)",rtl:!1},U_={id:e.Albanian,language:{code:E.Albanian,name:"Albanian",native:"Shqip"},name:"Albanian",native_name:"Shqip",rtl:!1},N_={country:{code:g.Albania,name:"Albania",native:"Shqip\xEBria"},id:e.AlbanianAlbania,language:{code:E.Albanian,name:"Albanian",native:"Shqip"},name:"Albanian (Albania)",native_name:"Shqip (Shqip\xEBria)",rtl:!1},B_={id:e.Amharic,language:{code:E.Amharic,name:"Amharic",native:"\u12A0\u121B\u122D\u129B"},name:"Amharic",native_name:"\u12A0\u121B\u122D\u129B",rtl:!1},P_={country:{code:g.Ethiopia,name:"Ethiopia",native:"\u12A2\u1275\u12EE\u1335\u12EB"},id:e.AmharicEthiopia,language:{code:E.Amharic,name:"Amharic",native:"\u12A0\u121B\u122D\u129B"},name:"Amharic (Ethiopia)",native_name:"\u12A0\u121B\u122D\u129B (\u12A2\u1275\u12EE\u1335\u12EB)",rtl:!1},y_={id:e.Arabic,language:{code:E.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629",rtl:!0},k_={country:{code:g.Algeria,name:"Algeria",native:"\u0627\u0644\u062C\u0632\u0627\u0626\u0631"},id:e.ArabicAlgeria,language:{code:E.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Algeria)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u062C\u0632\u0627\u0626\u0631)",rtl:!0},M_={country:{code:g.Bahrain,name:"Bahrain",native:"\u0627\u0644\u0628\u062D\u0631\u064A\u0646"},id:e.ArabicBahrain,language:{code:E.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Bahrain)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0628\u062D\u0631\u064A\u0646)",rtl:!0},D_={country:{code:g.Egypt,name:"Egypt",native:"\u0645\u0635\u0631"},id:e.ArabicEgypt,language:{code:E.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Egypt)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0645\u0635\u0631)",rtl:!0},x_={country:{code:g.Iraq,name:"Iraq",native:"\u0627\u0644\u0639\u0631\u0627\u0642"},id:e.ArabicIraq,language:{code:E.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Iraq)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0639\u0631\u0627\u0642)",rtl:!0},F_={country:{code:g.Jordan,name:"Jordan",native:"\u0627\u0644\u0623\u0631\u062F\u0646"},id:e.ArabicJordan,language:{code:E.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Jordan)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0623\u0631\u062F\u0646)",rtl:!0},L_={country:{code:g.Kuwait,name:"Kuwait",native:"\u0627\u0644\u0643\u0648\u064A\u062A"},id:e.ArabicKuwait,language:{code:E.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Kuwait)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0643\u0648\u064A\u062A)",rtl:!0},w_={country:{code:g.Lebanon,name:"Lebanon",native:"\u0644\u0628\u0646\u0627\u0646"},id:e.ArabicLebanon,language:{code:E.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Lebanon)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u0628\u0646\u0627\u0646)",rtl:!0},G_={country:{code:g.Libya,name:"Libya",native:"\u0644\u064A\u0628\u064A\u0627"},id:e.ArabicLibya,language:{code:E.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Libya)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0644\u064A\u0628\u064A\u0627)",rtl:!0},q_={country:{code:g.Morocco,name:"Morocco",native:"\u0627\u0644\u0645\u063A\u0631\u0628"},id:e.ArabicMorocco,language:{code:E.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Morocco)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u063A\u0631\u0628)",rtl:!0},K_={country:{code:g.Oman,name:"Oman",native:"\u0639\u0645\u0627\u0646"},id:e.ArabicOman,language:{code:E.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Oman)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0639\u0645\u0627\u0646)",rtl:!0},O_={country:{code:g.Qatar,name:"Qatar",native:"\u0642\u0637\u0631"},id:e.ArabicQatar,language:{code:E.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Qatar)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0642\u0637\u0631)",rtl:!0},j_={country:{code:g.SaudiArabia,name:"Saudi Arabia",native:"\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629"},id:e.ArabicSaudiArabia,language:{code:E.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Saudi Arabia)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0645\u0645\u0644\u0643\u0629 \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0633\u0639\u0648\u062F\u064A\u0629)",rtl:!0},H_={country:{code:g.Tunisia,name:"Tunisia",native:"\u062A\u0648\u0646\u0633"},id:e.ArabicTunisia,language:{code:E.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Tunisia)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u062A\u0648\u0646\u0633)",rtl:!0},W_={country:{code:g.UnitedArabEmirates,name:"United Arab Emirates",native:"\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629"},id:e.ArabicUnitedArabEmirates,language:{code:E.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (United Arab Emirates)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u0625\u0645\u0627\u0631\u0627\u062A \u0627\u0644\u0639\u0631\u0628\u064A\u0629 \u0627\u0644\u0645\u062A\u062D\u062F\u0629)",rtl:!0},z_={country:{code:g.Yemen,name:"Yemen",native:"\u0627\u0644\u064A\u0645\u0646"},id:e.ArabicYemen,language:{code:E.Arabic,name:"Arabic",native:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629"},name:"Arabic (Yemen)",native_name:"\u0627\u0644\u0639\u0631\u0628\u064A\u0629 (\u0627\u0644\u064A\u0645\u0646)",rtl:!0},V_={id:e.Armenian,language:{code:E.Armenian,name:"Armenian",native:"\u0540\u0561\u0575\u0565\u0580\u0565\u0576"},name:"Armenian",native_name:"\u0540\u0561\u0575\u0565\u0580\u0565\u0576",rtl:!1},R_={country:{code:g.Armenia,name:"Armenia",native:"\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576"},id:e.ArmenianArmenia,language:{code:E.Armenian,name:"Armenian",native:"\u0570\u0561\u0575\u0565\u0580\u0565\u0576"},name:"Armenian (Armenia)",native_name:"\u0570\u0561\u0575\u0565\u0580\u0565\u0576 (\u0540\u0561\u0575\u0561\u057D\u057F\u0561\u0576)",rtl:!1},Y_={id:e.Azerbaijani,language:{code:E.Azerbaijani,name:"Azeribaijani",native:"Az\u0259rbaycan"},name:"Azeri",native_name:"Az\u0259rbaycan",rtl:!1},J_={country:{code:g.Azerbaijan,name:"Azerbaijan",native:"Az\u0259rbaycan"},id:e.AzerbaijaniAzerbaijan,language:{code:E.Azerbaijani,name:"Azerbaijani",native:"Az\u0259rbaycan"},name:"Azeri (Azerbaijan)",native_name:"Az\u0259rbaycan (Az\u0259rbaycan)",rtl:!1},Z_={id:e.Basque,language:{code:E.Basque,name:"Basque",native:"Euskara"},name:"Basque",native_name:"Euskara",rtl:!1},$_={country:{code:g.Spain,name:"Spain",native:"Espa\xF1a"},id:e.BasqueSpain,language:{code:E.Basque,name:"Basque",native:"Euskara"},name:"Basque (Spain)",native_name:"Euskara (Espa\xF1a)",rtl:!1},Q_={id:e.Belarusian,language:{code:E.Belarusian,name:"Belarusian",native:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F"},name:"Belarusian",native_name:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F",rtl:!1},X_={country:{code:g.Belarus,name:"Belarus",native:"\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C"},id:e.BelarusianBelarus,language:{code:E.Belarusian,name:"Belarusian",native:"\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F"},name:"Belarusian (Belarus)",native_name:"\u0431\u0435\u043B\u0430\u0440\u0443\u0441\u043A\u0430\u044F (\u0411\u0435\u043B\u0430\u0440\u0443\u0441\u044C)",rtl:!1},C_={id:e.Bengali,language:{code:E.Bengali,name:"Bengali",native:"\u09AC\u09BE\u0982\u09B2\u09BE"},name:"Bengali",native_name:"\u09AC\u09BE\u0982\u09B2\u09BE",rtl:!1},aI={country:{code:g.Bangladesh,name:"Bangladesh",native:"\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6"},id:e.BengaliBangladesh,language:{code:E.Bengali,name:"Bengali",native:"\u09AC\u09BE\u0982\u09B2\u09BE"},name:"Bengali (Bangladesh)",native_name:"\u09AC\u09BE\u0982\u09B2\u09BE (\u09AC\u09BE\u0982\u09B2\u09BE\u09A6\u09C7\u09B6)",rtl:!1},eI={id:e.Bhutani,language:{code:E.Bhutani,name:"Bhutani",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Bhutani",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42",rtl:!1},iI={country:{code:g.Bhutan,name:"Bhutan",native:"\u0F60\u0F56\u0FB2\u0F74\u0F42"},id:e.BhutaniBhutan,language:{code:E.Bhutani,name:"Bhutani",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Bhutani (Bhutan)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42)",rtl:!1},nI={id:e.Bulgarian,language:{code:E.Bulgarian,name:"Bulgarian",native:"\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438"},name:"Bulgarian",native_name:"\u0411\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438",rtl:!1},sI={country:{code:g.Bulgaria,name:"Bulgaria",native:"\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F"},id:e.BulgarianBulgaria,language:{code:E.Bulgarian,name:"Bulgarian",native:"\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438"},name:"Bulgarian (Bulgaria)",native_name:"\u0431\u044A\u043B\u0433\u0430\u0440\u0441\u043A\u0438 (\u0411\u044A\u043B\u0433\u0430\u0440\u0438\u044F)",rtl:!1},rI={id:e.Burmese,language:{code:E.Burmese,name:"Burmese",native:"\u1017\u1019\u102C\u1005\u102C"},name:"Burmese",native_name:"\u1017\u1019\u102C\u1005\u102C",rtl:!1},tI={country:{code:g.Myanmar,name:"Myanmar",native:"\u1019\u103C\u1014\u103A\u1019\u102C"},id:e.BurmeseMyanmar,language:{code:E.Burmese,name:"Burmese",native:"\u1017\u1019\u102C\u1005\u102C"},name:"Burmese (Myanmar)",native_name:"\u1017\u1019\u102C\u1005\u102C (\u1019\u103C\u1014\u103A\u1019\u102C)",rtl:!1},uI={id:e.Cantonese,language:{code:E.Cantonese,name:"Cantonese",native:"\u5EE3\u6771\u8A71"},name:"Cantonese",native_name:"\u5EE3\u6771\u8A71",rtl:!1},lI={country:{code:g.HongKong,name:"Hong Kong",native:"\u9999\u6E2F"},id:e.CantoneseHongKong,language:{code:E.Cantonese,name:"Cantonese",native:"\u5EE3\u6771\u8A71"},name:"Cantonese (Hong Kong)",native_name:"\u5EE3\u6771\u8A71 (\u9999\u6E2F)",rtl:!1},oI={id:e.Catalan,language:{code:E.Catalan,name:"Catalan",native:"Catal\xE0"},name:"Catalan",native_name:"Catal\xE0",rtl:!1},mI={country:{code:g.Spain,name:"Spain",native:"Espa\xF1a"},id:e.CatalanSpain,language:{code:E.Catalan,name:"Catalan",native:"Catal\xE0"},name:"Catalan (Spain)",native_name:"Catal\xE0 (Espanya)",rtl:!1},cI={id:e.ChineseSimplified,language:{code:E.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified)",native_name:"\u4E2D\u6587",rtl:!1},AI={country:{code:g.China,name:"China",native:"\u4E2D\u56FD"},id:e.ChineseSimplifiedChina,language:{code:E.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/China)",native_name:"\u4E2D\u6587 (\u4E2D\u56FD)",rtl:!1},dI={country:{code:g.HongKong,name:"Hong Kong",native:"\u9999\u6E2F"},id:e.ChineseSimplifiedHongKong,language:{code:E.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/Hong Kong)",native_name:"\u4E2D\u6587 (\u9999\u6E2F)",rtl:!1},fI={country:{code:g.Macau,name:"Macau",native:"\u6FB3\u9580"},id:e.ChineseSimplifiedMacau,language:{code:E.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/Macau)",native_name:"\u4E2D\u6587 (\u6FB3\u9580)",rtl:!1},gI={country:{code:g.Singapore,name:"Singapore",native:"\u65B0\u52A0\u5761"},id:e.ChineseSimplifiedSingapore,language:{code:E.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Simplified/Singapore)",native_name:"\u4E2D\u6587 (\u65B0\u52A0\u5761)",rtl:!1},hI={id:e.ChineseTraditional,language:{code:E.Chinese,name:"Chinese",native:"\u4E2D\u6587"},name:"Chinese (Traditional)",native_name:"\u4E2D\u6587",rtl:!1},_I={country:{code:g.HongKong,name:"Hong Kong",native:"\u9999\u6E2F"},id:e.ChineseTraditionalHongKong,language:{code:E.Chinese,name:"Chinese (Traditional/Hong Kong)",native:"\u4E2D\u6587"},name:"Chinese (Hong Kong)",native_name:"\u4E2D\u6587 (\u9999\u6E2F)",rtl:!1},II={country:{code:g.Macau,name:"Macau",native:"\u6FB3\u9580"},id:e.ChineseTraditionalMacau,language:{code:E.Chinese,name:"Chinese (Traditional/Macau)",native:"\u4E2D\u6587"},name:"Chinese (Macau)",native_name:"\u4E2D\u6587 (\u6FB3\u9580)",rtl:!1},pI={country:{code:g.Singapore,name:"Singapore",native:"\u65B0\u52A0\u5761"},id:e.ChineseTraditionalSingapore,language:{code:E.Chinese,name:"Chinese (Traditional/Singapore)",native:"\u4E2D\u6587"},name:"Chinese (Singapore)",native_name:"\u4E2D\u6587 (\u65B0\u52A0\u5761)",rtl:!1},SI={id:e.Croatian,language:{code:E.Croatian,name:"Croatian",native:"Hrvatski"},name:"Croatian",native_name:"Hrvatski",rtl:!1},EI={country:{code:g.BosniaAndHerzegovina,name:"Bosnia and Herzegovina",native:"Bosna i Hercegovina"},id:e.CroatianBosniaAndHerzegovina,language:{code:E.Croatian,name:"Croatian",native:"Hrvatski"},name:"Croatian (Bosnia and Herzegovina)",native_name:"Hrvatski (Bosna i Hercegovina)",rtl:!1},TI={country:{code:g.Croatia,name:"Croatia",native:"Hrvatska"},id:e.CroatianCroatia,language:{code:E.Croatian,name:"Croatian",native:"Hrvatski"},name:"Croatian (Croatia)",native_name:"Hrvatski (Hrvatska)",rtl:!1},vI={id:e.Czech,language:{code:E.Czech,name:"Czech",native:"\u010Ce\u0161tina"},name:"Czech",native_name:"\u010Ce\u0161tina",rtl:!1},bI={country:{code:g.CzechRepublic,name:"Czech Republic",native:"\u010Cesk\xE1 republika"},id:e.CzechCzechRepublic,language:{code:E.Czech,name:"Czech",native:"\u010Ce\u0161tina"},name:"Czech (Czech Republic)",native_name:"\u010Ce\u0161tina (\u010Cesk\xE1 republika)",rtl:!1},UI={id:e.Danish,language:{code:E.Danish,name:"Danish",native:"Dansk"},name:"Danish",native_name:"Dansk",rtl:!1},NI={country:{code:g.Denmark,name:"Denmark",native:"Danmark"},id:e.DanishDenmark,language:{code:E.Danish,name:"Danish",native:"Dansk"},name:"Danish (Denmark)",native_name:"Dansk (Danmark)",rtl:!1},BI={id:e.Divehi,language:{code:E.Divehi,name:"Divehi",native:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0"},name:"Divehi",native_name:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0",rtl:!0},PI={country:{code:g.Maldives,name:"Maldives",native:"\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC"},id:e.DivehiMaldives,language:{code:E.Divehi,name:"Divehi",native:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0"},name:"Divehi (Maldives)",native_name:"\u078B\u07A8\u0788\u07AC\u0780\u07A8\u0784\u07A6\u0790\u07B0 (\u078B\u07A8\u0788\u07AC\u0780\u07A8 \u0783\u07A7\u0787\u07B0\u0796\u07AC)",rtl:!0},yI={id:e.Dutch,language:{code:E.Dutch,name:"Dutch",native:"Nederlands"},name:"Dutch",native_name:"Nederlands",rtl:!1},kI={country:{code:g.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.DutchBelgium,language:{code:E.Dutch,name:"Dutch",native:"Nederlands"},name:"Dutch (Belgium)",native_name:"Nederlands (Belgi\xEB)",rtl:!1},MI={country:{code:g.Netherlands,name:"Netherlands",native:"Nederland"},id:e.DutchNetherlands,language:{code:E.Dutch,name:"Dutch",native:"Nederlands"},name:"Dutch (Netherlands)",native_name:"Nederlands (Nederland)",rtl:!1},DI={id:e.English,language:{code:E.English,name:"English",native:"English"},name:"English",native_name:"English",rtl:!1},xI={country:{code:g.Australia,name:"Australia",native:"Australia"},id:e.EnglishAustralia,language:{code:E.English,name:"English",native:"English"},name:"English (Australia)",native_name:"English (Australia)",rtl:!1},FI={country:{code:g.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.EnglishBelgium,language:{code:E.English,name:"English",native:"English"},name:"English (Belgium)",native_name:"English (Belgi\xEB)",rtl:!1},LI={country:{code:g.Canada,name:"Canada",native:"Canada"},id:e.EnglishCanada,language:{code:E.English,name:"English",native:"English"},name:"English (Canada)",native_name:"English (Canada)",rtl:!1},wI={country:{code:g.Ireland,name:"Ireland",native:"\xC9ire"},id:e.EnglishIreland,language:{code:E.English,name:"English",native:"English"},name:"English (Ireland)",native_name:"English (\xC9ire)",rtl:!1},GI={country:{code:g.Jamaica,name:"Jamaica",native:"Jamaica"},id:e.EnglishJamaica,language:{code:E.English,name:"English",native:"English"},name:"English (Jamaica)",native_name:"English (Jamaica)",rtl:!1},qI={country:{code:g.NewZealand,name:"New Zealand",native:"New Zealand"},id:e.EnglishNewZealand,language:{code:E.English,name:"English",native:"English"},name:"English (New Zealand)",native_name:"English (New Zealand)",rtl:!1},KI={country:{code:g.Philippines,name:"Philippines",native:"Philippines"},id:e.EnglishPhilippines,language:{code:E.English,name:"English",native:"English"},name:"English (Philippines)",native_name:"English (Philippines)",rtl:!1},OI={country:{code:g.Singapore,name:"Singapore",native:"Singapore"},id:e.EnglishSingapore,language:{code:E.English,name:"English",native:"English"},name:"English (Singapore)",native_name:"English (Singapore)",rtl:!1},jI={country:{code:g.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.EnglishSouthAfrica,language:{code:E.English,name:"English",native:"English"},name:"English (South Africa)",native_name:"English (South Africa)",rtl:!1},HI={country:{code:g.TrinidadAndTobago,name:"Trinidad and Tobago",native:"Trinidad and Tobago"},id:e.EnglishTrinidadAndTobago,language:{code:E.English,name:"English",native:"English"},name:"English (Trinidad and Tobago)",native_name:"English (Trinidad and Tobago)",rtl:!1},WI={country:{code:g.UnitedKingdom,name:"United Kingdom",native:"United Kingdom"},id:e.EnglishUnitedKingdom,language:{code:E.English,name:"English",native:"English"},name:"English (United Kingdom)",native_name:"English (United Kingdom)",rtl:!1},zI={country:{code:g.UnitedStates,name:"United States",native:"United States"},id:e.EnglishUnitedStates,language:{code:E.English,name:"English",native:"English"},name:"English (United States)",native_name:"English (United States)",rtl:!1},VI={country:{code:g.Zimbabwe,name:"Zimbabwe",native:"Zimbabwe"},id:e.EnglishZimbabwe,language:{code:E.English,name:"English",native:"English"},name:"English (Zimbabwe)",native_name:"English (Zimbabwe)",rtl:!1},RI={id:e.Esperanto,language:{code:E.Esperanto,name:"Esperanto",native:"Esperanto"},name:"Esperanto",native_name:"Esperanto",rtl:!1},YI={id:e.Estonian,language:{code:E.Estonian,name:"Estonian",native:"Eesti"},name:"Estonian",native_name:"Eesti",rtl:!1},JI={country:{code:g.Estonia,name:"Estonia",native:"Eesti"},id:e.EstonianEstonia,language:{code:E.Estonian,name:"Estonian",native:"Eesti"},name:"Estonian (Estonia)",native_name:"Eesti (Eesti)",rtl:!1},ZI={id:e.Faroese,language:{code:E.Faroese,name:"Faroese",native:"F\xF8royskt"},name:"Faroese",native_name:"F\xF8royskt",rtl:!1},$I={country:{code:g.FaroeIslands,name:"Faroe Islands",native:"F\xF8royar"},id:e.FaroeseFaroeIslands,language:{code:E.Faroese,name:"Faroese",native:"F\xF8royskt"},name:"Faroese (Faroe Islands)",native_name:"F\xF8royskt (F\xF8royar)",rtl:!1},QI={id:e.Farsi,language:{code:E.Farsi,name:"Farsi",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Farsi",native_name:"\u0641\u0627\u0631\u0633\u06CC",rtl:!0},XI={country:{code:g.Iran,name:"Iran",native:"\u0627\u06CC\u0631\u0627\u0646"},id:e.FarsiIran,language:{code:E.Farsi,name:"Farsi",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Farsi (Iran)",native_name:"\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)",rtl:!0},CI={id:e.Filipino,language:{code:E.Filipino,name:"Filipino",native:"Filipino"},name:"Filipino",native_name:"Filipino",rtl:!1},ap={country:{code:g.Philippines,name:"Philippines",native:"Pilipinas"},id:e.FilipinoPhilippines,language:{code:E.Filipino,name:"Filipino",native:"Filipino"},name:"Filipino (Philippines)",native_name:"Filipino (Pilipinas)",rtl:!1},ep={id:e.Finnish,language:{code:E.Finnish,name:"Finnish",native:"Suomi"},name:"Finnish",native_name:"Suomi",rtl:!1},ip={country:{code:g.Finland,name:"Finland",native:"Suomi"},id:e.FinnishFinland,language:{code:E.Finnish,name:"Finnish",native:"Suomi"},name:"Finnish (Finland)",native_name:"Suomi (Suomi)",rtl:!1},np={id:e.French,language:{code:E.French,name:"French",native:"Fran\xE7ais"},name:"French",native_name:"Fran\xE7ais",rtl:!1},sp={country:{code:g.Belgium,name:"Belgium",native:"Belgique"},id:e.FrenchBelgium,language:{code:E.French,name:"French",native:"Fran\xE7ais"},name:"French (Belgium)",native_name:"Fran\xE7ais (Belgique)",rtl:!1},rp={country:{code:g.Canada,name:"Canada",native:"Canada"},id:e.FrenchCanada,language:{code:E.French,name:"French",native:"Fran\xE7ais"},name:"French (Canada)",native_name:"Fran\xE7ais (Canada)",rtl:!1},tp={country:{code:g.France,name:"France",native:"France"},id:e.FrenchFrance,language:{code:E.French,name:"French",native:"Fran\xE7ais"},name:"French (France)",native_name:"Fran\xE7ais (France)",rtl:!1},up={country:{code:g.Luxembourg,name:"Luxembourg",native:"Luxembourg"},id:e.FrenchLuxembourg,language:{code:E.French,name:"French",native:"Fran\xE7ais"},name:"French (Luxembourg)",native_name:"Fran\xE7ais (Luxembourg)",rtl:!1},lp={country:{code:g.Monaco,name:"Monaco",native:"Monaco"},id:e.FrenchMonaco,language:{code:E.French,name:"French",native:"Fran\xE7ais"},name:"French (Monaco)",native_name:"Fran\xE7ais (Monaco)",rtl:!1},op={country:{code:g.Reunion,name:"Reunion",native:"La R\xE9union"},id:e.FrenchReunion,language:{code:E.French,name:"French",native:"Fran\xE7ais"},name:"French (Reunion)",native_name:"Fran\xE7ais (La R\xE9union)",rtl:!1},mp={country:{code:g.Switzerland,name:"Switzerland",native:"Suisse"},id:e.FrenchSwitzerland,language:{code:E.French,name:"French",native:"Fran\xE7ais"},name:"French (Switzerland)",native_name:"Fran\xE7ais (Suisse)",rtl:!1},cp={id:e.Frisian,language:{code:E.Frisian,name:"Frisian",native:"Frysk"},name:"Frisian",native_name:"Frysk",rtl:!1},Ap={country:{code:g.Netherlands,name:"Netherlands",native:"Nederland"},id:e.FrisianNetherlands,language:{code:E.Frisian,name:"Frisian",native:"Frysk"},name:"Frisian (Netherlands)",native_name:"Frysk (Nederland)",rtl:!1},dp={id:e.Galician,language:{code:E.Galician,name:"Galician",native:"Galego"},name:"Galician",native_name:"Galego",rtl:!1},fp={country:{code:g.Spain,name:"Spain",native:"Espa\xF1a"},id:e.GalicianSpain,language:{code:E.Galician,name:"Galician",native:"Galego"},name:"Galician (Spain)",native_name:"Galego (Espa\xF1a)",rtl:!1},gp={id:e.Georgian,language:{code:E.Georgian,name:"Georgian",native:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8"},name:"Georgian",native_name:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8",rtl:!1},hp={country:{code:g.Georgia,name:"Georgia",native:"\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD"},id:e.GeorgianGeorgia,language:{code:E.Georgian,name:"Georgian",native:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8"},name:"Georgian (Georgia)",native_name:"\u10E5\u10D0\u10E0\u10D7\u10E3\u10DA\u10D8 (\u10E1\u10D0\u10E5\u10D0\u10E0\u10D7\u10D5\u10D4\u10DA\u10DD)",rtl:!1},_p={id:e.German,language:{code:E.German,name:"German",native:"Deutsch"},name:"German",native_name:"Deutsch",rtl:!1},Ip={country:{code:g.Austria,name:"Austria",native:"\xD6sterreich"},id:e.GermanAustria,language:{code:E.German,name:"German",native:"Deutsch"},name:"German (Austria)",native_name:"Deutsch (\xD6sterreich)",rtl:!1},pp={country:{code:g.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.GermanBelgium,language:{code:E.German,name:"German",native:"Deutsch"},name:"German (Belgium)",native_name:"Deutsch (Belgi\xEB)",rtl:!1},Sp={country:{code:g.Switzerland,name:"Switzerland",native:"Suisse"},id:e.GermanSwitzerland,language:{code:E.German,name:"German",native:"Deutsch"},name:"German (Switzerland)",native_name:"Deutsch (Suisse)",rtl:!1},Ep={country:{code:g.Liechtenstein,name:"Liechtenstein",native:"Liechtenstein"},id:e.GermanLiechtenstein,language:{code:E.German,name:"German",native:"Deutsch"},name:"German (Liechtenstein)",native_name:"Deutsch (Liechtenstein)",rtl:!1},Tp={country:{code:g.Luxembourg,name:"Luxembourg",native:"Luxembourg"},id:e.GermanLuxembourg,language:{code:E.German,name:"German",native:"Deutsch"},name:"German (Luxembourg)",native_name:"Deutsch (Luxembourg)",rtl:!1},vp={id:e.Greek,language:{code:E.Greek,name:"Greek",native:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC"},name:"Greek",native_name:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC",rtl:!1},bp={country:{code:g.Greece,name:"Greece",native:"\u0395\u03BB\u03BB\u03AC\u03B4\u03B1"},id:e.GreekGreece,language:{code:E.Greek,name:"Greek",native:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC"},name:"Greek (Greece)",native_name:"\u0395\u03BB\u03BB\u03B7\u03BD\u03B9\u03BA\u03AC (\u0395\u03BB\u03BB\u03AC\u03B4\u03B1)",rtl:!1},Up={id:e.Greenlandic,language:{code:E.Greenlandic,name:"Greenlandic",native:"Kalaallisut"},name:"Greenlandic",native_name:"Kalaallisut",rtl:!1},Np={country:{code:g.Greenland,name:"Greenland",native:"Kalaallit Nunaat"},id:e.GreenlandicGreenland,language:{code:E.Greenlandic,name:"Greenlandic",native:"Kalaallisut"},name:"Greenlandic (Greenland)",native_name:"Kalaallisut (Kalaallit Nunaat)",rtl:!1},Bp={id:e.Gujarati,language:{code:E.Gujarati,name:"Gujarati",native:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0"},name:"Gujarati",native_name:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0",rtl:!1},Pp={country:{code:g.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.GujaratiIndia,language:{code:E.Gujarati,name:"Gujarati",native:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0"},name:"Gujarati (India)",native_name:"\u0A97\u0AC1\u0A9C\u0AB0\u0ABE\u0AA4\u0AC0 (\u092D\u093E\u0930\u0924)",rtl:!1},yp={id:e.Hausa,language:{code:E.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E",rtl:!1},kp={country:{code:g.Ghana,name:"Ghana",native:"Ghana"},id:e.HausaGhana,language:{code:E.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa (Ghana)",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E (Ghana)",rtl:!1},Mp={country:{code:g.Niger,name:"Niger",native:"Niger"},id:e.HausaNiger,language:{code:E.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa (Niger)",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E (Niger)",rtl:!1},Dp={country:{code:g.Nigeria,name:"Nigeria",native:"Nigeria"},id:e.HausaNigeria,language:{code:E.Hausa,name:"Hausa",native:"\u0647\u064E\u0648\u064F\u0633\u064E"},name:"Hausa (Nigeria)",native_name:"\u0647\u064E\u0648\u064F\u0633\u064E (Nigeria)",rtl:!1},xp={id:e.Hebrew,language:{code:E.Hebrew,name:"Hebrew",native:"\u05E2\u05D1\u05E8\u05D9\u05EA"},name:"Hebrew",native_name:"\u05E2\u05D1\u05E8\u05D9\u05EA",rtl:!0},Fp={country:{code:g.Israel,name:"Hebrew",native:""},id:e.HebrewIsrael,language:{code:E.Hebrew,name:"Hebrew",native:""},name:"Hebrew (Israel)",native_name:"",rtl:!0},Lp={id:e.Hindi,language:{code:E.Hindi,name:"Hindi",native:"\u0939\u093F\u0928\u094D\u0926\u0940"},name:"Hindi",native_name:"\u0939\u093F\u0928\u094D\u0926\u0940",rtl:!1},wp={country:{code:g.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.HindiIndia,language:{code:E.Hindi,name:"Hindi",native:"\u092D\u093E\u0930\u0924\u0940\u092F"},name:"Hindi (India)",native_name:"\u092D\u093E\u0930\u0924\u0940\u092F",rtl:!1},Gp={id:e.Hungarian,language:{code:E.Hungarian,name:"Hungarian",native:"Magyar"},name:"Hungarian",native_name:"Magyar",rtl:!1},qp={country:{code:g.Hungary,name:"Hungary",native:"Magyarorsz\xE1g"},id:e.HungarianHungary,language:{code:E.Hungarian,name:"Hungarian",native:"Magyar"},name:"Hungarian (Hungary)",native_name:"Magyar (Magyarorsz\xE1g)",rtl:!1},Kp={id:e.Icelandic,language:{code:E.Icelandic,name:"Icelandic",native:"\xCDslenska"},name:"Icelandic",native_name:"\xCDslenska",rtl:!1},Op={country:{code:g.Iceland,name:"Iceland",native:"\xCDsland"},id:e.IcelandicIceland,language:{code:E.Icelandic,name:"Icelandic",native:"\xCDslenska"},name:"Icelandic (Iceland)",native_name:"\xCDslenska (\xCDsland)",rtl:!1},jp={id:e.Igbo,language:{code:E.Igbo,name:"Igbo",native:"Igbo"},name:"Igbo",native_name:"Igbo",rtl:!1},Hp={id:e.Indonesian,language:{code:E.Indonesian,name:"Indonesian",native:"Bahasa Indonesia"},name:"Indonesian",native_name:"Bahasa Indonesia",rtl:!1},Wp={country:{code:g.Indonesia,name:"Indonesia",native:"Indonesia"},id:e.IndonesianIndonesia,language:{code:E.Indonesian,name:"Indonesian",native:"Bahasa Indonesia"},name:"Indonesian (Indonesia)",native_name:"Bahasa Indonesia (Indonesia)",rtl:!1},zp={id:e.Irish,language:{code:E.Irish,name:"Irish",native:"Gaeilge"},name:"Irish",native_name:"Gaeilge",rtl:!1},Vp={country:{code:g.Ireland,name:"Ireland",native:"\xC9ire"},id:e.IrishIreland,language:{code:E.Irish,name:"Irish",native:"Gaeilge"},name:"Irish (Ireland)",native_name:"Gaeilge (\xC9ire)",rtl:!1},Rp={id:e.Italian,language:{code:E.Italian,name:"Italian",native:"Italiano"},name:"Italian",native_name:"Italiano",rtl:!1},Yp={country:{code:g.Italy,name:"Italy",native:"Italia"},id:e.ItalianItaly,language:{code:E.Italian,name:"Italian",native:"Italiano"},name:"Italian (Italy)",native_name:"Italiano (Italia)",rtl:!1},Jp={country:{code:g.Switzerland,name:"Switzerland",native:"Schweiz"},id:e.ItalianSwitzerland,language:{code:E.Italian,name:"Italian",native:"Italiano"},name:"Italian (Switzerland)",native_name:"Italiano (Svizzera)",rtl:!1},Zp={id:e.Japanese,language:{code:E.Japanese,name:"Japanese",native:"\u65E5\u672C\u8A9E"},name:"Japanese",native_name:"\u65E5\u672C\u8A9E",rtl:!1},$p={country:{code:g.Japan,name:"Japan",native:"\u65E5\u672C"},id:e.JapaneseJapan,language:{code:E.Japanese,name:"Japanese",native:"\u65E5\u672C\u8A9E"},name:"Japanese (Japan)",native_name:"\u65E5\u672C\u8A9E (\u65E5\u672C)",rtl:!1},Qp={id:e.Kannada,language:{code:E.Kannada,name:"Kannada",native:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1"},name:"Kannada",native_name:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1",rtl:!1},Xp={country:{code:g.India,name:"India",native:"\u0CAD\u0CBE\u0CB0\u0CA4"},id:e.KannadaIndia,language:{code:E.Kannada,name:"Kannada",native:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1"},name:"Kannada (India)",native_name:"\u0C95\u0CA8\u0CCD\u0CA8\u0CA1 (\u0CAD\u0CBE\u0CB0\u0CA4)",rtl:!1},Cp={id:e.Kazakh,language:{code:E.Kazakh,name:"Kazakh",native:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456"},name:"Kazakh",native_name:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456",rtl:!1},aS={country:{code:g.Kazakhstan,name:"Kazakhstan",native:"\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D"},id:e.KazakhKazakhstan,language:{code:E.Kazakh,name:"Kazakh",native:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456"},name:"Kazakh (Kazakhstan)",native_name:"\u049A\u0430\u0437\u0430\u049B \u0442\u0456\u043B\u0456 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)",rtl:!1},eS={id:e.Khmer,language:{code:E.Khmer,name:"Khmer",native:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A"},name:"Khmer",native_name:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A",rtl:!1},iS={country:{code:g.Cambodia,name:"Cambodia",native:"\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6"},id:e.KhmerCambodia,language:{code:E.Khmer,name:"Khmer",native:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A"},name:"Khmer (Cambodia)",native_name:"\u1797\u17B6\u179F\u17B6\u1781\u17D2\u1798\u17C2\u179A (\u1780\u1798\u17D2\u1796\u17BB\u1787\u17B6)",rtl:!1},nS={id:e.Konkani,language:{code:E.Konkani,name:"Konkani",native:"\u0915\u094B\u0902\u0915\u0923\u0940"},name:"Konkani",native_name:"\u0915\u094B\u0902\u0915\u0923\u0940",rtl:!1},sS={country:{code:g.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.KonkaniIndia,language:{code:E.Konkani,name:"Konkani",native:"\u0915\u094B\u0902\u0915\u0923\u0940"},name:"Konkani (India)",native_name:"\u0915\u094B\u0902\u0915\u0923\u0940 (\u092D\u093E\u0930\u0924)",rtl:!1},rS={id:e.Korean,language:{code:E.Korean,name:"Korean",native:"\uD55C\uAD6D\uC5B4"},name:"Korean",native_name:"\uD55C\uAD6D\uC5B4",rtl:!1},tS={country:{code:g.SouthKorea,name:"South Korea",native:"\uB300\uD55C\uBBFC\uAD6D"},id:e.KoreanSouthKorea,language:{code:E.Korean,name:"Korean",native:"\uD55C\uAD6D\uC5B4"},name:"Korean (South Korea)",native_name:"\uD55C\uAD6D\uC5B4 (\uB300\uD55C\uBBFC\uAD6D)",rtl:!1},uS={id:e.Kurdish,language:{code:E.Kurdish,name:"Kurdish",native:"Kurd\xEE"},name:"Kurdish",native_name:"Kurd\xEE",rtl:!1},lS={country:{code:g.Iraq,name:"Iraq",native:"\u0627\u0644\u0639\u0631\u0627\u0642"},id:e.KurdishIraq,language:{code:E.Kurdish,name:"Kurdish",native:"Kurd\xEE"},name:"Kurdish (Iraq)",native_name:"Kurd\xEE (\u0627\u0644\u0639\u0631\u0627\u0642)",rtl:!1},oS={country:{code:g.Turkey,name:"Turkey",native:"T\xFCrkiye"},id:e.KurdishTurkey,language:{code:E.Kurdish,name:"Kurdish",native:"Kurd\xEE"},name:"Kurdish (Turkey)",native_name:"Kurd\xEE (T\xFCrkiye)",rtl:!1},mS={id:e.Kyrgyz,language:{code:E.Kyrgyz,name:"Kyrgyz",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},name:"Kyrgyz",native_name:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430",rtl:!1},cS={country:{code:g.Kyrgyzstan,name:"Kyrgyzstan",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D"},id:e.KyrgyzKyrgyzstan,language:{code:E.Kyrgyz,name:"Kyrgyz",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},name:"Kyrgyz (Kyrgyzstan)",native_name:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430 (\u041A\u044B\u0440\u0433\u044B\u0437\u0441\u0442\u0430\u043D)",rtl:!1},AS={id:e.Lao,language:{code:E.Lao,name:"Lao",native:"\u0EA5\u0EB2\u0EA7"},name:"Lao",native_name:"\u0EA5\u0EB2\u0EA7",rtl:!1},dS={country:{code:g.Laos,name:"Laos",native:"\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95"},id:e.LaoLaos,language:{code:E.Lao,name:"Lao",native:"\u0EA5\u0EB2\u0EA7"},name:"Lao (Laos)",native_name:"\u0EA5\u0EB2\u0EA7 (\u0EAA.\u0E9B.\u0E9B\u0EB0\u0E8A\u0EB2\u0E97\u0EB4\u0E9B\u0EB0\u0EC4\u0E95)",rtl:!1},fS={id:e.Latvian,language:{code:E.Latvian,name:"Latvian",native:"Latvie\u0161u"},name:"Latvian",native_name:"Latvie\u0161u",rtl:!1},gS={country:{code:g.Latvia,name:"Latvia",native:"Latvija"},id:e.LatvianLatvia,language:{code:E.Latvian,name:"Latvian",native:"Latvie\u0161u"},name:"Latvian (Latvia)",native_name:"Latvie\u0161u (Latvija)",rtl:!1},hS={id:e.Lithuanian,language:{code:E.Lithuanian,name:"Lithuanian",native:"Lietuvi\u0173"},name:"Lithuanian",native_name:"Lietuvi\u0173",rtl:!1},_S={country:{code:g.Lithuania,name:"Lithuania",native:"Lietuva"},id:e.LithuanianLithuania,language:{code:E.Lithuanian,name:"Lithuanian",native:"Lietuvi\u0173"},name:"Lithuanian (Lithuania)",native_name:"Lietuvi\u0173 (Lietuva)",rtl:!1},IS={id:e.Luxembourgish,language:{code:E.Luxembourgish,name:"Luxembourgish",native:"L\xEBtzebuergesch"},name:"Luxembourgish",native_name:"L\xEBtzebuergesch",rtl:!1},pS={country:{code:g.Belgium,name:"Belgium",native:"Belgi\xEB"},id:e.LuxembourgishBelgium,language:{code:E.Luxembourgish,name:"Luxembourgish",native:"L\xEBtzebuergesch"},name:"Luxembourgish (Belgium)",native_name:"L\xEBtzebuergesch (Belgi\xEB)",rtl:!1},SS={country:{code:g.Luxembourg,name:"Luxembourg",native:"Luxembourg"},id:e.LuxembourgishLuxembourg,language:{code:E.Luxembourgish,name:"Luxembourgish",native:"L\xEBtzebuergesch"},name:"Luxembourgish (Luxembourg)",native_name:"L\xEBtzebuergesch (Luxembourg)",rtl:!1},ES={id:e.Macedonian,language:{code:E.Macedonian,name:"Macedonian",native:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438"},name:"Macedonian",native_name:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438",rtl:!1},TS={country:{code:g.NorthMacedonia,name:"Macedonia",native:"\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430"},id:e.MacedonianNorthMacedonia,language:{code:E.Macedonian,name:"Macedonian",native:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438"},name:"Macedonian (North Macedonia)",native_name:"\u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0441\u043A\u0438 (\u0421\u0435\u0432\u0435\u0440\u043D\u0430 \u041C\u0430\u043A\u0435\u0434\u043E\u043D\u0438\u0458\u0430)",rtl:!1},vS={id:e.Malay,language:{code:E.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay",native_name:"Bahasa Melayu",rtl:!1},bS={country:{code:g.Brunei,name:"Brunei",native:"Negara Brunei Darussalam"},id:e.MalayBrunei,language:{code:E.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (Brunei)",native_name:"Bahasa Melayu (Negara Brunei Darussalam)",rtl:!1},US={country:{code:g.Malaysia,name:"Malaysia",native:"Malaysia"},id:e.MalayMalaysia,language:{code:E.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (Malaysia)",native_name:"Bahasa Melayu (Malaysia)",rtl:!1},NS={country:{code:g.Singapore,name:"Singapore",native:"Singapore"},id:e.MalaySingapore,language:{code:E.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (Singapore)",native_name:"Bahasa Melayu (Singapore)",rtl:!1},BS={country:{code:g.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.MalayIndia,language:{code:E.Malay,name:"Malay",native:"Bahasa Melayu"},name:"Malay (India)",native_name:"Bahasa Melayu (\u092D\u093E\u0930\u0924)",rtl:!1},PS={id:e.Maltese,language:{code:E.Maltese,name:"Maltese",native:"Malti"},name:"Maltese",native_name:"Malti",rtl:!1},yS={country:{code:g.Malta,name:"Malta",native:"Malta"},id:e.MalteseMalta,language:{code:E.Maltese,name:"Maltese",native:"Malti"},name:"Maltese (Malta)",native_name:"Malti (Malta)",rtl:!1},kS={id:e.Maori,language:{code:E.Maori,name:"Maori",native:"M\u0101ori"},name:"Maori",native_name:"M\u0101ori",rtl:!1},MS={country:{code:g.NewZealand,name:"New Zealand",native:"New Zealand"},id:e.MaoriNewZealand,language:{code:E.Maori,name:"Maori",native:"M\u0101ori"},name:"Maori (New Zealand)",native_name:"M\u0101ori (New Zealand)",rtl:!1},DS={id:e.Marathi,language:{code:E.Marathi,name:"Marathi",native:"\u092E\u0930\u093E\u0920\u0940"},name:"Marathi",native_name:"\u092E\u0930\u093E\u0920\u0940",rtl:!1},xS={country:{code:g.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.MarathiIndia,language:{code:E.Marathi,name:"Marathi",native:"\u092E\u0930\u093E\u0920\u0940"},name:"Marathi (India)",native_name:"\u092E\u0930\u093E\u0920\u0940 (\u092D\u093E\u0930\u0924)",rtl:!1},FS={id:e.Mongolian,language:{code:E.Mongolian,name:"Mongolian",native:"\u041C\u043E\u043D\u0433\u043E\u043B"},name:"Mongolian",native_name:"\u041C\u043E\u043D\u0433\u043E\u043B",rtl:!1},LS={country:{code:g.Mongolia,name:"Mongolia",native:"\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441"},id:e.MongolianMongolia,language:{code:E.Mongolian,name:"Mongolian",native:"\u041C\u043E\u043D\u0433\u043E\u043B"},name:"Mongolian (Mongolia)",native_name:"\u041C\u043E\u043D\u0433\u043E\u043B (\u041C\u043E\u043D\u0433\u043E\u043B \u0443\u043B\u0441)",rtl:!1},wS={id:e.Montenegrin,language:{code:E.Montenegrin,name:"Montenegrin",native:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A"},name:"Montenegrin",native_name:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A",rtl:!1},GS={country:{code:g.Montenegro,name:"Montenegro",native:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A"},id:e.MontenegrinMontenegro,language:{code:E.Montenegrin,name:"Montenegrin",native:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A"},name:"Montenegrin (Montenegro)",native_name:"\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A (\u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430\u043A)",rtl:!1},qS={id:e.Nepali,language:{code:E.Nepali,name:"Nepali",native:"\u0928\u0947\u092A\u093E\u0932\u0940"},name:"Nepali",native_name:"\u0928\u0947\u092A\u093E\u0932\u0940",rtl:!1},KS={country:{code:g.Nepal,name:"Nepal",native:"\u0928\u0947\u092A\u093E\u0932"},id:e.NepaliNepal,language:{code:E.Nepali,name:"Nepali",native:"\u0928\u0947\u092A\u093E\u0932\u0940"},name:"Nepali (Nepal)",native_name:"\u0928\u0947\u092A\u093E\u0932\u0940 (\u0928\u0947\u092A\u093E\u0932)",rtl:!1},OS={id:e.NorthernSotho,language:{code:E.NorthernSotho,name:"Northern Sotho",native:"Sesotho sa Leboa"},name:"Northern Sotho",native_name:"Sesotho sa Leboa",rtl:!1},jS={country:{code:g.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.NorthernSothoSouthAfrica,language:{code:E.NorthernSotho,name:"Northern Sotho",native:"Sesotho sa Leboa"},name:"Northern Sotho (South Africa)",native_name:"Sesotho sa Leboa (South Africa)",rtl:!1},HS={id:e.Norwegian,language:{code:E.Norwegian,name:"Norwegian",native:"Norsk"},name:"Norwegian",native_name:"Norsk",rtl:!1},WS={country:{code:g.Norway,name:"Norway",native:"Norge"},id:e.NorwegianBokmalNorway,language:{code:E.NorwegianBokmal,name:"Norwegian",native:"Norsk"},name:"Norwegian (Bokmal)",native_name:"Norsk (Bokm\xE5l)",rtl:!1},zS={country:{code:g.Norway,name:"Norway",native:"Norge"},id:e.NorwegianNynorskNorway,language:{code:E.NorwegianNynorsk,name:"Norwegian",native:"Norsk"},name:"Norwegian (Nynorsk)",native_name:"Norsk (Nynorsk)",rtl:!1},VS={id:e.Oriya,language:{code:E.Oriya,name:"Oriya",native:"\u0B13\u0B21\u0B3C\u0B3F\u0B06"},name:"Oriya",native_name:"\u0B13\u0B21\u0B3C\u0B3F\u0B06",rtl:!1},RS={country:{code:g.India,name:"India",native:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"},id:e.OriyaIndia,language:{code:E.Oriya,name:"Oriya",native:"\u0B13\u0B21\u0B3C\u0B3F\u0B06"},name:"Oriya (India)",native_name:"\u0B13\u0B21\u0B3C\u0B3F\u0B06 (\u0B2D\u0B3E\u0B30\u0B24)",rtl:!1},YS={id:e.Pashto,language:{code:E.Pashto,name:"Pashto",native:"\u067E\u069A\u062A\u0648"},name:"Pashto",native_name:"\u067E\u069A\u062A\u0648",rtl:!0},JS={country:{code:g.Afghanistan,name:"Afghanistan",native:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},id:e.PashtoAfghanistan,language:{code:E.Pashto,name:"Pashto",native:"\u067E\u069A\u062A\u0648"},name:"Pashto (Afghanistan)",native_name:"\u067E\u069A\u062A\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)",rtl:!0},ZS={id:e.Persian,language:{code:E.Persian,name:"Persian",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Persian",native_name:"\u0641\u0627\u0631\u0633\u06CC",rtl:!0},$S={country:{code:g.Iran,name:"Iran",native:"\u0627\u06CC\u0631\u0627\u0646"},id:e.PersianIran,language:{code:E.Persian,name:"Persian",native:"\u0641\u0627\u0631\u0633\u06CC"},name:"Persian (Iran)",native_name:"\u0641\u0627\u0631\u0633\u06CC (\u0627\u06CC\u0631\u0627\u0646)",rtl:!0},QS={id:e.Polish,language:{code:E.Polish,name:"Polish",native:"Polski"},name:"Polish",native_name:"Polski",rtl:!1},XS={country:{code:g.Poland,name:"Poland",native:"Polska"},id:e.PolishPoland,language:{code:E.Polish,name:"Polish",native:"Polski"},name:"Polish (Poland)",native_name:"Polski (Polska)",rtl:!1},CS={id:e.Portuguese,language:{code:E.Portuguese,name:"Portuguese",native:"Portugu\xEAs"},name:"Portuguese",native_name:"Portugu\xEAs",rtl:!1},aE={country:{code:g.Brazil,name:"Brazil",native:"Brasil"},id:e.PortugueseBrazil,language:{code:E.Portuguese,name:"Portuguese",native:"Portugu\xEAs"},name:"Portuguese (Brazil)",native_name:"Portugu\xEAs (Brasil)",rtl:!1},eE={country:{code:g.Portugal,name:"Portugal",native:"Portugal"},id:e.PortuguesePortugal,language:{code:E.Portuguese,name:"Portuguese",native:"Portugu\xEAs"},name:"Portuguese (Portugal)",native_name:"Portugu\xEAs (Portugal)",rtl:!1},iE={id:e.Punjabi,language:{code:E.Punjabi,name:"Punjabi",native:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},name:"Punjabi",native_name:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40",rtl:!0},nE={country:{code:g.Pakistan,name:"Pakistan",native:"\u067E\u0627\u06A9\u0633\u062A\u0627\u0646"},id:e.PunjabiPakistan,language:{code:E.Punjabi,name:"Punjabi",native:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},name:"Punjabi (Pakistan)",native_name:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)",rtl:!0},sE={country:{code:g.India,name:"India",native:"\u0A2D\u0A3E\u0A30\u0A24"},id:e.PunjabiIndia,language:{code:E.Punjabi,name:"Punjabi",native:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40"},name:"Punjabi (India)",native_name:"\u0A2A\u0A70\u0A1C\u0A3E\u0A2C\u0A40 (\u0A2D\u0A3E\u0A30\u0A24)",rtl:!0},rE={id:e.Quechua,language:{code:E.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua",native_name:"Runa Simi",rtl:!1},tE={country:{code:g.Bolivia,name:"Bolivia",native:"Bolivia"},id:e.QuechuaBolivia,language:{code:E.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua (Bolivia)",native_name:"Runa Simi (Bolivia)",rtl:!1},uE={country:{code:g.Ecuador,name:"Ecuador",native:"Ecuador"},id:e.QuechuaEcuador,language:{code:E.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua (Ecuador)",native_name:"Runa Simi (Ecuador)",rtl:!1},lE={country:{code:g.Peru,name:"Peru",native:"Per\xFA"},id:e.QuechuaPeru,language:{code:E.Quechua,name:"Quechua",native:"Runa Simi"},name:"Quechua (Peru)",native_name:"Runa Simi (Per\xFA)",rtl:!1},oE={id:e.Romanian,language:{code:E.Romanian,name:"Romanian",native:"Rom\xE2n\u0103"},name:"Romanian",native_name:"Rom\xE2n\u0103",rtl:!1},mE={country:{code:g.Romania,name:"Romania",native:"Rom\xE2nia"},id:e.RomanianRomania,language:{code:E.Romanian,name:"Romanian",native:"Rom\xE2n\u0103"},name:"Romanian (Romania)",native_name:"Rom\xE2n\u0103 (Rom\xE2nia)",rtl:!1},cE={id:e.Russian,language:{code:E.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439",rtl:!1},AE={country:{code:g.RussianFederation,name:"Russian Federation",native:"\u0420\u043E\u0441\u0441\u0438\u044F"},id:e.RussianRussia,language:{code:E.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Russia)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0420\u043E\u0441\u0441\u0438\u044F)",rtl:!1},dE={country:{code:g.Ukraine,name:"Ukraine",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0430"},id:e.RussianUkraine,language:{code:E.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Ukraine)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)",rtl:!1},fE={country:{code:g.Kazakhstan,name:"Kazakhstan",native:"\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D"},id:e.RussianKazakhstan,language:{code:E.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Kazakhstan)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u049A\u0430\u0437\u0430\u049B\u0441\u0442\u0430\u043D)",rtl:!1},gE={country:{code:g.Kyrgyzstan,name:"Kyrgyzstan",native:"\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430"},id:e.RussianKyrgyzstan,language:{code:E.Russian,name:"Russian",native:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439"},name:"Russian (Kyrgyzstan)",native_name:"\u0420\u0443\u0441\u0441\u043A\u0438\u0439 (\u041A\u044B\u0440\u0433\u044B\u0437\u0447\u0430)",rtl:!1},hE={id:e.Sanskrit,language:{code:E.Sanskrit,name:"Sanskrit",native:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D"},name:"Sanskrit",native_name:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D",rtl:!1},_E={country:{code:g.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.SanskritIndia,language:{code:E.Sanskrit,name:"Sanskrit",native:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D"},name:"Sanskrit (India)",native_name:"\u0938\u0902\u0938\u094D\u0915\u0943\u0924\u092E\u094D (\u092D\u093E\u0930\u0924)",rtl:!1},IE={id:e.Sami,language:{code:E.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami",native_name:"S\xE1megiella",rtl:!1},pE={country:{code:g.Finland,name:"Finland",native:"Suomi"},id:e.SamiFinland,language:{code:E.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami (Finland)",native_name:"S\xE1megiella (Suomi)",rtl:!1},SE={country:{code:g.Norway,name:"Norway",native:"Norge"},id:e.SamiNorway,language:{code:E.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami (Norway)",native_name:"S\xE1megiella (Norge)",rtl:!1},EE={country:{code:g.Sweden,name:"Sweden",native:"Sverige"},id:e.SamiSweden,language:{code:E.Sami,name:"Sami",native:"S\xE1megiella"},name:"Sami (Sweden)",native_name:"S\xE1megiella (Sverige)",rtl:!1},TE={id:e.Samoan,language:{code:E.Samoan,name:"Samoan",native:"Gagana fa\u2019a S\u0101moa"},name:"Samoan",native_name:"Gagana fa\u2019a S\u0101moa",rtl:!1},vE={country:{code:g.Samoa,name:"Samoa",native:"Samoa"},id:e.SamoanSamoa,language:{code:E.Samoan,name:"Samoan",native:"Gagana fa\u2019a S\u0101moa"},name:"Samoan (Samoa)",native_name:"Gagana fa\u2019a S\u0101moa (Samoa)",rtl:!1},bE={id:e.Serbian,language:{code:E.Serbian,name:"Serbian (Latin)",native:"Srpski (Latinica)"},name:"Serbian (Latin)",native_name:"Srpski (Latinica)",rtl:!1},UE={country:{code:g.BosniaAndHerzegovina,name:"Bosnia and Herzegovina",native:"Bosna i Hercegovina"},id:e.SerbianBosniaAndHerzegovina,language:{code:E.Serbian,name:"Serbian (Latin)",native:"Srpski (Latinica)"},name:"Serbian (Latin) (Bosnia and Herzegovina)",native_name:"Srpski (Latinica) (Bosna i Hercegovina)",rtl:!1},NE={country:{code:g.SerbiaAndMontenegro,name:"Serbia and Montenegro",native:"Srbija i Crna Gora"},id:e.SerbianSerbiaAndMontenegro,language:{code:E.Serbian,name:"Serbian (Latin)",native:"Srpski (Latinica)"},name:"Serbian (Latin) (Serbia and Montenegro)",native_name:"Srpski (Latinica) (Srbija i Crna Gora)",rtl:!1},BE={id:e.SerbianCyrillic,language:{code:E.SerbianCyrillic,name:"Serbian",native:"\u0421\u0440\u043F\u0441\u043A\u0438"},name:"Serbian (Cyrillic)",native_name:"\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430)",rtl:!1},PE={country:{code:g.BosniaAndHerzegovina,name:"Bosnia and Herzegovina",native:"\u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430"},id:e.SerbianCyrillicBosniaAndHerzegovina,language:{code:E.SerbianCyrillic,name:"Serbian",native:"\u0421\u0440\u043F\u0441\u043A\u0438"},name:"Serbian (Cyrillic, Bosnia and Herzegovina)",native_name:"\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0411\u043E\u0441\u043D\u0430 \u0438 \u0425\u0435\u0440\u0446\u0435\u0433\u043E\u0432\u0438\u043D\u0430)",rtl:!1},yE={country:{code:g.SerbiaAndMontenegro,name:"Serbia and Montenegro",native:"\u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430"},id:e.SerbianCyrillicSerbiaAndMontenegro,language:{code:E.SerbianCyrillic,name:"Serbian",native:"\u0421\u0440\u043F\u0441\u043A\u0438"},name:"Serbian (Cyrillic, Serbia and Montenegro)",native_name:"\u0421\u0440\u043F\u0441\u043A\u0438 (\u040B\u0438\u0440\u0438\u043B\u0438\u0446\u0430, \u0421\u0440\u0431\u0438\u0458\u0430 \u0438 \u0426\u0440\u043D\u0430 \u0413\u043E\u0440\u0430)",rtl:!1},kE={id:e.Slovak,language:{code:E.Slovak,name:"Slovak",native:"Sloven\u010Dina"},name:"Slovak",native_name:"Sloven\u010Dina",rtl:!1},ME={country:{code:g.Slovakia,name:"Slovakia",native:"Slovensko"},id:e.SlovakSlovakia,language:{code:E.Slovak,name:"Slovak",native:"Sloven\u010Dina"},name:"Slovak (Slovakia)",native_name:"Sloven\u010Dina (Slovensko)",rtl:!1},DE={id:e.Slovenian,language:{code:E.Slovenian,name:"Slovenian",native:"Sloven\u0161\u010Dina"},name:"Slovenian",native_name:"Sloven\u0161\u010Dina",rtl:!1},xE={country:{code:g.Slovenia,name:"Slovenia",native:"Slovenija"},id:e.SlovenianSlovenia,language:{code:E.Slovenian,name:"Slovenian",native:"Sloven\u0161\u010Dina"},name:"Slovenian (Slovenia)",native_name:"Sloven\u0161\u010Dina (Slovenija)",rtl:!1},FE={id:e.Somali,language:{code:E.Somali,name:"Somali",native:"Soomaaliga"},name:"Somali",native_name:"Soomaaliga",rtl:!0},LE={country:{code:g.Somalia,name:"Somalia",native:"Soomaaliya"},id:e.SomaliSomalia,language:{code:E.Somali,name:"Somali",native:"Soomaaliga"},name:"Somali (Somalia)",native_name:"Soomaaliga (Soomaaliya)",rtl:!0},wE={id:e.Spanish,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish",native_name:"Espa\xF1ol",rtl:!1},GE={country:{code:g.Argentina,name:"Argentina",native:"Argentina"},id:e.SpanishArgentina,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Argentina)",native_name:"Espa\xF1ol (Argentina)",rtl:!1},qE={country:{code:g.Bolivia,name:"Bolivia",native:"Bolivia"},id:e.SpanishBolivia,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Bolivia)",native_name:"Espa\xF1ol (Bolivia)",rtl:!1},KE={country:{code:g.Chile,name:"Chile",native:"Chile"},id:e.SpanishChile,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Chile)",native_name:"Espa\xF1ol (Chile)",rtl:!1},OE={country:{code:g.Colombia,name:"Colombia",native:"Colombia"},id:e.SpanishColombia,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Colombia)",native_name:"Espa\xF1ol (Colombia)",rtl:!1},jE={country:{code:g.CostaRica,name:"Costa Rica",native:"Costa Rica"},id:e.SpanishCostaRica,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Costa Rica)",native_name:"Espa\xF1ol (Costa Rica)",rtl:!1},HE={country:{code:g.Cuba,name:"Cuba",native:"Cuba"},id:e.SpanishCuba,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Cuba)",native_name:"Espa\xF1ol (Cuba)",rtl:!1},WE={country:{code:g.DominicanRepublic,name:"Dominican Republic",native:"Rep\xFAblica Dominicana"},id:e.SpanishDominicanRepublic,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Dominican Republic)",native_name:"Espa\xF1ol (Rep\xFAblica Dominicana)",rtl:!1},zE={country:{code:g.Ecuador,name:"Ecuador",native:"Ecuador"},id:e.SpanishEcuador,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Ecuador)",native_name:"Espa\xF1ol (Ecuador)",rtl:!1},VE={country:{code:g.ElSalvador,name:"El Salvador",native:"El Salvador"},id:e.SpanishElSalvador,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (El Salvador)",native_name:"Espa\xF1ol (El Salvador)",rtl:!1},RE={country:{code:g.EquatorialGuinea,name:"Equatorial Guinea",native:"Guinea Ecuatorial"},id:e.SpanishEquatorialGuinea,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Equatorial Guinea)",native_name:"Espa\xF1ol (Guinea Ecuatorial)",rtl:!1},YE={country:{code:g.Guatemala,name:"Guatemala",native:"Guatemala"},id:e.SpanishGuatemala,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Guatemala)",native_name:"Espa\xF1ol (Guatemala)",rtl:!1},JE={country:{code:g.Honduras,name:"Honduras",native:"Honduras"},id:e.SpanishHonduras,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Honduras)",native_name:"Espa\xF1ol (Honduras)",rtl:!1},ZE={country:{code:g.Mexico,name:"Mexico",native:"M\xE9xico"},id:e.SpanishMexico,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Mexico)",native_name:"Espa\xF1ol (M\xE9xico)",rtl:!1},$E={country:{code:g.Nicaragua,name:"Nicaragua",native:"Nicaragua"},id:e.SpanishNicaragua,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Nicaragua)",native_name:"Espa\xF1ol (Nicaragua)",rtl:!1},QE={country:{code:g.Panama,name:"Panama",native:"Panam\xE1"},id:e.SpanishPanama,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Panama)",native_name:"Espa\xF1ol (Panam\xE1)",rtl:!1},XE={country:{code:g.Paraguay,name:"Paraguay",native:"Paraguay"},id:e.SpanishParaguay,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Paraguay)",native_name:"Espa\xF1ol (Paraguay)",rtl:!1},CE={country:{code:g.Peru,name:"Peru",native:"Per\xFA"},id:e.SpanishPeru,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Peru)",native_name:"Espa\xF1ol (Per\xFA)",rtl:!1},aT={country:{code:g.PuertoRico,name:"Puerto Rico",native:"Puerto Rico"},id:e.SpanishPuertoRico,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Puerto Rico)",native_name:"Espa\xF1ol (Puerto Rico)",rtl:!1},eT={country:{code:g.Uruguay,name:"Uruguay",native:"Uruguay"},id:e.SpanishUruguay,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Uruguay)",native_name:"Espa\xF1ol (Uruguay)",rtl:!1},iT={country:{code:g.Venezuela,name:"Venezuela",native:"Venezuela"},id:e.SpanishVenezuela,language:{code:E.Spanish,name:"Spanish",native:"Espa\xF1ol"},name:"Spanish (Venezuela)",native_name:"Espa\xF1ol (Venezuela)",rtl:!1},nT={country:{code:g.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.SutuSouthAfrica,language:{code:E.Sutu,name:"Sutu",native:"Sesotho"},name:"Sutu (South Africa)",native_name:"Sesotho (Afrika Borwa)",rtl:!1},sT={id:e.Swahili,language:{code:E.Swahili,name:"Swahili",native:"Kiswahili"},name:"Swahili",native_name:"Kiswahili",rtl:!1},rT={country:{code:g.Kenya,name:"Kenya",native:"Kenya"},id:e.SwahiliKenya,language:{code:E.Swahili,name:"Swahili",native:"Kiswahili"},name:"Swahili (Kenya)",native_name:"Kiswahili (Kenya)",rtl:!1},tT={id:e.Swedish,language:{code:E.Swedish,name:"Swedish",native:"Svenska"},name:"Swedish",native_name:"Svenska",rtl:!1},uT={country:{code:g.Finland,name:"Finland",native:"Suomi"},id:e.SwedishFinland,language:{code:E.Swedish,name:"Swedish",native:"Svenska"},name:"Swedish (Finland)",native_name:"Svenska (Finland)",rtl:!1},lT={country:{code:g.Sweden,name:"Sweden",native:"Sverige"},id:e.SwedishSweden,language:{code:E.Swedish,name:"Swedish",native:"Svenska"},name:"Swedish (Sweden)",native_name:"Svenska (Sverige)",rtl:!1},oT={id:e.Syriac,language:{code:E.Syriac,name:"Syriac",native:"\u0723\u0718\u072A\u071D\u071D\u0710"},name:"Syriac",native_name:"\u0723\u0718\u072A\u071D\u071D\u0710",rtl:!0},mT={country:{code:g.Syria,name:"Syria",native:"\u0633\u0648\u0631\u064A\u0627"},id:e.SyriacSyria,language:{code:E.Syriac,name:"Syriac",native:"\u0723\u0718\u072A\u071D\u071D\u0710"},name:"Syriac (Syria)",native_name:"\u0723\u0718\u072A\u071D\u071D\u0710 (\u0633\u0648\u0631\u064A\u0627)",rtl:!0},cT={id:e.Tajik,language:{code:E.Tajik,name:"Tajik",native:"\u0422\u043E\u04B7\u0438\u043A\u04E3"},name:"Tajik",native_name:"\u0422\u043E\u04B7\u0438\u043A\u04E3",rtl:!1},AT={country:{code:g.Tajikistan,name:"Tajikistan",native:"\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D"},id:e.TajikTajikistan,language:{code:E.Tajik,name:"Tajik",native:"\u0422\u043E\u04B7\u0438\u043A\u04E3"},name:"Tajik (Tajikistan)",native_name:"\u0422\u043E\u04B7\u0438\u043A\u04E3 (\u0422\u043E\u04B7\u0438\u043A\u0438\u0441\u0442\u043E\u043D)",rtl:!1},dT={id:e.Tagalog,language:{code:E.Tagalog,name:"Tagalog",native:"Tagalog"},name:"Tagalog",native_name:"Tagalog",rtl:!1},fT={country:{code:g.Philippines,name:"Philippines",native:"Pilipinas"},id:e.TagalogPhilippines,language:{code:E.Tagalog,name:"Tagalog",native:"Tagalog"},name:"Tagalog (Philippines)",native_name:"Tagalog (Pilipinas)",rtl:!1},gT={id:e.Tamil,language:{code:E.Tamil,name:"Tamil",native:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD"},name:"Tamil",native_name:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD",rtl:!1},hT={country:{code:g.India,name:"India",native:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"},id:e.TamilIndia,language:{code:E.Tamil,name:"Tamil",native:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD"},name:"Tamil (India)",native_name:"\u0BA4\u0BAE\u0BBF\u0BB4\u0BCD (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)",rtl:!1},_T={id:e.Telugu,language:{code:E.Telugu,name:"Telugu",native:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41"},name:"Telugu",native_name:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41",rtl:!1},IT={country:{code:g.India,name:"India",native:"\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02"},id:e.TeluguIndia,language:{code:E.Telugu,name:"Telugu",native:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41"},name:"Telugu (India)",native_name:"\u0C24\u0C46\u0C32\u0C41\u0C17\u0C41 (\u0C2D\u0C3E\u0C30\u0C24\u0C26\u0C47\u0C36\u0C02)",rtl:!1},pT={id:e.Thai,language:{code:E.Thai,name:"Thai",native:"\u0E44\u0E17\u0E22"},name:"Thai",native_name:"\u0E44\u0E17\u0E22",rtl:!1},ST={country:{code:g.Thailand,name:"Thailand",native:"\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22"},id:e.ThaiThailand,language:{code:E.Thai,name:"Thai",native:"\u0E44\u0E17\u0E22"},name:"Thai (Thailand)",native_name:"\u0E44\u0E17\u0E22 (\u0E1B\u0E23\u0E30\u0E40\u0E17\u0E28\u0E44\u0E17\u0E22)",rtl:!1},ET={id:e.Tibetan,language:{code:E.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42",rtl:!1},TT={country:{code:g.China,name:"China",native:"\u4E2D\u56FD"},id:e.TibetanChina,language:{code:E.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan (China)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F62\u0F92\u0FB1\u0F0B\u0F53\u0F42)",rtl:!1},vT={country:{code:g.Bhutan,name:"Bhutan",native:"\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D"},id:e.TibetanBhutan,language:{code:E.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan (Bhutan)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0F60\u0F56\u0FB2\u0F74\u0F42\u0F0B\u0F61\u0F74\u0F63\u0F0B\u0F66\u0FA4\u0FB1\u0F72\u0F0B\u0F63\u0F7A\u0F53\u0F4C\u0F0D)",rtl:!1},bT={country:{code:g.India,name:"India",native:"\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE"},id:e.TibetanIndia,language:{code:E.Tibetan,name:"Tibetan",native:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42"},name:"Tibetan (India)",native_name:"\u0F56\u0F7C\u0F51\u0F0B\u0F61\u0F72\u0F42 (\u0B87\u0BA8\u0BCD\u0BA4\u0BBF\u0BAF\u0BBE)",rtl:!1},UT={id:e.Tsonga,language:{code:E.Tsonga,name:"Tsonga",native:"Xitsonga"},name:"Tsonga",native_name:"Xitsonga",rtl:!1},NT={id:e.Tswana,language:{code:E.Tswana,name:"Tswana",native:"Setswana"},name:"Tswana",native_name:"Setswana",rtl:!1},BT={country:{code:g.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.TswanaSouthAfrica,language:{code:E.Tswana,name:"Tswana",native:"Setswana"},name:"Tswana (South Africa)",native_name:"Setswana (South Africa)",rtl:!1},PT={id:e.Turkish,language:{code:E.Turkish,name:"Turkish",native:"T\xFCrk\xE7e"},name:"Turkish",native_name:"T\xFCrk\xE7e",rtl:!1},yT={country:{code:g.Turkey,name:"Turkey",native:"T\xFCrkiye"},id:e.TurkishTurkey,language:{code:E.Turkish,name:"Turkish",native:"T\xFCrk\xE7e"},name:"Turkish (Turkey)",native_name:"T\xFCrk\xE7e (T\xFCrkiye)",rtl:!1},kT={id:e.Ukrainian,language:{code:E.Ukrainian,name:"Ukrainian",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430"},name:"Ukrainian",native_name:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430",rtl:!1},MT={country:{code:g.Ukraine,name:"Ukraine",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0430"},id:e.UkrainianUkraine,language:{code:E.Ukrainian,name:"Ukrainian",native:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430"},name:"Ukrainian (Ukraine)",native_name:"\u0423\u043A\u0440\u0430\u0457\u043D\u0441\u044C\u043A\u0430 (\u0423\u043A\u0440\u0430\u0457\u043D\u0430)",rtl:!1},DT={id:e.Urdu,language:{code:E.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu",native_name:"\u0627\u0631\u062F\u0648",rtl:!0},xT={country:{code:g.Afghanistan,name:"Afghanistan",native:"\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646"},id:e.UrduAfghanistan,language:{code:E.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu (Afghanistan)",native_name:"\u0627\u0631\u062F\u0648 (\u0627\u0641\u063A\u0627\u0646\u0633\u062A\u0627\u0646)",rtl:!0},FT={country:{code:g.India,name:"India",native:"\u092D\u093E\u0930\u0924"},id:e.UrduIndia,language:{code:E.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu (India)",native_name:"\u0627\u0631\u062F\u0648 (\u092D\u093E\u0930\u0924)",rtl:!0},LT={country:{code:g.Pakistan,name:"Pakistan",native:"\u067E\u0627\u06A9\u0633\u062A\u0627\u0646"},id:e.UrduPakistan,language:{code:E.Urdu,name:"Urdu",native:"\u0627\u0631\u062F\u0648"},name:"Urdu (Pakistan)",native_name:"\u0627\u0631\u062F\u0648 (\u067E\u0627\u06A9\u0633\u062A\u0627\u0646)",rtl:!0},wT={id:e.Uzbek,language:{code:E.Uzbek,name:"Uzbek",native:"O\u02BBzbekcha"},name:"Uzbek",native_name:"O\u02BBzbekcha",rtl:!1},GT={country:{code:g.Uzbekistan,name:"Uzbekistan",native:"O\u02BBzbekiston"},id:e.UzbekUzbekistan,language:{code:E.Uzbek,name:"Uzbek",native:"O\u02BBzbekcha"},name:"Uzbek (Latin, Uzbekistan)",native_name:"O\u02BBzbekcha (O\u02BBzbekiston)",rtl:!1},qT={country:{code:g.Uzbekistan,name:"Uzbekistan",native:"\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D"},id:e.UzbekCyrillic,language:{code:E.Uzbek,name:"Uzbek",native:"\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D"},name:"Uzbek (Cyrillic)",native_name:"\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D (\u040E\u0437\u0431\u0435\u043A\u0438\u0441\u0442\u043E\u043D)",rtl:!1},KT={id:e.Vietnamese,language:{code:E.Vietnamese,name:"Vietnamese",native:"Ti\u1EBFng Vi\u1EC7t"},name:"Vietnamese",native_name:"Ti\u1EBFng Vi\u1EC7t",rtl:!1},OT={country:{code:g.Vietnam,name:"Vietnam",native:"Vi\u1EC7t Nam"},id:e.VietnameseVietnam,language:{code:E.Vietnamese,name:"Vietnamese",native:"Ti\u1EBFng Vi\u1EC7t"},name:"Vietnamese (Vietnam)",native_name:"Ti\u1EBFng Vi\u1EC7t (Vi\u1EC7t Nam)",rtl:!1},jT={id:e.Welsh,language:{code:E.Welsh,name:"Welsh",native:"Cymraeg"},name:"Welsh",native_name:"Cymraeg",rtl:!1},HT={country:{code:g.UnitedKingdom,name:"United Kingdom",native:"United Kingdom"},id:e.WelshUnitedKingdom,language:{code:E.Welsh,name:"Welsh",native:"Cymraeg"},name:"Welsh (United Kingdom)",native_name:"Cymraeg (United Kingdom)",rtl:!1},WT={id:e.Xhosa,language:{code:E.Xhosa,name:"Xhosa",native:"isiXhosa"},name:"Xhosa",native_name:"isiXhosa",rtl:!1},zT={country:{code:g.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.XhosaSouthAfrica,language:{code:E.Xhosa,name:"Xhosa",native:"isiXhosa"},name:"Xhosa (South Africa)",native_name:"isiXhosa (South Africa)",rtl:!1},VT={id:e.Yiddish,language:{code:E.Yiddish,name:"Yiddish",native:"\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9"},name:"Yiddish",native_name:"\u05D9\u05D9\u05B4\u05D3\u05D9\u05E9",rtl:!1},RT={id:e.Yoruba,language:{code:E.Yoruba,name:"Yoruba",native:"Yor\xF9b\xE1"},name:"Yoruba",native_name:"Yor\xF9b\xE1",rtl:!1},YT={country:{code:g.Nigeria,name:"Nigeria",native:"Nigeria"},id:e.YorubaNigeria,language:{code:E.Yoruba,name:"Yoruba",native:"Yor\xF9b\xE1"},name:"Yoruba (Nigeria)",native_name:"Yor\xF9b\xE1 (Nigeria)",rtl:!1},JT={id:e.Zulu,language:{code:E.Zulu,name:"Zulu",native:"isiZulu"},name:"Zulu",native_name:"isiZulu",rtl:!1},ZT={country:{code:g.SouthAfrica,name:"South Africa",native:"South Africa"},id:e.ZuluSouthAfrica,language:{code:E.Zulu,name:"Zulu",native:"isiZulu"},name:"Zulu (South Africa)",native_name:"isiZulu (South Africa)",rtl:!1};var a4={id:A.AfricaAbidjan,name:"Africa/Abidjan",offset:t.UTC_0,timezone:u.CoordinatedUniversalTime},e4={id:A.AfricaAccra,name:"Africa/Accra",offset:t.UTC_0,timezone:u.CoordinatedUniversalTime},i4={id:A.AfricaAddisAbaba,name:"Africa/Addis_Ababa",offset:t.UTC_PLUS_3,timezone:u.EastAfricaTime},n4={id:A.AfricaAlgiers,name:"Africa/Algiers",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},s4={id:A.AfricaAsmara,name:"Africa/Asmara",offset:t.UTC_PLUS_3,timezone:u.EastAfricaTime},r4={id:A.AfricaBamako,name:"Africa/Bamako",offset:t.UTC_0,timezone:u.CoordinatedUniversalTime},t4={id:A.AfricaBangui,name:"Africa/Bangui",offset:t.UTC_PLUS_1,timezone:u.WestAfricaTime},u4={id:A.AfricaBanjul,name:"Africa/Banjul",offset:t.UTC_0,timezone:u.CoordinatedUniversalTime},l4={id:A.AfricaBissau,name:"Africa/Bissau",offset:t.UTC_0,timezone:u.CoordinatedUniversalTime},o4={id:A.AfricaBlantyre,name:"Africa/Blantyre",offset:t.UTC_PLUS_2,timezone:u.CentralAfricaTime},m4={id:A.AfricaBrazzaville,name:"Africa/Brazzaville",offset:t.UTC_PLUS_1,timezone:u.WestAfricaTime},c4={id:A.AfricaBujumbura,name:"Africa/Bujumbura",offset:t.UTC_PLUS_2,timezone:u.CentralAfricaTime},A4={id:A.AfricaCairo,name:"Africa/Cairo",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},d4={id:A.AfricaCasablanca,name:"Africa/Casablanca",offset:t.UTC_PLUS_1,timezone:u.WesternEuropeanTime},f4={id:A.AfricaCeuta,name:"Africa/Ceuta",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},g4={id:A.AfricaConakry,name:"Africa/Conakry",offset:t.UTC_0,timezone:u.CoordinatedUniversalTime},h4={id:A.AfricaDakar,name:"Africa/Dakar",offset:t.UTC_0,timezone:u.CoordinatedUniversalTime},_4={id:A.AfricaDarEsSalaam,name:"Africa/Dar_es_Salaam",offset:t.UTC_PLUS_3,timezone:u.EastAfricaTime},I4={id:A.AfricaDjibouti,name:"Africa/Djibouti",offset:t.UTC_PLUS_3,timezone:u.EastAfricaTime},p4={id:A.AfricaDouala,name:"Africa/Douala",offset:t.UTC_PLUS_1,timezone:u.WestAfricaTime},S4={id:A.AfricaElAaiun,name:"Africa/El_Aaiun",offset:t.UTC_PLUS_1,timezone:u.WestAfricaTime},E4={id:A.AfricaFreetown,name:"Africa/Freetown",offset:t.UTC_0,timezone:u.CoordinatedUniversalTime},T4={id:A.AfricaGaborone,name:"Africa/Gaborone",offset:t.UTC_PLUS_2,timezone:u.CentralAfricaTime},v4={id:A.AfricaHarare,name:"Africa/Harare",offset:t.UTC_PLUS_2,timezone:u.CentralAfricaTime},b4={id:A.AfricaJohannesburg,name:"Africa/Johannesburg",offset:t.UTC_PLUS_2,timezone:u.SouthAfricanStandardTime},U4={id:A.AfricaJuba,name:"Africa/Juba",offset:t.UTC_PLUS_3,timezone:u.EastAfricaTime},N4={id:A.AfricaKampala,name:"Africa/Kampala",offset:t.UTC_PLUS_3,timezone:u.EastAfricaTime},B4={id:A.AfricaKhartoum,name:"Africa/Khartoum",offset:t.UTC_PLUS_2,timezone:u.EastAfricaTime},P4={id:A.AfricaKigali,name:"Africa/Kigali",offset:t.UTC_PLUS_2,timezone:u.CentralAfricaTime},y4={id:A.AfricaKinshasa,name:"Africa/Kinshasa",offset:t.UTC_PLUS_1,timezone:u.WestAfricaTime},k4={id:A.AfricaLagos,name:"Africa/Lagos",offset:t.UTC_PLUS_1,timezone:u.WestAfricaTime},M4={id:A.AfricaLibreville,name:"Africa/Libreville",offset:t.UTC_PLUS_1,timezone:u.WestAfricaTime},D4={id:A.AfricaLome,name:"Africa/Lome",offset:t.UTC_0,timezone:u.CoordinatedUniversalTime},x4={id:A.AfricaLuanda,name:"Africa/Luanda",offset:t.UTC_PLUS_1,timezone:u.WestAfricaTime},F4={id:A.AfricaLubumbashi,name:"Africa/Lubumbashi",offset:t.UTC_PLUS_2,timezone:u.CentralAfricaTime},L4={id:A.AfricaLusaka,name:"Africa/Lusaka",offset:t.UTC_PLUS_2,timezone:u.CentralAfricaTime},w4={id:A.AfricaMalabo,name:"Africa/Malabo",offset:t.UTC_PLUS_1,timezone:u.WestAfricaTime},G4={id:A.AfricaMaputo,name:"Africa/Maputo",offset:t.UTC_PLUS_2,timezone:u.CentralAfricaTime},q4={id:A.AfricaMaseru,name:"Africa/Maseru",offset:t.UTC_PLUS_2,timezone:u.SouthAfricanStandardTime},K4={id:A.AfricaMbabane,name:"Africa/Mbabane",offset:t.UTC_PLUS_2,timezone:u.SouthAfricanStandardTime},O4={id:A.AfricaMogadishu,name:"Africa/Mogadishu",offset:t.UTC_PLUS_3,timezone:u.EastAfricaTime},j4={id:A.AfricaMonrovia,name:"Africa/Monrovia",offset:t.UTC_0,timezone:u.CoordinatedUniversalTime},H4={id:A.AfricaNairobi,name:"Africa/Nairobi",offset:t.UTC_PLUS_3,timezone:u.EastAfricaTime},W4={id:A.AfricaNdjamena,name:"Africa/Ndjamena",offset:t.UTC_PLUS_1,timezone:u.WestAfricaTime},z4={id:A.AfricaNiamey,name:"Africa/Niamey",offset:t.UTC_PLUS_1,timezone:u.WestAfricaTime},V4={id:A.AfricaNouakchott,name:"Africa/Nouakchott",offset:t.UTC_0,timezone:u.GreenwichMeanTime},R4={id:A.AfricaOuagadougou,name:"Africa/Ouagadougou",offset:t.UTC_0,timezone:u.CoordinatedUniversalTime},Y4={id:A.AfricaPortoNovo,name:"Africa/Porto-Novo",offset:t.UTC_PLUS_1,timezone:u.WestAfricaTime},J4={id:A.AfricaSaoTome,name:"Africa/SaoTome",offset:t.UTC_0,timezone:u.CoordinatedUniversalTime},Z4={id:A.AfricaTripoli,name:"Africa/Tripoli",offset:t.UTC_0,timezone:u.CoordinatedUniversalTime},$4={id:A.AfricaTunis,name:"Africa/Tunis",offset:t.UTC_0,timezone:u.CoordinatedUniversalTime},Q4={id:A.AfricaWindhoek,name:"Africa/Windhoek",offset:t.UTC_PLUS_2,timezone:u.WestAfricaTime},X4={id:A.AmericaAdak,name:"America/Adak",offset:t.UTC_PLUS_10,timezone:u.HawaiiAleutianStandardTime},C4={id:A.AmericaAnchorage,name:"America/Anchorage",offset:t.UTC_PLUS_9,timezone:u.AlaskaStandardTime},av={id:A.AmericaAnguilla,name:"America/Anguilla",offset:t.UTC_0,timezone:u.AtlanticStandardTime},ev={id:A.AmericaAntigua,name:"America/Antigua",offset:t.UTC_0,timezone:u.AtlanticStandardTime},iv={id:A.AmericaAraguaina,name:"America/Araguaina",offset:t.UTC_MINUS_3,timezone:u.BrasiliaTime},nv={id:A.AmericaArgentinaBuenosAires,name:"America/Argentina/Buenos_Aires",offset:t.UTC_MINUS_3,timezone:u.ArgentinaTime},sv={id:A.AmericaArgentinaCatamarca,name:"America/Argentina/Catamarca",offset:t.UTC_MINUS_3,timezone:u.ArgentinaTime},rv={id:A.AmericaArgentinaCordoba,name:"America/Argentina/Cordoba",offset:t.UTC_MINUS_3,timezone:u.ArgentinaTime},tv={id:A.AmericaArgentinaJujuy,name:"America/Argentina/Jujuy",offset:t.UTC_MINUS_3,timezone:u.ArgentinaTime},uv={id:A.AmericaArgentinaLaRioja,name:"America/Argentina/La_Rioja",offset:t.UTC_MINUS_3,timezone:u.ArgentinaTime},lv={id:A.AmericaArgentinaMendoza,name:"America/Argentina/Mendoza",offset:t.UTC_MINUS_3,timezone:u.ArgentinaTime},ov={id:A.AmericaArgentinaRioGallegos,name:"America/Argentina/Rio_Gallegos",offset:t.UTC_MINUS_3,timezone:u.ArgentinaTime},mv={id:A.AmericaArgentinaSalta,name:"America/Argentina/Salta",offset:t.UTC_MINUS_3,timezone:u.ArgentinaTime},cv={id:A.AmericaArgentinaSanJuan,name:"America/Argentina/San_Juan",offset:t.UTC_MINUS_3,timezone:u.ArgentinaTime},Av={id:A.AmericaArgentinaSanLuis,name:"America/Argentina/San_Luis",offset:t.UTC_MINUS_3,timezone:u.ArgentinaTime},dv={id:A.AmericaArgentinaTucuman,name:"America/Argentina/Tucuman",offset:t.UTC_MINUS_3,timezone:u.ArgentinaTime},fv={id:A.AmericaArgentinaUshuaia,name:"America/Argentina/Ushuaia",offset:t.UTC_MINUS_3,timezone:u.ArgentinaTime},gv={id:A.AmericaAruba,name:"America/Aruba",offset:t.UTC_0,timezone:u.AtlanticStandardTime},hv={id:A.AmericaAsuncion,name:"America/Asuncion",offset:t.UTC_MINUS_4,timezone:u.ParaguayTime},_v={id:A.AmericaAtikokan,name:"America/Atikokan",offset:t.UTC_0,timezone:u.EasternStandardTime},Iv={id:A.AmericaAtka,name:"America/Atka",offset:t.UTC_MINUS_10,timezone:u.HawaiiAleutianStandardTime},pv={id:A.AmericaBahia,name:"America/Bahia",offset:t.UTC_MINUS_3,timezone:u.BrasiliaTime},Sv={id:A.AmericaBahiaBanderas,name:"America/Bahia_Banderas",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},Ev={id:A.AmericaBarbados,name:"America/Barbados",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},Tv={id:A.AmericaBelem,name:"America/Belem",offset:t.UTC_MINUS_3,timezone:u.BrasiliaTime},vv={id:A.AmericaBelize,name:"America/Belize",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},bv={id:A.AmericaBlancSablon,name:"America/Blanc-Sablon",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},Uv={id:A.AmericaBoaVista,name:"America/Boa_Vista",offset:t.UTC_MINUS_4,timezone:u.AmazonTime},Nv={id:A.AmericaBogota,name:"America/Bogota",offset:t.UTC_MINUS_5,timezone:u.ColombiaTime},Bv={id:A.AmericaBoise,name:"America/Boise",offset:t.UTC_MINUS_7,timezone:u.MountainStandardTime},Pv={id:A.AmericaCambridgeBay,name:"America/Cambridge_Bay",offset:t.UTC_MINUS_7,timezone:u.MountainStandardTime},yv={id:A.AmericaCampoGrande,name:"America/Campo_Grande",offset:t.UTC_MINUS_4,timezone:u.AmazonTime},kv={id:A.AmericaCancun,name:"America/Cancun",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},Mv={id:A.AmericaCaracas,name:"America/Caracas",offset:t.UTC_MINUS_4,timezone:u.VenezuelaStandardTime},Dv={id:A.AmericaCayenne,name:"America/Cayenne",offset:t.UTC_MINUS_3,timezone:u.FrenchGuianaTime},xv={id:A.AmericaCayman,name:"America/Cayman",offset:t.UTC_0,timezone:u.AtlanticStandardTime},Fv={id:A.AmericaChicago,name:"America/Chicago",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},Lv={id:A.AmericaChihuahua,name:"America/Chihuahua",offset:t.UTC_MINUS_7,timezone:u.MountainStandardTime},wv={id:A.AmericaCoralHarbour,name:"America/Coral_Harbour",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},Gv={id:A.AmericaCordoba,name:"America/Cordoba",offset:t.UTC_MINUS_3,timezone:u.ArgentinaTime},qv={id:A.AmericaCostaRica,name:"America/Costa_Rica",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},Kv={id:A.AmericaCreston,name:"America/Creston",offset:t.UTC_MINUS_7,timezone:u.MountainStandardTime},Ov={id:A.AmericaCuiaba,name:"America/Cuiaba",offset:t.UTC_MINUS_4,timezone:u.AmazonTime},jv={id:A.AmericaCuracao,name:"America/Curacao",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},Hv={id:A.AmericaDanmarkshavn,name:"America/Danmarkshavn",offset:t.UTC_0,timezone:u.GreenwichMeanTime},Wv={id:A.AmericaDawson,name:"America/Dawson",offset:t.UTC_MINUS_8,timezone:u.PacificStandardTime},zv={id:A.AmericaDawsonCreek,name:"America/Dawson_Creek",offset:t.UTC_MINUS_8,timezone:u.PacificStandardTime},Vv={id:A.AmericaDenver,name:"America/Denver",offset:t.UTC_MINUS_7,timezone:u.MountainStandardTime},Rv={id:A.AmericaDetroit,name:"America/Detroit",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},Yv={id:A.AmericaDominica,name:"America/Dominica",offset:t.UTC_0,timezone:u.AtlanticStandardTime},Jv={id:A.AmericaEdmonton,name:"America/Edmonton",offset:t.UTC_MINUS_7,timezone:u.MountainStandardTime},Zv={id:A.AmericaEirunepe,name:"America/Eirunepe",offset:t.UTC_MINUS_5,timezone:u.AcreTime},$v={id:A.AmericaElSalvador,name:"America/El_Salvador",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},Qv={id:A.AmericaFortaleza,name:"America/Fortaleza",offset:t.UTC_MINUS_3,timezone:u.BrasiliaTime},Xv={id:A.AmericaGlaceBay,name:"America/Glace_Bay",offset:t.UTC_0,timezone:u.AtlanticStandardTime},Cv={id:A.AmericaGodthab,name:"America/Godthab",offset:t.UTC_MINUS_3,timezone:u.WestGreenlandTime},ab={id:A.AmericaGooseBay,name:"America/Goose_Bay",offset:t.UTC_0,timezone:u.AtlanticStandardTime},eb={id:A.AmericaGrandTurk,name:"America/Grand_Turk",offset:t.UTC_0,timezone:u.AtlanticStandardTime},ib={id:A.AmericaGrenada,name:"America/Grenada",offset:t.UTC_0,timezone:u.AtlanticStandardTime},nb={id:A.AmericaGuadeloupe,name:"America/Guadeloupe",offset:t.UTC_0,timezone:u.AtlanticStandardTime},sb={id:A.AmericaGuatemala,name:"America/Guatemala",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},rb={id:A.AmericaGuayaquil,name:"America/Guayaquil",offset:t.UTC_MINUS_5,timezone:u.EcuadorTime},tb={id:A.AmericaGuyana,name:"America/Guyana",offset:t.UTC_0,timezone:u.AtlanticStandardTime},ub={id:A.AmericaHalifax,name:"America/Halifax",offset:t.UTC_0,timezone:u.AtlanticStandardTime},lb={id:A.AmericaHavana,name:"America/Havana",offset:t.UTC_MINUS_5,timezone:u.CubaStandardTime},ob={id:A.AmericaHermosillo,name:"America/Hermosillo",offset:t.UTC_MINUS_7,timezone:u.MountainStandardTime},mb={id:A.AmericaIndianaIndianapolis,name:"America/Indiana/Indianapolis",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},cb={id:A.AmericaIndianaKnox,name:"America/Indiana/Knox",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},Ab={id:A.AmericaIndianaMarengo,name:"America/Indiana/Marengo",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},db={id:A.AmericaIndianaPetersburg,name:"America/Indiana/Petersburg",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},fb={id:A.AmericaIndianaTellCity,name:"America/Indiana/Tell_City",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},gb={id:A.AmericaIndianaVevay,name:"America/Indiana/Vevay",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},hb={id:A.AmericaIndianaVincennes,name:"America/Indiana/Vincennes",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},_b={id:A.AmericaIndianaWinamac,name:"America/Indiana/Winamac",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},Ib={id:A.AmericaInuvik,name:"America/Inuvik",offset:t.UTC_MINUS_7,timezone:u.MountainStandardTime},pb={id:A.AmericaIqaluit,name:"America/Iqaluit",offset:t.UTC_0,timezone:u.EasternStandardTime},Sb={id:A.AmericaJamaica,name:"America/Jamaica",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},Eb={id:A.AmericaJuneau,name:"America/Juneau",offset:t.UTC_MINUS_9,timezone:u.AlaskaStandardTime},Tb={id:A.AmericaKentuckyLouisville,name:"America/Kentucky/Louisville",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},vb={id:A.AmericaKentuckyMonticello,name:"America/Kentucky/Monticello",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},bb={id:A.AmericaKralendijk,name:"America/Kralendijk",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},Ub={id:A.AmericaLaPaz,name:"America/La_Paz",offset:t.UTC_MINUS_4,timezone:u.BoliviaTime},Nb={id:A.AmericaLima,name:"America/Lima",offset:t.UTC_MINUS_5,timezone:u.PeruTime},Bb={id:A.AmericaLosAngeles,name:"America/Los_Angeles",offset:t.UTC_MINUS_8,timezone:u.PacificStandardTime},Pb={id:A.AmericaLouisville,name:"America/Louisville",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},yb={id:A.AmericaLowerPrinces,name:"America/Lower_Princes",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},kb={id:A.AmericaMaceio,name:"America/Maceio",offset:t.UTC_MINUS_3,timezone:u.BrasiliaTime},Mb={id:A.AmericaManagua,name:"America/Managua",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},Db={id:A.AmericaManaus,name:"America/Manaus",offset:t.UTC_MINUS_4,timezone:u.AmazonTime},xb={id:A.AmericaMarigot,name:"America/Marigot",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},Fb={id:A.AmericaMartinique,name:"America/Martinique",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},Lb={id:A.AmericaMatamoros,name:"America/Matamoros",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},wb={id:A.AmericaMazatlan,name:"America/Mazatlan",offset:t.UTC_MINUS_7,timezone:u.MountainStandardTime},Gb={id:A.AmericaMenominee,name:"America/Menominee",offset:t.UTC_MINUS_5,timezone:u.CentralStandardTime},qb={id:A.AmericaMerida,name:"America/Merida",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},Kb={id:A.AmericaMetlakatla,name:"America/Metlakatla",offset:t.UTC_MINUS_9,timezone:u.AlaskaStandardTime},Ob={id:A.AmericaMexicoCity,name:"America/Mexico_City",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},jb={id:A.AmericaMiquelon,name:"America/Miquelon",offset:t.UTC_MINUS_3,timezone:u.SaintPierreAndMiquelonStandardTime},Hb={id:A.AmericaMoncton,name:"America/Moncton",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},Wb={id:A.AmericaMonterrey,name:"America/Monterrey",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},zb={id:A.AmericaMontevideo,name:"America/Montevideo",offset:t.UTC_MINUS_3,timezone:u.UruguayStandardTime},Vb={id:A.AmericaMontreal,name:"America/Montreal",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},Rb={id:A.AmericaMontserrat,name:"America/Montserrat",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},Yb={id:A.AmericaNassau,name:"America/Nassau",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},Jb={id:A.AmericaNewYork,name:"America/New_York",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},Zb={id:A.AmericaNipigon,name:"America/Nipigon",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},$b={id:A.AmericaNome,name:"America/Nome",offset:t.UTC_MINUS_9,timezone:u.AlaskaStandardTime},Qb={id:A.AmericaNoronha,name:"America/Noronha",offset:t.UTC_MINUS_2,timezone:u.FernandoDeNoronhaTime},Xb={id:A.AmericaNorthDakotaBeulah,name:"America/North_Dakota/Beulah",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},Cb={id:A.AmericaNorthDakotaCenter,name:"America/North_Dakota/Center",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},aU={id:A.AmericaNorthDakotaNewSalem,name:"America/North_Dakota/New_Salem",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},eU={id:A.AmericaOjinaga,name:"America/Ojinaga",offset:t.UTC_MINUS_7,timezone:u.MountainStandardTime},iU={id:A.AmericaPanama,name:"America/Panama",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},nU={id:A.AmericaPangnirtung,name:"America/Pangnirtung",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},sU={id:A.AmericaParamaribo,name:"America/Paramaribo",offset:t.UTC_MINUS_3,timezone:u.SurinameTime},rU={id:A.AmericaPhoenix,name:"America/Phoenix",offset:t.UTC_MINUS_7,timezone:u.MountainStandardTime},tU={id:A.AmericaPortAuPrince,name:"America/Port-au-Prince",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},uU={id:A.AmericaPortOfSpain,name:"America/Port_of_Spain",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},lU={id:A.AmericaPortoVelho,name:"America/Porto_Velho",offset:t.UTC_MINUS_4,timezone:u.AmazonTime},oU={id:A.AmericaPuertoRico,name:"America/Puerto_Rico",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},mU={id:A.AmericaRainyRiver,name:"America/Rainy_River",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},cU={id:A.AmericaRankinInlet,name:"America/Rankin_Inlet",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},AU={id:A.AmericaRecife,name:"America/Recife",offset:t.UTC_MINUS_3,timezone:u.BrasiliaTime},dU={id:A.AmericaRegina,name:"America/Regina",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},fU={id:A.AmericaResolute,name:"America/Resolute",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},gU={id:A.AmericaRioBranco,name:"America/Rio_Branco",offset:t.UTC_MINUS_5,timezone:u.AcreTime},hU={id:A.AmericaSantaIsabel,name:"America/Santa_Isabel",offset:t.UTC_MINUS_8,timezone:u.PacificStandardTime},_U={id:A.AmericaSantarem,name:"America/Santarem",offset:t.UTC_MINUS_3,timezone:u.BrasiliaTime},IU={id:A.AmericaSantiago,name:"America/Santiago",offset:t.UTC_MINUS_4,timezone:u.ChileStandardTime},pU={id:A.AmericaSantoDomingo,name:"America/Santo_Domingo",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},SU={id:A.AmericaSaoPaulo,name:"America/Sao_Paulo",offset:t.UTC_MINUS_3,timezone:u.BrasiliaTime},EU={id:A.AmericaScoresbysund,name:"America/Scoresbysund",offset:t.UTC_MINUS_1,timezone:u.EasternGreenlandTime},TU={id:A.AmericaShiprock,name:"America/Shiprock",offset:t.UTC_MINUS_7,timezone:u.MountainStandardTime},vU={id:A.AmericaSitka,name:"America/Sitka",offset:t.UTC_MINUS_9,timezone:u.AlaskaStandardTime},bU={id:A.AmericaStBarthelemy,name:"America/St_Barthelemy",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},UU={id:A.AmericaStJohns,name:"America/St_Johns",offset:t.UTC_MINUS_3,timezone:u.NewfoundlandStandardTime},NU={id:A.AmericaStKitts,name:"America/St_Kitts",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},BU={id:A.AmericaStLucia,name:"America/St_Lucia",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},PU={id:A.AmericaStThomas,name:"America/St_Thomas",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},yU={id:A.AmericaStVincent,name:"America/St_Vincent",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},kU={id:A.AmericaSwiftCurrent,name:"America/Swift_Current",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},MU={id:A.AmericaTegucigalpa,name:"America/Tegucigalpa",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},DU={id:A.AmericaThule,name:"America/Thule",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},xU={id:A.AmericaThunderBay,name:"America/Thunder_Bay",offset:t.UTC_MINUS_4,timezone:u.EasternStandardTime},FU={id:A.AmericaTijuana,name:"America/Tijuana",offset:t.UTC_MINUS_8,timezone:u.PacificStandardTime},LU={id:A.AmericaToronto,name:"America/Toronto",offset:t.UTC_MINUS_5,timezone:u.EasternStandardTime},wU={id:A.AmericaTortola,name:"America/Tortola",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},GU={id:A.AmericaVancouver,name:"America/Vancouver",offset:t.UTC_MINUS_8,timezone:u.PacificStandardTime},qU={id:A.AmericaWhitehorse,name:"America/Whitehorse",offset:t.UTC_MINUS_8,timezone:u.PacificStandardTime},KU={id:A.AmericaWinnipeg,name:"America/Winnipeg",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},OU={id:A.AmericaYakutat,name:"America/Yakutat",offset:t.UTC_MINUS_9,timezone:u.AlaskaStandardTime},jU={id:A.AmericaYellowknife,name:"America/Yellowknife",offset:t.UTC_MINUS_6,timezone:u.MountainStandardTime},HU={id:A.AntarcticaCasey,name:"Antarctica/Casey",offset:t.UTC_MINUS_8,timezone:u.WesternStandardTime},WU={id:A.AntarcticaDavis,name:"Antarctica/Davis",offset:t.UTC_MINUS_7,timezone:u.NewfoundlandStandardTime},zU={id:A.AntarcticaDumontDUrville,name:"Antarctica/DumontDUrville",offset:t.UTC_MINUS_10,timezone:u.CentralStandardTime},VU={id:A.AntarcticaMacquarie,name:"Antarctica/Macquarie",offset:t.UTC_MINUS_11,timezone:u.CentralStandardTime},RU={id:A.AntarcticaMawson,name:"Antarctica/Mawson",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},YU={id:A.AntarcticaMcMurdo,name:"Antarctica/McMurdo",offset:t.UTC_MINUS_12,timezone:u.NewZealandStandardTime},JU={id:A.AntarcticaPalmer,name:"Antarctica/Palmer",offset:t.UTC_MINUS_4,timezone:u.ChathamStandardTime},ZU={id:A.AntarcticaRothera,name:"Antarctica/Rothera",offset:t.UTC_MINUS_3,timezone:u.RotheraResearchStationTime},$U={id:A.AntarcticaSyowa,name:"Antarctica/Syowa",offset:t.UTC_MINUS_3,timezone:u.ShowaStationTime},QU={id:A.AntarcticaTroll,name:"Antarctica/Troll",offset:t.UTC_MINUS_2,timezone:u.CentralStandardTime},XU={id:A.AntarcticaVostok,name:"Antarctica/Vostok",offset:t.UTC_MINUS_6,timezone:u.CentralStandardTime},CU={id:A.ArcticLongyearbyen,name:"Arctic/Longyearbyen",offset:t.UTC_MINUS_1,timezone:u.CentralEuropeanTime},a3={id:A.AsiaAden,name:"Asia/Aden",offset:t.UTC_PLUS_3,timezone:u.ArabiaStandardTime},e3={id:A.AsiaAlmaty,name:"Asia/Almaty",offset:t.UTC_PLUS_6,timezone:u.AlmaAtaTime},i3={id:A.AsiaAmman,name:"Asia/Amman",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},n3={id:A.AsiaAnadyr,name:"Asia/Anadyr",offset:t.UTC_PLUS_12,timezone:u.NewCaledoniaTime},s3={id:A.AsiaAqtau,name:"Asia/Aqtau",offset:t.UTC_PLUS_5,timezone:u.AqtobeTime},r3={id:A.AsiaAqtobe,name:"Asia/Aqtobe",offset:t.UTC_PLUS_5,timezone:u.AqtobeTime},t3={id:A.AsiaAshgabat,name:"Asia/Ashgabat",offset:t.UTC_PLUS_5,timezone:u.TurkmenistanTime},u3={id:A.AsiaBaghdad,name:"Asia/Baghdad",offset:t.UTC_PLUS_3,timezone:u.ArabiaStandardTime},l3={id:A.AsiaBahrain,name:"Asia/Bahrain",offset:t.UTC_PLUS_3,timezone:u.ArabiaStandardTime},o3={id:A.AsiaBaku,name:"Asia/Baku",offset:t.UTC_PLUS_4,timezone:u.AzerbaijanTime},m3={id:A.AsiaBangkok,name:"Asia/Bangkok",offset:t.UTC_PLUS_7,timezone:u.IndochinaTime},c3={id:A.AsiaBarnaul,name:"Asia/Barnaul",offset:t.UTC_PLUS_7,timezone:u.KrasnoyarskTime},A3={id:A.AsiaBeirut,name:"Asia/Beirut",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},d3={id:A.AsiaBishkek,name:"Asia/Bishkek",offset:t.UTC_PLUS_6,timezone:u.KyrgyzstanTime},f3={id:A.AsiaBrunei,name:"Asia/Brunei",offset:t.UTC_PLUS_8,timezone:u.BruneiTime},g3={id:A.AsiaChita,name:"Asia/Chita",offset:t.UTC_PLUS_9,timezone:u.YakutskTime},h3={id:A.AsiaChoibalsan,name:"Asia/Choibalsan",offset:t.UTC_PLUS_8,timezone:u.ChoibalsanStandardTime},_3={id:A.AsiaColombo,name:"Asia/Colombo",offset:t.UTC_PLUS_5,timezone:u.IndianStandardTime},I3={id:A.AsiaDamascus,name:"Asia/Damascus",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},p3={id:A.AsiaDhaka,name:"Asia/Dhaka",offset:t.UTC_PLUS_6,timezone:u.BangladeshStandardTime},S3={id:A.AsiaDili,name:"Asia/Dili",offset:t.UTC_PLUS_9,timezone:u.JapanStandardTime},E3={id:A.AsiaDubai,name:"Asia/Dubai",offset:t.UTC_PLUS_4,timezone:u.GulfStandardTime},T3={id:A.AsiaDushanbe,name:"Asia/Dushanbe",offset:t.UTC_PLUS_5,timezone:u.TajikistanTime},v3={id:A.AsiaFamagusta,name:"Asia/Famagusta",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},b3={id:A.AsiaGaza,name:"Asia/Gaza",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},U3={id:A.AsiaHebron,name:"Asia/Hebron",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},N3={id:A.AsiaHoChiMinh,name:"Asia/Ho_Chi_Minh",offset:t.UTC_PLUS_7,timezone:u.IndochinaTime},B3={id:A.AsiaHongKong,name:"Asia/Hong_Kong",offset:t.UTC_PLUS_8,timezone:u.HongKongTime},P3={id:A.AsiaHovd,name:"Asia/Hovd",offset:t.UTC_PLUS_7,timezone:u.HovdTime},y3={id:A.AsiaIrkutsk,name:"Asia/Irkutsk",offset:t.UTC_PLUS_8,timezone:u.IrkutskTime},k3={id:A.AsiaJakarta,name:"Asia/Jakarta",offset:t.UTC_PLUS_7,timezone:u.WesternIndonesianTime},M3={id:A.AsiaJayapura,name:"Asia/Jayapura",offset:t.UTC_PLUS_9,timezone:u.JapanStandardTime},D3={id:A.AsiaJerusalem,name:"Asia/Jerusalem",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},x3={id:A.AsiaKabul,name:"Asia/Kabul",offset:t.UTC_PLUS_4,timezone:u.AfghanistanTime},F3={id:A.AsiaKamchatka,name:"Asia/Kamchatka",offset:t.UTC_PLUS_12,timezone:u.KamchatkaTime},L3={id:A.AsiaKarachi,name:"Asia/Karachi",offset:t.UTC_PLUS_5,timezone:u.PakistanStandardTime},w3={id:A.AsiaKathmandu,name:"Asia/Kathmandu",offset:t.UTC_PLUS_5,timezone:u.NepalTime},G3={id:A.AsiaKhandyga,name:"Asia/Khandyga",offset:t.UTC_PLUS_9,timezone:u.YakutskTime},q3={id:A.AsiaKolkata,name:"Asia/Kolkata",offset:t.UTC_PLUS_5,timezone:u.IndianStandardTime},K3={id:A.AsiaKrasnoyarsk,name:"Asia/Krasnoyarsk",offset:t.UTC_PLUS_7,timezone:u.KrasnoyarskTime},O3={id:A.AsiaKualaLumpur,name:"Asia/Kuala_Lumpur",offset:t.UTC_PLUS_8,timezone:u.MalaysiaStandardTime},j3={id:A.AsiaKuching,name:"Asia/Kuching",offset:t.UTC_PLUS_8,timezone:u.MalaysiaStandardTime},H3={id:A.AsiaKuwait,name:"Asia/Kuwait",offset:t.UTC_PLUS_3,timezone:u.ArabiaStandardTime},W3={id:A.AsiaMacau,name:"Asia/Macau",offset:t.UTC_PLUS_8,timezone:u.ChinaStandardTime},z3={id:A.AsiaMagadan,name:"Asia/Magadan",offset:t.UTC_PLUS_11,timezone:u.MagadanTime},V3={id:A.AsiaMakassar,name:"Asia/Makassar",offset:t.UTC_PLUS_8,timezone:u.MalaysiaTime},R3={id:A.AsiaManila,name:"Asia/Manila",offset:t.UTC_PLUS_8,timezone:u.PhilippineTime},Y3={id:A.AsiaMuscat,name:"Asia/Muscat",offset:t.UTC_PLUS_4,timezone:u.GulfStandardTime},J3={id:A.AsiaNovokuznetsk,name:"Asia/Novokuznetsk",offset:t.UTC_PLUS_6,timezone:u.NovosibirskTime},Z3={id:A.AsiaNovosibirsk,name:"Asia/Novosibirsk",offset:t.UTC_PLUS_6,timezone:u.NovosibirskTime},$3={id:A.AsiaOmsk,name:"Asia/Omsk",offset:t.UTC_PLUS_6,timezone:u.OmskTime},Q3={id:A.AsiaOral,name:"Asia/Oral",offset:t.UTC_PLUS_5,timezone:u.OralTime},X3={id:A.AsiaPhnomPenh,name:"Asia/Phnom_Penh",offset:t.UTC_PLUS_7,timezone:u.IndochinaTime},C3={id:A.AsiaPontianak,name:"Asia/Pontianak",offset:t.UTC_PLUS_7,timezone:u.WesternIndonesianTime},aN={id:A.AsiaPyongyang,name:"Asia/Pyongyang",offset:t.UTC_PLUS_9,timezone:u.KoreaStandardTime},eN={id:A.AsiaQatar,name:"Asia/Qatar",offset:t.UTC_PLUS_3,timezone:u.ArabiaStandardTime},iN={id:A.AsiaQyzylorda,name:"Asia/Qyzylorda",offset:t.UTC_PLUS_5,timezone:u.WestKazakhstanTime},nN={id:A.AsiaRangoon,name:"Asia/Rangoon",offset:t.UTC_PLUS_6,timezone:u.MyanmarStandardTime},sN={id:A.AsiaRiyadh,name:"Asia/Riyadh",offset:t.UTC_PLUS_3,timezone:u.ArabiaStandardTime},rN={id:A.AsiaSakhalin,name:"Asia/Sakhalin",offset:t.UTC_PLUS_11,timezone:u.SakhalinIslandTime},tN={id:A.AsiaSamarkand,name:"Asia/Samarkand",offset:t.UTC_PLUS_5,timezone:u.UzbekistanTime},uN={id:A.AsiaSeoul,name:"Asia/Seoul",offset:t.UTC_PLUS_9,timezone:u.KoreaStandardTime},lN={id:A.AsiaShanghai,name:"Asia/Shanghai",offset:t.UTC_PLUS_8,timezone:u.ChinaStandardTime},oN={id:A.AsiaSingapore,name:"Asia/Singapore",offset:t.UTC_PLUS_8,timezone:u.SingaporeStandardTime},mN={id:A.AsiaSrednekolymsk,name:"Asia/Srednekolymsk",offset:t.UTC_PLUS_11,timezone:u.SrednekolymskTime},cN={id:A.AsiaTaipei,name:"Asia/Taipei",offset:t.UTC_PLUS_8,timezone:u.ChinaStandardTime},AN={id:A.AsiaTashkent,name:"Asia/Tashkent",offset:t.UTC_PLUS_5,timezone:u.UzbekistanTime},dN={id:A.AsiaTbilisi,name:"Asia/Tbilisi",offset:t.UTC_PLUS_4,timezone:u.GeorgiaStandardTime},fN={id:A.AsiaTehran,name:"Asia/Tehran",offset:t.UTC_PLUS_3,timezone:u.IranStandardTime},gN={id:A.AsiaThimphu,name:"Asia/Thimphu",offset:t.UTC_PLUS_6,timezone:u.BhutanTime},hN={id:A.AsiaTokyo,name:"Asia/Tokyo",offset:t.UTC_PLUS_9,timezone:u.JapanStandardTime},_N={id:A.AsiaTomsk,name:"Asia/Tomsk",offset:t.UTC_PLUS_6,timezone:u.KrasnoyarskTime},IN={id:A.AsiaUlaanbaatar,name:"Asia/Ulaanbaatar",offset:t.UTC_PLUS_8,timezone:u.UlaanbaatarStandardTime},pN={id:A.AsiaUrumqi,name:"Asia/Urumqi",offset:t.UTC_PLUS_8,timezone:u.ChinaStandardTime},SN={id:A.AsiaUstNera,name:"Asia/Ust-Nera",offset:t.UTC_PLUS_10,timezone:u.VladivostokTime},EN={id:A.AsiaVientiane,name:"Asia/Vientiane",offset:t.UTC_PLUS_7,timezone:u.IndochinaTime},TN={id:A.AsiaVladivostok,name:"Asia/Vladivostok",offset:t.UTC_PLUS_10,timezone:u.VladivostokTime},vN={id:A.AsiaYakutsk,name:"Asia/Yakutsk",offset:t.UTC_PLUS_9,timezone:u.YakutskTime},bN={id:A.AsiaYekaterinburg,name:"Asia/Yekaterinburg",offset:t.UTC_PLUS_5,timezone:u.YekaterinburgTime},UN={id:A.AsiaYerevan,name:"Asia/Yerevan",offset:t.UTC_PLUS_4,timezone:u.ArmeniaTime},NN={id:A.AtlanticAzores,name:"Atlantic/Azores",offset:t.UTC_MINUS_1,timezone:u.AzoresStandardTime},BN={id:A.AtlanticBermuda,name:"Atlantic/Bermuda",offset:t.UTC_MINUS_4,timezone:u.AtlanticStandardTime},PN={id:A.AtlanticCanary,name:"Atlantic/Canary",offset:t.UTC_MINUS_1,timezone:u.WesternEuropeanTime},yN={id:A.AtlanticCapeVerde,name:"Atlantic/Cape_Verde",offset:t.UTC_0,timezone:u.CapeVerdeTime},kN={id:A.AtlanticFaroe,name:"Atlantic/Faroe",offset:t.UTC_0,timezone:u.GreenwichMeanTime},MN={id:A.AtlanticMadeira,name:"Atlantic/Madeira",offset:t.UTC_0,timezone:u.WesternEuropeanTime},DN={id:A.AtlanticReykjavik,name:"Atlantic/Reykjavik",offset:t.UTC_0,timezone:u.GreenwichMeanTime},xN={id:A.AtlanticSouthGeorgia,name:"Atlantic/South_Georgia",offset:t.UTC_0,timezone:u.CoordinatedUniversalTime},FN={id:A.AtlanticStHelena,name:"Atlantic/St_Helena",offset:t.UTC_0,timezone:u.GreenwichMeanTime},LN={id:A.AtlanticStanley,name:"Atlantic/Stanley",offset:t.UTC_0,timezone:u.FalklandIslandsTime},wN={id:A.AustraliaAdelaide,name:"Australia/Adelaide",offset:t.UTC_PLUS_9_30,timezone:u.AustralianCentralStandardTime},GN={id:A.AustraliaBrisbane,name:"Australia/Brisbane",offset:t.UTC_PLUS_10,timezone:u.AustralianEasternStandardTime},qN={id:A.AustraliaBrokenHill,name:"Australia/Broken_Hill",offset:t.UTC_PLUS_9_30,timezone:u.AustralianCentralStandardTime},KN={id:A.AustraliaCanberra,name:"Australia/Canberra",offset:t.UTC_PLUS_10,timezone:u.AustralianEasternStandardTime},ON={id:A.AustraliaCurrie,name:"Australia/Currie",offset:t.UTC_PLUS_10,timezone:u.AustralianEasternStandardTime},jN={id:A.AustraliaDarwin,name:"Australia/Darwin",offset:t.UTC_PLUS_9_30,timezone:u.AustralianCentralStandardTime},HN={id:A.AustraliaEucla,name:"Australia/Eucla",offset:t.UTC_PLUS_8_45,timezone:u.AustralianCentralWesternStandardTime},WN={id:A.AustraliaHobart,name:"Australia/Hobart",offset:t.UTC_PLUS_10,timezone:u.AustralianEasternStandardTime},zN={id:A.AustraliaLindeman,name:"Australia/Lindeman",offset:t.UTC_PLUS_10,timezone:u.AustralianEasternStandardTime},VN={id:A.AustraliaLordHowe,name:"Australia/Lord_Howe",offset:t.UTC_PLUS_10_30,timezone:u.LordHoweStandardTime},RN={id:A.AustraliaMelbourne,name:"Australia/Melbourne",offset:t.UTC_PLUS_10,timezone:u.AustralianEasternStandardTime},YN={id:A.AustraliaPerth,name:"Australia/Perth",offset:t.UTC_PLUS_8,timezone:u.AustralianWesternStandardTime},JN={id:A.AustraliaSydney,name:"Australia/Sydney",offset:t.UTC_PLUS_10,timezone:u.AustralianEasternStandardTime},ZN={id:A.EuropeAmsterdam,name:"Europe/Amsterdam",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},$N={id:A.EuropeAndorra,name:"Europe/Andorra",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},QN={id:A.EuropeAthens,name:"Europe/Athens",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},XN={id:A.EuropeBelgrade,name:"Europe/Belgrade",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},CN={id:A.EuropeBerlin,name:"Europe/Berlin",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},aB={id:A.EuropeBratislava,name:"Europe/Bratislava",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},eB={id:A.EuropeBrussels,name:"Europe/Brussels",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},iB={id:A.EuropeBucharest,name:"Europe/Bucharest",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},nB={id:A.EuropeBudapest,name:"Europe/Budapest",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},sB={id:A.EuropeBusingen,name:"Europe/Busingen",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},rB={id:A.EuropeChisinau,name:"Europe/Chisinau",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},tB={id:A.EuropeCopenhagen,name:"Europe/Copenhagen",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},uB={id:A.EuropeDublin,name:"Europe/Dublin",offset:t.UTC_0,timezone:u.GreenwichMeanTime},lB={id:A.EuropeGibraltar,name:"Europe/Gibraltar",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},oB={id:A.EuropeGuernsey,name:"Europe/Guernsey",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},mB={id:A.EuropeHelsinki,name:"Europe/Helsinki",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},cB={id:A.EuropeIsleOfMan,name:"Europe/Isle_of_Man",offset:t.UTC_0,timezone:u.GreenwichMeanTime},AB={id:A.EuropeIstanbul,name:"Europe/Istanbul",offset:t.UTC_PLUS_3,timezone:u.EasternEuropeanTime},dB={id:A.EuropeJersey,name:"Europe/Jersey",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},fB={id:A.EuropeKaliningrad,name:"Europe/Kaliningrad",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},gB={id:A.EuropeKiev,name:"Europe/Kiev",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},hB={id:A.EuropeLisbon,name:"Europe/Lisbon",offset:t.UTC_0,timezone:u.GreenwichMeanTime},_B={id:A.EuropeLjubljana,name:"Europe/Ljubljana",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},IB={id:A.EuropeLondon,name:"Europe/London",offset:t.UTC_0,timezone:u.GreenwichMeanTime},pB={id:A.EuropeLuxembourg,name:"Europe/Luxembourg",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},SB={id:A.EuropeMadrid,name:"Europe/Madrid",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},EB={id:A.EuropeMalta,name:"Europe/Malta",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},TB={id:A.EuropeMariehamn,name:"Europe/Mariehamn",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},vB={id:A.EuropeMinsk,name:"Europe/Minsk",offset:t.UTC_PLUS_3,timezone:u.EasternEuropeanTime},bB={id:A.EuropeMonaco,name:"Europe/Monaco",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},UB={id:A.EuropeMoscow,name:"Europe/Moscow",offset:t.UTC_PLUS_3,timezone:u.EasternEuropeanTime},NB={id:A.EuropeOslo,name:"Europe/Oslo",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},BB={id:A.EuropeParis,name:"Europe/Paris",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},PB={id:A.EuropePodgorica,name:"Europe/Podgorica",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},yB={id:A.EuropePrague,name:"Europe/Prague",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},kB={id:A.EuropeRiga,name:"Europe/Riga",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},MB={id:A.EuropeRome,name:"Europe/Rome",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},DB={id:A.EuropeSamara,name:"Europe/Samara",offset:t.UTC_PLUS_4,timezone:u.EasternEuropeanTime},xB={id:A.EuropeSanMarino,name:"Europe/San_Marino",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},FB={id:A.EuropeSarajevo,name:"Europe/Sarajevo",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},LB={id:A.EuropeSimferopol,name:"Europe/Simferopol",offset:t.UTC_PLUS_3,timezone:u.EasternEuropeanTime},wB={id:A.EuropeSkopje,name:"Europe/Skopje",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},GB={id:A.EuropeSofia,name:"Europe/Sofia",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},qB={id:A.EuropeStockholm,name:"Europe/Stockholm",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},KB={id:A.EuropeTallinn,name:"Europe/Tallinn",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},OB={id:A.EuropeTirane,name:"Europe/Tirane",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},jB={id:A.EuropeUzhgorod,name:"Europe/Uzhgorod",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},HB={id:A.EuropeVaduz,name:"Europe/Vaduz",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},WB={id:A.EuropeVatican,name:"Europe/Vatican",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},zB={id:A.EuropeVienna,name:"Europe/Vienna",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},VB={id:A.EuropeVilnius,name:"Europe/Vilnius",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},RB={id:A.EuropeVolgograd,name:"Europe/Volgograd",offset:t.UTC_PLUS_4,timezone:u.EasternEuropeanTime},YB={id:A.EuropeWarsaw,name:"Europe/Warsaw",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},JB={id:A.EuropeZagreb,name:"Europe/Zagreb",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},ZB={id:A.EuropeZaporozhye,name:"Europe/Zaporozhye",offset:t.UTC_PLUS_2,timezone:u.EasternEuropeanTime},$B={id:A.EuropeZurich,name:"Europe/Zurich",offset:t.UTC_PLUS_1,timezone:u.CentralEuropeanTime},QB={id:A.IndianAntananarivo,name:"Indian/Antananarivo",offset:t.UTC_PLUS_3,timezone:u.EastAfricaTime},XB={id:A.IndianChagos,name:"Indian/Chagos",offset:t.UTC_PLUS_6,timezone:u.IndianOceanTime},CB={id:A.IndianChristmas,name:"Indian/Christmas",offset:t.UTC_PLUS_7,timezone:u.ChristmasIslandTime},a1={id:A.IndianCocos,name:"Indian/Cocos",offset:t.UTC_PLUS_6,timezone:u.CocosIslandsTime},e1={id:A.IndianComoro,name:"Indian/Comoro",offset:t.UTC_PLUS_3,timezone:u.EastAfricaTime},i1={id:A.IndianKerguelen,name:"Indian/Kerguelen",offset:t.UTC_PLUS_5,timezone:u.FrenchSouthernAndAntarcticTime},n1={id:A.IndianMahe,name:"Indian/Mahe",offset:t.UTC_PLUS_4,timezone:u.SeychellesTime},s1={id:A.IndianMaldives,name:"Indian/Maldives",offset:t.UTC_PLUS_5,timezone:u.MaldivesTime},r1={id:A.IndianMauritius,name:"Indian/Mauritius",offset:t.UTC_PLUS_4,timezone:u.MauritiusTime},t1={id:A.IndianMayotte,name:"Indian/Mayotte",offset:t.UTC_PLUS_3,timezone:u.EastAfricaTime},u1={id:A.IndianReunion,name:"Indian/Reunion",offset:t.UTC_PLUS_4,timezone:u.ReunionTime},l1={id:A.PacificApia,name:"Pacific/Apia",offset:t.UTC_PLUS_13,timezone:u.SamoaStandardTime},o1={id:A.PacificAuckland,name:"Pacific/Auckland",offset:t.UTC_PLUS_13,timezone:u.NewZealandStandardTime},m1={id:A.PacificChatham,name:"Pacific/Chatham",offset:t.UTC_PLUS_13,timezone:u.ChathamStandardTime},c1={id:A.PacificEaster,name:"Pacific/Easter",offset:t.UTC_PLUS_6,timezone:u.EasterIslandStandardTime},A1={id:A.PacificEfate,name:"Pacific/Efate",offset:t.UTC_PLUS_11,timezone:u.VanuatuTime},d1={id:A.PacificEnderbury,name:"Pacific/Enderbury",offset:t.UTC_PLUS_13,timezone:u.TongaTime},f1={id:A.PacificFakaofo,name:"Pacific/Fakaofo",offset:t.UTC_PLUS_13,timezone:u.TongaTime},g1={id:A.PacificFiji,name:"Pacific/Fiji",offset:t.UTC_PLUS_12,timezone:u.FijiTime},h1={id:A.PacificFunafuti,name:"Pacific/Funafuti",offset:t.UTC_PLUS_12,timezone:u.TuvaluTime},_1={id:A.PacificGalapagos,name:"Pacific/Galapagos",offset:t.UTC_PLUS_6,timezone:u.GalapagosTime},I1={id:A.PacificGambier,name:"Pacific/Gambier",offset:t.UTC_PLUS_9,timezone:u.GambierIslandTime},p1={id:A.PacificGuadalcanal,name:"Pacific/Guadalcanal",offset:t.UTC_PLUS_11,timezone:u.SolomonIslandsTime},S1={id:A.PacificGuam,name:"Pacific/Guam",offset:t.UTC_PLUS_10,timezone:u.ChamorroStandardTime},E1={id:A.PacificHonolulu,name:"Pacific/Honolulu",offset:t.UTC_PLUS_10,timezone:u.HawaiiAleutianStandardTime},T1={id:A.PacificJohnston,name:"Pacific/Johnston",offset:t.UTC_PLUS_10,timezone:u.HawaiiAleutianStandardTime},v1={id:A.PacificKiritimati,name:"Pacific/Kiritimati",offset:t.UTC_PLUS_14,timezone:u.LineIslandsTime},b1={id:A.PacificKosrae,name:"Pacific/Kosrae",offset:t.UTC_PLUS_11,timezone:u.KosraeTime},U1={id:A.PacificKwajalein,name:"Pacific/Kwajalein",offset:t.UTC_PLUS_12,timezone:u.MarshallIslandsTime},N1={id:A.PacificMajuro,name:"Pacific/Majuro",offset:t.UTC_PLUS_12,timezone:u.MarshallIslandsTime},B1={id:A.PacificMarquesas,name:"Pacific/Marquesas",offset:t.UTC_PLUS_9,timezone:u.MarquesasIslandsTime},P1={id:A.PacificMidway,name:"Pacific/Midway",offset:t.UTC_PLUS_11,timezone:u.SamoaStandardTime},y1={id:A.PacificNauru,name:"Pacific/Nauru",offset:t.UTC_PLUS_12,timezone:u.NauruTime},k1={id:A.PacificNiue,name:"Pacific/Niue",offset:t.UTC_PLUS_11,timezone:u.NiueTime},M1={id:A.PacificNorfolk,name:"Pacific/Norfolk",offset:t.UTC_PLUS_11,timezone:u.NorfolkIslandTime},D1={id:A.PacificNoumea,name:"Pacific/Noumea",offset:t.UTC_PLUS_11,timezone:u.NewCaledoniaTime},x1={id:A.PacificPagoPago,name:"Pacific/Pago_Pago",offset:t.UTC_PLUS_11,timezone:u.SamoaStandardTime},F1={id:A.PacificPalau,name:"Pacific/Palau",offset:t.UTC_PLUS_9,timezone:u.PalauTime},L1={id:A.PacificPitcairn,name:"Pacific/Pitcairn",offset:t.UTC_PLUS_8,timezone:u.PitcairnTime},w1={id:A.PacificPonape,name:"Pacific/Ponape",offset:t.UTC_PLUS_11,timezone:u.PohnpeiStandardTime},G1={id:A.PacificPortMoresby,name:"Pacific/Port_Moresby",offset:t.UTC_PLUS_10,timezone:u.PapuaNewGuineaTime},q1={id:A.PacificRarotonga,name:"Pacific/Rarotonga",offset:t.UTC_PLUS_10,timezone:u.CookIslandTime},K1={id:A.PacificSaipan,name:"Pacific/Saipan",offset:t.UTC_PLUS_10,timezone:u.ChamorroStandardTime},O1={id:A.PacificTahiti,name:"Pacific/Tahiti",offset:t.UTC_PLUS_10,timezone:u.TahitiTime},j1={id:A.PacificTarawa,name:"Pacific/Tarawa",offset:t.UTC_PLUS_12,timezone:u.GilbertIslandTime},H1={id:A.PacificTongatapu,name:"Pacific/Tongatapu",offset:t.UTC_PLUS_13,timezone:u.TongaTime},W1={id:A.PacificChuuk,name:"Pacific/Chuuk",offset:t.UTC_PLUS_10,timezone:u.ChuukTime},z1={id:A.PacificPohnpei,name:"Pacific/Pohnpei",offset:t.UTC_PLUS_11,timezone:u.PohnpeiStandardTime},V1={id:A.PacificYap,name:"Pacific/Yap",offset:t.UTC_PLUS_10,timezone:u.ChuukTime};var ar=be(require("crypto"),1);var et="useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict";var gc=128,ae,de,hc=a=>{!ae||ae.length<a?(ae=Buffer.allocUnsafe(a*gc),ar.default.randomFillSync(ae),de=0):de+a>ae.length&&(ar.default.randomFillSync(ae),de=0),de+=a};var it=(a=21)=>{hc(a-=0);let b="";for(let N=de-a;N<de;N++)b+=et[ae[N]&63];return b};var _c=[{property:"name",enumerable:!1},{property:"message",enumerable:!1},{property:"stack",enumerable:!1},{property:"code",enumerable:!0}],er=Symbol(".toJSON was called"),Ic=a=>{a[er]=!0;let b=a.toJSON();return delete a[er],b},nt=({from:a,seen:b,to_:N,forceEnumerable:x,maxDepth:L,depth:j})=>{let w=N||(Array.isArray(a)?[]:{});if(b.push(a),j>=L)return w;if(typeof a.toJSON=="function"&&a[er]!==!0)return Ic(a);for(let[O,$]of Object.entries(a)){if(typeof Buffer=="function"&&Buffer.isBuffer($)){w[O]="[object Buffer]";continue}if(typeof $!="function"){if(!$||typeof $!="object"){w[O]=$;continue}if(!b.includes(a[O])){j++,w[O]=nt({from:a[O],seen:[...b],forceEnumerable:x,maxDepth:L,depth:j});continue}w[O]="[Circular]"}}for(let{property:O,enumerable:$}of _c)typeof a[O]=="string"&&Object.defineProperty(w,O,{value:a[O],enumerable:x?!0:$,configurable:!0,writable:!0});return w};function st(a,b={}){let{maxDepth:N=Number.POSITIVE_INFINITY}=b;return typeof a=="object"&&a!==null?nt({from:a,seen:[],forceEnumerable:!0,maxDepth:N,depth:0}):typeof a=="function"?`[Function: ${a.name||"anonymous"}]`:a}var P;(function(a){a[a.Warning=999]="Warning",a[a.Exception=1e3]="Exception",a[a.UnmanagedException=1001]="UnmanagedException",a[a.CaughtException=1002]="CaughtException",a[a.UncaughtException=1003]="UncaughtException",a[a.UnhandledPromiseRejectionException=1004]="UnhandledPromiseRejectionException",a[a.AuthenticationException=2e3]="AuthenticationException",a[a.AuthenticationExpiredAccessTokenException=2001]="AuthenticationExpiredAccessTokenException",a[a.AuthenticationInvalidAccessTokenException=2002]="AuthenticationInvalidAccessTokenException",a[a.AuthenticationMissingAccessTokenException=2003]="AuthenticationMissingAccessTokenException",a[a.AuthenticationExpiredRefreshTokenException=2004]="AuthenticationExpiredRefreshTokenException",a[a.AuthenticationInvalidRefreshTokenException=2005]="AuthenticationInvalidRefreshTokenException",a[a.AuthenticationMissingRefreshTokenException=2006]="AuthenticationMissingRefreshTokenException",a[a.AuthenticationMissingDeviceKeyException=2007]="AuthenticationMissingDeviceKeyException",a[a.AuthenticationUnAuthorizedAccessException=2008]="AuthenticationUnAuthorizedAccessException",a[a.AuthenticationCodeMismatchException=2009]="AuthenticationCodeMismatchException",a[a.AuthenticationExpiredCodeException=2010]="AuthenticationExpiredCodeException",a[a.AuthenticationLoginException=2011]="AuthenticationLoginException",a[a.AuthenticationLoginInvalidCredentialsException=2012]="AuthenticationLoginInvalidCredentialsException",a[a.AuthenticationLoginTooManyFailedAttemptsException=2013]="AuthenticationLoginTooManyFailedAttemptsException",a[a.AuthenticationLimitExceededException=2014]="AuthenticationLimitExceededException",a[a.AuthenticationUnauthorizedAccessException=2015]="AuthenticationUnauthorizedAccessException",a[a.AuthenticationTooManyRequestsException=2016]="AuthenticationTooManyRequestsException",a[a.AuthenticationUserNotFoundException=2017]="AuthenticationUserNotFoundException",a[a.AuthenticationSignupException=2018]="AuthenticationSignupException",a[a.AuthenticationUsernameAvailabilityCheckException=2019]="AuthenticationUsernameAvailabilityCheckException",a[a.AuthenticationUsernameExistsException=2020]="AuthenticationUsernameExistsException",a[a.AuthenticationAliasExistException=2021]="AuthenticationAliasExistException",a[a.AuthenticationCodeDeliveryFailureException=2022]="AuthenticationCodeDeliveryFailureException",a[a.AuthenticationMFAMethodNotFoundException=2023]="AuthenticationMFAMethodNotFoundException",a[a.AuthenticationNotAuthorizedException=2024]="AuthenticationNotAuthorizedException",a[a.AuthenticationPasswordResetRequiredException=2025]="AuthenticationPasswordResetRequiredException",a[a.AuthenticationUserNotConfirmedException=2026]="AuthenticationUserNotConfirmedException",a[a.DatabaseException=3e3]="DatabaseException",a[a.SequelizeNotInitializedException=3001]="SequelizeNotInitializedException",a[a.ProcessException=4e3]="ProcessException",a[a.ProcessWarningException=4001]="ProcessWarningException",a[a.KillProcessException=4002]="KillProcessException",a[a.FatalException=4003]="FatalException",a[a.ProcessSigTermException=4004]="ProcessSigTermException",a[a.ProcessSigIntException=4005]="ProcessSigIntException",a[a.MissingEnvironmentVariable=4006]="MissingEnvironmentVariable",a[a.NetworkException=5e3]="NetworkException",a[a.HttpException=5001]="HttpException",a[a.HttpRequestException=5002]="HttpRequestException",a[a.HttpRequestResourceNotFoundException=5003]="HttpRequestResourceNotFoundException",a[a.HttpResponseException=5004]="HttpResponseException",a[a.ServiceProviderException=6e3]="ServiceProviderException",a[a.AWSException=6001]="AWSException",a[a.AWSMissingAccessKeyException=6002]="AWSMissingAccessKeyException",a[a.AWSMissingSecretKeyException=6003]="AWSMissingSecretKeyException",a[a.CognitoException=6004]="CognitoException",a[a.CognitoInternalErrorException=6005]="CognitoInternalErrorException",a[a.CognitoInvalidEmailRoleAccessPolicyException=6006]="CognitoInvalidEmailRoleAccessPolicyException",a[a.CognitoInvalidLambdaResponseException=6007]="CognitoInvalidLambdaResponseException",a[a.CognitoUserLambdaValidationException=6008]="CognitoUserLambdaValidationException",a[a.CognitoInvalidParameterException=6009]="CognitoInvalidParameterException",a[a.CognitoInvalidSmsRoleAccessPolicyException=6010]="CognitoInvalidSmsRoleAccessPolicyException",a[a.CognitoInvalidSmsRoleTrustRelationshipException=6011]="CognitoInvalidSmsRoleTrustRelationshipException",a[a.CognitoInvalidUserPoolConfigurationException=6012]="CognitoInvalidUserPoolConfigurationException",a[a.CognitoResourceNotFoundException=6013]="CognitoResourceNotFoundException",a[a.CognitoMissingUserPoolClientIdException=6014]="CognitoMissingUserPoolClientIdException",a[a.CognitoMissingUserPoolIdException=6015]="CognitoMissingUserPoolIdException",a[a.CognitoUnexpectedLambdaException=6016]="CognitoUnexpectedLambdaException",a[a.StripeException=6017]="StripeException",a[a.StripeMissingSecretKeyException=6018]="StripeMissingSecretKeyException",a[a.StripeSubscriptionCreationFailedException=6019]="StripeSubscriptionCreationFailedException",a[a.StripePaymentMethodRequiredException=6020]="StripePaymentMethodRequiredException",a[a.UserException=7e3]="UserException",a[a.NullUserException=7001]="NullUserException",a[a.UserStateConflictException=7002]="UserStateConflictException",a[a.NullAccountException=7003]="NullAccountException",a[a.ValidationException=8e3]="ValidationException",a[a.InvalidTypeException=8001]="InvalidTypeException",a[a.MissingArgumentException=8002]="MissingArgumentException",a[a.MissingPropertyException=8003]="MissingPropertyException",a[a.InvalidArgumentException=8004]="InvalidArgumentException",a[a.InvalidPropertyException=8005]="InvalidPropertyException",a[a.MissingRequestBodyPropertyException=8006]="MissingRequestBodyPropertyException",a[a.MissingRequestUrlParameterException=8007]="MissingRequestUrlParameterException",a[a.MissingCookieException=8008]="MissingCookieException"})(P||(P={}));var Aa=class extends Error{constructor(b,N){super(b);p(this,"cause");p(this,"code",P.Exception);p(this,"context");p(this,"created");p(this,"data");p(this,"description");p(this,"model");p(this,"form");p(this,"friendlyMessage","An unknown error has occurred. :(");p(this,"id");p(this,"logLevel",V.Exception);p(this,"origin");p(this,"pii");p(this,"request");p(this,"response");p(this,"scope");p(this,"remediation");p(this,"tags");p(this,"task");p(this,"user");p(this,"__proto__");var L,j,w,O;let x=new.target.prototype;if(this.__proto__=x,Error.captureStackTrace&&Error.captureStackTrace((L=N==null?void 0:N.cause)!=null?L:this,Aa),this.id=it(),this.name=this.constructor.name,this.created=new Date().toString(),this.description=(j=N==null?void 0:N.description)!=null?j:this.description,this.remediation=(w=N==null?void 0:N.remediation)!=null?w:this.remediation,this.scope=(O=N==null?void 0:N.scope)!=null?O:this.scope,N){let{cause:$,context:C,data:da,model:ma,form:ca,origin:va,pii:ua,request:Z,response:aa,tags:Ia,task:fa,user:sa}=N;this.cause=$,this.context=C,this.data=da,this.model=ma,this.form=ca,this.origin=va,this.pii=ua,this.request=Z,this.response=aa,this.task=fa,this.tags=Ia,this.user=sa}}toJSON(){return st(this)}};var _a;(function(a){a.Simple="simple",a.ExponentialBackoff="exponential",a.CircuitBreaker="circuit_breaker"})(_a||(_a={}));var Ue=class extends Aa{constructor(){super(...arguments);p(this,"code",P.UnmanagedException);p(this,"description",`An "Error" object that isn't managed by AppLab`);p(this,"friendlyMessage","An unknown error has occurred.");p(this,"remediation",{response:{code:500},retry:{limit:3}})}},We=class extends Aa{constructor(){super(...arguments);p(this,"code",P.CaughtException);p(this,"description","An exception was caught within a try block.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:{limit:3}})}},ze=class extends Aa{constructor(){super(...arguments);p(this,"code",P.UncaughtException);p(this,"description","An uncaught exception bubbled up and was caught automatically.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:{limit:3}})}},Ne=class extends Aa{constructor(){super(...arguments);p(this,"code",P.UnhandledPromiseRejectionException);p(this,"description","An unhandled promise rejection was caught automatically.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:{limit:3}})}};var Ha=class extends Aa{constructor(){super(...arguments);p(this,"code",P.ProcessException);p(this,"description","A exception was caught in a process.");p(this,"logLevel",V.Exception)}},Ve=class extends Ha{constructor(){super(...arguments);p(this,"code",P.ProcessWarningException);p(this,"description","A warning was caught in a process.");p(this,"logLevel",V.Warning)}},Be=class extends Ha{constructor(){super(...arguments);p(this,"code",P.KillProcessException);p(this,"description",'Exception thrown to kill a Node.js "gracefully".');p(this,"logLevel",V.Critical)}},Pe=class extends Ha{constructor(){super(...arguments);p(this,"code",P.ProcessSigTermException);p(this,"description","Process received SIGTERM termination code.");p(this,"logLevel",V.Critical)}},ye=class extends Ha{constructor(){super(...arguments);p(this,"code",P.ProcessSigIntException);p(this,"description","Process received SIGINT termination code.");p(this,"logLevel",V.Critical)}},Re=class extends Ha{constructor(){super(...arguments);p(this,"code",P.FatalException);p(this,"description","An fatal exception occurred which has crashed the server.");p(this,"logLevel",V.Critical)}},Ye=class extends Ha{constructor(){super(...arguments);p(this,"code",P.MissingEnvironmentVariable);p(this,"description","An environment variable is not set or unavailable.");p(this,"logLevel",V.Critical)}};var Tc=class{analytics(a){}critical(a){}debug(a){}async exception(a){console.log(a)}http(a){}async info(a){console.log(a)}warning(a){}constructor(a){}},ir=Tc,Ja=ir;var By=new Ja;var ha=class extends Aa{constructor(){super(...arguments);p(this,"code",P.AuthenticationException);p(this,"description","Generic or unknown exceptions associated with user authentication.");p(this,"friendlyMessage","An unknown error occurred.");p(this,"logLevel",V.Warning);p(this,"remediation",{response:{code:401},retry:{limit:3,strategy:_a.CircuitBreaker}})}},Je=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationUnauthorizedAccessException);p(this,"description","User lacks permissions to access the requested resource.");p(this,"logLevel",V.Warning);p(this,"remediation",{response:{code:403},retry:!1})}},Ze=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationLimitExceededException);p(this,"description","This exception is thrown when a user exceeds the limit for a requested AWS resource");p(this,"friendlyMessage","You are trying to access this resource too often.");p(this,"logLevel",V.Warning);p(this,"remediation",{response:{code:429},retry:!1})}},$e=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationNotAuthorizedException);p(this,"description","The Auth user does not have permission to perform this action.");p(this,"friendlyMessage","You need to be logged in or have proper permissions to access this resource.");p(this,"logLevel",V.Warning);p(this,"remediation",{response:{code:403},retry:!1})}},Qe=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationTooManyRequestsException);p(this,"description","This exception is thrown when the user has made too many requests for a given operation.");p(this,"friendlyMessage","You are trying to access this resource too often.");p(this,"logLevel",V.Warning);p(this,"remediation",{response:{code:429},retry:!1})}},Xe=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationUserNotFoundException);p(this,"description","This exception is thrown when the Auth service cannot find a user with the provided username.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:!1})}};var Ce=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationPasswordResetRequiredException);p(this,"description","This exception is thrown when a password reset is required.");p(this,"friendlyMessage","A password reset is required in order to login.");p(this,"logLevel",V.Warning);p(this,"remediation",{response:{code:403},retry:!1})}};var ai=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationLoginException);p(this,"description","An exception occurred while logging a user in.");p(this,"friendlyMessage","An unknown error occurred.");p(this,"logLevel",V.Critical);p(this,"remediation",{response:{code:500},retry:!0})}},ei=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationLoginInvalidCredentialsException);p(this,"description","Incorrect username or password provided.");p(this,"friendlyMessage","Incorrect username or password.");p(this,"logLevel",V.Info);p(this,"remediation",{response:{code:401},retry:!1})}},ii=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationLoginTooManyFailedAttemptsException);p(this,"description","This exception is thrown when the user has provided an incorrect username or password too many times.");p(this,"friendlyMessage","You've provided an incorrect username or password too many times.");p(this,"logLevel",V.Warning);p(this,"remediation",{response:{code:429},retry:!1})}};var ni=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationMFAMethodNotFoundException);p(this,"description","This exception is thrown when the Auth service cannot find a multi-factor authentication (MFA) method.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:403},retry:{limit:3,strategy:_a.Simple}})}};var si=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationSignupException);p(this,"description","An exception occurred while signing up a user.");p(this,"friendlyMessage","An error occurred while signing up.");p(this,"logLevel",V.Critical);p(this,"remediation",{response:{code:500},retry:!0})}};var fe=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationUsernameAvailabilityCheckException);p(this,"description","An exception occurred while checking if a username is available.");p(this,"friendlyMessage","An error occurred while checking if a username is available.");p(this,"logLevel",V.Critical);p(this,"remediation",{response:{code:500},retry:!0})}},ri=class extends fe{constructor(){super(...arguments);p(this,"code",P.AuthenticationUsernameExistsException);p(this,"description","User with email or phone number already exists.");p(this,"friendlyMessage","A user with that email already exists.");p(this,"logLevel",V.Warning);p(this,"remediation",{response:{code:400},retry:!1})}},ti=class extends fe{constructor(){super(...arguments);p(this,"code",P.AuthenticationAliasExistException);p(this,"description","This exception is thrown when a user tries to confirm the account with an email or phone number that has already been supplied as an alias from a different account. This exception tells user that an account with this email or phone already exists");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:400},retry:!1})}};var ui=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationExpiredRefreshTokenException);p(this,"description","The refresh token associated with a session has expired.");p(this,"logLevel",V.Warning);p(this,"remediation",{response:{code:401},retry:!1})}},li=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationInvalidRefreshTokenException);p(this,"description","The refresh token associated with a session is invalid.");p(this,"logLevel",V.Warning);p(this,"remediation",{response:{code:401},retry:!1})}},ke=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationMissingRefreshTokenException);p(this,"description","The refresh token associated with a session is missing.");p(this,"logLevel",V.Warning);p(this,"remediation",{response:{code:401},retry:!1})}};var oi=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationCodeDeliveryFailureException);p(this,"description","This exception is thrown when a verification code fails to deliver successfully.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:{limit:3,strategy:_a.Simple}})}},mi=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationCodeMismatchException);p(this,"description","The verification code provided is incorrect");p(this,"logLevel",V.Warning);p(this,"remediation",{response:{code:400},retry:!1})}},ci=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationExpiredCodeException);p(this,"description","The verification code provided has expired");p(this,"logLevel",V.Warning);p(this,"remediation",{response:{code:403},retry:!1})}},Ai=class extends ha{constructor(){super(...arguments);p(this,"code",P.AuthenticationUserNotConfirmedException);p(this,"description","This exception is thrown when a user who is not confirmed attempts to login.");p(this,"friendlyMessage","You haven't verified your email address or telephone number yet");p(this,"logLevel",V.Warning);p(this,"remediation",{response:{code:403},retry:!1})}};var ge=class extends Aa{constructor(){super(...arguments);p(this,"code",P.DatabaseException);p(this,"description","Generic or unknown database exceptions.");p(this,"logLevel",V.Exception)}};var di=class extends ge{constructor(){super(...arguments);p(this,"code",P.SequelizeNotInitializedException);p(this,"description","Generic or unknown database exceptions.");p(this,"logLevel",V.Exception)}};var he=class extends Aa{constructor(){super(...arguments);p(this,"code",P.NetworkException);p(this,"description","A network related issue has occurred.");p(this,"logLevel",V.Exception)}};var _e=class extends he{constructor(){super(...arguments);p(this,"code",P.HttpException);p(this,"description","A generic or unknown exception occurred related to an HTTP request.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:{limit:3,strategy:_a.CircuitBreaker}})}},Za=class extends _e{constructor(){super(...arguments);p(this,"code",P.HttpRequestException);p(this,"description","Base class for generic or unknown exceptions occuring during an HTTP request.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:{limit:3,strategy:_a.CircuitBreaker}})}},fi=class extends Za{constructor(){super(...arguments);p(this,"code",P.HttpRequestResourceNotFoundException);p(this,"description","The requested HTTP resource could not be found.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:404},retry:{limit:3,strategy:_a.CircuitBreaker}})}},gi=class extends Za{constructor(){super(...arguments);p(this,"code",P.MissingRequestBodyPropertyException);p(this,"description","HTTP request body is missing a required property.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:400},retry:!1})}},hi=class extends Za{constructor(){super(...arguments);p(this,"code",P.MissingRequestUrlParameterException);p(this,"description","HTTP request URL is missing a required parameter.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:400},retry:!1})}},_i=class extends Za{constructor(){super(...arguments);p(this,"code",P.MissingCookieException);p(this,"description","A required cookie is missing.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:!1})}},Ii=class extends _e{constructor(){super(...arguments);p(this,"code",P.HttpRequestException);p(this,"description","Generic or unknown exceptions related to HTTP responses.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:!1})}};var $a=class extends Aa{constructor(){super(...arguments);p(this,"code",P.ServiceProviderException);p(this,"description","An error originating from a third-party or service provider occurred.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:{limit:3,strategy:_a.Simple}})}};var ee=class extends $a{constructor(){super(...arguments);p(this,"code",P.AWSException);p(this,"description","An exception originating from the AWS integration occurred.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:{limit:3,strategy:_a.Simple}})}},Me=class extends ee{constructor(){super(...arguments);p(this,"code",P.StripeMissingSecretKeyException);p(this,"description","Missing AWS access key token.");p(this,"logLevel",V.Critical);p(this,"remediation",{response:{code:500},retry:!1})}};var Ma=class extends ee{constructor(){super(...arguments);p(this,"code",P.AWSException);p(this,"description","An exception originating from the AWS Cognito integration occurred.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:{limit:3,strategy:_a.Simple}})}},pi=class extends Ma{constructor(){super(...arguments);p(this,"code",P.CognitoInternalErrorException);p(this,"description","An internal error occurred originating from AWS Cognito.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:{limit:3,strategy:_a.Simple}})}},Si=class extends Ma{constructor(){super(...arguments);p(this,"code",P.CognitoInvalidUserPoolConfigurationException);p(this,"description","This exception is thrown when the user pool configuration is invalid.");p(this,"logLevel",V.Critical);p(this,"remediation",{response:{code:500},retry:!1})}},Ei=class extends Ma{constructor(){super(...arguments);p(this,"code",P.CognitoInvalidEmailRoleAccessPolicyException);p(this,"description","There is an access policy exception for the role provided for email configuration.");p(this,"logLevel",V.Critical);p(this,"remediation",{response:{code:500},retry:!1})}},Ti=class extends Ma{constructor(){super(...arguments);p(this,"code",P.CognitoInvalidSmsRoleAccessPolicyException);p(this,"description","This exception is returned when the role provided for SMS configuration does not have permission to publish using Amazon SNS.");p(this,"logLevel",V.Critical);p(this,"remediation",{response:{code:500},retry:!1})}},vi=class extends Ma{constructor(){super(...arguments);p(this,"code",P.CognitoInvalidSmsRoleTrustRelationshipException);p(this,"description","This exception is thrown when the trust relationship is invalid for the role provided for SMS configuration. This can happen if you do not trust -idp.amazonaws.com or the external ID provided in the role does not match what is provided in the SMS configuration for the user pool.");p(this,"logLevel",V.Critical);p(this,"remediation",{response:{code:500},retry:!1})}},bi=class extends Ma{constructor(){super(...arguments);p(this,"code",P.CognitoMissingUserPoolClientIdException);p(this,"description","Cognito user pool client ID configuration is missing.");p(this,"logLevel",V.Critical)}},Ui=class extends Ma{constructor(){super(...arguments);p(this,"code",P.CognitoMissingUserPoolIdException);p(this,"description","Cognito user pool ID configuration is missing.");p(this,"logLevel",V.Critical)}},Ni=class extends Ma{constructor(){super(...arguments);p(this,"code",P.CognitoUnexpectedLambdaException);p(this,"description","This exception is thrown when the Auth service encounters an unexpected exception with the AWS Lambda service.");p(this,"logLevel",V.Critical);p(this,"remediation",{response:{code:500},retry:{limit:3,strategy:_a.Simple}})}},Bi=class extends Ma{constructor(){super(...arguments);p(this,"code",P.CognitoInvalidParameterException);p(this,"description","This exception is thrown when the Cognito service encounters an invalid parameter.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:{limit:3,strategy:_a.Simple}})}},Pi=class extends Ma{constructor(){super(...arguments);p(this,"code",P.CognitoInvalidLambdaResponseException);p(this,"description","This exception is thrown when the Amazon service encounters an invalid AWS Lambda response.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:{limit:3,strategy:_a.Simple}})}},yi=class extends Ma{constructor(){super(...arguments);p(this,"code",P.CognitoResourceNotFoundException);p(this,"description","This exception is thrown when the Cognito service cannot find the requested resource.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:{limit:3,strategy:_a.Simple}})}},ki=class extends Ma{constructor(){super(...arguments);p(this,"code",P.CognitoUserLambdaValidationException);p(this,"description","This exception is thrown when the Cognito service encounters a user validation exception with the AWS Lambda service.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:{limit:3,strategy:_a.Simple}})}};var ie=class extends $a{constructor(){super(...arguments);p(this,"code",P.StripeException);p(this,"description","An exception occurred relating to Stripe.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:{limit:3,strategy:_a.Simple}})}},Mi=class extends ie{constructor(){super(...arguments);p(this,"code",P.StripeMissingSecretKeyException);p(this,"description","The Stripe secret key token is missing.");p(this,"logLevel",V.Critical);p(this,"remediation",{response:{code:500},retry:!1})}},Di=class extends ie{constructor(){super(...arguments);p(this,"code",P.StripeSubscriptionCreationFailedException);p(this,"description","Stripe subscription creation failed.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:{limit:3,strategy:_a.Simple}})}},xi=class extends ie{constructor(){super(...arguments);p(this,"code",P.StripePaymentMethodRequiredException);p(this,"description","An updated payment method is required.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:500},retry:{limit:3,strategy:_a.Simple}})}};var Ie=class extends Aa{constructor(){super(...arguments);p(this,"code",P.UserException);p(this,"description","Generic or unknown exceptions related to a user.");p(this,"logLevel",V.Exception)}},Fi=class extends Ie{constructor(){super(...arguments);p(this,"code",P.NullUserException);p(this,"description","An operation was performed on behalf a user that cannot be found in the database.");p(this,"logLevel",V.Critical)}},Li=class extends Ie{constructor(){super(...arguments);p(this,"code",P.UserStateConflictException);p(this,"description","Exception used for user state that exists in one system or another and isn't being actively managed, or synced between all systems, or at least differences accounted for.");p(this,"logLevel",V.Critical)}};var wi=class extends Aa{constructor(){super(...arguments);p(this,"code",P.ValidationException);p(this,"description","Generic or otherwise unknown input validation exception.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:400},retry:!1})}},Gi=class extends Aa{constructor(){super(...arguments);p(this,"code",P.InvalidTypeException);p(this,"description","Instance type is invalid.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:400},retry:!1})}},qi=class extends Aa{constructor(){super(...arguments);p(this,"code",P.MissingArgumentException);p(this,"description","A required argument is missing.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:400},retry:!1})}},Ki=class extends Aa{constructor(){super(...arguments);p(this,"code",P.MissingPropertyException);p(this,"description","A required property is missing.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:400},retry:!1})}},Oi=class extends Aa{constructor(){super(...arguments);p(this,"code",P.InvalidArgumentException);p(this,"description","An argument is invalid.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:400},retry:!1})}},ji=class extends Aa{constructor(){super(...arguments);p(this,"code",P.InvalidPropertyException);p(this,"description","An object property is invalid.");p(this,"logLevel",V.Exception);p(this,"remediation",{response:{code:400},retry:!1})}};var NM={[P.Exception]:Aa,[P.UnmanagedException]:Ue,[P.CaughtException]:We,[P.UncaughtException]:ze,[P.UnhandledPromiseRejectionException]:Ne,[P.AuthenticationException]:ha,[P.AuthenticationExpiredRefreshTokenException]:ui,[P.AuthenticationInvalidRefreshTokenException]:li,[P.AuthenticationLoginException]:ai,[P.AuthenticationLoginInvalidCredentialsException]:ei,[P.AuthenticationLoginTooManyFailedAttemptsException]:ii,[P.AuthenticationMissingDeviceKeyException]:ke,[P.AuthenticationMissingRefreshTokenException]:ke,[P.AuthenticationUnauthorizedAccessException]:Je,[P.AuthenticationCodeMismatchException]:mi,[P.AuthenticationExpiredCodeException]:ci,[P.AuthenticationLimitExceededException]:Ze,[P.AuthenticationNotAuthorizedException]:$e,[P.AuthenticationTooManyRequestsException]:Qe,[P.AuthenticationUserNotFoundException]:Xe,[P.AuthenticationSignupException]:si,[P.AuthenticationUsernameAvailabilityCheckException]:fe,[P.AuthenticationAliasExistException]:ti,[P.AuthenticationUsernameExistsException]:ri,[P.AuthenticationCodeDeliveryFailureException]:oi,[P.AuthenticationMFAMethodNotFoundException]:ni,[P.AuthenticationPasswordResetRequiredException]:Ce,[P.AuthenticationUserNotConfirmedException]:Ai,[P.DatabaseException]:ge,[P.SequelizeNotInitializedException]:di,[P.ServiceProviderException]:$a,[P.AWSException]:ee,[P.AWSMissingAccessKeyException]:Me,[P.AWSMissingSecretKeyException]:Me,[P.CognitoException]:Ma,[P.CognitoInternalErrorException]:pi,[P.CognitoInvalidEmailRoleAccessPolicyException]:Ei,[P.CognitoInvalidSmsRoleAccessPolicyException]:Ti,[P.CognitoInvalidSmsRoleTrustRelationshipException]:vi,[P.CognitoUnexpectedLambdaException]:Ni,[P.CognitoInvalidUserPoolConfigurationException]:Si,[P.CognitoInvalidLambdaResponseException]:Pi,[P.CognitoInvalidParameterException]:Bi,[P.CognitoMissingUserPoolIdException]:Ui,[P.CognitoMissingUserPoolClientIdException]:bi,[P.CognitoResourceNotFoundException]:yi,[P.CognitoUserLambdaValidationException]:ki,[P.StripeException]:ie,[P.StripeSubscriptionCreationFailedException]:Di,[P.StripeMissingSecretKeyException]:Mi,[P.StripePaymentMethodRequiredException]:xi,[P.NetworkException]:he,[P.HttpException]:_e,[P.HttpRequestException]:Za,[P.HttpRequestResourceNotFoundException]:fi,[P.HttpResponseException]:Ii,[P.MissingRequestBodyPropertyException]:gi,[P.MissingRequestUrlParameterException]:hi,[P.MissingCookieException]:_i,[P.ValidationException]:wi,[P.InvalidArgumentException]:Oi,[P.InvalidPropertyException]:ji,[P.InvalidTypeException]:Gi,[P.MissingArgumentException]:qi,[P.MissingPropertyException]:Ki,[P.ProcessException]:Ha,[P.ProcessWarningException]:Ve,[P.ProcessSigTermException]:Pe,[P.ProcessSigIntException]:ye,[P.FatalException]:Re,[P.MissingEnvironmentVariable]:Ye,[P.KillProcessException]:Be,[P.UserException]:Ie,[P.NullUserException]:Fi,[P.UserStateConflictException]:Li};var lm=require("@srclaunch/http-server");var nr=be(require("aws-sdk"));async function sr({accessKeyId:a,bucket:b,files:N,identityPoolId:x,region:L,secretAccessKey:j}){nr.default.config.update({accessKeyId:a,secretAccessKey:j,region:L});let w=new nr.default.S3({params:{Bucket:b}}),O=[];for(let $ of N){let{buffer:C,mimetype:da,originalname:ma}=$,ca=await w.upload({Body:C,Bucket:b,ContentType:da,Key:`uploads/images/${new Date().getSeconds()}.${ma}`,ACL:"public-read"}).promise();O=[...O,{url:ca.Location}]}return O}var Qa=({aws:a,dataClient:b})=>({create:async(N,x)=>{let L=N.params.model,j=N.body,w=N.files;if(!L)return x.status(400).json({error:"Missing model"});if(w){if(!a.secretAccessKey||!a.accessKeyId||!a.cognito.identityPoolId||!a.s3.bucket||!a.s3.region)throw new Error("Missing AWS credentials");let $=await sr({accessKeyId:a.accessKeyId,secretAccessKey:a.secretAccessKey,files:w,bucket:a.s3.bucket,identityPoolId:a.cognito.identityPoolId,region:a.s3.region});j.images=$}let O=await b.create(L,j);return O?x.status(200).json(sn({},O.dataValues)):x.status(500).json({error:"Failed to create entity"})},deleteMany:async(N,x)=>{let L=N.params.model,j=N.body;if(!L)return x.status(400).send("Missing model");let w=await b.deleteMany(L,j);return x.status(200).json(w)},deleteOne:async(N,x)=>{let L=N.params.model,j=N.params.id;if(!L)return x.status(400).json({error:"Missing model"});if(!j)return x.status(400).json({error:"Missing id"});let w=await b.deleteOne(L,j);return x.status(200).json(w)},getOne:async(N,x)=>{let L=N.params.model,j=N.params.id;if(!L)return x.status(400).json({error:"Missing model"});if(!j)return x.status(400).json({error:"Missing id"});let w=await b.getOne(L,j);return x.status(200).json(w)},getMany:async(N,x)=>{var da;let L=(da=N.params.conditions)!=null?da:void 0,ma=N.params,{limit:j,model:w,offset:O}=ma,$=Qr(ma,["limit","model","offset"]);if(!w)return x.status(400).send("Missing model");let C=await b.getMany(w,{conditions:L,filters:$,limit:j?Number.parseInt(j):25,offset:O?Number.parseInt(O):0});return x.status(200).json(C)},healthcheck:async(N,x)=>x.status(200).send(),updateMany:async(N,x)=>{let L=N.params.model,j=N.body;if(!L)return x.status(400).json({error:"Missing model"});let w=await b.updateMany(L,j);return w?x.status(200).json(sn({},w.dataValues)):x.status(500).json({error:"Failed to update entities"})},updateOne:async(N,x)=>{let{id:L,model:j}=N.params,w=N.body,O=N.files;if(!j)return x.status(400).json({error:"Missing model"});if(!L)return x.status(400).json({error:"Missing id"});if(O){if(!a.secretAccessKey||!a.accessKeyId||!a.cognito.identityPoolId||!a.s3.bucket||!a.s3.region)throw new Error("Missing AWS credentials");let C=await sr({accessKeyId:a.accessKeyId,secretAccessKey:a.secretAccessKey,files:O,bucket:a.s3.bucket,identityPoolId:a.cognito.identityPoolId,region:a.s3.region});w.images=w.images&&w.images[0]?[...JSON.parse(w.images[0]),...C]:[...C]}console.log({model:j,id:L,params:w});let $=await b.updateOne(j,L,w);return $?x.status(200).json($):x.status(500).json({error:"Failed to update entity"})}});var rr=be(require("crypto"));var lr=be(require("aws-sdk")),rm=be(require("aws-sdk")),Vi=require("sequelize"),vc=Object.create,ur=Object.defineProperty,bc=Object.getOwnPropertyDescriptor,Zo=Object.getOwnPropertyNames,Uc=Object.getPrototypeOf,Nc=Object.prototype.hasOwnProperty,Bc=a=>ur(a,"__esModule",{value:!0}),Pc=(a=>typeof require!="undefined"?require:typeof Proxy!="undefined"?new Proxy(a,{get:(b,N)=>(typeof require!="undefined"?require:b)[N]}):a)(function(a){if(typeof require!="undefined")return require.apply(this,arguments);throw new Error('Dynamic require of "'+a+'" is not supported')}),ya=(a,b)=>function(){return b||(0,a[Zo(a)[0]])((b={exports:{}}).exports,b),b.exports},yc=(a,b,N,x)=>{if(b&&typeof b=="object"||typeof b=="function")for(let L of Zo(b))!Nc.call(a,L)&&(N||L!=="default")&&ur(a,L,{get:()=>b[L],enumerable:!(x=bc(b,L))||x.enumerable});return a},$o=(a,b)=>yc(Bc(ur(a!=null?vc(Uc(a)):{},"default",!b&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),kc=ya({"node_modules/pluralize/pluralize.js"(a,b){(function(N,x){typeof Pc=="function"&&typeof a=="object"&&typeof b=="object"?b.exports=x():typeof define=="function"&&define.amd?define(function(){return x()}):N.pluralize=x()})(a,function(){var N=[],x=[],L={},j={},w={};function O(Z){return typeof Z=="string"?new RegExp("^"+Z+"$","i"):Z}function $(Z,aa){return Z===aa?aa:Z===Z.toLowerCase()?aa.toLowerCase():Z===Z.toUpperCase()?aa.toUpperCase():Z[0]===Z[0].toUpperCase()?aa.charAt(0).toUpperCase()+aa.substr(1).toLowerCase():aa.toLowerCase()}function C(Z,aa){return Z.replace(/\$(\d{1,2})/g,function(Ia,fa){return aa[fa]||""})}function da(Z,aa){return Z.replace(aa[0],function(Ia,fa){var sa=C(aa[1],arguments);return $(Ia===""?Z[fa-1]:Ia,sa)})}function ma(Z,aa,Ia){if(!Z.length||L.hasOwnProperty(Z))return aa;for(var fa=Ia.length;fa--;){var sa=Ia[fa];if(sa[0].test(aa))return da(aa,sa)}return aa}function ca(Z,aa,Ia){return function(fa){var sa=fa.toLowerCase();return aa.hasOwnProperty(sa)?$(fa,sa):Z.hasOwnProperty(sa)?$(fa,Z[sa]):ma(sa,fa,Ia)}}function va(Z,aa,Ia,fa){return function(sa){var Fa=sa.toLowerCase();return aa.hasOwnProperty(Fa)?!0:Z.hasOwnProperty(Fa)?!1:ma(Fa,Fa,Ia)===Fa}}function ua(Z,aa,Ia){var fa=aa===1?ua.singular(Z):ua.plural(Z);return(Ia?aa+" ":"")+fa}return ua.plural=ca(w,j,N),ua.isPlural=va(w,j,N),ua.singular=ca(j,w,x),ua.isSingular=va(j,w,x),ua.addPluralRule=function(Z,aa){N.push([O(Z),aa])},ua.addSingularRule=function(Z,aa){x.push([O(Z),aa])},ua.addUncountableRule=function(Z){if(typeof Z=="string"){L[Z.toLowerCase()]=!0;return}ua.addPluralRule(Z,"$0"),ua.addSingularRule(Z,"$0")},ua.addIrregularRule=function(Z,aa){aa=aa.toLowerCase(),Z=Z.toLowerCase(),w[Z]=aa,j[aa]=Z},[["I","we"],["me","us"],["he","they"],["she","they"],["them","them"],["myself","ourselves"],["yourself","yourselves"],["itself","themselves"],["herself","themselves"],["himself","themselves"],["themself","themselves"],["is","are"],["was","were"],["has","have"],["this","these"],["that","those"],["echo","echoes"],["dingo","dingoes"],["volcano","volcanoes"],["tornado","tornadoes"],["torpedo","torpedoes"],["genus","genera"],["viscus","viscera"],["stigma","stigmata"],["stoma","stomata"],["dogma","dogmata"],["lemma","lemmata"],["schema","schemata"],["anathema","anathemata"],["ox","oxen"],["axe","axes"],["die","dice"],["yes","yeses"],["foot","feet"],["eave","eaves"],["goose","geese"],["tooth","teeth"],["quiz","quizzes"],["human","humans"],["proof","proofs"],["carve","carves"],["valve","valves"],["looey","looies"],["thief","thieves"],["groove","grooves"],["pickaxe","pickaxes"],["passerby","passersby"]].forEach(function(Z){return ua.addIrregularRule(Z[0],Z[1])}),[[/s?$/i,"s"],[/[^\u0000-\u007F]$/i,"$0"],[/([^aeiou]ese)$/i,"$1"],[/(ax|test)is$/i,"$1es"],[/(alias|[^aou]us|t[lm]as|gas|ris)$/i,"$1es"],[/(e[mn]u)s?$/i,"$1s"],[/([^l]ias|[aeiou]las|[ejzr]as|[iu]am)$/i,"$1"],[/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i,"$1i"],[/(alumn|alg|vertebr)(?:a|ae)$/i,"$1ae"],[/(seraph|cherub)(?:im)?$/i,"$1im"],[/(her|at|gr)o$/i,"$1oes"],[/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|automat|quor)(?:a|um)$/i,"$1a"],[/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)(?:a|on)$/i,"$1a"],[/sis$/i,"ses"],[/(?:(kni|wi|li)fe|(ar|l|ea|eo|oa|hoo)f)$/i,"$1$2ves"],[/([^aeiouy]|qu)y$/i,"$1ies"],[/([^ch][ieo][ln])ey$/i,"$1ies"],[/(x|ch|ss|sh|zz)$/i,"$1es"],[/(matr|cod|mur|sil|vert|ind|append)(?:ix|ex)$/i,"$1ices"],[/\b((?:tit)?m|l)(?:ice|ouse)$/i,"$1ice"],[/(pe)(?:rson|ople)$/i,"$1ople"],[/(child)(?:ren)?$/i,"$1ren"],[/eaux$/i,"$0"],[/m[ae]n$/i,"men"],["thou","you"]].forEach(function(Z){return ua.addPluralRule(Z[0],Z[1])}),[[/s$/i,""],[/(ss)$/i,"$1"],[/(wi|kni|(?:after|half|high|low|mid|non|night|[^\w]|^)li)ves$/i,"$1fe"],[/(ar|(?:wo|[ae])l|[eo][ao])ves$/i,"$1f"],[/ies$/i,"y"],[/\b([pl]|zomb|(?:neck|cross)?t|coll|faer|food|gen|goon|group|lass|talk|goal|cut)ies$/i,"$1ie"],[/\b(mon|smil)ies$/i,"$1ey"],[/\b((?:tit)?m|l)ice$/i,"$1ouse"],[/(seraph|cherub)im$/i,"$1"],[/(x|ch|ss|sh|zz|tto|go|cho|alias|[^aou]us|t[lm]as|gas|(?:her|at|gr)o|[aeiou]ris)(?:es)?$/i,"$1"],[/(analy|diagno|parenthe|progno|synop|the|empha|cri|ne)(?:sis|ses)$/i,"$1sis"],[/(movie|twelve|abuse|e[mn]u)s$/i,"$1"],[/(test)(?:is|es)$/i,"$1is"],[/(alumn|syllab|vir|radi|nucle|fung|cact|stimul|termin|bacill|foc|uter|loc|strat)(?:us|i)$/i,"$1us"],[/(agend|addend|millenni|dat|extrem|bacteri|desiderat|strat|candelabr|errat|ov|symposi|curricul|quor)a$/i,"$1um"],[/(apheli|hyperbat|periheli|asyndet|noumen|phenomen|criteri|organ|prolegomen|hedr|automat)a$/i,"$1on"],[/(alumn|alg|vertebr)ae$/i,"$1a"],[/(cod|mur|sil|vert|ind)ices$/i,"$1ex"],[/(matr|append)ices$/i,"$1ix"],[/(pe)(rson|ople)$/i,"$1rson"],[/(child)ren$/i,"$1"],[/(eau)x?$/i,"$1"],[/men$/i,"man"]].forEach(function(Z){return ua.addSingularRule(Z[0],Z[1])}),["adulthood","advice","agenda","aid","aircraft","alcohol","ammo","analytics","anime","athletics","audio","bison","blood","bream","buffalo","butter","carp","cash","chassis","chess","clothing","cod","commerce","cooperation","corps","debris","diabetes","digestion","elk","energy","equipment","excretion","expertise","firmware","flounder","fun","gallows","garbage","graffiti","hardware","headquarters","health","herpes","highjinks","homework","housework","information","jeans","justice","kudos","labour","literature","machinery","mackerel","mail","media","mews","moose","music","mud","manga","news","only","personnel","pike","plankton","pliers","police","pollution","premises","rain","research","rice","salmon","scissors","series","sewage","shambles","shrimp","software","species","staff","swine","tennis","traffic","transportation","trout","tuna","wealth","welfare","whiting","wildebeest","wildlife","you",/pok[eé]mon$/i,/[^aeiou]ese$/i,/deer$/i,/fish$/i,/measles$/i,/o[iu]s$/i,/pox$/i,/sheep$/i].forEach(ua.addUncountableRule),ua})}}),Oa=ya({"node_modules/tslib/tslib.js"(a,b){var N,x,L,j,w,O,$,C,da,ma,ca,va,ua,Z,aa,Ia,fa,sa,Fa,Xa,Ra,Ca,Ya,ka;(function(oa){var Da=typeof global=="object"?global:typeof self=="object"?self:typeof this=="object"?this:{};typeof define=="function"&&define.amd?define("tslib",["exports"],function(G){oa(xa(Da,xa(G)))}):typeof b=="object"&&typeof b.exports=="object"?oa(xa(Da,xa(b.exports))):oa(xa(Da));function xa(G,H){return G!==Da&&(typeof Object.create=="function"?Object.defineProperty(G,"__esModule",{value:!0}):G.__esModule=!0),function(z,K){return G[z]=H?H(z,K):K}}})(function(oa){var Da=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(G,H){G.__proto__=H}||function(G,H){for(var z in H)Object.prototype.hasOwnProperty.call(H,z)&&(G[z]=H[z])};N=function(G,H){if(typeof H!="function"&&H!==null)throw new TypeError("Class extends value "+String(H)+" is not a constructor or null");Da(G,H);function z(){this.constructor=G}G.prototype=H===null?Object.create(H):(z.prototype=H.prototype,new z)},x=Object.assign||function(G){for(var H,z=1,K=arguments.length;z<K;z++){H=arguments[z];for(var Q in H)Object.prototype.hasOwnProperty.call(H,Q)&&(G[Q]=H[Q])}return G},L=function(G,H){var z={};for(var K in G)Object.prototype.hasOwnProperty.call(G,K)&&H.indexOf(K)<0&&(z[K]=G[K]);if(G!=null&&typeof Object.getOwnPropertySymbols=="function")for(var Q=0,K=Object.getOwnPropertySymbols(G);Q<K.length;Q++)H.indexOf(K[Q])<0&&Object.prototype.propertyIsEnumerable.call(G,K[Q])&&(z[K[Q]]=G[K[Q]]);return z},j=function(G,H,z,K){var Q=arguments.length,U=Q<3?H:K===null?K=Object.getOwnPropertyDescriptor(H,z):K,q;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")U=Reflect.decorate(G,H,z,K);else for(var X=G.length-1;X>=0;X--)(q=G[X])&&(U=(Q<3?q(U):Q>3?q(H,z,U):q(H,z))||U);return Q>3&&U&&Object.defineProperty(H,z,U),U},w=function(G,H){return function(z,K){H(z,K,G)}},O=function(G,H){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(G,H)},$=function(G,H,z,K){function Q(U){return U instanceof z?U:new z(function(q){q(U)})}return new(z||(z=Promise))(function(U,q){function X(la){try{Y(K.next(la))}catch(pa){q(pa)}}function ta(la){try{Y(K.throw(la))}catch(pa){q(pa)}}function Y(la){la.done?U(la.value):Q(la.value).then(X,ta)}Y((K=K.apply(G,H||[])).next())})},C=function(G,H){var z={label:0,sent:function(){if(U[0]&1)throw U[1];return U[1]},trys:[],ops:[]},K,Q,U,q;return q={next:X(0),throw:X(1),return:X(2)},typeof Symbol=="function"&&(q[Symbol.iterator]=function(){return this}),q;function X(Y){return function(la){return ta([Y,la])}}function ta(Y){if(K)throw new TypeError("Generator is already executing.");for(;z;)try{if(K=1,Q&&(U=Y[0]&2?Q.return:Y[0]?Q.throw||((U=Q.return)&&U.call(Q),0):Q.next)&&!(U=U.call(Q,Y[1])).done)return U;switch(Q=0,U&&(Y=[Y[0]&2,U.value]),Y[0]){case 0:case 1:U=Y;break;case 4:return z.label++,{value:Y[1],done:!1};case 5:z.label++,Q=Y[1],Y=[0];continue;case 7:Y=z.ops.pop(),z.trys.pop();continue;default:if(U=z.trys,!(U=U.length>0&&U[U.length-1])&&(Y[0]===6||Y[0]===2)){z=0;continue}if(Y[0]===3&&(!U||Y[1]>U[0]&&Y[1]<U[3])){z.label=Y[1];break}if(Y[0]===6&&z.label<U[1]){z.label=U[1],U=Y;break}if(U&&z.label<U[2]){z.label=U[2],z.ops.push(Y);break}U[2]&&z.ops.pop(),z.trys.pop();continue}Y=H.call(G,z)}catch(la){Y=[6,la],Q=0}finally{K=U=0}if(Y[0]&5)throw Y[1];return{value:Y[0]?Y[1]:void 0,done:!0}}},da=function(G,H){for(var z in G)z!=="default"&&!Object.prototype.hasOwnProperty.call(H,z)&&ka(H,G,z)},ka=Object.create?function(G,H,z,K){K===void 0&&(K=z),Object.defineProperty(G,K,{enumerable:!0,get:function(){return H[z]}})}:function(G,H,z,K){K===void 0&&(K=z),G[K]=H[z]},ma=function(G){var H=typeof Symbol=="function"&&Symbol.iterator,z=H&&G[H],K=0;if(z)return z.call(G);if(G&&typeof G.length=="number")return{next:function(){return G&&K>=G.length&&(G=void 0),{value:G&&G[K++],done:!G}}};throw new TypeError(H?"Object is not iterable.":"Symbol.iterator is not defined.")},ca=function(G,H){var z=typeof Symbol=="function"&&G[Symbol.iterator];if(!z)return G;var K=z.call(G),Q,U=[],q;try{for(;(H===void 0||H-- >0)&&!(Q=K.next()).done;)U.push(Q.value)}catch(X){q={error:X}}finally{try{Q&&!Q.done&&(z=K.return)&&z.call(K)}finally{if(q)throw q.error}}return U},va=function(){for(var G=[],H=0;H<arguments.length;H++)G=G.concat(ca(arguments[H]));return G},ua=function(){for(var G=0,H=0,z=arguments.length;H<z;H++)G+=arguments[H].length;for(var K=Array(G),Q=0,H=0;H<z;H++)for(var U=arguments[H],q=0,X=U.length;q<X;q++,Q++)K[Q]=U[q];return K},Z=function(G,H,z){if(z||arguments.length===2)for(var K=0,Q=H.length,U;K<Q;K++)(U||!(K in H))&&(U||(U=Array.prototype.slice.call(H,0,K)),U[K]=H[K]);return G.concat(U||Array.prototype.slice.call(H))},aa=function(G){return this instanceof aa?(this.v=G,this):new aa(G)},Ia=function(G,H,z){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var K=z.apply(G,H||[]),Q,U=[];return Q={},q("next"),q("throw"),q("return"),Q[Symbol.asyncIterator]=function(){return this},Q;function q(ra){K[ra]&&(Q[ra]=function(ga){return new Promise(function(Ba,Ee){U.push([ra,ga,Ba,Ee])>1||X(ra,ga)})})}function X(ra,ga){try{ta(K[ra](ga))}catch(Ba){pa(U[0][3],Ba)}}function ta(ra){ra.value instanceof aa?Promise.resolve(ra.value.v).then(Y,la):pa(U[0][2],ra)}function Y(ra){X("next",ra)}function la(ra){X("throw",ra)}function pa(ra,ga){ra(ga),U.shift(),U.length&&X(U[0][0],U[0][1])}},fa=function(G){var H,z;return H={},K("next"),K("throw",function(Q){throw Q}),K("return"),H[Symbol.iterator]=function(){return this},H;function K(Q,U){H[Q]=G[Q]?function(q){return(z=!z)?{value:aa(G[Q](q)),done:Q==="return"}:U?U(q):q}:U}},sa=function(G){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var H=G[Symbol.asyncIterator],z;return H?H.call(G):(G=typeof ma=="function"?ma(G):G[Symbol.iterator](),z={},K("next"),K("throw"),K("return"),z[Symbol.asyncIterator]=function(){return this},z);function K(U){z[U]=G[U]&&function(q){return new Promise(function(X,ta){q=G[U](q),Q(X,ta,q.done,q.value)})}}function Q(U,q,X,ta){Promise.resolve(ta).then(function(Y){U({value:Y,done:X})},q)}},Fa=function(G,H){return Object.defineProperty?Object.defineProperty(G,"raw",{value:H}):G.raw=H,G};var xa=Object.create?function(G,H){Object.defineProperty(G,"default",{enumerable:!0,value:H})}:function(G,H){G.default=H};Xa=function(G){if(G&&G.__esModule)return G;var H={};if(G!=null)for(var z in G)z!=="default"&&Object.prototype.hasOwnProperty.call(G,z)&&ka(H,G,z);return xa(H,G),H},Ra=function(G){return G&&G.__esModule?G:{default:G}},Ca=function(G,H,z,K){if(z==="a"&&!K)throw new TypeError("Private accessor was defined without a getter");if(typeof H=="function"?G!==H||!K:!H.has(G))throw new TypeError("Cannot read private member from an object whose class did not declare it");return z==="m"?K:z==="a"?K.call(G):K?K.value:H.get(G)},Ya=function(G,H,z,K,Q){if(K==="m")throw new TypeError("Private method is not writable");if(K==="a"&&!Q)throw new TypeError("Private accessor was defined without a setter");if(typeof H=="function"?G!==H||!Q:!H.has(G))throw new TypeError("Cannot write private member to an object whose class did not declare it");return K==="a"?Q.call(G,z):Q?Q.value=z:H.set(G,z),z},oa("__extends",N),oa("__assign",x),oa("__rest",L),oa("__decorate",j),oa("__param",w),oa("__metadata",O),oa("__awaiter",$),oa("__generator",C),oa("__exportStar",da),oa("__createBinding",ka),oa("__values",ma),oa("__read",ca),oa("__spread",va),oa("__spreadArrays",ua),oa("__spreadArray",Z),oa("__await",aa),oa("__asyncGenerator",Ia),oa("__asyncDelegator",fa),oa("__asyncValues",sa),oa("__makeTemplateObject",Fa),oa("__importStar",Xa),oa("__importDefault",Ra),oa("__classPrivateFieldGet",Ca),oa("__classPrivateFieldSet",Ya)})}}),Mc=ya({"node_modules/lower-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.lowerCase=a.localeLowerCase=void 0;var b={tr:{regexp:/\u0130|\u0049|\u0049\u0307/g,map:{\u0130:"i",I:"\u0131",I\u0307:"i"}},az:{regexp:/\u0130/g,map:{\u0130:"i",I:"\u0131",I\u0307:"i"}},lt:{regexp:/\u0049|\u004A|\u012E|\u00CC|\u00CD|\u0128/g,map:{I:"i\u0307",J:"j\u0307",\u012E:"\u012F\u0307",\u00CC:"i\u0307\u0300",\u00CD:"i\u0307\u0301",\u0128:"i\u0307\u0303"}}};function N(L,j){var w=b[j.toLowerCase()];return x(w?L.replace(w.regexp,function(O){return w.map[O]}):L)}a.localeLowerCase=N;function x(L){return L.toLowerCase()}a.lowerCase=x}}),Se=ya({"node_modules/no-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.noCase=void 0;var b=Mc(),N=[/([a-z0-9])([A-Z])/g,/([A-Z])([A-Z][a-z])/g],x=/[^A-Z0-9]+/gi;function L(w,O){O===void 0&&(O={});for(var $=O.splitRegexp,C=$===void 0?N:$,da=O.stripRegexp,ma=da===void 0?x:da,ca=O.transform,va=ca===void 0?b.lowerCase:ca,ua=O.delimiter,Z=ua===void 0?" ":ua,aa=j(j(w,C,"$1\0$2"),ma,"\0"),Ia=0,fa=aa.length;aa.charAt(Ia)==="\0";)Ia++;for(;aa.charAt(fa-1)==="\0";)fa--;return aa.slice(Ia,fa).split("\0").map(va).join(Z)}a.noCase=L;function j(w,O,$){return O instanceof RegExp?w.replace(O,$):O.reduce(function(C,da){return C.replace(da,$)},w)}}}),Qo=ya({"node_modules/pascal-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.pascalCase=a.pascalCaseTransformMerge=a.pascalCaseTransform=void 0;var b=Oa(),N=Se();function x(w,O){var $=w.charAt(0),C=w.substr(1).toLowerCase();return O>0&&$>="0"&&$<="9"?"_"+$+C:""+$.toUpperCase()+C}a.pascalCaseTransform=x;function L(w){return w.charAt(0).toUpperCase()+w.slice(1).toLowerCase()}a.pascalCaseTransformMerge=L;function j(w,O){return O===void 0&&(O={}),N.noCase(w,b.__assign({delimiter:"",transform:x},O))}a.pascalCase=j}}),Dc=ya({"node_modules/camel-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.camelCase=a.camelCaseTransformMerge=a.camelCaseTransform=void 0;var b=Oa(),N=Qo();function x(w,O){return O===0?w.toLowerCase():N.pascalCaseTransform(w,O)}a.camelCaseTransform=x;function L(w,O){return O===0?w.toLowerCase():N.pascalCaseTransformMerge(w)}a.camelCaseTransformMerge=L;function j(w,O){return O===void 0&&(O={}),N.pascalCase(w,b.__assign({transform:x},O))}a.camelCase=j}}),Xo=ya({"node_modules/upper-case-first/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.upperCaseFirst=void 0;function b(N){return N.charAt(0).toUpperCase()+N.substr(1)}a.upperCaseFirst=b}}),Co=ya({"node_modules/capital-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.capitalCase=a.capitalCaseTransform=void 0;var b=Oa(),N=Se(),x=Xo();function L(w){return x.upperCaseFirst(w.toLowerCase())}a.capitalCaseTransform=L;function j(w,O){return O===void 0&&(O={}),N.noCase(w,b.__assign({delimiter:" ",transform:L},O))}a.capitalCase=j}}),xc=ya({"node_modules/upper-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.upperCase=a.localeUpperCase=void 0;var b={tr:{regexp:/[\u0069]/g,map:{i:"\u0130"}},az:{regexp:/[\u0069]/g,map:{i:"\u0130"}},lt:{regexp:/[\u0069\u006A\u012F]\u0307|\u0069\u0307[\u0300\u0301\u0303]/g,map:{i\u0307:"I",j\u0307:"J",\u012F\u0307:"\u012E",i\u0307\u0300:"\xCC",i\u0307\u0301:"\xCD",i\u0307\u0303:"\u0128"}}};function N(L,j){var w=b[j.toLowerCase()];return x(w?L.replace(w.regexp,function(O){return w.map[O]}):L)}a.localeUpperCase=N;function x(L){return L.toUpperCase()}a.upperCase=x}}),Fc=ya({"node_modules/constant-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.constantCase=void 0;var b=Oa(),N=Se(),x=xc();function L(j,w){return w===void 0&&(w={}),N.noCase(j,b.__assign({delimiter:"_",transform:x.upperCase},w))}a.constantCase=L}}),Hi=ya({"node_modules/dot-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.dotCase=void 0;var b=Oa(),N=Se();function x(L,j){return j===void 0&&(j={}),N.noCase(L,b.__assign({delimiter:"."},j))}a.dotCase=x}}),Lc=ya({"node_modules/header-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.headerCase=void 0;var b=Oa(),N=Co();function x(L,j){return j===void 0&&(j={}),N.capitalCase(L,b.__assign({delimiter:"-"},j))}a.headerCase=x}}),wc=ya({"node_modules/param-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.paramCase=void 0;var b=Oa(),N=Hi();function x(L,j){return j===void 0&&(j={}),N.dotCase(L,b.__assign({delimiter:"-"},j))}a.paramCase=x}}),Gc=ya({"node_modules/path-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.pathCase=void 0;var b=Oa(),N=Hi();function x(L,j){return j===void 0&&(j={}),N.dotCase(L,b.__assign({delimiter:"/"},j))}a.pathCase=x}}),qc=ya({"node_modules/sentence-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.sentenceCase=a.sentenceCaseTransform=void 0;var b=Oa(),N=Se(),x=Xo();function L(w,O){var $=w.toLowerCase();return O===0?x.upperCaseFirst($):$}a.sentenceCaseTransform=L;function j(w,O){return O===void 0&&(O={}),N.noCase(w,b.__assign({delimiter:" ",transform:L},O))}a.sentenceCase=j}}),Kc=ya({"node_modules/snake-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0}),a.snakeCase=void 0;var b=Oa(),N=Hi();function x(L,j){return j===void 0&&(j={}),N.dotCase(L,b.__assign({delimiter:"_"},j))}a.snakeCase=x}}),Oc=ya({"node_modules/change-case/dist/index.js"(a){"use strict";Object.defineProperty(a,"__esModule",{value:!0});var b=Oa();b.__exportStar(Dc(),a),b.__exportStar(Co(),a),b.__exportStar(Fc(),a),b.__exportStar(Hi(),a),b.__exportStar(Lc(),a),b.__exportStar(Se(),a),b.__exportStar(wc(),a),b.__exportStar(Qo(),a),b.__exportStar(Gc(),a),b.__exportStar(qc(),a),b.__exportStar(Kc(),a)}}),jc=Object.create,or=Object.defineProperty,Hc=Object.getOwnPropertyDescriptor,am=Object.getOwnPropertyNames,Wc=Object.getPrototypeOf,zc=Object.prototype.hasOwnProperty,Vc=a=>or(a,"__esModule",{value:!0}),Wi=(a,b)=>function(){return b||(0,a[am(a)[0]])((b={exports:{}}).exports,b),b.exports},Rc=(a,b,N,x)=>{if(b&&typeof b=="object"||typeof b=="function")for(let L of am(b))!zc.call(a,L)&&(N||L!=="default")&&or(a,L,{get:()=>b[L],enumerable:!(x=Hc(b,L))||x.enumerable});return a},Yc=(a,b)=>Rc(Vc(or(a!=null?jc(Wc(a)):{},"default",!b&&a&&a.__esModule?{get:()=>a.default,enumerable:!0}:{value:a,enumerable:!0})),a),em=Wi({"../../node_modules/object-assign/index.js"(a,b){"use strict";var N=Object.getOwnPropertySymbols,x=Object.prototype.hasOwnProperty,L=Object.prototype.propertyIsEnumerable;function j(O){if(O==null)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(O)}function w(){try{if(!Object.assign)return!1;var O=new String("abc");if(O[5]="de",Object.getOwnPropertyNames(O)[0]==="5")return!1;for(var $={},C=0;C<10;C++)$["_"+String.fromCharCode(C)]=C;var da=Object.getOwnPropertyNames($).map(function(ca){return $[ca]});if(da.join("")!=="0123456789")return!1;var ma={};return"abcdefghijklmnopqrst".split("").forEach(function(ca){ma[ca]=ca}),Object.keys(Object.assign({},ma)).join("")==="abcdefghijklmnopqrst"}catch(ca){return!1}}b.exports=w()?Object.assign:function(O,$){for(var C,da=j(O),ma,ca=1;ca<arguments.length;ca++){C=Object(arguments[ca]);for(var va in C)x.call(C,va)&&(da[va]=C[va]);if(N){ma=N(C);for(var ua=0;ua<ma.length;ua++)L.call(C,ma[ua])&&(da[ma[ua]]=C[ma[ua]])}}return da}}}),Jc=Wi({"../../node_modules/react/cjs/react.production.min.js"(a){"use strict";var b=em(),N=60103,x=60106;a.Fragment=60107,a.StrictMode=60108,a.Profiler=60114;var L=60109,j=60110,w=60112;a.Suspense=60113;var O=60115,$=60116;typeof Symbol=="function"&&Symbol.for&&(C=Symbol.for,N=C("react.element"),x=C("react.portal"),a.Fragment=C("react.fragment"),a.StrictMode=C("react.strict_mode"),a.Profiler=C("react.profiler"),L=C("react.provider"),j=C("react.context"),w=C("react.forward_ref"),a.Suspense=C("react.suspense"),O=C("react.memo"),$=C("react.lazy"));var C,da=typeof Symbol=="function"&&Symbol.iterator;function ma(U){return U===null||typeof U!="object"?null:(U=da&&U[da]||U["@@iterator"],typeof U=="function"?U:null)}function ca(U){for(var q="https://reactjs.org/docs/error-decoder.html?invariant="+U,X=1;X<arguments.length;X++)q+="&args[]="+encodeURIComponent(arguments[X]);return"Minified React error #"+U+"; visit "+q+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var va={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},ua={};function Z(U,q,X){this.props=U,this.context=q,this.refs=ua,this.updater=X||va}Z.prototype.isReactComponent={},Z.prototype.setState=function(U,q){if(typeof U!="object"&&typeof U!="function"&&U!=null)throw Error(ca(85));this.updater.enqueueSetState(this,U,q,"setState")},Z.prototype.forceUpdate=function(U){this.updater.enqueueForceUpdate(this,U,"forceUpdate")};function aa(){}aa.prototype=Z.prototype;function Ia(U,q,X){this.props=U,this.context=q,this.refs=ua,this.updater=X||va}var fa=Ia.prototype=new aa;fa.constructor=Ia,b(fa,Z.prototype),fa.isPureReactComponent=!0;var sa={current:null},Fa=Object.prototype.hasOwnProperty,Xa={key:!0,ref:!0,__self:!0,__source:!0};function Ra(U,q,X){var ta,Y={},la=null,pa=null;if(q!=null)for(ta in q.ref!==void 0&&(pa=q.ref),q.key!==void 0&&(la=""+q.key),q)Fa.call(q,ta)&&!Xa.hasOwnProperty(ta)&&(Y[ta]=q[ta]);var ra=arguments.length-2;if(ra===1)Y.children=X;else if(1<ra){for(var ga=Array(ra),Ba=0;Ba<ra;Ba++)ga[Ba]=arguments[Ba+2];Y.children=ga}if(U&&U.defaultProps)for(ta in ra=U.defaultProps,ra)Y[ta]===void 0&&(Y[ta]=ra[ta]);return{$$typeof:N,type:U,key:la,ref:pa,props:Y,_owner:sa.current}}function Ca(U,q){return{$$typeof:N,type:U.type,key:q,ref:U.ref,props:U.props,_owner:U._owner}}function Ya(U){return typeof U=="object"&&U!==null&&U.$$typeof===N}function ka(U){var q={"=":"=0",":":"=2"};return"$"+U.replace(/[=:]/g,function(X){return q[X]})}var oa=/\/+/g;function Da(U,q){return typeof U=="object"&&U!==null&&U.key!=null?ka(""+U.key):q.toString(36)}function xa(U,q,X,ta,Y){var la=typeof U;(la==="undefined"||la==="boolean")&&(U=null);var pa=!1;if(U===null)pa=!0;else switch(la){case"string":case"number":pa=!0;break;case"object":switch(U.$$typeof){case N:case x:pa=!0}}if(pa)return pa=U,Y=Y(pa),U=ta===""?"."+Da(pa,0):ta,Array.isArray(Y)?(X="",U!=null&&(X=U.replace(oa,"$&/")+"/"),xa(Y,q,X,"",function(Ba){return Ba})):Y!=null&&(Ya(Y)&&(Y=Ca(Y,X+(!Y.key||pa&&pa.key===Y.key?"":(""+Y.key).replace(oa,"$&/")+"/")+U)),q.push(Y)),1;if(pa=0,ta=ta===""?".":ta+":",Array.isArray(U))for(var ra=0;ra<U.length;ra++){la=U[ra];var ga=ta+Da(la,ra);pa+=xa(la,q,X,ga,Y)}else if(ga=ma(U),typeof ga=="function")for(U=ga.call(U),ra=0;!(la=U.next()).done;)la=la.value,ga=ta+Da(la,ra++),pa+=xa(la,q,X,ga,Y);else if(la==="object")throw q=""+U,Error(ca(31,q==="[object Object]"?"object with keys {"+Object.keys(U).join(", ")+"}":q));return pa}function G(U,q,X){if(U==null)return U;var ta=[],Y=0;return xa(U,ta,"","",function(la){return q.call(X,la,Y++)}),ta}function H(U){if(U._status===-1){var q=U._result;q=q(),U._status=0,U._result=q,q.then(function(X){U._status===0&&(X=X.default,U._status=1,U._result=X)},function(X){U._status===0&&(U._status=2,U._result=X)})}if(U._status===1)return U._result;throw U._result}var z={current:null};function K(){var U=z.current;if(U===null)throw Error(ca(321));return U}var Q={ReactCurrentDispatcher:z,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:sa,IsSomeRendererActing:{current:!1},assign:b};a.Children={map:G,forEach:function(U,q,X){G(U,function(){q.apply(this,arguments)},X)},count:function(U){var q=0;return G(U,function(){q++}),q},toArray:function(U){return G(U,function(q){return q})||[]},only:function(U){if(!Ya(U))throw Error(ca(143));return U}},a.Component=Z,a.PureComponent=Ia,a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=Q,a.cloneElement=function(U,q,X){if(U==null)throw Error(ca(267,U));var ta=b({},U.props),Y=U.key,la=U.ref,pa=U._owner;if(q!=null){if(q.ref!==void 0&&(la=q.ref,pa=sa.current),q.key!==void 0&&(Y=""+q.key),U.type&&U.type.defaultProps)var ra=U.type.defaultProps;for(ga in q)Fa.call(q,ga)&&!Xa.hasOwnProperty(ga)&&(ta[ga]=q[ga]===void 0&&ra!==void 0?ra[ga]:q[ga])}var ga=arguments.length-2;if(ga===1)ta.children=X;else if(1<ga){ra=Array(ga);for(var Ba=0;Ba<ga;Ba++)ra[Ba]=arguments[Ba+2];ta.children=ra}return{$$typeof:N,type:U.type,key:Y,ref:la,props:ta,_owner:pa}},a.createContext=function(U,q){return q===void 0&&(q=null),U={$$typeof:j,_calculateChangedBits:q,_currentValue:U,_currentValue2:U,_threadCount:0,Provider:null,Consumer:null},U.Provider={$$typeof:L,_context:U},U.Consumer=U},a.createElement=Ra,a.createFactory=function(U){var q=Ra.bind(null,U);return q.type=U,q},a.createRef=function(){return{current:null}},a.forwardRef=function(U){return{$$typeof:w,render:U}},a.isValidElement=Ya,a.lazy=function(U){return{$$typeof:$,_payload:{_status:-1,_result:U},_init:H}},a.memo=function(U,q){return{$$typeof:O,type:U,compare:q===void 0?null:q}},a.useCallback=function(U,q){return K().useCallback(U,q)},a.useContext=function(U,q){return K().useContext(U,q)},a.useDebugValue=function(){},a.useEffect=function(U,q){return K().useEffect(U,q)},a.useImperativeHandle=function(U,q,X){return K().useImperativeHandle(U,q,X)},a.useLayoutEffect=function(U,q){return K().useLayoutEffect(U,q)},a.useMemo=function(U,q){return K().useMemo(U,q)},a.useReducer=function(U,q,X){return K().useReducer(U,q,X)},a.useRef=function(U){return K().useRef(U)},a.useState=function(U){return K().useState(U)},a.version="17.0.2"}}),Zc=Wi({"../../node_modules/react/cjs/react.development.js"(a){"use strict";process.env.NODE_ENV!=="production"&&function(){"use strict";var b=em(),N="17.0.2",x=60103,L=60106;a.Fragment=60107,a.StrictMode=60108,a.Profiler=60114;var j=60109,w=60110,O=60112;a.Suspense=60113;var $=60120,C=60115,da=60116,ma=60121,ca=60122,va=60117,ua=60119,Z=60128,aa=60129,Ia=60130,fa=60131;if(typeof Symbol=="function"&&Symbol.for){var sa=Symbol.for;x=sa("react.element"),L=sa("react.portal"),a.Fragment=sa("react.fragment"),a.StrictMode=sa("react.strict_mode"),a.Profiler=sa("react.profiler"),j=sa("react.provider"),w=sa("react.context"),O=sa("react.forward_ref"),a.Suspense=sa("react.suspense"),$=sa("react.suspense_list"),C=sa("react.memo"),da=sa("react.lazy"),ma=sa("react.block"),ca=sa("react.server.block"),va=sa("react.fundamental"),ua=sa("react.scope"),Z=sa("react.opaque.id"),aa=sa("react.debug_trace_mode"),Ia=sa("react.offscreen"),fa=sa("react.legacy_hidden")}var Fa=typeof Symbol=="function"&&Symbol.iterator,Xa="@@iterator";function Ra(I){if(I===null||typeof I!="object")return null;var B=Fa&&I[Fa]||I[Xa];return typeof B=="function"?B:null}var Ca={current:null},Ya={transition:0},ka={current:null},oa={},Da=null;function xa(I){Da=I}oa.setExtraStackFrame=function(I){Da=I},oa.getCurrentStack=null,oa.getStackAddendum=function(){var I="";Da&&(I+=Da);var B=oa.getCurrentStack;return B&&(I+=B()||""),I};var G={current:!1},H={ReactCurrentDispatcher:Ca,ReactCurrentBatchConfig:Ya,ReactCurrentOwner:ka,IsSomeRendererActing:G,assign:b};H.ReactDebugCurrentFrame=oa;function z(I){{for(var B=arguments.length,F=new Array(B>1?B-1:0),W=1;W<B;W++)F[W-1]=arguments[W];Q("warn",I,F)}}function K(I){{for(var B=arguments.length,F=new Array(B>1?B-1:0),W=1;W<B;W++)F[W-1]=arguments[W];Q("error",I,F)}}function Q(I,B,F){{var W=H.ReactDebugCurrentFrame,J=W.getStackAddendum();J!==""&&(B+="%s",F=F.concat([J]));var na=F.map(function(ia){return""+ia});na.unshift("Warning: "+B),Function.prototype.apply.call(console[I],console,na)}}var U={};function q(I,B){{var F=I.constructor,W=F&&(F.displayName||F.name)||"ReactClass",J=W+"."+B;if(U[J])return;K("Can't call %s on a component that is not yet mounted. This is a no-op, but it might indicate a bug in your application. Instead, assign to `this.state` directly or define a `state = {};` class property with the desired state in the %s component.",B,W),U[J]=!0}}var X={isMounted:function(I){return!1},enqueueForceUpdate:function(I,B,F){q(I,"forceUpdate")},enqueueReplaceState:function(I,B,F,W){q(I,"replaceState")},enqueueSetState:function(I,B,F,W){q(I,"setState")}},ta={};Object.freeze(ta);function Y(I,B,F){this.props=I,this.context=B,this.refs=ta,this.updater=F||X}Y.prototype.isReactComponent={},Y.prototype.setState=function(I,B){if(!(typeof I=="object"||typeof I=="function"||I==null))throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,I,B,"setState")},Y.prototype.forceUpdate=function(I){this.updater.enqueueForceUpdate(this,I,"forceUpdate")};{var la={isMounted:["isMounted","Instead, make sure to clean up subscriptions and pending requests in componentWillUnmount to prevent memory leaks."],replaceState:["replaceState","Refactor your code to use setState instead (see https://github.com/facebook/react/issues/3236)."]},pa=function(I,B){Object.defineProperty(Y.prototype,I,{get:function(){z("%s(...) is deprecated in plain JavaScript React classes. %s",B[0],B[1])}})};for(var ra in la)la.hasOwnProperty(ra)&&pa(ra,la[ra])}function ga(){}ga.prototype=Y.prototype;function Ba(I,B,F){this.props=I,this.context=B,this.refs=ta,this.updater=F||X}var Ee=Ba.prototype=new ga;Ee.constructor=Ba,b(Ee,Y.prototype),Ee.isPureReactComponent=!0;function mm(){var I={current:null};return Object.seal(I),I}function cm(I,B,F){var W=B.displayName||B.name||"";return I.displayName||(W!==""?F+"("+W+")":F)}function gr(I){return I.displayName||"Context"}function Wa(I){if(I==null)return null;if(typeof I.tag=="number"&&K("Received an unexpected object in getComponentName(). This is likely a bug in React. Please file an issue."),typeof I=="function")return I.displayName||I.name||null;if(typeof I=="string")return I;switch(I){case a.Fragment:return"Fragment";case L:return"Portal";case a.Profiler:return"Profiler";case a.StrictMode:return"StrictMode";case a.Suspense:return"Suspense";case $:return"SuspenseList"}if(typeof I=="object")switch(I.$$typeof){case w:var B=I;return gr(B)+".Consumer";case j:var F=I;return gr(F._context)+".Provider";case O:return cm(I,I.render,"ForwardRef");case C:return Wa(I.type);case ma:return Wa(I._render);case da:{var W=I,J=W._payload,na=W._init;try{return Wa(na(J))}catch(ia){return null}}}return null}var Fe=Object.prototype.hasOwnProperty,hr={key:!0,ref:!0,__self:!0,__source:!0},_r,Ir,Ri;Ri={};function pr(I){if(Fe.call(I,"ref")){var B=Object.getOwnPropertyDescriptor(I,"ref").get;if(B&&B.isReactWarning)return!1}return I.ref!==void 0}function Sr(I){if(Fe.call(I,"key")){var B=Object.getOwnPropertyDescriptor(I,"key").get;if(B&&B.isReactWarning)return!1}return I.key!==void 0}function Am(I,B){var F=function(){_r||(_r=!0,K("%s: `key` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",B))};F.isReactWarning=!0,Object.defineProperty(I,"key",{get:F,configurable:!0})}function dm(I,B){var F=function(){Ir||(Ir=!0,K("%s: `ref` is not a prop. Trying to access it will result in `undefined` being returned. If you need to access the same value within the child component, you should pass it as a different prop. (https://reactjs.org/link/special-props)",B))};F.isReactWarning=!0,Object.defineProperty(I,"ref",{get:F,configurable:!0})}function fm(I){if(typeof I.ref=="string"&&ka.current&&I.__self&&ka.current.stateNode!==I.__self){var B=Wa(ka.current.type);Ri[B]||(K('Component "%s" contains the string ref "%s". Support for string refs will be removed in a future major release. This case cannot be automatically converted to an arrow function. We ask you to manually fix this case by using useRef() or createRef() instead. Learn more about using refs safely here: https://reactjs.org/link/strict-mode-string-ref',B,I.ref),Ri[B]=!0)}}var Yi=function(I,B,F,W,J,na,ia){var ea={$$typeof:x,type:I,key:B,ref:F,props:ia,_owner:na};return ea._store={},Object.defineProperty(ea._store,"validated",{configurable:!1,enumerable:!1,writable:!0,value:!1}),Object.defineProperty(ea,"_self",{configurable:!1,enumerable:!1,writable:!1,value:W}),Object.defineProperty(ea,"_source",{configurable:!1,enumerable:!1,writable:!1,value:J}),Object.freeze&&(Object.freeze(ea.props),Object.freeze(ea)),ea};function gm(I,B,F){var W,J={},na=null,ia=null,ea=null,Sa=null;if(B!=null){pr(B)&&(ia=B.ref,fm(B)),Sr(B)&&(na=""+B.key),ea=B.__self===void 0?null:B.__self,Sa=B.__source===void 0?null:B.__source;for(W in B)Fe.call(B,W)&&!hr.hasOwnProperty(W)&&(J[W]=B[W])}var Ea=arguments.length-2;if(Ea===1)J.children=F;else if(Ea>1){for(var Ta=Array(Ea),Pa=0;Pa<Ea;Pa++)Ta[Pa]=arguments[Pa+2];Object.freeze&&Object.freeze(Ta),J.children=Ta}if(I&&I.defaultProps){var wa=I.defaultProps;for(W in wa)J[W]===void 0&&(J[W]=wa[W])}if(na||ia){var La=typeof I=="function"?I.displayName||I.name||"Unknown":I;na&&Am(J,La),ia&&dm(J,La)}return Yi(I,na,ia,ea,Sa,ka.current,J)}function hm(I,B){var F=Yi(I.type,B,I.ref,I._self,I._source,I._owner,I.props);return F}function _m(I,B,F){if(I==null)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+I+".");var W,J=b({},I.props),na=I.key,ia=I.ref,ea=I._self,Sa=I._source,Ea=I._owner;if(B!=null){pr(B)&&(ia=B.ref,Ea=ka.current),Sr(B)&&(na=""+B.key);var Ta;I.type&&I.type.defaultProps&&(Ta=I.type.defaultProps);for(W in B)Fe.call(B,W)&&!hr.hasOwnProperty(W)&&(B[W]===void 0&&Ta!==void 0?J[W]=Ta[W]:J[W]=B[W])}var Pa=arguments.length-2;if(Pa===1)J.children=F;else if(Pa>1){for(var wa=Array(Pa),La=0;La<Pa;La++)wa[La]=arguments[La+2];J.children=wa}return Yi(I.type,na,ia,ea,Sa,Ea,J)}function ce(I){return typeof I=="object"&&I!==null&&I.$$typeof===x}var Er=".",Im=":";function pm(I){var B=/[=:]/g,F={"=":"=0",":":"=2"},W=I.replace(B,function(J){return F[J]});return"$"+W}var Tr=!1,Sm=/\/+/g;function vr(I){return I.replace(Sm,"$&/")}function Ji(I,B){return typeof I=="object"&&I!==null&&I.key!=null?pm(""+I.key):B.toString(36)}function Le(I,B,F,W,J){var na=typeof I;(na==="undefined"||na==="boolean")&&(I=null);var ia=!1;if(I===null)ia=!0;else switch(na){case"string":case"number":ia=!0;break;case"object":switch(I.$$typeof){case x:case L:ia=!0}}if(ia){var ea=I,Sa=J(ea),Ea=W===""?Er+Ji(ea,0):W;if(Array.isArray(Sa)){var Ta="";Ea!=null&&(Ta=vr(Ea)+"/"),Le(Sa,B,Ta,"",function(tc){return tc})}else Sa!=null&&(ce(Sa)&&(Sa=hm(Sa,F+(Sa.key&&(!ea||ea.key!==Sa.key)?vr(""+Sa.key)+"/":"")+Ea)),B.push(Sa));return 1}var Pa,wa,La=0,qa=W===""?Er:W+Im;if(Array.isArray(I))for(var je=0;je<I.length;je++)Pa=I[je],wa=qa+Ji(Pa,je),La+=Le(Pa,B,F,wa,J);else{var an=Ra(I);if(typeof an=="function"){var Rr=I;an===Rr.entries&&(Tr||z("Using Maps as children is not supported. Use an array of keyed ReactElements instead."),Tr=!0);for(var sc=an.call(Rr),Yr,rc=0;!(Yr=sc.next()).done;)Pa=Yr.value,wa=qa+Ji(Pa,rc++),La+=Le(Pa,B,F,wa,J)}else if(na==="object"){var Jr=""+I;throw Error("Objects are not valid as a React child (found: "+(Jr==="[object Object]"?"object with keys {"+Object.keys(I).join(", ")+"}":Jr)+"). If you meant to render a collection of children, use an array instead.")}}return La}function we(I,B,F){if(I==null)return I;var W=[],J=0;return Le(I,W,"","",function(na){return B.call(F,na,J++)}),W}function Em(I){var B=0;return we(I,function(){B++}),B}function Tm(I,B,F){we(I,function(){B.apply(this,arguments)},F)}function vm(I){return we(I,function(B){return B})||[]}function bm(I){if(!ce(I))throw Error("React.Children.only expected to receive a single React element child.");return I}function Um(I,B){B===void 0?B=null:B!==null&&typeof B!="function"&&K("createContext: Expected the optional second argument to be a function. Instead received: %s",B);var F={$$typeof:w,_calculateChangedBits:B,_currentValue:I,_currentValue2:I,_threadCount:0,Provider:null,Consumer:null};F.Provider={$$typeof:j,_context:F};var W=!1,J=!1,na=!1;{var ia={$$typeof:w,_context:F,_calculateChangedBits:F._calculateChangedBits};Object.defineProperties(ia,{Provider:{get:function(){return J||(J=!0,K("Rendering <Context.Consumer.Provider> is not supported and will be removed in a future major release. Did you mean to render <Context.Provider> instead?")),F.Provider},set:function(ea){F.Provider=ea}},_currentValue:{get:function(){return F._currentValue},set:function(ea){F._currentValue=ea}},_currentValue2:{get:function(){return F._currentValue2},set:function(ea){F._currentValue2=ea}},_threadCount:{get:function(){return F._threadCount},set:function(ea){F._threadCount=ea}},Consumer:{get:function(){return W||(W=!0,K("Rendering <Context.Consumer.Consumer> is not supported and will be removed in a future major release. Did you mean to render <Context.Consumer> instead?")),F.Consumer}},displayName:{get:function(){return F.displayName},set:function(ea){na||(z("Setting `displayName` on Context.Consumer has no effect. You should set it directly on the context with Context.displayName = '%s'.",ea),na=!0)}}}),F.Consumer=ia}return F._currentRenderer=null,F._currentRenderer2=null,F}var Nm=-1,Zi=0,br=1,Bm=2;function Pm(I){if(I._status===Nm){var B=I._result,F=B(),W=I;W._status=Zi,W._result=F,F.then(function(J){if(I._status===Zi){var na=J.default;na===void 0&&K(`lazy: Expected the result of a dynamic import() call. Instead received: %s

Your code should look like: 
  const MyComponent = lazy(() => import('./MyComponent'))`,J);var ia=I;ia._status=br,ia._result=na}},function(J){if(I._status===Zi){var na=I;na._status=Bm,na._result=J}})}if(I._status===br)return I._result;throw I._result}function ym(I){var B={_status:-1,_result:I},F={$$typeof:da,_payload:B,_init:Pm};{var W,J;Object.defineProperties(F,{defaultProps:{configurable:!0,get:function(){return W},set:function(na){K("React.lazy(...): It is not supported to assign `defaultProps` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."),W=na,Object.defineProperty(F,"defaultProps",{enumerable:!0})}},propTypes:{configurable:!0,get:function(){return J},set:function(na){K("React.lazy(...): It is not supported to assign `propTypes` to a lazy component import. Either specify them where the component is defined, or create a wrapping component around it."),J=na,Object.defineProperty(F,"propTypes",{enumerable:!0})}}})}return F}function km(I){I!=null&&I.$$typeof===C?K("forwardRef requires a render function but received a `memo` component. Instead of forwardRef(memo(...)), use memo(forwardRef(...))."):typeof I!="function"?K("forwardRef requires a render function but was given %s.",I===null?"null":typeof I):I.length!==0&&I.length!==2&&K("forwardRef render functions accept exactly two parameters: props and ref. %s",I.length===1?"Did you forget to use the ref parameter?":"Any additional parameter will be undefined."),I!=null&&(I.defaultProps!=null||I.propTypes!=null)&&K("forwardRef render functions do not support propTypes or defaultProps. Did you accidentally pass a React component?");var B={$$typeof:O,render:I};{var F;Object.defineProperty(B,"displayName",{enumerable:!1,configurable:!0,get:function(){return F},set:function(W){F=W,I.displayName==null&&(I.displayName=W)}})}return B}var Mm=!1;function Ur(I){return!!(typeof I=="string"||typeof I=="function"||I===a.Fragment||I===a.Profiler||I===aa||I===a.StrictMode||I===a.Suspense||I===$||I===fa||Mm||typeof I=="object"&&I!==null&&(I.$$typeof===da||I.$$typeof===C||I.$$typeof===j||I.$$typeof===w||I.$$typeof===O||I.$$typeof===va||I.$$typeof===ma||I[0]===ca))}function Dm(I,B){Ur(I)||K("memo: The first argument must be a component. Instead received: %s",I===null?"null":typeof I);var F={$$typeof:C,type:I,compare:B===void 0?null:B};{var W;Object.defineProperty(F,"displayName",{enumerable:!1,configurable:!0,get:function(){return W},set:function(J){W=J,I.displayName==null&&(I.displayName=J)}})}return F}function ja(){var I=Ca.current;if(I===null)throw Error(`Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:
1. You might have mismatching versions of React and the renderer (such as React DOM)
2. You might be breaking the Rules of Hooks
3. You might have more than one copy of React in the same app
See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.`);return I}function xm(I,B){var F=ja();if(B!==void 0&&K("useContext() second argument is reserved for future use in React. Passing it is not supported. You passed: %s.%s",B,typeof B=="number"&&Array.isArray(arguments[2])?`

Did you call array.map(useContext)? Calling Hooks inside a loop is not supported. Learn more at https://reactjs.org/link/rules-of-hooks`:""),I._context!==void 0){var W=I._context;W.Consumer===I?K("Calling useContext(Context.Consumer) is not supported, may cause bugs, and will be removed in a future major release. Did you mean to call useContext(Context) instead?"):W.Provider===I&&K("Calling useContext(Context.Provider) is not supported. Did you mean to call useContext(Context) instead?")}return F.useContext(I,B)}function Fm(I){var B=ja();return B.useState(I)}function Lm(I,B,F){var W=ja();return W.useReducer(I,B,F)}function wm(I){var B=ja();return B.useRef(I)}function Gm(I,B){var F=ja();return F.useEffect(I,B)}function qm(I,B){var F=ja();return F.useLayoutEffect(I,B)}function Km(I,B){var F=ja();return F.useCallback(I,B)}function Om(I,B){var F=ja();return F.useMemo(I,B)}function jm(I,B,F){var W=ja();return W.useImperativeHandle(I,B,F)}function Hm(I,B){{var F=ja();return F.useDebugValue(I,B)}}var Te=0,Nr,Br,Pr,yr,kr,Mr,Dr;function xr(){}xr.__reactDisabledLog=!0;function Wm(){{if(Te===0){Nr=console.log,Br=console.info,Pr=console.warn,yr=console.error,kr=console.group,Mr=console.groupCollapsed,Dr=console.groupEnd;var I={configurable:!0,enumerable:!0,value:xr,writable:!0};Object.defineProperties(console,{info:I,log:I,warn:I,error:I,group:I,groupCollapsed:I,groupEnd:I})}Te++}}function zm(){{if(Te--,Te===0){var I={configurable:!0,enumerable:!0,writable:!0};Object.defineProperties(console,{log:b({},I,{value:Nr}),info:b({},I,{value:Br}),warn:b({},I,{value:Pr}),error:b({},I,{value:yr}),group:b({},I,{value:kr}),groupCollapsed:b({},I,{value:Mr}),groupEnd:b({},I,{value:Dr})})}Te<0&&K("disabledDepth fell below zero. This is a bug in React. Please file an issue.")}}var $i=H.ReactCurrentDispatcher,Qi;function Ge(I,B,F){{if(Qi===void 0)try{throw Error()}catch(J){var W=J.stack.trim().match(/\n( *(at )?)/);Qi=W&&W[1]||""}return`
`+Qi+I}}var Xi=!1,qe;{var Vm=typeof WeakMap=="function"?WeakMap:Map;qe=new Vm}function Fr(I,B){if(!I||Xi)return"";{var F=qe.get(I);if(F!==void 0)return F}var W;Xi=!0;var J=Error.prepareStackTrace;Error.prepareStackTrace=void 0;var na;na=$i.current,$i.current=null,Wm();try{if(B){var ia=function(){throw Error()};if(Object.defineProperty(ia.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(ia,[])}catch(qa){W=qa}Reflect.construct(I,[],ia)}else{try{ia.call()}catch(qa){W=qa}I.call(ia.prototype)}}else{try{throw Error()}catch(qa){W=qa}I()}}catch(qa){if(qa&&W&&typeof qa.stack=="string"){for(var ea=qa.stack.split(`
`),Sa=W.stack.split(`
`),Ea=ea.length-1,Ta=Sa.length-1;Ea>=1&&Ta>=0&&ea[Ea]!==Sa[Ta];)Ta--;for(;Ea>=1&&Ta>=0;Ea--,Ta--)if(ea[Ea]!==Sa[Ta]){if(Ea!==1||Ta!==1)do if(Ea--,Ta--,Ta<0||ea[Ea]!==Sa[Ta]){var Pa=`
`+ea[Ea].replace(" at new "," at ");return typeof I=="function"&&qe.set(I,Pa),Pa}while(Ea>=1&&Ta>=0);break}}}finally{Xi=!1,$i.current=na,zm(),Error.prepareStackTrace=J}var wa=I?I.displayName||I.name:"",La=wa?Ge(wa):"";return typeof I=="function"&&qe.set(I,La),La}function Lr(I,B,F){return Fr(I,!1)}function Rm(I){var B=I.prototype;return!!(B&&B.isReactComponent)}function Ke(I,B,F){if(I==null)return"";if(typeof I=="function")return Fr(I,Rm(I));if(typeof I=="string")return Ge(I);switch(I){case a.Suspense:return Ge("Suspense");case $:return Ge("SuspenseList")}if(typeof I=="object")switch(I.$$typeof){case O:return Lr(I.render);case C:return Ke(I.type,B,F);case ma:return Lr(I._render);case da:{var W=I,J=W._payload,na=W._init;try{return Ke(na(J),B,F)}catch(ia){}}}return""}var wr={},Gr=H.ReactDebugCurrentFrame;function Oe(I){if(I){var B=I._owner,F=Ke(I.type,I._source,B?B.type:null);Gr.setExtraStackFrame(F)}else Gr.setExtraStackFrame(null)}function Ym(I,B,F,W,J){{var na=Function.call.bind(Object.prototype.hasOwnProperty);for(var ia in I)if(na(I,ia)){var ea=void 0;try{if(typeof I[ia]!="function"){var Sa=Error((W||"React class")+": "+F+" type `"+ia+"` is invalid; it must be a function, usually from the `prop-types` package, but received `"+typeof I[ia]+"`.This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.");throw Sa.name="Invariant Violation",Sa}ea=I[ia](B,ia,W,F,null,"SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED")}catch(Ea){ea=Ea}ea&&!(ea instanceof Error)&&(Oe(J),K("%s: type specification of %s `%s` is invalid; the type checker function must return `null` or an `Error` but returned a %s. You may have forgotten to pass an argument to the type checker creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and shape all require an argument).",W||"React class",F,ia,typeof ea),Oe(null)),ea instanceof Error&&!(ea.message in wr)&&(wr[ea.message]=!0,Oe(J),K("Failed %s type: %s",F,ea.message),Oe(null))}}}function Ae(I){if(I){var B=I._owner,F=Ke(I.type,I._source,B?B.type:null);xa(F)}else xa(null)}var Ci;Ci=!1;function qr(){if(ka.current){var I=Wa(ka.current.type);if(I)return`

Check the render method of \``+I+"`."}return""}function Jm(I){if(I!==void 0){var B=I.fileName.replace(/^.*[\\\/]/,""),F=I.lineNumber;return`

Check your code at `+B+":"+F+"."}return""}function Zm(I){return I!=null?Jm(I.__source):""}var Kr={};function $m(I){var B=qr();if(!B){var F=typeof I=="string"?I:I.displayName||I.name;F&&(B=`

Check the top-level render call using <`+F+">.")}return B}function Or(I,B){if(!(!I._store||I._store.validated||I.key!=null)){I._store.validated=!0;var F=$m(B);if(!Kr[F]){Kr[F]=!0;var W="";I&&I._owner&&I._owner!==ka.current&&(W=" It was passed a child from "+Wa(I._owner.type)+"."),Ae(I),K('Each child in a list should have a unique "key" prop.%s%s See https://reactjs.org/link/warning-keys for more information.',F,W),Ae(null)}}}function jr(I,B){if(typeof I=="object"){if(Array.isArray(I))for(var F=0;F<I.length;F++){var W=I[F];ce(W)&&Or(W,B)}else if(ce(I))I._store&&(I._store.validated=!0);else if(I){var J=Ra(I);if(typeof J=="function"&&J!==I.entries)for(var na=J.call(I),ia;!(ia=na.next()).done;)ce(ia.value)&&Or(ia.value,B)}}}function Hr(I){{var B=I.type;if(B==null||typeof B=="string")return;var F;if(typeof B=="function")F=B.propTypes;else if(typeof B=="object"&&(B.$$typeof===O||B.$$typeof===C))F=B.propTypes;else return;if(F){var W=Wa(B);Ym(F,I.props,"prop",W,I)}else if(B.PropTypes!==void 0&&!Ci){Ci=!0;var J=Wa(B);K("Component %s declared `PropTypes` instead of `propTypes`. Did you misspell the property assignment?",J||"Unknown")}typeof B.getDefaultProps=="function"&&!B.getDefaultProps.isReactClassApproved&&K("getDefaultProps is only used on classic React.createClass definitions. Use a static property named `defaultProps` instead.")}}function Qm(I){{for(var B=Object.keys(I.props),F=0;F<B.length;F++){var W=B[F];if(W!=="children"&&W!=="key"){Ae(I),K("Invalid prop `%s` supplied to `React.Fragment`. React.Fragment can only have `key` and `children` props.",W),Ae(null);break}}I.ref!==null&&(Ae(I),K("Invalid attribute `ref` supplied to `React.Fragment`."),Ae(null))}}function Wr(I,B,F){var W=Ur(I);if(!W){var J="";(I===void 0||typeof I=="object"&&I!==null&&Object.keys(I).length===0)&&(J+=" You likely forgot to export your component from the file it's defined in, or you might have mixed up default and named imports.");var na=Zm(B);na?J+=na:J+=qr();var ia;I===null?ia="null":Array.isArray(I)?ia="array":I!==void 0&&I.$$typeof===x?(ia="<"+(Wa(I.type)||"Unknown")+" />",J=" Did you accidentally export a JSX literal instead of a component?"):ia=typeof I,K("React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s",ia,J)}var ea=gm.apply(this,arguments);if(ea==null)return ea;if(W)for(var Sa=2;Sa<arguments.length;Sa++)jr(arguments[Sa],I);return I===a.Fragment?Qm(ea):Hr(ea),ea}var zr=!1;function Xm(I){var B=Wr.bind(null,I);return B.type=I,zr||(zr=!0,z("React.createFactory() is deprecated and will be removed in a future major release. Consider using JSX or use React.createElement() directly instead.")),Object.defineProperty(B,"type",{enumerable:!1,get:function(){return z("Factory.type is deprecated. Access the class directly before passing it to createFactory."),Object.defineProperty(this,"type",{value:I}),I}}),B}function Cm(I,B,F){for(var W=_m.apply(this,arguments),J=2;J<arguments.length;J++)jr(arguments[J],W.type);return Hr(W),W}try{var Vr=Object.freeze({})}catch(I){}var ac=Wr,ec=Cm,ic=Xm,nc={map:we,forEach:Tm,count:Em,toArray:vm,only:bm};a.Children=nc,a.Component=Y,a.PureComponent=Ba,a.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=H,a.cloneElement=ec,a.createContext=Um,a.createElement=ac,a.createFactory=ic,a.createRef=mm,a.forwardRef=km,a.isValidElement=ce,a.lazy=ym,a.memo=Dm,a.useCallback=Km,a.useContext=xm,a.useDebugValue=Hm,a.useEffect=Gm,a.useImperativeHandle=jm,a.useLayoutEffect=qm,a.useMemo=Om,a.useReducer=Lm,a.useRef=wm,a.useState=Fm,a.version=N}()}}),$c=Wi({"../../node_modules/react/index.js"(a,b){"use strict";process.env.NODE_ENV==="production"?b.exports=Jc():b.exports=Zc()}}),Qc=Yc($c(),1),Xc="useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict",Cc=128,re,pe,a0=a=>{!re||re.length<a?(re=Buffer.allocUnsafe(a*Cc),rr.default.randomFillSync(re),pe=0):pe+a>re.length&&(rr.default.randomFillSync(re),pe=0),pe+=a},e0=(a=21)=>{a0(a-=0);let b="";for(let N=pe-a;N<pe;N++)b+=Xc[re[N]&63];return b},i0=Object.defineProperty,n0=(a,b,N)=>b in a?i0(a,b,{enumerable:!0,configurable:!0,writable:!0,value:N}):a[b]=N,S=(a,b,N)=>(n0(a,typeof b!="symbol"?b+"":b,N),N),T6=class extends Qc.default.Component{constructor(a){super(a);this.state={hasError:!1}}static getDerivedStateFromError(a){return{hasError:!0}}componentDidCatch(a){let b=new ir,N=new Ua("Error caught in ErrorBoundary",{cause:a});b.exception(N)}render(){return this.props.children}},rt;(function(a){a.Comment="comment",a.Create="create",a.Delete="delete",a.Edit="edit",a.Invoice="invoice",a.Message="message",a.PageView="pageView",a.Paid="paid",a.Payment="payment",a.Purchase="purchase",a.Referral="referral",a.Renewal="renewal",a.Signup="signup",a.Subscription="subscription",a.Upgrade="upgrade"})(rt||(rt={}));var tt;(function(a){a.Business="business",a.Engineering="engineering",a.Exception="exception",a.LogMessage="log-message",a.Marketing="marketing",a.PageLeave="page-leave",a.PageView="page-view",a.Product="product",a.QualityManagement="quality-management",a.UserAccess="user-access",a.UserLogin="user-login",a.UserLogout="user-logout",a.UserSignup="user-signup",a.UserPreferencesChanged="user-preferences-changed",a.WebsiteVisit="website-visit"})(tt||(tt={}));var ut;(function(a){a.CloseTab="close-tab",a.ExternalLink="external-link",a.NavigateAway="navigate-away",a.Unknown="unknown"})(ut||(ut={}));var lt;(function(a){a.Ecs="Ecs"})(lt||(lt={}));var ot;(function(a){a.Finished="Finished",a.Queued="Queued",a.Running="Running",a.Started="Started"})(ot||(ot={}));var mt;(function(a){a.Mobile="mobile",a.TV="tv",a.Watch="watch",a.Web="web"})(mt||(mt={}));var De;(function(a){a.Development="Development",a.NonProduction="NonProduction",a.Production="Production"})(De||(De={}));var ct;(function(a){a.Completed="completed",a.Started="started",a.Uncompleted="uncompleted"})(ct||(ct={}));var At;(function(a){a.Build="Build",a.Deployment="Deployment",a.Test="Test"})(At||(At={}));var dt;(function(a){a.Canceled="Canceled",a.Completed="Completed",a.Failed="Failed",a.Running="Running",a.Queued="Queued",a.Waiting="Waiting"})(dt||(dt={}));var ft;(function(a){a.Canceled="Canceled",a.Completed="Completed",a.Failed="Failed",a.Running="Running",a.Queued="Queued",a.Waiting="Waiting"})(ft||(ft={}));var gt;(function(a){a.ForgotPassword="forgot_password",a.Index="index",a.Login="login",a.PageNotFound="404",a.Signup="signup",a.VerifyCode="verify_code"})(gt||(gt={}));var ht;(function(a){a.Info="info",a.Warning="warning",a.Error="error",a.Success="success"})(ht||(ht={}));var _t;(function(a){a.Details="details",a.Dialog="dialog"})(_t||(_t={}));var It;(function(a){a.Info="info",a.Warning="warning",a.Error="error",a.Success="success"})(It||(It={}));var pt;(function(a){a.AccountBalance="AccountBalance",a.UserAssets="UserAssets",a.UserCreditCardDebt="UserCreditCardDebt",a.UserCreditLimit="UserCreditLimit",a.UserCreditUtilization="UserCreditUtilization",a.UserDebt="UserDebt",a.UserInvestments="UserInvestments",a.UserRetirement="UserRetirement",a.UserSavings="UserSavings"})(pt||(pt={}));var St;(function(a){a.DateTime="date_time",a.True="true",a.False="false",a.UniqueId="unique_id"})(St||(St={}));var Et;(function(a){a.DomainModel="domain_entity",a.GenericModel="generic_entity"})(Et||(Et={}));var Tt;(function(a){a.AirportCode="airport-code",a.BankIDCode="bank-id-code",a.BitcoinAddress="bitcoin-address",a.Boolean="boolean",a.City="city",a.Color="color",a.CountryCode="country-code",a.CreditCard="credit-card",a.CurrencyAmount="currency-amount",a.CurrencyCode="currency-code",a.DataURI="data-uri",a.Date="date",a.DateRange="date-range",a.DateTime="date-time",a.DayOfMonth="day-of-month",a.DomainName="domain-name",a.EmailAddress="email-address",a.EthereumAddress="ethereum-address",a.EAN="european-article-number",a.EIN="employer-identification-number",a.Float="float",a.GeographicCoordinate="geographic-coordinate",a.GeographicCoordinates="geographic-coordinates",a.GitRepositoryURL="git-repository-url",a.HSLColor="hsl-color",a.HexColor="hex-color",a.Hexadecimal="hexadecimal",a.IBAN="international-bank-account-number",a.IMEI="international-mobile-equipment-identifier",a.IPAddress="ip-address",a.IPAddressRange="ip-address-range",a.ISBN="international-standard-book-number",a.ISIN="international-stock-number",a.ISMN="international-standard-music-number",a.ISSN="international-standard-serial-number",a.ISO8601="iso-8601",a.ISO31661Alpha2="iso-31661-alpha-2",a.ISO31661Alpha3="iso-31661-alpha-3",a.ISO4217="iso-4217",a.Image="image",a.Integer="integer",a.JSON="json",a.LanguageCode="language-code",a.LicensePlateNumber="license-plate-number",a.LongText="long-text",a.MD5="md5",a.Markdown="markdown",a.Menu="menu",a.Number="number",a.MACAddress="mac-address",a.MagnetURI="magnet-uri",a.MimeType="mime-type",a.Month="month",a.Password="password",a.PassportNumber="passport-number",a.Percent="percent",a.PhoneNumber="phone-number",a.Port="port",a.PostalCode="postal-code",a.Province="province",a.RFC3339="rfc-3339",a.RGBColor="rgb-color",a.SemanticVersion="semantic-version",a.SSN="social-security-number",a.State="state",a.StreetAddress="street-address",a.String="string",a.Tags="tags",a.TaxIDNumber="tax-id-number",a.Time="time",a.TimeOfDay="time-of-day",a.TimeRange="time-range",a.TimezoneRegion="timezone-region",a.URL="url",a.URLPath="url-path",a.UUID="uuid",a.VATIDNumber="value-added-tax-id-number",a.VerificationCode="verification-code",a.Video="video",a.Weekday="weekday",a.Year="year"})(Tt||(Tt={}));var vt;(function(a){a.Critical="Critical",a.Error="Error",a.Fatal="Fatal",a.Warning="Warning"})(vt||(vt={}));var s;(function(a){a.Contains="contains",a.HasCharacterCount="has-character-count",a.HasNumberCount="has-number-count",a.HasLetterCount="has-letter-count",a.HasLowercaseCount="has-lowercase-count",a.HasSpacesCount="has-spaces-count",a.HasSymbolCount="has-symbol-count",a.HasUppercaseCount="has-uppercase-count",a.IsAfter="is-after",a.IsAfterOrEqual="is-after-or-equal",a.IsAirport="is-airport",a.IsAlpha="is-alpha",a.IsAlphanumeric="is-alphanumeric",a.IsAlgorithmHash="is-algorithm-hash",a.IsAscii="is-ascii",a.IsBase64="is-base-64",a.IsBefore="is-before",a.IsBeforeOrAfter="is-before-or-after",a.IsBeforeOrEqual="is-before-or-equal",a.IsBetween="is-between",a.IsBIC="is-bic",a.IsBitcoinAddress="is-bitcoin-address",a.IsBoolean="is-boolean",a.IsColor="is-color",a.IsComplexEnough="is-complex-enough",a.IsCountry="is-country",a.IsCreditCard="is-credit-card",a.IsCurrency="is-currency",a.IsDataURI="is-data-uri",a.IsDate="is-date",a.IsDateRange="is-date-range",a.IsDateTime="is-date-time",a.IsDayOfMonth="is-day-of-month",a.IsDecimal="is-decimal",a.IsDivisibleBy="is-divisible-by",a.IsDomainName="is-domain-name",a.IsEmailAddress="is-email-address",a.IsEthereumAddress="is-ethereum-address",a.IsEAN="is-ean",a.IsEIN="is-ein",a.IsEqual="is-equal",a.IsEvenNumber="is-even-number",a.IsFloat="is-float",a.IsIBAN="is-iban",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsHSLColor="is-hsl-color",a.IsHexColor="is-hex-color",a.IsHexadecimal="is-hexadecimal",a.IsIdentityCardCode="is-identity-card-code",a.IsIMEI="is-imei",a.IsInIPAddressRange="is-in-ip-address-range",a.IsInList="is-in-list",a.IsInTheLast="is-in-the-last",a.IsInteger="is-integer",a.IsIPAddress="is-ip-address",a.IsIPAddressRange="is-ip-address-range",a.IsISBN="is-isbn",a.IsISIN="is-isin",a.IsISMN="is-ismn",a.IsISRC="is-isrc",a.IsISSN="is-issn",a.IsISO4217="is-iso-4217",a.IsISO8601="is-iso-8601",a.IsISO31661Alpha2="is-iso-31661-alpha-2",a.IsISO31661Alpha3="is-iso-31661-alpha-3",a.IsJSON="is-json",a.IsLanguage="is-language",a.IsLatitude="is-latitude",a.IsLongitude="is-longitude",a.IsLengthEqual="is-length-equal",a.IsLengthGreaterThan="is-length-greater-than",a.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",a.IsLengthLessThan="is-length-less-than",a.IsLengthLessThanOrEqual="is-length-less-than-or-equal",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsLicensePlateNumber="is-license-plate-number",a.IsLowercase="is-lowercase",a.IsOctal="is-octal",a.IsMACAddress="is-mac-address",a.IsMD5="is-md5",a.IsMagnetURI="is-magnet-uri",a.IsMarkdown="is-markdown",a.IsMimeType="is-mime-type",a.IsMonth="is-month",a.IsNegativeNumber="is-negative-number",a.IsNotDate="is-not-date",a.IsNotEqual="is-not-equal",a.IsNotInIPAddressRange="is-not-in-ip-address-range",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsNotRegexMatch="is-not-regex-match",a.IsNotToday="is-not-today",a.IsNumber="is-number",a.IsNumeric="is-numeric",a.IsOddNumber="is-odd-number",a.IsPassportNumber="is-passport-number",a.IsPhoneNumber="is-phone-number",a.IsPort="is-port",a.IsPositiveNumber="is-positive-number",a.IsPostalCode="is-postal-code",a.IsProvince="is-province",a.IsRGBColor="is-rgb-color",a.IsRegexMatch="is-regex-match",a.IsRequired="is-required",a.IsSemanticVersion="is-semantic-version",a.IsSlug="is-slug",a.IsSSN="is-ssn",a.IsState="is-state",a.IsStreetAddress="is-street-address",a.IsString="is-string",a.IsStrongPassword="is-strong-password",a.IsTags="is-tags",a.IsTaxIDNumber="is-tax-id-number",a.IsThisMonth="is-this-month",a.IsThisQuarter="is-this-quarter",a.IsThisWeek="is-this-week",a.IsThisWeekend="is-this-weekend",a.IsThisYear="is-this-year",a.IsTime="is-time",a.IsTimeOfDay="is-time-of-day",a.IsTimeRange="is-time-range",a.IsToday="is-today",a.IsURL="is-url",a.IsUUID="is-uuid",a.IsUppercase="is-uppercase",a.IsUsernameAvailable="is-username-available",a.IsValidStreetAddress="is-valid-street-address",a.IsVATIDNumber="is-vat-id-number",a.IsWeekday="is-weekday",a.IsWeekend="is-weekend",a.IsYear="is-year"})(s||(s={}));var bt;(function(a){a.IsAuthenticated="is-authenticated",a.IsNotAuthenticated="is-not-authenticated",a.IsUsernameAvailable="is-username-available",a.PasswordMismatch="password-mismatch"})(bt||(bt={}));var Ut;(function(a){a[a.IsHSLColor=s.IsHSLColor]="IsHSLColor",a[a.IsHexColor=s.IsHexColor]="IsHexColor",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsRGBColor=s.IsRGBColor]="IsRGBColor",a[a.IsString=s.IsString]="IsString"})(Ut||(Ut={}));var Nt;(function(a){a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsCurrency=s.IsCurrency]="IsCurrency",a[a.IsDecimal=s.IsDecimal]="IsDecimal",a[a.IsDivisibleBy=s.IsDivisibleBy]="IsDivisibleBy",a[a.IsEvenNumber=s.IsEvenNumber]="IsEvenNumber",a[a.IsFloat=s.IsFloat]="IsFloat",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=s.IsInteger]="IsInteger",a[a.IsISO8601=s.IsISO8601]="IsISO8601",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNegativeNumber=s.IsNegativeNumber]="IsNegativeNumber",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsOddNumber=s.IsOddNumber]="IsOddNumber",a[a.IsPositiveNumber=s.IsPositiveNumber]="IsPositiveNumber"})(Nt||(Nt={}));var Bt;(function(a){a[a.IsBitcoinAddress=s.IsBitcoinAddress]="IsBitcoinAddress",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(Bt||(Bt={}));var Pt;(function(a){a[a.IsEthereumAddress=s.IsEthereumAddress]="IsEthereumAddress",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(Pt||(Pt={}));var yt;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsJSON=s.IsJSON]="IsJSON",a[a.IsLanguage=s.IsLanguage]="IsLanguage",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(yt||(yt={}));var kt;(function(a){a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(kt||(kt={}));var Mt;(function(a){a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsCountry=s.IsCountry]="IsCountry",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(Mt||(Mt={}));var Dt;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsFloat=s.IsFloat]="IsFloat",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumeric=s.IsNumeric]="IsNumeric"})(Dt||(Dt={}));var xt;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsFloat=s.IsFloat]="IsFloat",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumeric=s.IsNumeric]="IsNumeric"})(xt||(xt={}));var Ft;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsPostalCode=s.IsPostalCode]="IsPostalCode",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(Ft||(Ft={}));var Lt;(function(a){a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsProvince=s.IsProvince]="IsProvince",a[a.IsString=s.IsString]="IsString"})(Lt||(Lt={}));var wt;(function(a){a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsState=s.IsState]="IsState",a[a.IsString=s.IsString]="IsString"})(wt||(wt={}));var Gt;(function(a){a[a.IsAlphanumeric=s.IsAlphanumeric]="IsAlphanumeric",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a[a.IsStreetAddress=s.IsStreetAddress]="IsStreetAddress"})(Gt||(Gt={}));var qt;(function(a){a[a.IsAirport=s.IsAirport]="IsAirport",a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(qt||(qt={}));var Kt;(function(a){a[a.IsAlgorithmHash=s.IsAlgorithmHash]="IsAlgorithmHash",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(Kt||(Kt={}));var Ot;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsSemanticVersion=s.IsSemanticVersion]="IsSemanticVersion",a[a.IsString=s.IsString]="IsString"})(Ot||(Ot={}));var jt;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a[a.IsUUID=s.IsUUID]="IsUUID"})(jt||(jt={}));var Ht;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsMD5=s.IsMD5]="IsMD5",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(Ht||(Ht={}));var Wt;(function(a){a[a.IsBoolean=s.IsBoolean]="IsBoolean",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(Wt||(Wt={}));var zt;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsDate=s.IsDate]="IsDate",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotDate=s.IsNotDate]="IsNotDate",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNotToday=s.IsNotToday]="IsNotToday",a[a.IsThisWeek=s.IsThisWeek]="IsThisWeek",a[a.IsThisMonth=s.IsThisMonth]="IsThisMonth",a[a.IsThisQuarter=s.IsThisQuarter]="IsThisQuarter",a[a.IsThisYear=s.IsThisYear]="IsThisYear",a[a.IsToday=s.IsToday]="IsToday",a[a.IsWeekend=s.IsWeekend]="IsWeekend"})(zt||(zt={}));var Vt;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=s.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsDate=s.IsDate]="IsDate",a[a.IsDateRange=s.IsDateRange]="IsDateRange",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(Vt||(Vt={}));var Rt;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsDate=s.IsDate]="IsDate",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotDate=s.IsNotDate]="IsNotDate",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNotToday=s.IsNotToday]="IsNotToday",a[a.IsThisWeek=s.IsThisWeek]="IsThisWeek",a[a.IsThisMonth=s.IsThisMonth]="IsThisMonth",a[a.IsThisQuarter=s.IsThisQuarter]="IsThisQuarter",a[a.IsThisYear=s.IsThisYear]="IsThisYear",a[a.IsToday=s.IsToday]="IsToday",a[a.IsWeekend=s.IsWeekend]="IsWeekend"})(Rt||(Rt={}));var Yt;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsDayOfMonth=s.IsDayOfMonth]="IsDayOfMonth",a[a.IsEvenNumber=s.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=s.IsInteger]="IsInteger",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsOddNumber=s.IsOddNumber]="IsOddNumber",a[a.IsToday=s.IsToday]="IsToday",a[a.IsWeekday=s.IsWeekday]="IsWeekday",a[a.IsWeekend=s.IsWeekend]="IsWeekend"})(Yt||(Yt={}));var Jt;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsEvenNumber=s.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=s.IsInteger]="IsInteger",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsMonth=s.IsMonth]="IsMonth",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsOddNumber=s.IsOddNumber]="IsOddNumber",a[a.IsThisMonth=s.IsThisMonth]="IsThisMonth"})(Jt||(Jt={}));var Zt;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsTime=s.IsTime]="IsTime"})(Zt||(Zt={}));var $t;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=s.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsTime=s.IsTime]="IsTime",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsTimeRange=s.IsTimeRange]="IsTimeRange"})($t||($t={}));var Qt;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=s.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsTimeOfDay=s.IsTimeOfDay]="IsTimeOfDay",a[a.IsTimeRange=s.IsTimeRange]="IsTimeRange"})(Qt||(Qt={}));var Xt;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsEvenNumber=s.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsOddNumber=s.IsOddNumber]="IsOddNumber",a[a.IsWeekday=s.IsWeekday]="IsWeekday",a[a.IsWeekend=s.IsWeekend]="IsWeekend"})(Xt||(Xt={}));var Ct;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsEvenNumber=s.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=s.IsInteger]="IsInteger",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsOddNumber=s.IsOddNumber]="IsOddNumber",a[a.IsThisYear=s.IsThisYear]="IsThisYear",a[a.IsYear=s.IsYear]="IsYear"})(Ct||(Ct={}));var au;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsHexadecimal=s.IsHexadecimal]="IsHexadecimal",a[a.IsLengthEqual=s.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=s.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=s.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=s.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=s.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(au||(au={}));var eu;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsJSON=s.IsJSON]="IsJSON",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(eu||(eu={}));var iu;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsMarkdown=s.IsMarkdown]="IsMarkdown",a[a.IsString=s.IsString]="IsString"})(iu||(iu={}));var nu;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(nu||(nu={}));var su;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(su||(su={}));var ru;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsDataURI=s.IsDataURI]="IsDataURI",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(ru||(ru={}));var tu;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsDomainName=s.IsDomainName]="IsDomainName",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(tu||(tu={}));var uu;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEmailAddress=s.IsEmailAddress]="IsEmailAddress",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(uu||(uu={}));var lu;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsIPAddress=s.IsIPAddress]="IsIPAddress",a[a.IsInIPAddressRange=s.IsInIPAddressRange]="IsInIPAddressRange",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotInIPAddressRange=s.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(lu||(lu={}));var ou;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsIPAddressRange=s.IsIPAddressRange]="IsIPAddressRange",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotInIPAddressRange=s.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(ou||(ou={}));var mu;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=s.IsInteger]="IsInteger",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull"})(mu||(mu={}));var cu;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsMACAddress=s.IsMACAddress]="IsMACAddress",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(cu||(cu={}));var Au;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsMagnetURI=s.IsMagnetURI]="IsMagnetURI",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(Au||(Au={}));var du;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsMimeType=s.IsMimeType]="IsMimeType",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(du||(du={}));var fu;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a[a.IsSlug=s.IsSlug]="IsSlug"})(fu||(fu={}));var gu;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a[a.IsURL=s.IsURL]="IsURL"})(gu||(gu={}));var hu;(function(a){a[a.IsAfter=s.IsAfter]="IsAfter",a[a.IsAfterOrEqual=s.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=s.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=s.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=s.IsBetween]="IsBetween",a[a.IsDecimal=s.IsDecimal]="IsDecimal",a[a.IsDivisibleBy=s.IsDivisibleBy]="IsDivisibleBy",a[a.IsEAN=s.IsEAN]="IsEAN",a[a.IsEIN=s.IsEIN]="IsEIN",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsEvenNumber=s.IsEvenNumber]="IsEvenNumber",a[a.IsFloat=s.IsFloat]="IsFloat",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInt=s.IsInteger]="IsInt",a[a.IsISBN=s.IsISBN]="IsISBN",a[a.IsISMN=s.IsISMN]="IsISMN",a[a.IsISSN=s.IsISSN]="IsISSN",a[a.IsLatitude=s.IsLatitude]="IsLatitude",a[a.IsLongitude=s.IsLongitude]="IsLongitude",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsMACAddress=s.IsMACAddress]="IsMACAddress",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsNegativeNumber=s.IsNegativeNumber]="IsNegativeNumber",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsOddNumber=s.IsOddNumber]="IsOddNumber",a[a.IsPassportNumber=s.IsPassportNumber]="IsPassportNumber",a[a.IsPhoneNumber=s.IsPhoneNumber]="IsPhoneNumber",a[a.IsPort=s.IsPort]="IsPort",a[a.IsPositiveNumber=s.IsPositiveNumber]="IsPositiveNumber",a[a.IsPostalCode=s.IsPostalCode]="IsPostalCode",a[a.IsSemanticVersion=s.IsSemanticVersion]="IsSemanticVersion",a[a.IsSSN=s.IsSSN]="IsSSN",a[a.IsTaxIDNumber=s.IsTaxIDNumber]="IsTaxIDNumber",a[a.IsUUID=s.IsUUID]="IsUUID",a[a.IsVATIDNumber=s.IsVATIDNumber]="IsVATIDNumber"})(hu||(hu={}));var _u;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsFloat=s.IsFloat]="IsFloat",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsNumeric=s.IsNumeric]="IsNumeric"})(_u||(_u={}));var Iu;(function(a){a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInteger=s.IsInteger]="IsInteger",a[a.IsGreaterThan=s.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=s.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=s.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=s.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsNumeric=s.IsNumeric]="IsNumeric"})(Iu||(Iu={}));var pu;(function(a){a[a.IsCreditCard=s.IsCreditCard]="IsCreditCard",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsLengthEqual=s.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=s.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=s.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=s.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=s.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch",a[a.IsNotRegexMatch=s.IsNotRegexMatch]="IsNotRegexMatch"})(pu||(pu={}));var Su;(function(a){a[a.isEmailAddress=s.IsEmailAddress]="isEmailAddress",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsLengthEqual=s.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=s.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=s.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=s.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=s.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch",a[a.IsNotRegexMatch=s.IsNotRegexMatch]="IsNotRegexMatch"})(Su||(Su={}));var Eu;(function(a){a[a.IsLicensePlateNumber=s.IsLicensePlateNumber]="IsLicensePlateNumber",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=s.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsString=s.IsString]="IsString",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch"})(Eu||(Eu={}));var Tu;(function(a){a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsPassportNumber=s.IsPassportNumber]="IsPassportNumber",a[a.IsString=s.IsString]="IsString",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch"})(Tu||(Tu={}));var vu;(function(a){a[a.IsComplexEnough=s.IsComplexEnough]="IsComplexEnough",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=s.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsLengthGreaterThan=s.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=s.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=s.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=s.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsStrongPassword=s.IsStrongPassword]="IsStrongPassword",a[a.IsString=s.IsString]="IsString",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch"})(vu||(vu={}));var bu;(function(a){a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=s.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsPhoneNumber=s.IsPhoneNumber]="IsPhoneNumber",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch"})(bu||(bu={}));var Uu;(function(a){a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsSSN=s.IsSSN]="IsSSN",a[a.IsString=s.IsString]="IsString",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch"})(Uu||(Uu={}));var Nu;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsBIC=s.IsBIC]="IsBIC",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(Nu||(Nu={}));var Bu;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEAN=s.IsEAN]="IsEAN",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(Bu||(Bu={}));var Pu;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEIN=s.IsEIN]="IsEIN",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(Pu||(Pu={}));var yu;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsIBAN=s.IsIBAN]="IsIBAN",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(yu||(yu={}));var ku;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsISBN=s.IsISBN]="IsISBN",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(ku||(ku={}));var Mu;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsISIN=s.IsISIN]="IsISIN",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(Mu||(Mu={}));var Du;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsISMN=s.IsISMN]="IsISMN",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(Du||(Du={}));var xu;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsISSN=s.IsISSN]="IsISSN",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString"})(xu||(xu={}));var Fu;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a[a.IsTaxIDNumber=s.IsTaxIDNumber]="IsTaxIDNumber"})(Fu||(Fu={}));var Lu;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsInList=s.IsInList]="IsInList",a[a.IsNotEqual=s.IsNotEqual]="IsNotEqual",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsString=s.IsString]="IsString",a[a.IsVATIDNumber=s.IsVATIDNumber]="IsVATIDNumber"})(Lu||(Lu={}));var wu;(function(a){a[a.Contains=s.Contains]="Contains",a[a.HasNumberCount=s.HasNumberCount]="HasNumberCount",a[a.HasLowercaseCount=s.HasLowercaseCount]="HasLowercaseCount",a[a.HasLetterCount=s.HasLetterCount]="HasLetterCount",a[a.HasSpacesCount=s.HasSpacesCount]="HasSpacesCount",a[a.HasSymbolCount=s.HasSymbolCount]="HasSymbolCount",a[a.HasUppercaseCount=s.HasUppercaseCount]="HasUppercaseCount",a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsAlphanumeric=s.IsAlphanumeric]="IsAlphanumeric",a[a.IsAscii=s.IsAscii]="IsAscii",a[a.IsBase64=s.IsBase64]="IsBase64",a[a.IsColor=s.IsColor]="IsColor",a[a.IsComplexEnough=s.IsComplexEnough]="IsComplexEnough",a[a.IsCreditCard=s.IsCreditCard]="IsCreditCard",a[a.IsDataURI=s.IsDataURI]="IsDataURI",a[a.IsDomainName=s.IsDomainName]="IsDomainName",a[a.IsEmailAddress=s.IsEmailAddress]="IsEmailAddress",a[a.IsEthereumAddress=s.IsEthereumAddress]="IsEthereumAddress",a[a.IsEAN=s.IsEAN]="IsEAN",a[a.IsEIN=s.IsEIN]="IsEIN",a[a.IsEqual=s.IsEqual]="IsEqual",a[a.IsIBAN=s.IsIBAN]="IsIBAN",a[a.IsHSLColor=s.IsHSLColor]="IsHSLColor",a[a.IsHexColor=s.IsHexColor]="IsHexColor",a[a.IsHexadecimal=s.IsHexadecimal]="IsHexadecimal",a[a.IsIdentityCardCode=s.IsIdentityCardCode]="IsIdentityCardCode",a[a.IsIMEI=s.IsIMEI]="IsIMEI",a[a.IsInList=s.IsInList]="IsInList",a[a.IsIPAddress=s.IsIPAddress]="IsIPAddress",a[a.IsInIPAddressRange=s.IsInIPAddressRange]="IsInIPAddressRange",a[a.IsISBN=s.IsISBN]="IsISBN",a[a.IsISIN=s.IsISIN]="IsISIN",a[a.IsISMN=s.IsISMN]="IsISMN",a[a.IsISRC=s.IsISRC]="IsISRC",a[a.IsISSN=s.IsISSN]="IsISSN",a[a.IsLanguage=s.IsLanguage]="IsLanguage",a[a.IsLatitude=s.IsLatitude]="IsLatitude",a[a.IsLongitude=s.IsLongitude]="IsLongitude",a[a.IsLengthEqual=s.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=s.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=s.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=s.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=s.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsLicensePlateNumber=s.IsLicensePlateNumber]="IsLicensePlateNumber",a[a.IsLowercase=s.IsLowercase]="IsLowercase",a[a.IsOctal=s.IsOctal]="IsOctal",a[a.IsMACAddress=s.IsMACAddress]="IsMACAddress",a[a.IsMD5=s.IsMD5]="IsMD5",a[a.IsMagnetURI=s.IsMagnetURI]="IsMagnetURI",a[a.IsMarkdown=s.IsMarkdown]="IsMarkdown",a[a.IsMimeType=s.IsMimeType]="IsMimeType",a[a.IsMonth=s.IsMonth]="IsMonth",a[a.IsNotInIPAddressRange=s.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNotNull=s.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=s.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsNumber=s.IsNumber]="IsNumber",a[a.IsNumeric=s.IsNumeric]="IsNumeric",a[a.IsPassportNumber=s.IsPassportNumber]="IsPassportNumber",a[a.IsPhoneNumber=s.IsPhoneNumber]="IsPhoneNumber",a[a.IsPort=s.IsPort]="IsPort",a[a.IsPostalCode=s.IsPostalCode]="IsPostalCode",a[a.IsProvince=s.IsProvince]="IsProvince",a[a.IsRegexMatch=s.IsRegexMatch]="IsRegexMatch",a[a.IsSemanticVersion=s.IsSemanticVersion]="IsSemanticVersion",a[a.IsSlug=s.IsSlug]="IsSlug",a[a.IsSSN=s.IsSSN]="IsSSN",a[a.IsState=s.IsState]="IsState",a[a.IsStreetAddress=s.IsStreetAddress]="IsStreetAddress",a[a.IsString=s.IsString]="IsString",a[a.IsTaxIDNumber=s.IsTaxIDNumber]="IsTaxIDNumber",a[a.IsURL=s.IsURL]="IsURL",a[a.IsUUID=s.IsUUID]="IsUUID",a[a.IsUppercase=s.IsUppercase]="IsUppercase",a[a.IsVATIDNumber=s.IsVATIDNumber]="IsVATIDNumber",a[a.IsWeekday=s.IsWeekday]="IsWeekday",a[a.IsWeekend=s.IsWeekend]="IsWeekend",a[a.IsYear=s.IsYear]="IsYear"})(wu||(wu={}));var Gu;(function(a){a[a.Contains=s.Contains]="Contains",a[a.IsAlpha=s.IsAlpha]="IsAlpha",a[a.IsAlphanumeric=s.IsAlphanumeric]="IsAlphanumeric",a[a.IsInList=s.IsInList]="IsInList",a[a.IsMarkdown=s.IsMarkdown]="IsMarkdown",a[a.IsNotInList=s.IsNotInList]="IsNotInList",a[a.IsNumeric=s.IsNumeric]="IsNumeric",a[a.IsLowercase=s.IsLowercase]="IsLowercase",a[a.IsString=s.IsString]="IsString",a[a.IsUppercase=s.IsUppercase]="IsUppercase"})(Gu||(Gu={}));var qu;(function(a){a.InvalidCharacters="invalid-characters",a.InvalidPattern="invalid-pattern",a.NotComplexEnough="not-complex-enough",a.NotUnique="not-unique",a.NotValidEmail="not-valid-email",a.TooLong="too-long",a.TooShort="too-short",a.Required="required"})(qu||(qu={}));var Ku;(function(a){a[a.Allowed=0]="Allowed",a[a.Blocked=1]="Blocked"})(Ku||(Ku={}));var Ou;(function(a){a.Canceled="Canceled",a.Completed="Completed",a.Created="Created",a.Faulted="Faulted",a.Queued="Queued",a.Running="Running",a.Waiting="Waiting"})(Ou||(Ou={}));var ju;(function(a){a.Archived="ARCHIVED",a.Compromised="COMPROMISED",a.Confirmed="CONFIRMED",a.ForcePasswordChange="FORCE_CHANGE_PASSWORD",a.ResetRequired="RESET_REQUIRED",a.Unconfirmed="UNCONFIRMED",a.Unknown="UNKNOWN"})(ju||(ju={}));var Hu;(function(a){a.Code="code",a.Link="link"})(Hu||(Hu={}));var Wu;(function(a){a.Owner="Owner",a.Admin="Admin",a.User="User",a.Visitor="Visitor"})(Wu||(Wu={}));var zu;(function(a){a.RequiresPaymentMethod="requires_payment_method",a.RequiresConfirmation="requires_confirmation",a.RequiresAction="requires_action",a.Processing="processing",a.RequiresCapture="requires_capture",a.Canceled="canceled",a.Succeeded="succeeded"})(zu||(zu={}));var Vu;(function(a){a.Incomplete="incomplete",a.IncompleteExpired="incomplete_expired",a.Trialing="trialing",a.Active="active",a.PastDue="past_due",a.Canceled="canceled",a.Unpaid="unpaid"})(Vu||(Vu={}));var Ru;(function(a){a.Monthly="monthly",a.Quarterly="quarterly",a.Yearly="yearly",a.Lifetime="lifetime"})(Ru||(Ru={}));var Yu;(function(a){a.Email="email",a.PhoneNumber="phone_number"})(Yu||(Yu={}));var Ju;(function(a){a.Analytics="analytics",a.Critical="critical",a.Debug="debug",a.Exception="exception",a.Http="http",a.Info="info",a.Warning="warning"})(Ju||(Ju={}));var Zu;(function(a){a.Delete="delete",a.Get="get",a.Head="head",a.Patch="patch",a.Post="post",a.Put="put"})(Zu||(Zu={}));var $u;(function(a){a[a.CONTINUE=100]="CONTINUE",a[a.SWITCHING_PROTOCOLS=101]="SWITCHING_PROTOCOLS",a[a.PROCESSING=102]="PROCESSING",a[a.OK=200]="OK",a[a.CREATED=201]="CREATED",a[a.ACCEPTED=202]="ACCEPTED",a[a.NON_AUTHORITATIVE_INFORMATION=203]="NON_AUTHORITATIVE_INFORMATION",a[a.NO_CONTENT=204]="NO_CONTENT",a[a.RESET_CONTENT=205]="RESET_CONTENT",a[a.PARTIAL_CONTENT=206]="PARTIAL_CONTENT",a[a.MULTI_STATUS=207]="MULTI_STATUS",a[a.ALREADY_REPORTED=208]="ALREADY_REPORTED",a[a.IM_USED=226]="IM_USED",a[a.MULTIPLE_CHOICES=300]="MULTIPLE_CHOICES",a[a.MOVED_PERMANENTLY=301]="MOVED_PERMANENTLY",a[a.FOUND=302]="FOUND",a[a.SEE_OTHER=303]="SEE_OTHER",a[a.NOT_MODIFIED=304]="NOT_MODIFIED",a[a.USE_PROXY=305]="USE_PROXY",a[a.SWITCH_PROXY=306]="SWITCH_PROXY",a[a.TEMPORARY_REDIRECT=307]="TEMPORARY_REDIRECT",a[a.PERMANENT_REDIRECT=308]="PERMANENT_REDIRECT",a[a.BAD_REQUEST=400]="BAD_REQUEST",a[a.UNAUTHORIZED=401]="UNAUTHORIZED",a[a.PAYMENT_REQUIRED=402]="PAYMENT_REQUIRED",a[a.FORBIDDEN=403]="FORBIDDEN",a[a.NOT_FOUND=404]="NOT_FOUND",a[a.METHOD_NOT_ALLOWED=405]="METHOD_NOT_ALLOWED",a[a.NOT_ACCEPTABLE=406]="NOT_ACCEPTABLE",a[a.PROXY_AUTHENTICATION_REQUIRED=407]="PROXY_AUTHENTICATION_REQUIRED",a[a.REQUEST_TIMEOUT=408]="REQUEST_TIMEOUT",a[a.CONFLICT=409]="CONFLICT",a[a.GONE=410]="GONE",a[a.LENGTH_REQUIRED=411]="LENGTH_REQUIRED",a[a.PRECONDITION_FAILED=412]="PRECONDITION_FAILED",a[a.PAYLOAD_TOO_LARGE=413]="PAYLOAD_TOO_LARGE",a[a.URI_TOO_LONG=414]="URI_TOO_LONG",a[a.UNSUPPORTED_MEDIA_TYPE=415]="UNSUPPORTED_MEDIA_TYPE",a[a.RANGE_NOT_SATISFIABLE=416]="RANGE_NOT_SATISFIABLE",a[a.EXPECTATION_FAILED=417]="EXPECTATION_FAILED",a[a.I_AM_A_TEAPOT=418]="I_AM_A_TEAPOT",a[a.MISDIRECTED_REQUEST=421]="MISDIRECTED_REQUEST",a[a.UNPROCESSABLE_ENTITY=422]="UNPROCESSABLE_ENTITY",a[a.LOCKED=423]="LOCKED",a[a.FAILED_DEPENDENCY=424]="FAILED_DEPENDENCY",a[a.TOO_EARLY=425]="TOO_EARLY",a[a.UPGRADE_REQUIRED=426]="UPGRADE_REQUIRED",a[a.PRECONDITION_REQUIRED=428]="PRECONDITION_REQUIRED",a[a.TOO_MANY_REQUESTS=429]="TOO_MANY_REQUESTS",a[a.REQUEST_HEADER_FIELDS_TOO_LARGE=431]="REQUEST_HEADER_FIELDS_TOO_LARGE",a[a.UNAVAILABLE_FOR_LEGAL_REASONS=451]="UNAVAILABLE_FOR_LEGAL_REASONS",a[a.INTERNAL_SERVER_ERROR=500]="INTERNAL_SERVER_ERROR",a[a.NOT_IMPLEMENTED=501]="NOT_IMPLEMENTED",a[a.BAD_GATEWAY=502]="BAD_GATEWAY",a[a.SERVICE_UNAVAILABLE=503]="SERVICE_UNAVAILABLE",a[a.GATEWAY_TIMEOUT=504]="GATEWAY_TIMEOUT",a[a.HTTP_VERSION_NOT_SUPPORTED=505]="HTTP_VERSION_NOT_SUPPORTED",a[a.VARIANT_ALSO_NEGOTIATES=506]="VARIANT_ALSO_NEGOTIATES",a[a.INSUFFICIENT_STORAGE=507]="INSUFFICIENT_STORAGE",a[a.LOOP_DETECTED=508]="LOOP_DETECTED",a[a.BANDWIDTH_LIMIT_EXCEEDED=509]="BANDWIDTH_LIMIT_EXCEEDED",a[a.NOT_EXTENDED=510]="NOT_EXTENDED",a[a.NETWORK_AUTHENTICATION_REQUIRED=511]="NETWORK_AUTHENTICATION_REQUIRED"})($u||($u={}));var h;(function(a){a.Afghanistan="AF",a.Albania="AL",a.Algeria="DZ",a.AmericanSamoa="AS",a.Andorra="AD",a.Angola="AO",a.Anguilla="AI",a.Antarctica="AQ",a.AntiguaAndBarbuda="AG",a.Argentina="AR",a.Armenia="AM",a.Aruba="AW",a.Australia="AU",a.Austria="AT",a.Azerbaijan="AZ",a.Bahamas="BS",a.Bahrain="BH",a.Bangladesh="BD",a.Barbados="BB",a.Belarus="BY",a.Belgium="BE",a.Belize="BZ",a.Benin="BJ",a.Bermuda="BM",a.Bhutan="BT",a.Bolivia="BO",a.BosniaAndHerzegovina="BA",a.Botswana="BW",a.BouvetIsland="BV",a.Brazil="BR",a.BritishIndianOceanTerritory="IO",a.Brunei="BN",a.Bulgaria="BG",a.BurkinaFaso="BF",a.Burundi="BI",a.Cambodia="KH",a.Cameroon="CM",a.Canada="CA",a.CapeVerde="CV",a.CaymanIslands="KY",a.CentralAfricanRepublic="CF",a.Chad="TD",a.Chile="CL",a.China="CN",a.ChristmasIsland="CX",a.CocosKeelingIslands="CC",a.Colombia="CO",a.Comoros="KM",a.Congo="CG",a.CongoTheDemocraticRepublicOfThe="CD",a.CookIslands="CK",a.CostaRica="CR",a.CoteDIvoire="CI",a.Croatia="HR",a.Cuba="CU",a.Cyprus="CY",a.CzechRepublic="CZ",a.Denmark="DK",a.Djibouti="DJ",a.Dominica="DM",a.DominicanRepublic="DO",a.Ecuador="EC",a.Egypt="EG",a.ElSalvador="SV",a.EquatorialGuinea="GQ",a.Eritrea="ER",a.Estonia="EE",a.Ethiopia="ET",a.FalklandIslands="FK",a.FaroeIslands="FO",a.Fiji="FJ",a.Finland="FI",a.France="FR",a.FrenchGuiana="GF",a.FrenchPolynesia="PF",a.FrenchSouthernTerritories="TF",a.Gabon="GA",a.Gambia="GM",a.Georgia="GE",a.Germany="DE",a.Ghana="GH",a.Gibraltar="GI",a.Greece="GR",a.Greenland="GL",a.Grenada="GD",a.Guadeloupe="GP",a.Guam="GU",a.Guatemala="GT",a.Guernsey="GG",a.Guinea="GN",a.GuineaBissau="GW",a.Guyana="GY",a.Haiti="HT",a.HeardIslandMcdonaldIslands="HM",a.HolySeeVaticanCityState="VA",a.Honduras="HN",a.HongKong="HK",a.Hungary="HU",a.Iceland="IS",a.India="IN",a.Indonesia="ID",a.Iran="IR",a.Iraq="IQ",a.Ireland="IE",a.IsleOfMan="IM",a.Israel="IL",a.Italy="IT",a.Jamaica="JM",a.Japan="JP",a.Jersey="JE",a.Jordan="JO",a.Kazakhstan="KZ",a.Kenya="KE",a.Kiribati="KI",a.Kuwait="KW",a.Kyrgyzstan="KG",a.Laos="LA",a.Latvia="LV",a.Lebanon="LB",a.Lesotho="LS",a.Liberia="LR",a.Libya="LY",a.Liechtenstein="LI",a.Lithuania="LT",a.Luxembourg="LU",a.Macau="MO",a.Madagascar="MG",a.Malawi="MW",a.Malaysia="MY",a.Maldives="MV",a.Mali="ML",a.Malta="MT",a.MarshallIslands="MH",a.Martinique="MQ",a.Mauritania="MR",a.Mauritius="MU",a.Mayotte="YT",a.Mexico="MX",a.MicronesiaFederatedStatesOf="FM",a.Moldova="MD",a.Monaco="MC",a.Mongolia="MN",a.Montenegro="ME",a.Montserrat="MS",a.Morocco="MA",a.Mozambique="MZ",a.Myanmar="MM",a.Namibia="NA",a.Nauru="NR",a.Nepal="NP",a.Netherlands="NL",a.NetherlandsAntilles="AN",a.NewCaledonia="NC",a.NewZealand="NZ",a.NorthKorea="KP",a.Nicaragua="NI",a.Niger="NE",a.Nigeria="NG",a.Niue="NU",a.NorfolkIsland="NF",a.NorthMacedonia="MK",a.NorthernMarianaIslands="MP",a.Norway="NO",a.Oman="OM",a.Pakistan="PK",a.Palau="PW",a.PalestinianTerritoryOccupied="PS",a.Panama="PA",a.PapuaNewGuinea="PG",a.Paraguay="PY",a.Peru="PE",a.Philippines="PH",a.Pitcairn="PN",a.Poland="PL",a.Portugal="PT",a.PuertoRico="PR",a.Qatar="QA",a.Reunion="RE",a.Romania="RO",a.RussianFederation="RU",a.Rwanda="RW",a.SaintBarthelemy="BL",a.SaintHelena="SH",a.SaintKittsAndNevis="KN",a.SaintLucia="LC",a.SaintMartin="MF",a.SaintPierreAndMiquelon="PM",a.SaintVincentAndTheGrenadines="VC",a.Samoa="WS",a.SanMarino="SM",a.SaoTomeAndPrincipe="ST",a.SaudiArabia="SA",a.Senegal="SN",a.Serbia="RS",a.SerbiaAndMontenegro="CS",a.Seychelles="SC",a.SierraLeone="SL",a.Singapore="SG",a.Slovakia="SK",a.Slovenia="SI",a.SolomonIslands="SB",a.Somalia="SO",a.SouthAfrica="ZA",a.SouthGeorgiaAndTheSouthSandwichIslands="GS",a.SouthKorea="KR",a.Spain="ES",a.SriLanka="LK",a.Sudan="SD",a.Suriname="SR",a.SvalbardAndJanMayen="SJ",a.Swaziland="SZ",a.Sweden="SE",a.Switzerland="CH",a.Syria="SY",a.Taiwan="TW",a.Tajikistan="TJ",a.Tanzania="TZ",a.Thailand="TH",a.TimorLeste="TL",a.Togo="TG",a.Tokelau="TK",a.Tonga="TO",a.TrinidadAndTobago="TT",a.Tunisia="TN",a.Turkey="TR",a.Turkmenistan="TM",a.TurksAndCaicosIslands="TC",a.Tuvalu="TV",a.Uganda="UG",a.Ukraine="UA",a.UnitedArabEmirates="AE",a.UnitedKingdom="GB",a.UnitedStates="US",a.UnitedStatesMinorOutlyingIslands="UM",a.Uruguay="UY",a.Uzbekistan="UZ",a.Vanuatu="VU",a.Venezuela="VE",a.Vietnam="VN",a.VirginIslandsBritish="VG",a.VirginIslandsUS="VI",a.WallisAndFutuna="WF",a.WesternSahara="EH",a.Yemen="YE",a.Zambia="ZM",a.Zimbabwe="ZW"})(h||(h={}));var k;(function(a){a.AfghanistanAfghani="AFN",a.AlbaniaLek="ALL",a.ArmeniaDram="AMD",a.AlgeriaDinar="DZD",a.AmericanSamoaTala="WST",a.AngolaKwanza="AOA",a.ArgentinaPeso="ARS",a.AustraliaDollar="AUD",a.ArubaFlorin="AWG",a.AzerbaijanNewManat="AZN",a.BosniaAndHerzegovinaConvertibleMark="BAM",a.BahrainDinar="BHD",a.BarbadosDollar="BBD",a.BangladeshTaka="BDT",a.BelgiumFranc="BGN",a.BermudaDollar="BMD",a.BruneiDollar="BND",a.BoliviaBoliviano="BOB",a.BrazilReal="BRL",a.BahamasDollar="BSD",a.BhutanNgultrum="BTN",a.BotswanaPula="BWP",a.BelarusRuble="BYN",a.BelizeDollar="BZD",a.BulgariaLev="BGN",a.BurundiFranc="BIF",a.BritishPound="GBP",a.CanadaDollar="CAD",a.CambodiaRiel="KHR",a.ComorosFranc="KMF",a.CaymanIslandsDollar="KYD",a.ChilePeso="CLP",a.ChinaYuan="CNY",a.ColombiaPeso="COP",a.CostaRicaColon="CRC",a.CroatiaKuna="HRK",a.CubaConvertiblePeso="CUC",a.CubaPeso="CUP",a.CapeVerdeEscudo="CVE",a.CyprusPound="CYP",a.CzechRepublicKoruna="CZK",a.DjiboutiFranc="DJF",a.DenmarkKrone="DKK",a.DominicaDollar="XCD",a.DominicanRepublicPeso="DOP",a.EastCaribbeanDollar="XCD",a.EgyptPound="EGP",a.ElSalvadorColon="SVC",a.EquatorialGuineaEkwele="GQE",a.EritreaNakfa="ERN",a.EstoniaKroon="EEK",a.EthiopiaBirr="ETB",a.Euro="EUR",a.FijiDollar="FJD",a.FalklandIslandsPound="FKP",a.GambiaDalasi="GMD",a.GabonFranc="GMD",a.GeorgiaLari="GEL",a.GhanaCedi="GHS",a.GibraltarPound="GIP",a.GuatemalaQuetzal="GTQ",a.GuernseyPound="GGP",a.GuineaBissauPeso="GWP",a.GuyanaDollar="GYD",a.HongKongDollar="HKD",a.HondurasLempira="HNL",a.HaitiGourde="HTG",a.HungaryForint="HUF",a.IndonesiaRupiah="IDR",a.IsleOfManPound="IMP",a.IsraelNewShekel="ILS",a.IndiaRupee="INR",a.IraqDinar="IQD",a.IranRial="IRR",a.IcelandKrona="ISK",a.JamaicaDollar="JMD",a.JapanYen="JPY",a.JerseyPound="JEP",a.JordanDinar="JOD",a.KazakhstanTenge="KZT",a.KenyaShilling="KES",a.KyrgyzstanSom="KGS",a.NorthKoreaWon="KPW",a.SouthKoreaWon="KRW",a.KuwaitDinar="KWD",a.LaosKip="LAK",a.LebanonPound="LBP",a.LiberiaDollar="LRD",a.LesothoLoti="LSL",a.LibyanDinar="LYD",a.LithuaniaLitas="LTL",a.LatviaLats="LVL",a.LibyaDinar="LYD",a.MacauPataca="MOP",a.MaldivesRufiyaa="MVR",a.MalawiKwacha="MWK",a.MaltaLira="MTL",a.MauritiusRupee="MUR",a.MongoliaTughrik="MNT",a.MoroccoDirham="MAD",a.MoldovaLeu="MDL",a.MozambiqueMetical="MZN",a.MadagascarAriary="MGA",a.MacedoniaDenar="MKD",a.MexicoPeso="MXN",a.MalaysiaRinggit="MYR",a.MyanmarKyat="MMK",a.MicronesiaFederatedStatesDollar="USD",a.NicaraguaCordoba="NIO",a.NamibiaDollar="NAD",a.NetherlandsAntillesGuilder="ANG",a.NewCaledoniaFranc="XPF",a.NigeriaNaira="NGN",a.NicaraguaCordobaOro="NIO",a.NigerCFAFranc="XOF",a.NorwayKrone="NOK",a.NepalRupee="NPR",a.NewZealandDollar="NZD",a.OmanRial="OMR",a.PanamaBalboa="PAB",a.PeruNuevoSol="PEN",a.PapuaNewGuineaKina="PGK",a.PhilippinesPeso="PHP",a.PakistanRupee="PKR",a.PeruNuevo="PEN",a.PolandZloty="PLN",a.ParaguayGuarani="PYG",a.QatarRial="QAR",a.RomaniaNewLeu="RON",a.SerbiaDinar="RSD",a.SriLankaRupee="LKR",a.RussiaRuble="RUB",a.RwandaFranc="RWF",a.SaudiArabiaRiyal="SAR",a.SlovakiaKoruna="SKK",a.SloveniaTolar="SIT",a.SolomonIslandsDollar="SBD",a.SeychellesRupee="SCR",a.SudanPound="SDG",a.SwedenKrona="SEK",a.SingaporeDollar="SGD",a.SaintHelenaPound="SHP",a.SierraLeoneLeone="SLL",a.SomaliaShilling="SOS",a.SurinameDollar="SRD",a.SintMaartenPound="SXD",a.SyriaPound="SYP",a.SwazilandLilangeni="SZL",a.SwitzerlandFranc="CHF",a.ThailandBaht="THB",a.TajikistanSomoni="TJS",a.TurkmenistanManat="TMT",a.TunisiaDinar="TND",a.TongaPaanga="TOP",a.TurkeyLira="TRY",a.TrinidadAndTobagoDollar="TTD",a.TaiwanNewDollar="TWD",a.TanzaniaShilling="TZS",a.UnitedArabEmiratesDirham="AED",a.UkraineHryvnia="UAH",a.UgandaShilling="UGX",a.UnitedKingdomPound="GBP",a.UnitedStatesDollar="USD",a.UruguayPeso="UYU",a.UzbekistanSom="UZS",a.VenezuelaBolivar="VEF",a.VietnamDong="VND",a.VanuatuVatu="VUV",a.SamoaTala="WST",a.YemenRial="YER",a.SouthAfricaRand="ZAR",a.ZambiaKwacha="ZMW",a.ZimbabweDollar="ZWL"})(k||(k={}));k.AfghanistanAfghani,h.Afghanistan,k.AlbaniaLek,h.Albania,k.AlgeriaDinar,h.Algeria,k.ArgentinaPeso,h.Argentina,k.ArmeniaDram,h.Armenia,k.ArubaFlorin,h.Aruba,k.AustraliaDollar,h.Australia,k.AzerbaijanNewManat,h.Azerbaijan,k.BahrainDinar,h.Bahrain,k.BangladeshTaka,h.Bangladesh,k.BarbadosDollar,h.Barbados,k.BelarusRuble,h.Belarus,k.BelizeDollar,h.Belize,k.BermudaDollar,h.Bermuda,k.BoliviaBoliviano,h.Bolivia,k.BosniaAndHerzegovinaConvertibleMark,h.BosniaAndHerzegovina,k.BotswanaPula,h.Botswana,k.BrazilReal,h.Brazil,k.BruneiDollar,h.Brunei,k.BulgariaLev,h.Bulgaria,k.BurundiFranc,h.Burundi,k.CambodiaRiel,h.Cambodia,k.CanadaDollar,h.Canada,k.CapeVerdeEscudo,h.CapeVerde,k.CaymanIslandsDollar,h.CaymanIslands,k.ChilePeso,h.Chile,k.ChinaYuan,h.China,k.ColombiaPeso,h.Colombia,k.ComorosFranc,h.Comoros,k.CostaRicaColon,h.CostaRica,k.CroatiaKuna,h.Croatia,k.CubaConvertiblePeso,h.Cuba,k.CubaPeso,h.Cuba,k.CyprusPound,h.Cyprus,k.CzechRepublicKoruna,h.CzechRepublic,k.DenmarkKrone,h.Denmark,k.DjiboutiFranc,h.Djibouti,k.DominicanRepublicPeso,h.DominicanRepublic,k.EastCaribbeanDollar,h.AntiguaAndBarbuda,h.Dominica,h.Grenada,h.SaintKittsAndNevis,h.SaintLucia,h.SaintVincentAndTheGrenadines,k.EgyptPound,h.Egypt,k.ElSalvadorColon,h.ElSalvador,k.EquatorialGuineaEkwele,h.EquatorialGuinea,k.EritreaNakfa,h.Eritrea,k.EstoniaKroon,h.Estonia,k.EthiopiaBirr,h.Ethiopia,k.Euro,h.Andorra,h.Austria,h.Belgium,h.Cyprus,h.Estonia,h.Finland,h.France,h.Germany,h.Greece,h.Ireland,h.Italy,h.Latvia,h.Lithuania,h.Luxembourg,h.Malta,h.Monaco,h.Netherlands,h.Portugal,h.Spain,h.Sweden,h.UnitedKingdom,k.FalklandIslandsPound,h.FalklandIslands,k.FijiDollar,h.Fiji,k.GambiaDalasi,h.Gambia,k.GeorgiaLari,h.Georgia,k.GhanaCedi,h.Ghana,k.GibraltarPound,h.Gibraltar,k.GuatemalaQuetzal,h.Guatemala,k.GuernseyPound,h.Guernsey,k.GuineaBissauPeso,h.GuineaBissau,k.GuyanaDollar,h.Guyana,k.HaitiGourde,h.Haiti,k.HondurasLempira,h.Honduras,k.HongKongDollar,h.HongKong,k.HungaryForint,h.Hungary,k.IcelandKrona,h.Iceland,k.IndiaRupee,h.India,h.Bhutan,k.IndonesiaRupiah,h.Indonesia,k.IranRial,h.Iran,k.IsleOfManPound,h.IsleOfMan,k.IsraelNewShekel,h.Israel,k.JamaicaDollar,h.Jamaica,k.JapanYen,h.Japan,k.JerseyPound,h.Jersey,k.JordanDinar,h.Jordan,k.KazakhstanTenge,h.Kazakhstan,k.KenyaShilling,h.Kenya,k.KuwaitDinar,h.Kuwait,k.KyrgyzstanSom,h.Kyrgyzstan,k.LaosKip,h.Laos,k.LatviaLats,h.Latvia,k.LebanonPound,h.Lebanon,k.LesothoLoti,h.Lesotho,k.LiberiaDollar,h.Liberia,k.LibyanDinar,h.Libya,k.LithuaniaLitas,h.Lithuania,k.MacauPataca,h.Macau,k.MacedoniaDenar,h.NorthMacedonia,k.MadagascarAriary,h.Madagascar,k.MalawiKwacha,h.Malawi,k.MalaysiaRinggit,h.Malaysia,k.MaldivesRufiyaa,h.Maldives,k.MaltaLira,h.Malta,k.MauritiusRupee,h.Mauritius,k.MexicoPeso,h.Mexico,k.MoldovaLeu,h.Moldova,k.MongoliaTughrik,h.Mongolia,k.MoroccoDirham,h.Morocco,k.MozambiqueMetical,h.Mozambique,k.MyanmarKyat,h.Myanmar,k.NamibiaDollar,h.Namibia,k.NepalRupee,h.Nepal,k.NetherlandsAntillesGuilder,h.NetherlandsAntilles,k.NewCaledoniaFranc,h.NewCaledonia,k.NewZealandDollar,h.NewZealand,k.NicaraguaCordoba,h.Nicaragua,k.NigerCFAFranc,h.Niger,k.NigeriaNaira,h.Nigeria,k.NorthKoreaWon,h.NorthKorea,k.NorwayKrone,h.Norway,k.OmanRial,h.Oman,k.PakistanRupee,h.Pakistan,k.PanamaBalboa,h.Panama,k.ParaguayGuarani,h.Paraguay,k.PeruNuevo,h.Peru,k.PhilippinesPeso,h.Philippines,k.PolandZloty,h.Poland,k.QatarRial,h.Qatar,k.RomaniaNewLeu,h.Romania,k.RussiaRuble,h.RussianFederation,k.RwandaFranc,h.Rwanda,k.SaudiArabiaRiyal,h.SaudiArabia,k.SerbiaDinar,h.Serbia,k.SeychellesRupee,h.Seychelles,k.SingaporeDollar,h.Singapore,k.SlovakiaKoruna,h.Slovakia,k.SloveniaTolar,h.Slovenia,k.SolomonIslandsDollar,h.SolomonIslands,k.SomaliaShilling,h.Somalia,k.SouthAfricaRand,h.SouthAfrica,k.SouthKoreaWon,h.SouthKorea,k.SriLankaRupee,h.SriLanka,k.SudanPound,h.Sudan,k.SurinameDollar,h.Suriname,k.SwazilandLilangeni,h.Swaziland,k.SwedenKrona,h.Sweden,k.SwitzerlandFranc,h.Switzerland,k.SyriaPound,h.Syria,k.TaiwanNewDollar,h.Taiwan,k.TajikistanSomoni,h.Tajikistan,k.TanzaniaShilling,h.Tanzania,k.ThailandBaht,h.Thailand,k.TunisiaDinar,h.Tunisia,k.TurkeyLira,h.Turkey,k.TurkmenistanManat,h.Turkmenistan,k.UgandaShilling,h.Uganda,k.UkraineHryvnia,h.Ukraine,k.UnitedArabEmiratesDirham,h.UnitedArabEmirates,k.UnitedKingdomPound,h.UnitedKingdom,k.UnitedStatesDollar,h.UnitedStates,k.UruguayPeso,h.Uruguay,k.UzbekistanSom,h.Uzbekistan,k.VanuatuVatu,h.Vanuatu,k.VenezuelaBolivar,h.Venezuela,k.VietnamDong,h.Vietnam,k.YemenRial,h.Yemen,k.ZambiaKwacha,h.Zambia,k.ZimbabweDollar,h.Zimbabwe;var Qu;(function(a){a.Bitcoin="BTC",a.Ethereum="ETH",a.Litecoin="LTC",a.Ripple="XRP",a.Dash="DASH",a.Zcash="ZEC",a.Dogecoin="DOGE",a.Monero="XMR",a.BitcoinCash="BCH",a.EOS="EOS",a.Binance="BNB",a.Stellar="XLM",a.Cardano="ADA",a.IOTA="IOTA",a.Tezos="XTZ",a.NEO="NEO",a.TRON="TRX",a.EOSClassic="EOSC",a.Ontology="ONT",a.VeChain="VEN",a.QTUM="QTUM",a.Lisk="LSK",a.Waves="WAVES",a.OmiseGO="OMG",a.Zilliqa="ZIL",a.BitcoinGold="BTG",a.Decred="DCR",a.Stratis="STRAT",a.Populous="PPT",a.Augur="REP",a.Golem="GNT",a.Siacoin="SC",a.BasicAttentionToken="BAT",a.ZCoin="XZC",a.StratisHedged="SNT",a.VeChainHedged="VEN",a.PowerLedger="POWR",a.WavesHedged="WAVE",a.ZilliqaHedged="ZRX",a.BitcoinDiamond="BCD",a.DigiByte="DGB",a.DigiByteHedged="DGB",a.Bytecoin="BCN",a.BytecoinHedged="BCN"})(Qu||(Qu={}));var T;(function(a){a.Afrikaans="af",a.Albanian="sq",a.Amharic="am",a.Arabic="ar",a.Armenian="hy",a.Azerbaijani="az",a.Bashkir="ba",a.Basque="eu",a.Belarusian="be",a.Bengali="bn",a.Berber="ber",a.Bhutani="dz",a.Bihari="bh",a.Bislama="bi",a.Bosnian="bs",a.Breten="br",a.Bulgarian="bg",a.Burmese="my",a.Cantonese="yue",a.Catalan="ca",a.Chinese="zh",a.Chuvash="cv",a.Corsican="co",a.Croatian="hr",a.Czech="cs",a.Danish="da",a.Dari="prs",a.Divehi="dv",a.Dutch="nl",a.English="en",a.Esperanto="eo",a.Estonian="et",a.Faroese="fo",a.Farsi="fa",a.Filipino="fil",a.Finnish="fi",a.French="fr",a.Frisian="fy",a.Galician="gl",a.Georgian="ka",a.German="de",a.Greek="el",a.Greenlandic="kl",a.Gujarati="gu",a.Haitian="ht",a.Hausa="ha",a.Hebrew="he",a.Hindi="hi",a.Hungarian="hu",a.Icelandic="is",a.Igbo="ig",a.Indonesian="id",a.Irish="ga",a.Italian="it",a.Japanese="ja",a.Javanese="jv",a.Kannada="kn",a.Karelian="krl",a.Kazakh="kk",a.Khmer="km",a.Komi="kv",a.Konkani="kok",a.Korean="ko",a.Kurdish="ku",a.Kyrgyz="ky",a.Lao="lo",a.Latin="la",a.Latvian="lv",a.Lithuanian="lt",a.Luxembourgish="lb",a.Ossetian="os",a.Macedonian="mk",a.Malagasy="mg",a.Malay="ms",a.Malayalam="ml",a.Maltese="mt",a.Maori="mi",a.Marathi="mr",a.Mari="mhr",a.Mongolian="mn",a.Montenegrin="me",a.Nepali="ne",a.NorthernSotho="nso",a.Norwegian="no",a.NorwegianBokmal="nb",a.NorwegianNynorsk="nn",a.Oriya="or",a.Pashto="ps",a.Persian="fa",a.Polish="pl",a.Portuguese="pt",a.Punjabi="pa",a.Quechua="qu",a.Romanian="ro",a.Russian="ru",a.Sakha="sah",a.Sami="se",a.Samoan="sm",a.Sanskrit="sa",a.Scots="gd",a.Serbian="sr",a.SerbianCyrillic="sr-Cyrl",a.Sesotho="st",a.Shona="sn",a.Sindhi="sd",a.Sinhala="si",a.Slovak="sk",a.Slovenian="sl",a.Somali="so",a.Spanish="es",a.Sudanese="su",a.Sutu="sx",a.Swahili="sw",a.Swedish="sv",a.Syriac="syr",a.Tagalog="tl",a.Tajik="tg",a.Tamazight="tmh",a.Tamil="ta",a.Tatar="tt",a.Telugu="te",a.Thai="th",a.Tibetan="bo",a.Tsonga="ts",a.Tswana="tn",a.Turkish="tr",a.Turkmen="tk",a.Ukrainian="uk",a.Urdu="ur",a.Uzbek="uz",a.Vietnamese="vi",a.Welsh="cy",a.Xhosa="xh",a.Yiddish="yi",a.Yoruba="yo",a.Zulu="zu"})(T||(T={}));var i;(function(a){a.Afrikaans="af",a.AfrikaansSouthAfrica="af-ZA",a.Albanian="sq",a.AlbanianAlbania="sq-AL",a.Amharic="am",a.AmharicEthiopia="am-ET",a.Arabic="ar",a.ArabicAlgeria="ar-DZ",a.ArabicBahrain="ar-BH",a.ArabicEgypt="ar-EG",a.ArabicIraq="ar-IQ",a.ArabicJordan="ar-JO",a.ArabicKuwait="ar-KW",a.ArabicLebanon="ar-LB",a.ArabicLibya="ar-LY",a.ArabicMorocco="ar-MA",a.ArabicOman="ar-OM",a.ArabicQatar="ar-QA",a.ArabicSaudiArabia="ar-SA",a.ArabicSyria="ar-SY",a.ArabicTunisia="ar-TN",a.ArabicUnitedArabEmirates="ar-AE",a.ArabicYemen="ar-YE",a.Armenian="hy",a.ArmenianArmenia="hy-AM",a.Azerbaijani="az",a.AzerbaijaniAzerbaijan="az-AZ",a.AzerbaijaniCyrillicAzerbaijan="az-Cyrl-AZ",a.Bashkir="ba",a.Basque="eu",a.BasqueSpain="eu-ES",a.Belarusian="be",a.BelarusianBelarus="be-BY",a.Bengali="bn",a.BengaliBangladesh="bn-BD",a.BengaliIndia="bn-IN",a.Berber="ber",a.Bhutani="dz",a.BhutaniBhutan="dz-BT",a.Bosnian="bs",a.BosnianBosniaAndHerzegovina="bs-BA",a.Breton="br",a.Bulgarian="bg",a.BulgarianBosniaAndHerzegovina="bg-BG",a.BulgarianBulgaria="bg-BG",a.Burmese="my",a.BurmeseMyanmar="my-MM",a.Cantonese="yue",a.CantoneseHongKong="yue-HK",a.Catalan="ca",a.CatalanSpain="ca-ES",a.Chechen="ce",a.Cherokee="chr",a.Chinese="zh",a.ChineseSimplified="zh-Hans",a.ChineseSimplifiedChina="zh-Hans-CN",a.ChineseSimplifiedHongKong="zh-Hans-HK",a.ChineseSimplifiedMacau="zh-Hans-MO",a.ChineseSimplifiedSingapore="zh-Hans-SG",a.ChineseTraditional="zh-Hant",a.ChineseTraditionalHongKong="zh-Hant-HK",a.ChineseTraditionalMacau="zh-Hant-MO",a.ChineseTraditionalSingapore="zh-Hant-SG",a.ChineseTraditionalTaiwan="zh-Hant-TW",a.Chuvash="cv",a.CorsicanFrance="co-FR",a.Croatian="hr",a.CroatianBosniaAndHerzegovina="hr-BA",a.CroatianCroatia="hr-HR",a.Czech="cs",a.CzechCzechRepublic="cs-CZ",a.Danish="da",a.DanishDenmark="da-DK",a.Dari="prs",a.DariAfghanistan="prs-AF",a.Divehi="dv",a.DivehiMaldives="dv-MV",a.Dutch="nl",a.DutchBelgium="nl-BE",a.DutchNetherlands="nl-NL",a.English="en",a.EnglishAustralia="en-AU",a.EnglishBelgium="en-BE",a.EnglishBelize="en-BZ",a.EnglishCanada="en-CA",a.EnglishCaribbean="en-029",a.EnglishIreland="en-IE",a.EnglishJamaica="en-JM",a.EnglishNewZealand="en-NZ",a.EnglishPhilippines="en-PH",a.EnglishSingapore="en-SG",a.EnglishSouthAfrica="en-ZA",a.EnglishTrinidadAndTobago="en-TT",a.EnglishUnitedKingdom="en-GB",a.EnglishUnitedStates="en-US",a.EnglishZimbabwe="en-ZW",a.Esperanto="eo",a.Estonian="et",a.EstonianEstonia="et-EE",a.Faroese="fo",a.FaroeseFaroeIslands="fo-FO",a.Farsi="fa",a.FarsiIran="fa-IR",a.Filipino="fil",a.FilipinoPhilippines="fil-PH",a.Finnish="fi",a.FinnishFinland="fi-FI",a.French="fr",a.FrenchBelgium="fr-BE",a.FrenchCanada="fr-CA",a.FrenchFrance="fr-FR",a.FrenchLuxembourg="fr-LU",a.FrenchMonaco="fr-MC",a.FrenchReunion="fr-RE",a.FrenchSwitzerland="fr-CH",a.Frisian="fy",a.FrisianNetherlands="fy-NL",a.Galician="gl",a.GalicianSpain="gl-ES",a.Georgian="ka",a.GeorgianGeorgia="ka-GE",a.German="de",a.GermanAustria="de-AT",a.GermanBelgium="de-BE",a.GermanGermany="de-DE",a.GermanLiechtenstein="de-LI",a.GermanLuxembourg="de-LU",a.GermanSwitzerland="de-CH",a.Greenlandic="kl",a.GreenlandicGreenland="kl-GL",a.Greek="el",a.GreekGreece="el-GR",a.Gujarati="gu",a.GujaratiIndia="gu-IN",a.Haitian="ht",a.Hausa="ha",a.HausaGhana="ha-GH",a.HausaNiger="ha-NE",a.HausaNigeria="ha-NG",a.Hebrew="he",a.HebrewIsrael="he-IL",a.Hindi="hi",a.HindiIndia="hi-IN",a.Hungarian="hu",a.HungarianHungary="hu-HU",a.Icelandic="is",a.IcelandicIceland="is-IS",a.Igbo="ig",a.IgboNigeria="ig-NG",a.Indonesian="id",a.IndonesianIndonesia="id-ID",a.Irish="ga",a.IrishIreland="ga-IE",a.Italian="it",a.ItalianItaly="it-IT",a.ItalianSwitzerland="it-CH",a.Japanese="ja",a.JapaneseJapan="ja-JP",a.Javanese="jv",a.Kannada="kn",a.KannadaIndia="kn-IN",a.Karelian="krl",a.Kazakh="kk",a.KazakhKazakhstan="kk-KZ",a.Khmer="km",a.KhmerCambodia="km-KH",a.KinyarwandaRwanda="rw-RW",a.Komi="kv",a.Konkani="kok",a.KonkaniIndia="kok-IN",a.Korean="ko",a.KoreanSouthKorea="ko-KR",a.Kurdish="ku",a.KurdishIraq="ku-IQ",a.KurdishTurkey="ku-TR",a.Kyrgyz="ky",a.KyrgyzKyrgyzstan="ky-KG",a.Lao="lo",a.LaoLaos="lo-LA",a.Latin="la",a.Latvian="lv",a.LatvianLatvia="lv-LV",a.Lithuanian="lt",a.LithuanianLithuania="lt-LT",a.Luxembourgish="lb",a.LuxembourgishBelgium="lb-LU",a.LuxembourgishLuxembourg="lb-LU",a.Macedonian="mk",a.MacedonianNorthMacedonia="mk-MK",a.Malagasy="mg",a.Malay="ms",a.MalayBrunei="ms-BN",a.MalayIndia="ms-IN",a.MalayMalaysia="ms-MY",a.MalaySingapore="ms-SG",a.Malayalam="ml",a.MalayalamIndia="ml-IN",a.Maltese="mt",a.MalteseMalta="mt-MT",a.Maori="mi",a.MaoriNewZealand="mi-NZ",a.Marathi="mr",a.MarathiIndia="mr-IN",a.Mari="chm",a.Mongolian="mn",a.MongolianMongolia="mn-MN",a.Montenegrin="me",a.MontenegrinMontenegro="me-ME",a.Nepali="ne",a.NepaliNepal="ne-NP",a.NorthernSotho="ns",a.NorthernSothoSouthAfrica="ns-ZA",a.Norwegian="nb",a.NorwegianBokmalNorway="nb-NO",a.NorwegianNynorskNorway="nn-NO",a.Oriya="or",a.OriyaIndia="or-IN",a.Ossetian="os",a.Pashto="ps",a.PashtoAfghanistan="ps-AF",a.Persian="fa",a.PersianIran="fa-IR",a.Polish="pl",a.PolishPoland="pl-PL",a.Portuguese="pt",a.PortugueseBrazil="pt-BR",a.PortuguesePortugal="pt-PT",a.Punjabi="pa",a.PunjabiIndia="pa-IN",a.PunjabiPakistan="pa-PK",a.Quechua="qu",a.QuechuaBolivia="qu-BO",a.QuechuaEcuador="qu-EC",a.QuechuaPeru="qu-PE",a.Romanian="ro",a.RomanianRomania="ro-RO",a.Russian="ru",a.RussianKazakhstan="ru-KZ",a.RussianKyrgyzstan="ru-KG",a.RussianRussia="ru-RU",a.RussianUkraine="ru-UA",a.Sakha="sah",a.Sanskrit="sa",a.SanskritIndia="sa-IN",a.Sami="se",a.SamiNorway="se-NO",a.SamiSweden="se-SE",a.SamiFinland="se-FI",a.Samoan="sm",a.SamoanSamoa="sm-WS",a.Scots="gd",a.Serbian="sr",a.SerbianBosniaAndHerzegovina="sr-BA",a.SerbianSerbiaAndMontenegro="sr-SP",a.SerbianCyrillic="sr-SP-Cyrl",a.SerbianCyrillicBosniaAndHerzegovina="sr-Cyrl-BA",a.SerbianCyrillicSerbiaAndMontenegro="sr-Cyrl-SP",a.Sesotho="st",a.SesothoSouthAfrica="st-ZA",a.Shona="sn",a.ShonaZimbabwe="sn-ZW",a.Sindhi="sd",a.SindhiPakistan="sd-PK",a.Sinhala="si",a.SinhalaSriLanka="si-LK",a.Slovak="sk",a.SlovakSlovakia="sk-SK",a.Slovenian="sl",a.SlovenianSlovenia="sl-SI",a.Somali="so",a.SomaliSomalia="so-SO",a.Spanish="es",a.SpanishArgentina="es-AR",a.SpanishBolivia="es-BO",a.SpanishChile="es-CL",a.SpanishColombia="es-CO",a.SpanishCostaRica="es-CR",a.SpanishCuba="es-CU",a.SpanishDominicanRepublic="es-DO",a.SpanishEcuador="es-EC",a.SpanishEquatorialGuinea="es-GQ",a.SpanishElSalvador="es-SV",a.SpanishGuatemala="es-GT",a.SpanishHonduras="es-HN",a.SpanishMexico="es-MX",a.SpanishNicaragua="es-NI",a.SpanishPanama="es-PA",a.SpanishParaguay="es-PY",a.SpanishPeru="es-PE",a.SpanishPuertoRico="es-PR",a.SpanishSpain="es-ES",a.SpanishUnitedStates="es-US",a.SpanishUruguay="es-UY",a.SpanishVenezuela="es-VE",a.Sudanese="su",a.Sutu="st",a.SutuSouthAfrica="st-ZA",a.Swahili="sw",a.SwahiliKenya="sw-KE",a.Swedish="sv",a.SwedishFinland="sv-FI",a.SwedishSweden="sv-SE",a.Syriac="syr",a.SyriacSyria="syr-SY",a.Tajik="tg",a.TajikTajikistan="tg-TJ",a.Tagalog="tl",a.TagalogPhilippines="tl-PH",a.Tamazight="tmh",a.Tamil="ta",a.TamilIndia="ta-IN",a.Tatar="tt",a.Telugu="te",a.TeluguIndia="te-IN",a.Thai="th",a.ThaiThailand="th-TH",a.Tibetan="bo",a.TibetanBhutan="bo-BT",a.TibetanChina="bo-CN",a.TibetanIndia="bo-IN",a.Tsonga="ts",a.Tswana="tn",a.TswanaSouthAfrica="tn-ZA",a.Turkish="tr",a.TurkishTurkey="tr-TR",a.Turkmen="tk",a.Ukrainian="uk",a.UkrainianUkraine="uk-UA",a.Urdu="ur",a.UrduAfghanistan="ur-AF",a.UrduIndia="ur-IN",a.UrduPakistan="ur-PK",a.Uzbek="uz",a.UzbekCyrillic="uz-Cyrl-UZ",a.UzbekLatin="uz-Latn-UZ",a.UzbekUzbekistan="uz-UZ",a.Vietnamese="vi",a.VietnameseVietnam="vi-VN",a.Welsh="cy",a.WelshUnitedKingdom="cy-GB",a.Xhosa="xh",a.XhosaSouthAfrica="xh-ZA",a.Yiddish="yi",a.Yoruba="yo",a.YorubaNigeria="yo-NG",a.ZhuyinMandarinChina="yue-Hant-CN",a.Zulu="zu",a.ZuluSouthAfrica="zu-ZA"})(i||(i={}));var d;(function(a){a.AfricaAbidjan="Africa/Abidjan",a.AfricaAccra="Africa/Accra",a.AfricaAddisAbaba="Africa/Addis_Ababa",a.AfricaAlgiers="Africa/Algiers",a.AfricaAsmara="Africa/Asmara",a.AfricaBamako="Africa/Bamako",a.AfricaBangui="Africa/Bangui",a.AfricaBanjul="Africa/Banjul",a.AfricaBissau="Africa/Bissau",a.AfricaBlantyre="Africa/Blantyre",a.AfricaBrazzaville="Africa/Brazzaville",a.AfricaBujumbura="Africa/Bujumbura",a.AfricaCairo="Africa/Cairo",a.AfricaCasablanca="Africa/Casablanca",a.AfricaCeuta="Africa/Ceuta",a.AfricaConakry="Africa/Conakry",a.AfricaDakar="Africa/Dakar",a.AfricaDarEsSalaam="Africa/Dar_es_Salaam",a.AfricaDjibouti="Africa/Djibouti",a.AfricaDouala="Africa/Douala",a.AfricaElAaiun="Africa/El_Aaiun",a.AfricaFreetown="Africa/Freetown",a.AfricaGaborone="Africa/Gaborone",a.AfricaHarare="Africa/Harare",a.AfricaJohannesburg="Africa/Johannesburg",a.AfricaJuba="Africa/Juba",a.AfricaKampala="Africa/Kampala",a.AfricaKhartoum="Africa/Khartoum",a.AfricaKigali="Africa/Kigali",a.AfricaKinshasa="Africa/Kinshasa",a.AfricaLagos="Africa/Lagos",a.AfricaLibreville="Africa/Libreville",a.AfricaLome="Africa/Lome",a.AfricaLuanda="Africa/Luanda",a.AfricaLubumbashi="Africa/Lubumbashi",a.AfricaLusaka="Africa/Lusaka",a.AfricaMalabo="Africa/Malabo",a.AfricaMaputo="Africa/Maputo",a.AfricaMaseru="Africa/Maseru",a.AfricaMbabane="Africa/Mbabane",a.AfricaMogadishu="Africa/Mogadishu",a.AfricaMonrovia="Africa/Monrovia",a.AfricaNairobi="Africa/Nairobi",a.AfricaNdjamena="Africa/Ndjamena",a.AfricaNiamey="Africa/Niamey",a.AfricaNouakchott="Africa/Nouakchott",a.AfricaOuagadougou="Africa/Ouagadougou",a.AfricaPortoNovo="Africa/Porto-Novo",a.AfricaSaoTome="Africa/Sao_Tome",a.AfricaTripoli="Africa/Tripoli",a.AfricaTunis="Africa/Tunis",a.AfricaWindhoek="Africa/Windhoek",a.AmericaAdak="America/Adak",a.AmericaAnchorage="America/Anchorage",a.AmericaAnguilla="America/Anguilla",a.AmericaAntigua="America/Antigua",a.AmericaAraguaina="America/Araguaina",a.AmericaArgentinaBuenosAires="America/Argentina/Buenos_Aires",a.AmericaArgentinaCatamarca="America/Argentina/Catamarca",a.AmericaArgentinaCordoba="America/Argentina/Cordoba",a.AmericaArgentinaJujuy="America/Argentina/Jujuy",a.AmericaArgentinaLaRioja="America/Argentina/La_Rioja",a.AmericaArgentinaMendoza="America/Argentina/Mendoza",a.AmericaArgentinaRioGallegos="America/Argentina/Rio_Gallegos",a.AmericaArgentinaSalta="America/Argentina/Salta",a.AmericaArgentinaSanJuan="America/Argentina/San_Juan",a.AmericaArgentinaSanLuis="America/Argentina/San_Luis",a.AmericaArgentinaTucuman="America/Argentina/Tucuman",a.AmericaArgentinaUshuaia="America/Argentina/Ushuaia",a.AmericaAruba="America/Aruba",a.AmericaAsuncion="America/Asuncion",a.AmericaAtikokan="America/Atikokan",a.AmericaAtka="America/Atka",a.AmericaBahia="America/Bahia",a.AmericaBahiaBanderas="America/Bahia_Banderas",a.AmericaBarbados="America/Barbados",a.AmericaBelem="America/Belem",a.AmericaBelize="America/Belize",a.AmericaBlancSablon="America/Blanc-Sablon",a.AmericaBoaVista="America/Boa_Vista",a.AmericaBogota="America/Bogota",a.AmericaBoise="America/Boise",a.AmericaCambridgeBay="America/Cambridge_Bay",a.AmericaCampoGrande="America/Campo_Grande",a.AmericaCancun="America/Cancun",a.AmericaCaracas="America/Caracas",a.AmericaCayenne="America/Cayenne",a.AmericaCayman="America/Cayman",a.AmericaChicago="America/Chicago",a.AmericaChihuahua="America/Chihuahua",a.AmericaCoralHarbour="America/Coral_Harbour",a.AmericaCordoba="America/Cordoba",a.AmericaCostaRica="America/Costa_Rica",a.AmericaCreston="America/Creston",a.AmericaCuiaba="America/Cuiaba",a.AmericaCuracao="America/Curacao",a.AmericaDanmarkshavn="America/Danmarkshavn",a.AmericaDawson="America/Dawson",a.AmericaDawsonCreek="America/Dawson_Creek",a.AmericaDenver="America/Denver",a.AmericaDetroit="America/Detroit",a.AmericaDominica="America/Dominica",a.AmericaEdmonton="America/Edmonton",a.AmericaEirunepe="America/Eirunepe",a.AmericaElSalvador="America/El_Salvador",a.AmericaFortaleza="America/Fortaleza",a.AmericaGlaceBay="America/Glace_Bay",a.AmericaGodthab="America/Godthab",a.AmericaGooseBay="America/Goose_Bay",a.AmericaGrandTurk="America/Grand_Turk",a.AmericaGrenada="America/Grenada",a.AmericaGuadeloupe="America/Guadeloupe",a.AmericaGuatemala="America/Guatemala",a.AmericaGuayaquil="America/Guayaquil",a.AmericaGuyana="America/Guyana",a.AmericaHalifax="America/Halifax",a.AmericaHavana="America/Havana",a.AmericaHermosillo="America/Hermosillo",a.AmericaIndianaIndianapolis="America/Indiana/Indianapolis",a.AmericaIndianaKnox="America/Indiana/Knox",a.AmericaIndianaMarengo="America/Indiana/Marengo",a.AmericaIndianaPetersburg="America/Indiana/Petersburg",a.AmericaIndianaTellCity="America/Indiana/Tell_City",a.AmericaIndianaVevay="America/Indiana/Vevay",a.AmericaIndianaVincennes="America/Indiana/Vincennes",a.AmericaIndianaWinamac="America/Indiana/Winamac",a.AmericaInuvik="America/Inuvik",a.AmericaIqaluit="America/Iqaluit",a.AmericaJamaica="America/Jamaica",a.AmericaJuneau="America/Juneau",a.AmericaKentuckyLouisville="America/Kentucky/Louisville",a.AmericaKentuckyMonticello="America/Kentucky/Monticello",a.AmericaKralendijk="America/Kralendijk",a.AmericaLaPaz="America/La_Paz",a.AmericaLima="America/Lima",a.AmericaLosAngeles="America/Los_Angeles",a.AmericaLouisville="America/Louisville",a.AmericaLowerPrinces="America/Lower_Princes",a.AmericaMaceio="America/Maceio",a.AmericaManagua="America/Managua",a.AmericaManaus="America/Manaus",a.AmericaMarigot="America/Marigot",a.AmericaMartinique="America/Martinique",a.AmericaMatamoros="America/Matamoros",a.AmericaMazatlan="America/Mazatlan",a.AmericaMenominee="America/Menominee",a.AmericaMerida="America/Merida",a.AmericaMetlakatla="America/Metlakatla",a.AmericaMexicoCity="America/Mexico_City",a.AmericaMiquelon="America/Miquelon",a.AmericaMoncton="America/Moncton",a.AmericaMonterrey="America/Monterrey",a.AmericaMontevideo="America/Montevideo",a.AmericaMontserrat="America/Montserrat",a.AmericaMontreal="America/Montreal",a.AmericaNassau="America/Nassau",a.AmericaNewYork="America/New_York",a.AmericaNipigon="America/Nipigon",a.AmericaNome="America/Nome",a.AmericaNoronha="America/Noronha",a.AmericaNorthDakotaBeulah="America/North_Dakota/Beulah",a.AmericaNorthDakotaCenter="America/North_Dakota/Center",a.AmericaNorthDakotaNewSalem="America/North_Dakota/New_Salem",a.AmericaOjinaga="America/Ojinaga",a.AmericaPanama="America/Panama",a.AmericaPangnirtung="America/Pangnirtung",a.AmericaParamaribo="America/Paramaribo",a.AmericaPhoenix="America/Phoenix",a.AmericaPortAuPrince="America/Port-au-Prince",a.AmericaPortOfSpain="America/Port_of_Spain",a.AmericaPortoVelho="America/Porto_Velho",a.AmericaPuertoRico="America/Puerto_Rico",a.AmericaRainyRiver="America/Rainy_River",a.AmericaRankinInlet="America/Rankin_Inlet",a.AmericaRecife="America/Recife",a.AmericaRegina="America/Regina",a.AmericaResolute="America/Resolute",a.AmericaRioBranco="America/Rio_Branco",a.AmericaSantaIsabel="America/Santa_Isabel",a.AmericaSantarem="America/Santarem",a.AmericaSantiago="America/Santiago",a.AmericaSantoDomingo="America/Santo_Domingo",a.AmericaSaoPaulo="America/Sao_Paulo",a.AmericaScoresbysund="America/Scoresbysund",a.AmericaShiprock="America/Shiprock",a.AmericaSitka="America/Sitka",a.AmericaStBarthelemy="America/St_Barthelemy",a.AmericaStJohns="America/St_Johns",a.AmericaStKitts="America/St_Kitts",a.AmericaStLucia="America/St_Lucia",a.AmericaStThomas="America/St_Thomas",a.AmericaStVincent="America/St_Vincent",a.AmericaSwiftCurrent="America/Swift_Current",a.AmericaTegucigalpa="America/Tegucigalpa",a.AmericaThule="America/Thule",a.AmericaThunderBay="America/Thunder_Bay",a.AmericaTijuana="America/Tijuana",a.AmericaToronto="America/Toronto",a.AmericaTortola="America/Tortola",a.AmericaVancouver="America/Vancouver",a.AmericaWhitehorse="America/Whitehorse",a.AmericaWinnipeg="America/Winnipeg",a.AmericaYakutat="America/Yakutat",a.AmericaYellowknife="America/Yellowknife",a.AntarcticaCasey="Antarctica/Casey",a.AntarcticaDavis="Antarctica/Davis",a.AntarcticaDumontDUrville="Antarctica/DumontDUrville",a.AntarcticaMacquarie="Antarctica/Macquarie",a.AntarcticaMawson="Antarctica/Mawson",a.AntarcticaMcMurdo="Antarctica/McMurdo",a.AntarcticaPalmer="Antarctica/Palmer",a.AntarcticaRothera="Antarctica/Rothera",a.AntarcticaSyowa="Antarctica/Syowa",a.AntarcticaTroll="Antarctica/Troll",a.AntarcticaVostok="Antarctica/Vostok",a.ArcticLongyearbyen="Arctic/Longyearbyen",a.AsiaAden="Asia/Aden",a.AsiaAlmaty="Asia/Almaty",a.AsiaAmman="Asia/Amman",a.AsiaAnadyr="Asia/Anadyr",a.AsiaAqtau="Asia/Aqtau",a.AsiaAqtobe="Asia/Aqtobe",a.AsiaAshgabat="Asia/Ashgabat",a.AsiaBaghdad="Asia/Baghdad",a.AsiaBahrain="Asia/Bahrain",a.AsiaBaku="Asia/Baku",a.AsiaBangkok="Asia/Bangkok",a.AsiaBarnaul="Asia/Barnaul",a.AsiaBeirut="Asia/Beirut",a.AsiaBishkek="Asia/Bishkek",a.AsiaBrunei="Asia/Brunei",a.AsiaChita="Asia/Chita",a.AsiaChoibalsan="Asia/Choibalsan",a.AsiaColombo="Asia/Colombo",a.AsiaDamascus="Asia/Damascus",a.AsiaDhaka="Asia/Dhaka",a.AsiaDili="Asia/Dili",a.AsiaDubai="Asia/Dubai",a.AsiaDushanbe="Asia/Dushanbe",a.AsiaFamagusta="Asia/Famagusta",a.AsiaGaza="Asia/Gaza",a.AsiaHebron="Asia/Hebron",a.AsiaHoChiMinh="Asia/Ho_Chi_Minh",a.AsiaHongKong="Asia/Hong_Kong",a.AsiaHovd="Asia/Hovd",a.AsiaIrkutsk="Asia/Irkutsk",a.AsiaJakarta="Asia/Jakarta",a.AsiaJayapura="Asia/Jayapura",a.AsiaJerusalem="Asia/Jerusalem",a.AsiaKabul="Asia/Kabul",a.AsiaKamchatka="Asia/Kamchatka",a.AsiaKarachi="Asia/Karachi",a.AsiaKathmandu="Asia/Kathmandu",a.AsiaKhandyga="Asia/Khandyga",a.AsiaKolkata="Asia/Kolkata",a.AsiaKrasnoyarsk="Asia/Krasnoyarsk",a.AsiaKualaLumpur="Asia/Kuala_Lumpur",a.AsiaKuching="Asia/Kuching",a.AsiaKuwait="Asia/Kuwait",a.AsiaMacau="Asia/Macau",a.AsiaMagadan="Asia/Magadan",a.AsiaMakassar="Asia/Makassar",a.AsiaManila="Asia/Manila",a.AsiaMuscat="Asia/Muscat",a.AsiaNicosia="Asia/Nicosia",a.AsiaNovokuznetsk="Asia/Novokuznetsk",a.AsiaNovosibirsk="Asia/Novosibirsk",a.AsiaOmsk="Asia/Omsk",a.AsiaOral="Asia/Oral",a.AsiaPhnomPenh="Asia/Phnom_Penh",a.AsiaPontianak="Asia/Pontianak",a.AsiaPyongyang="Asia/Pyongyang",a.AsiaQatar="Asia/Qatar",a.AsiaQyzylorda="Asia/Qyzylorda",a.AsiaRangoon="Asia/Rangoon",a.AsiaRiyadh="Asia/Riyadh",a.AsiaSakhalin="Asia/Sakhalin",a.AsiaSamarkand="Asia/Samarkand",a.AsiaSeoul="Asia/Seoul",a.AsiaShanghai="Asia/Shanghai",a.AsiaSingapore="Asia/Singapore",a.AsiaSrednekolymsk="Asia/Srednekolymsk",a.AsiaTaipei="Asia/Taipei",a.AsiaTashkent="Asia/Tashkent",a.AsiaTbilisi="Asia/Tbilisi",a.AsiaTehran="Asia/Tehran",a.AsiaThimphu="Asia/Thimphu",a.AsiaTokyo="Asia/Tokyo",a.AsiaTomsk="Asia/Tomsk",a.AsiaUlaanbaatar="Asia/Ulaanbaatar",a.AsiaUrumqi="Asia/Urumqi",a.AsiaUstNera="Asia/Ust-Nera",a.AsiaVientiane="Asia/Vientiane",a.AsiaVladivostok="Asia/Vladivostok",a.AsiaYakutsk="Asia/Yakutsk",a.AsiaYekaterinburg="Asia/Yekaterinburg",a.AsiaYerevan="Asia/Yerevan",a.AtlanticAzores="Atlantic/Azores",a.AtlanticBermuda="Atlantic/Bermuda",a.AtlanticCanary="Atlantic/Canary",a.AtlanticCapeVerde="Atlantic/Cape_Verde",a.AtlanticFaroe="Atlantic/Faroe",a.AtlanticMadeira="Atlantic/Madeira",a.AtlanticReykjavik="Atlantic/Reykjavik",a.AtlanticSouthGeorgia="Atlantic/South_Georgia",a.AtlanticStHelena="Atlantic/St_Helena",a.AtlanticStanley="Atlantic/Stanley",a.AustraliaAdelaide="Australia/Adelaide",a.AustraliaBrisbane="Australia/Brisbane",a.AustraliaBrokenHill="Australia/Broken_Hill",a.AustraliaCanberra="Australia/Canberra",a.AustraliaCurrie="Australia/Currie",a.AustraliaDarwin="Australia/Darwin",a.AustraliaEucla="Australia/Eucla",a.AustraliaHobart="Australia/Hobart",a.AustraliaLindeman="Australia/Lindeman",a.AustraliaLordHowe="Australia/Lord_Howe",a.AustraliaMelbourne="Australia/Melbourne",a.AustraliaPerth="Australia/Perth",a.AustraliaSydney="Australia/Sydney",a.EuropeAmsterdam="Europe/Amsterdam",a.EuropeAndorra="Europe/Andorra",a.EuropeAthens="Europe/Athens",a.EuropeBelgrade="Europe/Belgrade",a.EuropeBerlin="Europe/Berlin",a.EuropeBratislava="Europe/Bratislava",a.EuropeBrussels="Europe/Brussels",a.EuropeBucharest="Europe/Bucharest",a.EuropeBudapest="Europe/Budapest",a.EuropeBusingen="Europe/Busingen",a.EuropeChisinau="Europe/Chisinau",a.EuropeCopenhagen="Europe/Copenhagen",a.EuropeDublin="Europe/Dublin",a.EuropeGibraltar="Europe/Gibraltar",a.EuropeGuernsey="Europe/Guernsey",a.EuropeHelsinki="Europe/Helsinki",a.EuropeIsleOfMan="Europe/Isle_of_Man",a.EuropeIstanbul="Europe/Istanbul",a.EuropeJersey="Europe/Jersey",a.EuropeKaliningrad="Europe/Kaliningrad",a.EuropeKiev="Europe/Kiev",a.EuropeKirov="Europe/Kirov",a.EuropeLisbon="Europe/Lisbon",a.EuropeLjubljana="Europe/Ljubljana",a.EuropeLondon="Europe/London",a.EuropeLuxembourg="Europe/Luxembourg",a.EuropeMadrid="Europe/Madrid",a.EuropeMalta="Europe/Malta",a.EuropeMariehamn="Europe/Mariehamn",a.EuropeMinsk="Europe/Minsk",a.EuropeMonaco="Europe/Monaco",a.EuropeMoscow="Europe/Moscow",a.EuropeOslo="Europe/Oslo",a.EuropeParis="Europe/Paris",a.EuropePodgorica="Europe/Podgorica",a.EuropePrague="Europe/Prague",a.EuropeRiga="Europe/Riga",a.EuropeRome="Europe/Rome",a.EuropeSamara="Europe/Samara",a.EuropeSanMarino="Europe/San_Marino",a.EuropeSarajevo="Europe/Sarajevo",a.EuropeSimferopol="Europe/Simferopol",a.EuropeSkopje="Europe/Skopje",a.EuropeSofia="Europe/Sofia",a.EuropeStockholm="Europe/Stockholm",a.EuropeTallinn="Europe/Tallinn",a.EuropeTirane="Europe/Tirane",a.EuropeUzhgorod="Europe/Uzhgorod",a.EuropeVaduz="Europe/Vaduz",a.EuropeVatican="Europe/Vatican",a.EuropeVienna="Europe/Vienna",a.EuropeVilnius="Europe/Vilnius",a.EuropeVolgograd="Europe/Volgograd",a.EuropeWarsaw="Europe/Warsaw",a.EuropeZagreb="Europe/Zagreb",a.EuropeZaporozhye="Europe/Zaporozhye",a.EuropeZurich="Europe/Zurich",a.GMT="GMT",a.IndianAntananarivo="Indian/Antananarivo",a.IndianChagos="Indian/Chagos",a.IndianChristmas="Indian/Christmas",a.IndianCocos="Indian/Cocos",a.IndianComoro="Indian/Comoro",a.IndianKerguelen="Indian/Kerguelen",a.IndianMahe="Indian/Mahe",a.IndianMaldives="Indian/Maldives",a.IndianMauritius="Indian/Mauritius",a.IndianMayotte="Indian/Mayotte",a.IndianReunion="Indian/Reunion",a.PacificApia="Pacific/Apia",a.PacificAuckland="Pacific/Auckland",a.PacificBougainville="Pacific/Bougainville",a.PacificChatham="Pacific/Chatham",a.PacificChuuk="Pacific/Chuuk",a.PacificEaster="Pacific/Easter",a.PacificEfate="Pacific/Efate",a.PacificEnderbury="Pacific/Enderbury",a.PacificFakaofo="Pacific/Fakaofo",a.PacificFiji="Pacific/Fiji",a.PacificFunafuti="Pacific/Funafuti",a.PacificGalapagos="Pacific/Galapagos",a.PacificGambier="Pacific/Gambier",a.PacificGuadalcanal="Pacific/Guadalcanal",a.PacificGuam="Pacific/Guam",a.PacificHonolulu="Pacific/Honolulu",a.PacificJohnston="Pacific/Johnston",a.PacificKiritimati="Pacific/Kiritimati",a.PacificKosrae="Pacific/Kosrae",a.PacificKwajalein="Pacific/Kwajalein",a.PacificMajuro="Pacific/Majuro",a.PacificMarquesas="Pacific/Marquesas",a.PacificMidway="Pacific/Midway",a.PacificNauru="Pacific/Nauru",a.PacificNiue="Pacific/Niue",a.PacificNorfolk="Pacific/Norfolk",a.PacificNoumea="Pacific/Noumea",a.PacificPagoPago="Pacific/Pago_Pago",a.PacificPalau="Pacific/Palau",a.PacificPitcairn="Pacific/Pitcairn",a.PacificPohnpei="Pacific/Pohnpei",a.PacificPonape="Pacific/Ponape",a.PacificPortMoresby="Pacific/Port_Moresby",a.PacificRarotonga="Pacific/Rarotonga",a.PacificSaipan="Pacific/Saipan",a.PacificSamoa="Pacific/Samoa",a.PacificTahiti="Pacific/Tahiti",a.PacificTarawa="Pacific/Tarawa",a.PacificTongatapu="Pacific/Tongatapu",a.PacificTruk="Pacific/Truk",a.PacificWake="Pacific/Wake",a.PacificWallis="Pacific/Wallis",a.PacificYap="Pacific/Yap"})(d||(d={}));var l;(function(a){a.UTC_MINUS_12="UTC-12",a.UTC_MINUS_11_30="UTC-11:30",a.UTC_MINUS_11="UTC-11",a.UTC_MINUS_10_30="UTC-10:30",a.UTC_MINUS_10="UTC-10",a.UTC_MINUS_9_30="UTC-9:30",a.UTC_MINUS_9="UTC-09",a.UTC_MINUS_8_45="UTC-8:45",a.UTC_MINUS_8="UTC-08",a.UTC_MINUS_7="UTC-07",a.UTC_MINUS_6_30="UTC-6:30",a.UTC_MINUS_6="UTC-06",a.UTC_MINUS_5_45="UTC-5:45",a.UTC_MINUS_5_30="UTC-5:30",a.UTC_MINUS_5="UTC-05",a.UTC_MINUS_4_30="UTC-4:30",a.UTC_MINUS_4="UTC-04",a.UTC_MINUS_3_30="UTC-3:30",a.UTC_MINUS_3="UTC-03",a.UTC_MINUS_2_30="UTC-2:30",a.UTC_MINUS_2="UTC-02",a.UTC_MINUS_1="UTC-01",a.UTC_0="UTC+00",a.UTC_PLUS_1="UTC+01",a.UTC_PLUS_2="UTC+02",a.UTC_PLUS_3="UTC+03",a.UTC_PLUS_3_30="UTC+3:30",a.UTC_PLUS_4="UTC+04",a.UTC_PLUS_4_30="UTC+4:30",a.UTC_PLUS_5="UTC+05",a.UTC_PLUS_5_30="UTC+5:30",a.UTC_PLUS_5_45="UTC+5:45",a.UTC_PLUS_6="UTC+06",a.UTC_PLUS_6_30="UTC+6:30",a.UTC_PLUS_7="UTC+07",a.UTC_PLUS_8="UTC+08",a.UTC_PLUS_8_45="UTC+8:45",a.UTC_PLUS_9="UTC+09",a.UTC_PLUS_9_30="UTC+9:30",a.UTC_PLUS_10="UTC+10",a.UTC_PLUS_10_30="UTC+10:30",a.UTC_PLUS_11="UTC+11",a.UTC_PLUS_11_30="UTC+11:30",a.UTC_PLUS_12="UTC+12",a.UTC_PLUS_12_45="UTC+12:45",a.UTC_PLUS_13="UTC+13",a.UTC_PLUS_13_45="UTC+13:45",a.UTC_PLUS_14="UTC+14"})(l||(l={}));var o;(function(a){a.AcreTime="ACT",a.AfghanistanTime="AFT",a.AIXCentralEuropeanTime="DFT",a.AlaskaDaylightTime="AKDT",a.AlaskaStandardTime="AKST",a.AlmaAtaTime="ALMT",a.AmazonSummerTime="AMST",a.AmazonTime="AMT",a.AnadyrTime="ANAT",a.AqtobeTime="AQTT",a.ArabiaStandardTime="AST",a.ArgentinaTime="ART",a.ArmeniaTime="AMT",a.ASEANCommonTime="ASEAN",a.AtlanticDaylightTime="ADT",a.AtlanticStandardTime="AST",a.AustralianCentralDaylightSavingTime="ACDT",a.AustralianCentralStandardTime="ACST",a.AustralianCentralWesternStandardTime="ACWST",a.AustralianEasternDaylightSavingTime="AEDT",a.AustralianEasternStandardTime="AEST",a.AustralianEasternTime="AET",a.AustralianWesternStandardTime="AWST",a.AzerbaijanTime="AZT",a.AzoresStandardTime="AZOT",a.AzoresSummerTime="AZOST",a.BakerIslandTime="BIT",a.BangladeshStandardTime="BST",a.BhutanTime="BTT",a.BoliviaTime="BOT",a.BougainvilleStandardTime="BST",a.BrasiliaSummerTime="BRST",a.BrasiliaTime="BRT",a.BritishIndianOceanTime="BIOT",a.BritishSummerTime="BST",a.BruneiTime="BNT",a.CapeVerdeTime="CVT",a.CentralAfricaTime="CAT",a.CentralDaylightTime="CDT",a.CentralEuropeanSummerTime="CEST",a.CentralEuropeanTime="CET",a.CentralIndonesiaTime="WITA",a.CentralStandardTime="CST",a.CentralTime="CT",a.CentralWesternStandardTime="CWST",a.ChamorroStandardTime="CHST",a.ChathamDaylightTime="CHADT",a.ChathamStandardTime="CHAST",a.ChileStandardTime="CLT",a.ChileSummerTime="CLST",a.ChinaStandardTime="CST",a.ChoibalsanStandardTime="CHOT",a.ChoibalsanSummerTime="CHOST",a.ChristmasIslandTime="CXT",a.ChuukTime="CHUT",a.ClipptertonIslandStandardTime="CIST",a.CocosIslandsTime="CCT",a.ColombiaSummerTime="COST",a.ColombiaTime="COT",a.CookIslandTime="CKT",a.CoordinatedUniversalTime="UTC",a.CubaDaylightTime="CDT",a.CubaStandardTime="CST",a.DavisTime="DAVT",a.DumontDUrvilleTime="DDUT",a.EastAfricaTime="EAT",a.EasterIslandStandardTime="EAST",a.EasterIslandSummerTime="EASST",a.EasternCaribbeanTime="ECT",a.EasternDaylightTime="EDT",a.EasternEuropeanSummerTime="EEST",a.EasternEuropeanTime="EET",a.EasternGreenlandSummerTime="EGST",a.EasternGreenlandTime="EGT",a.EasternIndonesianTime="WIT",a.EasternStandardTime="EST",a.EasternTime="ET",a.EcuadorTime="ECT",a.FalklandIslandsSummerTime="FKST",a.FalklandIslandsTime="FKT",a.FernandoDeNoronhaTime="FNT",a.FijiTime="FJT",a.FrenchGuianaTime="GFT",a.FrenchSouthernAndAntarcticTime="TFT",a.FurtherEasternEuropeanTime="FET",a.GalapagosTime="GALT",a.GambierIslandTime="GIT",a.GambierIslandsTime="GAMT",a.GeorgiaStandardTime="GET",a.GilbertIslandTime="GILT",a.GreenwichMeanTime="GMT",a.GulfStandardTime="GST",a.GuyanaTime="GYT",a.HawaiiAleutianDaylightTime="HDT",a.HawaiiAleutianStandardTime="HST",a.HeardAndMcDonaldIslandsTime="HMT",a.HeureAvanceeDEuropeCentraleTime="HAEC",a.HongKongTime="HKT",a.HovdSummerTime="HOVST",a.HovdTime="HOVT",a.IndianOceanTime="IOT",a.IndianStandardTime="IST",a.IndochinaTime="ICT",a.InternationalDayLineWestTime="IDLW",a.IranDaylightTime="IRDT",a.IranStandardTime="IRST",a.IrishStandardTime="IST",a.IrkutskSummerTime="IRKST",a.IrkutskTime="IRKT",a.IsraelDaylightTime="IDT",a.IsraelStandardTime="IST",a.JapanStandardTime="JST",a.KaliningradTime="KALT",a.KamchatkaTime="KAMT",a.KoreaStandardTime="KST",a.KosraeTime="KOST",a.KrasnoyarskSummerTime="KRAST",a.KrasnoyarskTime="KRAT",a.KyrgyzstanTime="KGT",a.LineIslandsTime="LINT",a.KazakhstanStandardTime="KAST",a.LordHoweStandardTime="LHST",a.LordHoweSummerTime="LHST",a.MacquarieIslandStationTime="MIST",a.MagadanTime="MAGT",a.MalaysiaStandardTime="MST",a.MalaysiaTime="MYT",a.MaldivesTime="MVT",a.MarquesasIslandsTime="MART",a.MarshallIslandsTime="MHT",a.MauritiusTime="MUT",a.MawsonStationTime="MAWT",a.MiddleEuropeanSummerTime="MEDT",a.MiddleEuropeanTime="MET",a.MoscowTime="MSK",a.MountainDaylightTime="MDT",a.MountainStandardTime="MST",a.MyanmarStandardTime="MMT",a.NepalTime="NCT",a.NauruTime="NRT",a.NewCaledoniaTime="NCT",a.NewZealandDaylightTime="NZDT",a.NewZealandStandardTime="NZST",a.NewfoundlandDaylightTime="NDT",a.NewfoundlandStandardTime="NST",a.NewfoundlandTime="NT",a.NiueTime="NUT",a.NorfolkIslandTime="NFT",a.NovosibirskTime="NOVT",a.OmskTime="OMST",a.OralTime="ORAT",a.PacificDaylightTime="PDT",a.PacificStandardTime="PST",a.PakistanStandardTime="PKT",a.PalauTime="PWT",a.PapuaNewGuineaTime="PGT",a.ParaguaySummerTime="PYST",a.ParaguayTime="PYT",a.PeruTime="PET",a.PhilippineStandardTime="PHST",a.PhilippineTime="PHT",a.PhoenixIslandTime="PHOT",a.PitcairnTime="PST",a.PohnpeiStandardTime="PONT",a.ReunionTime="RET",a.RotheraResearchStationTime="ROTT",a.SaintPierreAndMiquelonDaylightTime="PMDT",a.SaintPierreAndMiquelonStandardTime="PMST",a.SakhalinIslandTime="SAKT",a.SamaraTime="SAMT",a.SamoaDaylightTime="SDT",a.SamoaStandardTime="SST",a.SeychellesTime="SCT",a.ShowaStationTime="SYOT",a.SingaporeStandardTime="SST",a.SingaporeTime="SGT",a.SolomonIslandsTime="SBT",a.SouthAfricanStandardTime="SAST",a.SouthGeorgiaAndTheSouthSandwichIslandsTime="GST",a.SrednekolymskTime="SRET",a.SriLankaStandardTime="SLST",a.SurinameTime="SRT",a.TahitiTime="TAHT",a.TajikistanTime="TJT",a.ThailandStandardTime="THA",a.TimorLesteTime="TLT",a.TokelauTime="TKT",a.TongaTime="TOT",a.TurkeyTime="TRT",a.TurkmenistanTime="TMT",a.TuvaluTime="TVT",a.UlaanbaatarStandardTime="ULAT",a.UlaanbaatarSummerTime="ULAST",a.UruguayStandardTime="UYT",a.UruguaySummerTime="UYST",a.UzbekistanTime="UZT",a.VanuatuTime="VUT",a.VenezuelaStandardTime="VET",a.VladivostokTime="VLAT",a.VolgogradTime="VOLT",a.VostokStationTime="VOST",a.WakeIslandTime="WAKT",a.WestAfricaSummerTime="WAST",a.WestAfricaTime="WAT",a.WestGreenlandSummerTime="WGST",a.WestGreenlandTime="WGT",a.WestKazakhstanTime="WKT",a.WesternEuropeanSummerTime="WEDT",a.WesternEuropeanTime="WET",a.WesternIndonesianTime="WIT",a.WesternStandardTime="WST",a.YakutskTime="YAKT",a.YekaterinburgTime="YEKT"})(o||(o={}));o.AcreTime,l.UTC_MINUS_5;o.AfghanistanTime,l.UTC_PLUS_4_30;o.AIXCentralEuropeanTime,l.UTC_PLUS_1;o.AlaskaDaylightTime,l.UTC_MINUS_8;o.AlaskaStandardTime,l.UTC_MINUS_9;o.AlmaAtaTime,l.UTC_PLUS_6;o.AmazonSummerTime,l.UTC_MINUS_3;o.AmazonTime,l.UTC_MINUS_4;o.AnadyrTime,l.UTC_PLUS_12;o.AqtobeTime,l.UTC_PLUS_5;o.ArabiaStandardTime,l.UTC_PLUS_3;o.ArgentinaTime,l.UTC_MINUS_3;o.ArmeniaTime,l.UTC_PLUS_4;o.AtlanticDaylightTime,l.UTC_MINUS_3;o.AtlanticStandardTime,l.UTC_MINUS_4;o.AustralianCentralDaylightSavingTime,l.UTC_PLUS_10_30;o.AustralianCentralStandardTime,l.UTC_PLUS_9_30;o.AustralianCentralWesternStandardTime,l.UTC_PLUS_8_45;o.AustralianEasternDaylightSavingTime,l.UTC_PLUS_11;o.AustralianEasternStandardTime,l.UTC_PLUS_10;o.AustralianEasternTime,l.UTC_PLUS_10;o.AustralianWesternStandardTime,l.UTC_PLUS_8;o.AzerbaijanTime,l.UTC_PLUS_4;o.AzoresStandardTime,l.UTC_MINUS_1;o.AzoresSummerTime,l.UTC_0;o.BakerIslandTime,l.UTC_MINUS_12;o.BangladeshStandardTime,l.UTC_PLUS_6;o.BhutanTime,l.UTC_PLUS_6;o.BoliviaTime,l.UTC_MINUS_4;o.BougainvilleStandardTime,l.UTC_PLUS_11;o.BrasiliaSummerTime,l.UTC_MINUS_2;o.BrasiliaTime,l.UTC_MINUS_3;o.BritishIndianOceanTime,l.UTC_PLUS_6;o.BritishSummerTime,l.UTC_PLUS_1;o.BruneiTime,l.UTC_PLUS_8;o.CapeVerdeTime,l.UTC_MINUS_1;o.CentralAfricaTime,l.UTC_PLUS_2;o.CentralDaylightTime,l.UTC_MINUS_5;o.CentralEuropeanSummerTime,l.UTC_PLUS_2;o.CentralEuropeanTime,l.UTC_PLUS_1;o.CentralIndonesiaTime,l.UTC_PLUS_8;o.CentralStandardTime,l.UTC_MINUS_6;o.CentralTime,l.UTC_MINUS_5;o.CentralWesternStandardTime,l.UTC_PLUS_8_45;o.ChamorroStandardTime,l.UTC_PLUS_10;o.ChathamDaylightTime,l.UTC_PLUS_13_45;o.ChathamStandardTime,l.UTC_PLUS_12_45;o.ChileStandardTime,l.UTC_MINUS_4;o.ChileSummerTime,l.UTC_MINUS_3;o.ChinaStandardTime,l.UTC_PLUS_8;o.ChoibalsanStandardTime,l.UTC_PLUS_8;o.ChoibalsanSummerTime,l.UTC_PLUS_9;o.ChristmasIslandTime,l.UTC_PLUS_7;o.ChuukTime,l.UTC_PLUS_10;o.ClipptertonIslandStandardTime,l.UTC_MINUS_8;o.CocosIslandsTime,l.UTC_PLUS_6_30;o.ColombiaSummerTime,l.UTC_MINUS_4;o.ColombiaTime,l.UTC_MINUS_5;o.CookIslandTime,l.UTC_MINUS_10;o.CoordinatedUniversalTime,l.UTC_0;o.CubaDaylightTime,l.UTC_MINUS_4;o.CubaStandardTime,l.UTC_MINUS_5;o.DavisTime,l.UTC_PLUS_7;o.DumontDUrvilleTime,l.UTC_PLUS_10;o.EastAfricaTime,l.UTC_PLUS_3;o.EasterIslandStandardTime,l.UTC_MINUS_6;o.EasterIslandSummerTime,l.UTC_MINUS_5;o.EasternCaribbeanTime,l.UTC_MINUS_4;o.EasternDaylightTime,l.UTC_MINUS_4;o.EasternEuropeanSummerTime,l.UTC_PLUS_3;o.EasternEuropeanTime,l.UTC_PLUS_2;o.EasternGreenlandSummerTime,l.UTC_0;o.EasternGreenlandTime,l.UTC_MINUS_1;o.EasternIndonesianTime,l.UTC_PLUS_9;o.EasternStandardTime,l.UTC_MINUS_5;o.EasternTime,l.UTC_MINUS_5;o.EcuadorTime,l.UTC_MINUS_5;o.FalklandIslandsSummerTime,l.UTC_MINUS_3;o.FalklandIslandsTime,l.UTC_MINUS_4;o.FernandoDeNoronhaTime,l.UTC_MINUS_2;o.FijiTime,l.UTC_PLUS_12;o.FrenchGuianaTime,l.UTC_MINUS_3;o.FrenchSouthernAndAntarcticTime,l.UTC_PLUS_5;o.FurtherEasternEuropeanTime,l.UTC_PLUS_3;o.GalapagosTime,l.UTC_MINUS_6;o.GambierIslandTime,l.UTC_MINUS_9;o.GambierIslandsTime,l.UTC_MINUS_9;o.GeorgiaStandardTime,l.UTC_PLUS_4;o.GilbertIslandTime,l.UTC_PLUS_12;o.GreenwichMeanTime,l.UTC_0;o.GulfStandardTime,l.UTC_PLUS_4;o.GuyanaTime,l.UTC_MINUS_4;o.HawaiiAleutianDaylightTime,l.UTC_MINUS_9;o.HawaiiAleutianStandardTime,l.UTC_MINUS_10;o.HeardAndMcDonaldIslandsTime,l.UTC_PLUS_5;o.HongKongTime,l.UTC_PLUS_8;o.HovdSummerTime,l.UTC_PLUS_8;o.HovdTime,l.UTC_PLUS_7;o.IndianOceanTime,l.UTC_PLUS_3;o.IndianStandardTime,l.UTC_PLUS_5_30;o.IndochinaTime,l.UTC_PLUS_7;o.InternationalDayLineWestTime,l.UTC_MINUS_12;o.IranDaylightTime,l.UTC_PLUS_4_30;o.IranStandardTime,l.UTC_PLUS_3_30;o.IrishStandardTime,l.UTC_PLUS_1;o.IrkutskTime,l.UTC_PLUS_8;o.IsraelDaylightTime,l.UTC_PLUS_3;o.IsraelStandardTime,l.UTC_PLUS_2;o.JapanStandardTime,l.UTC_PLUS_9;o.KaliningradTime,l.UTC_PLUS_2;o.KamchatkaTime,l.UTC_PLUS_12;o.KoreaStandardTime,l.UTC_PLUS_9;o.KosraeTime,l.UTC_PLUS_11;o.KrasnoyarskTime,l.UTC_PLUS_7;o.KyrgyzstanTime,l.UTC_PLUS_6;o.LineIslandsTime,l.UTC_PLUS_14;o.LordHoweStandardTime,l.UTC_PLUS_10_30;o.LordHoweSummerTime,l.UTC_PLUS_11;o.MacquarieIslandStationTime,l.UTC_PLUS_11;o.MagadanTime,l.UTC_PLUS_12;o.MalaysiaStandardTime,l.UTC_PLUS_8;o.MalaysiaTime,l.UTC_PLUS_8;o.MaldivesTime,l.UTC_PLUS_5;o.MarquesasIslandsTime,l.UTC_PLUS_9_30;o.MarshallIslandsTime,l.UTC_PLUS_12;o.MauritiusTime,l.UTC_PLUS_4;o.MawsonStationTime,l.UTC_PLUS_5;o.MiddleEuropeanSummerTime,l.UTC_PLUS_2;o.MiddleEuropeanTime,l.UTC_PLUS_1;o.MoscowTime,l.UTC_PLUS_3;o.MountainDaylightTime,l.UTC_MINUS_6;o.MountainStandardTime,l.UTC_MINUS_7;o.MyanmarStandardTime,l.UTC_PLUS_6_30;o.NepalTime,l.UTC_PLUS_5_45;o.NauruTime,l.UTC_PLUS_12;o.NewCaledoniaTime,l.UTC_PLUS_11;o.NewZealandDaylightTime,l.UTC_PLUS_13;o.NewZealandStandardTime,l.UTC_PLUS_12;o.NewfoundlandDaylightTime,l.UTC_MINUS_2_30;o.NewfoundlandTime,l.UTC_MINUS_3_30;o.NiueTime,l.UTC_MINUS_11;o.NorfolkIslandTime,l.UTC_PLUS_11;o.NovosibirskTime,l.UTC_PLUS_7;o.OmskTime,l.UTC_PLUS_6;o.OralTime,l.UTC_PLUS_5;o.PacificDaylightTime,l.UTC_MINUS_7;o.PacificStandardTime,l.UTC_MINUS_8;o.PakistanStandardTime,l.UTC_PLUS_5;o.PalauTime,l.UTC_PLUS_9;o.PapuaNewGuineaTime,l.UTC_PLUS_10;o.ParaguaySummerTime,l.UTC_MINUS_3;o.ParaguayTime,l.UTC_MINUS_4;o.PeruTime,l.UTC_MINUS_5;o.PhilippineStandardTime,l.UTC_PLUS_8;o.PhilippineTime,l.UTC_PLUS_8;o.PhoenixIslandTime,l.UTC_PLUS_13;o.PitcairnTime,l.UTC_MINUS_8;o.PohnpeiStandardTime,l.UTC_PLUS_11;o.ReunionTime,l.UTC_PLUS_4;o.RotheraResearchStationTime,l.UTC_MINUS_3;o.SaintPierreAndMiquelonDaylightTime,l.UTC_MINUS_2;o.SaintPierreAndMiquelonStandardTime,l.UTC_MINUS_3;o.SakhalinIslandTime,l.UTC_PLUS_11;o.SamaraTime,l.UTC_PLUS_4;o.SamoaDaylightTime,l.UTC_MINUS_10;o.SamoaStandardTime,l.UTC_MINUS_11;o.SeychellesTime,l.UTC_PLUS_4;o.ShowaStationTime,l.UTC_PLUS_3;o.SingaporeStandardTime,l.UTC_PLUS_8;o.SingaporeTime,l.UTC_PLUS_8;o.SolomonIslandsTime,l.UTC_PLUS_11;o.SouthAfricanStandardTime,l.UTC_PLUS_2;o.SouthGeorgiaAndTheSouthSandwichIslandsTime,l.UTC_MINUS_2;o.SrednekolymskTime,l.UTC_PLUS_11;o.SriLankaStandardTime,l.UTC_PLUS_5_30;o.SurinameTime,l.UTC_MINUS_3;o.TahitiTime,l.UTC_MINUS_10;o.TajikistanTime,l.UTC_PLUS_5;o.ThailandStandardTime,l.UTC_PLUS_7;o.TimorLesteTime,l.UTC_PLUS_9;o.TokelauTime,l.UTC_PLUS_13;o.TongaTime,l.UTC_PLUS_13;o.TurkeyTime,l.UTC_PLUS_3;o.TurkmenistanTime,l.UTC_PLUS_5;o.TuvaluTime,l.UTC_PLUS_12;o.UlaanbaatarStandardTime,l.UTC_PLUS_8;o.UlaanbaatarSummerTime,l.UTC_PLUS_9;o.UruguayStandardTime,l.UTC_MINUS_3;o.UruguaySummerTime,l.UTC_MINUS_2;o.UzbekistanTime,l.UTC_PLUS_5;o.VanuatuTime,l.UTC_PLUS_11;o.VenezuelaStandardTime,l.UTC_MINUS_4;o.VladivostokTime,l.UTC_PLUS_10;o.VolgogradTime,l.UTC_PLUS_4;o.VostokStationTime,l.UTC_PLUS_6;o.WakeIslandTime,l.UTC_PLUS_12;o.WestAfricaSummerTime,l.UTC_PLUS_2;o.WestAfricaTime,l.UTC_PLUS_1;o.WestGreenlandSummerTime,l.UTC_MINUS_2;o.WestGreenlandTime,l.UTC_MINUS_3;o.WestKazakhstanTime,l.UTC_PLUS_5;o.WesternEuropeanSummerTime,l.UTC_PLUS_1;o.WesternEuropeanTime,l.UTC_0;o.WesternIndonesianTime,l.UTC_PLUS_7;o.WesternStandardTime,l.UTC_PLUS_8;o.YakutskTime,l.UTC_PLUS_9;o.YekaterinburgTime,l.UTC_PLUS_5;var te;(function(a){a.Africa="Africa",a.Americas="Americas",a.Asia="Asia",a.Europe="Europe",a.Oceania="Oceania",a.Polar="Polar"})(te||(te={}));var ue;(function(a){a.CentralAmerica="Central America",a.EasternAsia="Eastern Asia",a.EasternEurope="Eastern Europe",a.EasternAfrica="Eastern Africa",a.MiddleAfrica="Middle Africa",a.MiddleEast="Middle East",a.NorthernAfrica="Northern Africa",a.NorthernAmerica="Northern America",a.NorthernEurope="Northern Europe",a.Polynesia="Polynesia",a.SouthAmerica="South America",a.SouthernAfrica="Southern Africa",a.SouthernAsia="Southern Asia",a.SouthernEurope="Southern Europe",a.WesternAfrica="Western Africa",a.WesternAsia="Western Asia",a.WesternEurope="Western Europe",a.WesternAustralia="Western Australia"})(ue||(ue={}));k.AfghanistanAfghani,i.Pashto,i.Dari,i.Turkmen,i.Uzbek,l.UTC_PLUS_4_30,d.AsiaKabul,o.AfghanistanTime,h.Afghanistan,h.Afghanistan,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greenlandic+"",i.Greek+"",i.Gujarati+"",i.Haitian+"",i.Hausa+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Polish+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tatar+"",i.Tamil+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Welsh+"",i.Xhosa+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"",te.Asia,ue.SouthernAsia,k.AlbaniaLek,i.Albanian,i.Greek,i.Turkish,l.UTC_PLUS_1,d.EuropeBrussels,o.CentralEuropeanTime,h.Albania,h.Albania,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greenlandic+"",i.Greek+"",i.Gujarati+"",i.Haitian+"",i.Hausa+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tamil+"",i.Tatar+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Welsh+"",i.Xhosa+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"",te.Europe,ue.SouthernEurope,k.AlgeriaDinar,i.Arabic,i.French,i.Berber,i.Tamazight,l.UTC_PLUS_1,l.UTC_PLUS_2,d.AfricaAlgiers,o.CentralEuropeanTime,h.Algeria,h.Algeria,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greenlandic+"",i.Greek+"",i.Gujarati+"",i.Haitian+"",i.Hausa+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tamil+"",i.Tatar+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Welsh+"",i.Xhosa+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"",te.Africa,ue.NorthernAfrica,k.AmericanSamoaTala,i.English,i.Samoan,l.UTC_MINUS_11,d.PacificSamoa,o.SamoaStandardTime,h.AmericanSamoa,h.AmericanSamoa,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greenlandic+"",i.Greek+"",i.Gujarati+"",i.Haitian+"",i.Hausa+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tamil+"",i.Tatar+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Welsh+"",i.Xhosa+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"",te.Oceania,ue.Polynesia,k.Euro,i.Catalan,i.Spanish,l.UTC_PLUS_1,l.UTC_PLUS_2,d.EuropeAndorra,o.CentralEuropeanTime,h.Andorra,h.Andorra,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greek+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tamil+"",i.Tatar+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Welsh+"",i.Xhosa+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"",te.Europe,ue.SouthernEurope,k.AngolaKwanza,i.Portuguese,i.Spanish,i.French,i.Italian,i.German,i.English,l.UTC_0,l.UTC_PLUS_1,l.UTC_PLUS_2,d.AfricaLuanda,o.WestAfricaTime,h.Angola,h.Angola,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greenlandic+"",i.Greek+"",i.Gujarati+"",i.Haitian+"",i.Hausa+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tamil+"",i.Tatar+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Xhosa+"",i.Welsh+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"",k.DominicaDollar,k.EastCaribbeanDollar,k.Euro,k.UnitedStatesDollar,k.BritishPound,i.English,i.Spanish,l.UTC_MINUS_4,d.AmericaAnguilla,o.AtlanticStandardTime,h.Anguilla,h.Anguilla,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greenlandic+"",i.Greek+"",i.Gujarati+"",i.Haitian+"",i.Hausa+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tamil+"",i.Tatar+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Welsh+"",i.Xhosa+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"",k.UnitedStatesDollar,k.Euro,i.English,i.Spanish,i.French,i.Portuguese,i.Italian,i.Dutch,i.German,i.Swedish,i.Norwegian,i.Danish,i.Finnish,l.UTC_PLUS_1,l.UTC_PLUS_2,d.AntarcticaCasey,d.AntarcticaDavis,d.AntarcticaMcMurdo,d.AntarcticaPalmer,d.AntarcticaRothera,o.AtlanticStandardTime,o.CentralTime,o.EasternTime,o.AtlanticStandardTime,o.AzoresStandardTime,o.NewfoundlandStandardTime,h.Antarctica,h.Antarctica,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greenlandic+"",i.Greek+"",i.Gujarati+"",i.Haitian+"",i.Hausa+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tamil+"",i.Tatar+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Welsh+"",i.Xhosa+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"",k.ArmeniaDram,i.Armenian,l.UTC_PLUS_4,d.AsiaJakarta,o.ArmeniaTime,h.Armenia,h.Armenia,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greenlandic+"",i.Greek+"",i.Gujarati+"",i.Haitian+"",i.Hausa+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tamil+"",i.Tatar+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Welsh+"",i.Xhosa+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"",h.AmericanSamoa,h.AmericanSamoa,i.Afrikaans+"",i.Albanian+"",i.Amharic+"",i.Arabic+"",i.Armenian+"",i.Azerbaijani+"",i.Bashkir+"",i.Basque+"",i.Belarusian+"",i.Bengali+"",i.Berber+"",i.Bhutani+"",i.Bosnian+"",i.Breton+"",i.Bulgarian+"",i.Burmese+"",i.Catalan+"",i.Chinese+"",i.Croatian+"",i.Czech+"",i.Danish+"",i.Dutch+"",i.English+"",i.Esperanto+"",i.Estonian+"",i.Finnish+"",i.French+"",i.Frisian+"",i.Galician+"",i.Georgian+"",i.German+"",i.Greenlandic+"",i.Greek+"",i.Gujarati+"",i.Haitian+"",i.Hausa+"",i.Hebrew+"",i.Hindi+"",i.Hungarian+"",i.Icelandic+"",i.Igbo+"",i.Indonesian+"",i.Irish+"",i.Italian+"",i.Japanese+"",i.Javanese+"",i.Kannada+"",i.Kazakh+"",i.Khmer+"",i.Korean+"",i.Kurdish+"",i.Kyrgyz+"",i.Lao+"",i.Latin+"",i.Latvian+"",i.Lithuanian+"",i.Luxembourgish+"",i.Macedonian+"",i.Malagasy+"",i.Malay+"",i.Malayalam+"",i.Maltese+"",i.Maori+"",i.Marathi+"",i.Mongolian+"",i.Nepali+"",i.Norwegian+"",i.Pashto+"",i.Persian+"",i.Polish+"",i.Portuguese+"",i.Punjabi+"",i.Romanian+"",i.Russian+"",i.Samoan+"",i.Sanskrit+"",i.Scots+"",i.Serbian+"",i.Sesotho+"",i.Shona+"",i.Sindhi+"",i.Sinhala+"",i.Slovak+"",i.Slovenian+"",i.Somali+"",i.Spanish+"",i.Sudanese+"",i.Swahili+"",i.Swedish+"",i.Tagalog+"",i.Tajik+"",i.Tamil+"",i.Tatar+"",i.Telugu+"",i.Thai+"",i.Tibetan+"",i.Turkish+"",i.Ukrainian+"",i.Urdu+"",i.Uzbek+"",i.Vietnamese+"",i.Welsh+"",i.Xhosa+"",i.Yiddish+"",i.Yoruba+"",i.Zulu+"";i.Afrikaans,T.Afrikaans;h.SouthAfrica,i.AfrikaansSouthAfrica,T.Afrikaans;i.Albanian,T.Albanian;h.Albania,i.AlbanianAlbania,T.Albanian;i.Amharic,T.Amharic;h.Ethiopia,i.AmharicEthiopia,T.Amharic;i.Arabic,T.Arabic;h.Algeria,i.ArabicAlgeria,T.Arabic;h.Bahrain,i.ArabicBahrain,T.Arabic;h.Egypt,i.ArabicEgypt,T.Arabic;h.Iraq,i.ArabicIraq,T.Arabic;h.Jordan,i.ArabicJordan,T.Arabic;h.Kuwait,i.ArabicKuwait,T.Arabic;h.Lebanon,i.ArabicLebanon,T.Arabic;h.Libya,i.ArabicLibya,T.Arabic;h.Morocco,i.ArabicMorocco,T.Arabic;h.Oman,i.ArabicOman,T.Arabic;h.Qatar,i.ArabicQatar,T.Arabic;h.SaudiArabia,i.ArabicSaudiArabia,T.Arabic;h.Tunisia,i.ArabicTunisia,T.Arabic;h.UnitedArabEmirates,i.ArabicUnitedArabEmirates,T.Arabic;h.Yemen,i.ArabicYemen,T.Arabic;i.Armenian,T.Armenian;h.Armenia,i.ArmenianArmenia,T.Armenian;i.Azerbaijani,T.Azerbaijani;h.Azerbaijan,i.AzerbaijaniAzerbaijan,T.Azerbaijani;i.Basque,T.Basque;h.Spain,i.BasqueSpain,T.Basque;i.Belarusian,T.Belarusian;h.Belarus,i.BelarusianBelarus,T.Belarusian;i.Bengali,T.Bengali;h.Bangladesh,i.BengaliBangladesh,T.Bengali;i.Bhutani,T.Bhutani;h.Bhutan,i.BhutaniBhutan,T.Bhutani;i.Bulgarian,T.Bulgarian;h.Bulgaria,i.BulgarianBulgaria,T.Bulgarian;i.Burmese,T.Burmese;h.Myanmar,i.BurmeseMyanmar,T.Burmese;i.Cantonese,T.Cantonese;h.HongKong,i.CantoneseHongKong,T.Cantonese;i.Catalan,T.Catalan;h.Spain,i.CatalanSpain,T.Catalan;i.ChineseSimplified,T.Chinese;h.China,i.ChineseSimplifiedChina,T.Chinese;h.HongKong,i.ChineseSimplifiedHongKong,T.Chinese;h.Macau,i.ChineseSimplifiedMacau,T.Chinese;h.Singapore,i.ChineseSimplifiedSingapore,T.Chinese;i.ChineseTraditional,T.Chinese;h.HongKong,i.ChineseTraditionalHongKong,T.Chinese;h.Macau,i.ChineseTraditionalMacau,T.Chinese;h.Singapore,i.ChineseTraditionalSingapore,T.Chinese;i.Croatian,T.Croatian;h.BosniaAndHerzegovina,i.CroatianBosniaAndHerzegovina,T.Croatian;h.Croatia,i.CroatianCroatia,T.Croatian;i.Czech,T.Czech;h.CzechRepublic,i.CzechCzechRepublic,T.Czech;i.Danish,T.Danish;h.Denmark,i.DanishDenmark,T.Danish;i.Divehi,T.Divehi;h.Maldives,i.DivehiMaldives,T.Divehi;i.Dutch,T.Dutch;h.Belgium,i.DutchBelgium,T.Dutch;h.Netherlands,i.DutchNetherlands,T.Dutch;i.English,T.English;h.Australia,i.EnglishAustralia,T.English;h.Belgium,i.EnglishBelgium,T.English;h.Canada,i.EnglishCanada,T.English;h.Ireland,i.EnglishIreland,T.English;h.Jamaica,i.EnglishJamaica,T.English;h.NewZealand,i.EnglishNewZealand,T.English;h.Philippines,i.EnglishPhilippines,T.English;h.Singapore,i.EnglishSingapore,T.English;h.SouthAfrica,i.EnglishSouthAfrica,T.English;h.TrinidadAndTobago,i.EnglishTrinidadAndTobago,T.English;h.UnitedKingdom,i.EnglishUnitedKingdom,T.English;h.UnitedStates,i.EnglishUnitedStates,T.English;h.Zimbabwe,i.EnglishZimbabwe,T.English;i.Esperanto,T.Esperanto;i.Estonian,T.Estonian;h.Estonia,i.EstonianEstonia,T.Estonian;i.Faroese,T.Faroese;h.FaroeIslands,i.FaroeseFaroeIslands,T.Faroese;i.Farsi,T.Farsi;h.Iran,i.FarsiIran,T.Farsi;i.Filipino,T.Filipino;h.Philippines,i.FilipinoPhilippines,T.Filipino;i.Finnish,T.Finnish;h.Finland,i.FinnishFinland,T.Finnish;i.French,T.French;h.Belgium,i.FrenchBelgium,T.French;h.Canada,i.FrenchCanada,T.French;h.France,i.FrenchFrance,T.French;h.Luxembourg,i.FrenchLuxembourg,T.French;h.Monaco,i.FrenchMonaco,T.French;h.Reunion,i.FrenchReunion,T.French;h.Switzerland,i.FrenchSwitzerland,T.French;i.Frisian,T.Frisian;h.Netherlands,i.FrisianNetherlands,T.Frisian;i.Galician,T.Galician;h.Spain,i.GalicianSpain,T.Galician;i.Georgian,T.Georgian;h.Georgia,i.GeorgianGeorgia,T.Georgian;i.German,T.German;h.Austria,i.GermanAustria,T.German;h.Belgium,i.GermanBelgium,T.German;h.Switzerland,i.GermanSwitzerland,T.German;h.Liechtenstein,i.GermanLiechtenstein,T.German;h.Luxembourg,i.GermanLuxembourg,T.German;i.Greek,T.Greek;h.Greece,i.GreekGreece,T.Greek;i.Greenlandic,T.Greenlandic;h.Greenland,i.GreenlandicGreenland,T.Greenlandic;i.Gujarati,T.Gujarati;h.India,i.GujaratiIndia,T.Gujarati;i.Hausa,T.Hausa;h.Ghana,i.HausaGhana,T.Hausa;h.Niger,i.HausaNiger,T.Hausa;h.Nigeria,i.HausaNigeria,T.Hausa;i.Hebrew,T.Hebrew;h.Israel,i.HebrewIsrael,T.Hebrew;i.Hindi,T.Hindi;h.India,i.HindiIndia,T.Hindi;i.Hungarian,T.Hungarian;h.Hungary,i.HungarianHungary,T.Hungarian;i.Icelandic,T.Icelandic;h.Iceland,i.IcelandicIceland,T.Icelandic;i.Igbo,T.Igbo;i.Indonesian,T.Indonesian;h.Indonesia,i.IndonesianIndonesia,T.Indonesian;i.Irish,T.Irish;h.Ireland,i.IrishIreland,T.Irish;i.Italian,T.Italian;h.Italy,i.ItalianItaly,T.Italian;h.Switzerland,i.ItalianSwitzerland,T.Italian;i.Japanese,T.Japanese;h.Japan,i.JapaneseJapan,T.Japanese;i.Kannada,T.Kannada;h.India,i.KannadaIndia,T.Kannada;i.Kazakh,T.Kazakh;h.Kazakhstan,i.KazakhKazakhstan,T.Kazakh;i.Khmer,T.Khmer;h.Cambodia,i.KhmerCambodia,T.Khmer;i.Konkani,T.Konkani;h.India,i.KonkaniIndia,T.Konkani;i.Korean,T.Korean;h.SouthKorea,i.KoreanSouthKorea,T.Korean;i.Kurdish,T.Kurdish;h.Iraq,i.KurdishIraq,T.Kurdish;h.Turkey,i.KurdishTurkey,T.Kurdish;i.Kyrgyz,T.Kyrgyz;h.Kyrgyzstan,i.KyrgyzKyrgyzstan,T.Kyrgyz;i.Lao,T.Lao;h.Laos,i.LaoLaos,T.Lao;i.Latvian,T.Latvian;h.Latvia,i.LatvianLatvia,T.Latvian;i.Lithuanian,T.Lithuanian;h.Lithuania,i.LithuanianLithuania,T.Lithuanian;i.Luxembourgish,T.Luxembourgish;h.Belgium,i.LuxembourgishBelgium,T.Luxembourgish;h.Luxembourg,i.LuxembourgishLuxembourg,T.Luxembourgish;i.Macedonian,T.Macedonian;h.NorthMacedonia,i.MacedonianNorthMacedonia,T.Macedonian;i.Malay,T.Malay;h.Brunei,i.MalayBrunei,T.Malay;h.Malaysia,i.MalayMalaysia,T.Malay;h.Singapore,i.MalaySingapore,T.Malay;h.India,i.MalayIndia,T.Malay;i.Maltese,T.Maltese;h.Malta,i.MalteseMalta,T.Maltese;i.Maori,T.Maori;h.NewZealand,i.MaoriNewZealand,T.Maori;i.Marathi,T.Marathi;h.India,i.MarathiIndia,T.Marathi;i.Mongolian,T.Mongolian;h.Mongolia,i.MongolianMongolia,T.Mongolian;i.Montenegrin,T.Montenegrin;h.Montenegro,i.MontenegrinMontenegro,T.Montenegrin;i.Nepali,T.Nepali;h.Nepal,i.NepaliNepal,T.Nepali;i.NorthernSotho,T.NorthernSotho;h.SouthAfrica,i.NorthernSothoSouthAfrica,T.NorthernSotho;i.Norwegian,T.Norwegian;h.Norway,i.NorwegianBokmalNorway,T.NorwegianBokmal;h.Norway,i.NorwegianNynorskNorway,T.NorwegianNynorsk;i.Oriya,T.Oriya;h.India,i.OriyaIndia,T.Oriya;i.Pashto,T.Pashto;h.Afghanistan,i.PashtoAfghanistan,T.Pashto;i.Persian,T.Persian;h.Iran,i.PersianIran,T.Persian;i.Polish,T.Polish;h.Poland,i.PolishPoland,T.Polish;i.Portuguese,T.Portuguese;h.Brazil,i.PortugueseBrazil,T.Portuguese;h.Portugal,i.PortuguesePortugal,T.Portuguese;i.Punjabi,T.Punjabi;h.Pakistan,i.PunjabiPakistan,T.Punjabi;h.India,i.PunjabiIndia,T.Punjabi;i.Quechua,T.Quechua;h.Bolivia,i.QuechuaBolivia,T.Quechua;h.Ecuador,i.QuechuaEcuador,T.Quechua;h.Peru,i.QuechuaPeru,T.Quechua;i.Romanian,T.Romanian;h.Romania,i.RomanianRomania,T.Romanian;i.Russian,T.Russian;h.RussianFederation,i.RussianRussia,T.Russian;h.Ukraine,i.RussianUkraine,T.Russian;h.Kazakhstan,i.RussianKazakhstan,T.Russian;h.Kyrgyzstan,i.RussianKyrgyzstan,T.Russian;i.Sanskrit,T.Sanskrit;h.India,i.SanskritIndia,T.Sanskrit;i.Sami,T.Sami;h.Finland,i.SamiFinland,T.Sami;h.Norway,i.SamiNorway,T.Sami;h.Sweden,i.SamiSweden,T.Sami;i.Samoan,T.Samoan;h.Samoa,i.SamoanSamoa,T.Samoan;i.Serbian,T.Serbian;h.BosniaAndHerzegovina,i.SerbianBosniaAndHerzegovina,T.Serbian;h.SerbiaAndMontenegro,i.SerbianSerbiaAndMontenegro,T.Serbian;i.SerbianCyrillic,T.SerbianCyrillic;h.BosniaAndHerzegovina,i.SerbianCyrillicBosniaAndHerzegovina,T.SerbianCyrillic;h.SerbiaAndMontenegro,i.SerbianCyrillicSerbiaAndMontenegro,T.SerbianCyrillic;i.Slovak,T.Slovak;h.Slovakia,i.SlovakSlovakia,T.Slovak;i.Slovenian,T.Slovenian;h.Slovenia,i.SlovenianSlovenia,T.Slovenian;i.Somali,T.Somali;h.Somalia,i.SomaliSomalia,T.Somali;i.Spanish,T.Spanish;h.Argentina,i.SpanishArgentina,T.Spanish;h.Bolivia,i.SpanishBolivia,T.Spanish;h.Chile,i.SpanishChile,T.Spanish;h.Colombia,i.SpanishColombia,T.Spanish;h.CostaRica,i.SpanishCostaRica,T.Spanish;h.Cuba,i.SpanishCuba,T.Spanish;h.DominicanRepublic,i.SpanishDominicanRepublic,T.Spanish;h.Ecuador,i.SpanishEcuador,T.Spanish;h.ElSalvador,i.SpanishElSalvador,T.Spanish;h.EquatorialGuinea,i.SpanishEquatorialGuinea,T.Spanish;h.Guatemala,i.SpanishGuatemala,T.Spanish;h.Honduras,i.SpanishHonduras,T.Spanish;h.Mexico,i.SpanishMexico,T.Spanish;h.Nicaragua,i.SpanishNicaragua,T.Spanish;h.Panama,i.SpanishPanama,T.Spanish;h.Paraguay,i.SpanishParaguay,T.Spanish;h.Peru,i.SpanishPeru,T.Spanish;h.PuertoRico,i.SpanishPuertoRico,T.Spanish;h.Uruguay,i.SpanishUruguay,T.Spanish;h.Venezuela,i.SpanishVenezuela,T.Spanish;h.SouthAfrica,i.SutuSouthAfrica,T.Sutu;i.Swahili,T.Swahili;h.Kenya,i.SwahiliKenya,T.Swahili;i.Swedish,T.Swedish;h.Finland,i.SwedishFinland,T.Swedish;h.Sweden,i.SwedishSweden,T.Swedish;i.Syriac,T.Syriac;h.Syria,i.SyriacSyria,T.Syriac;i.Tajik,T.Tajik;h.Tajikistan,i.TajikTajikistan,T.Tajik;i.Tagalog,T.Tagalog;h.Philippines,i.TagalogPhilippines,T.Tagalog;i.Tamil,T.Tamil;h.India,i.TamilIndia,T.Tamil;i.Telugu,T.Telugu;h.India,i.TeluguIndia,T.Telugu;i.Thai,T.Thai;h.Thailand,i.ThaiThailand,T.Thai;i.Tibetan,T.Tibetan;h.China,i.TibetanChina,T.Tibetan;h.Bhutan,i.TibetanBhutan,T.Tibetan;h.India,i.TibetanIndia,T.Tibetan;i.Tsonga,T.Tsonga;i.Tswana,T.Tswana;h.SouthAfrica,i.TswanaSouthAfrica,T.Tswana;i.Turkish,T.Turkish;h.Turkey,i.TurkishTurkey,T.Turkish;i.Ukrainian,T.Ukrainian;h.Ukraine,i.UkrainianUkraine,T.Ukrainian;i.Urdu,T.Urdu;h.Afghanistan,i.UrduAfghanistan,T.Urdu;h.India,i.UrduIndia,T.Urdu;h.Pakistan,i.UrduPakistan,T.Urdu;i.Uzbek,T.Uzbek;h.Uzbekistan,i.UzbekUzbekistan,T.Uzbek;h.Uzbekistan,i.UzbekCyrillic,T.Uzbek;i.Vietnamese,T.Vietnamese;h.Vietnam,i.VietnameseVietnam,T.Vietnamese;i.Welsh,T.Welsh;h.UnitedKingdom,i.WelshUnitedKingdom,T.Welsh;i.Xhosa,T.Xhosa;h.SouthAfrica,i.XhosaSouthAfrica,T.Xhosa;i.Yiddish,T.Yiddish;i.Yoruba,T.Yoruba;h.Nigeria,i.YorubaNigeria,T.Yoruba;i.Zulu,T.Zulu;h.SouthAfrica,i.ZuluSouthAfrica,T.Zulu;d.AfricaAbidjan,l.UTC_0,o.CoordinatedUniversalTime;d.AfricaAccra,l.UTC_0,o.CoordinatedUniversalTime;d.AfricaAddisAbaba,l.UTC_PLUS_3,o.EastAfricaTime;d.AfricaAlgiers,l.UTC_PLUS_1,o.CentralEuropeanTime;d.AfricaAsmara,l.UTC_PLUS_3,o.EastAfricaTime;d.AfricaBamako,l.UTC_0,o.CoordinatedUniversalTime;d.AfricaBangui,l.UTC_PLUS_1,o.WestAfricaTime;d.AfricaBanjul,l.UTC_0,o.CoordinatedUniversalTime;d.AfricaBissau,l.UTC_0,o.CoordinatedUniversalTime;d.AfricaBlantyre,l.UTC_PLUS_2,o.CentralAfricaTime;d.AfricaBrazzaville,l.UTC_PLUS_1,o.WestAfricaTime;d.AfricaBujumbura,l.UTC_PLUS_2,o.CentralAfricaTime;d.AfricaCairo,l.UTC_PLUS_2,o.EasternEuropeanTime;d.AfricaCasablanca,l.UTC_PLUS_1,o.WesternEuropeanTime;d.AfricaCeuta,l.UTC_PLUS_1,o.CentralEuropeanTime;d.AfricaConakry,l.UTC_0,o.CoordinatedUniversalTime;d.AfricaDakar,l.UTC_0,o.CoordinatedUniversalTime;d.AfricaDarEsSalaam,l.UTC_PLUS_3,o.EastAfricaTime;d.AfricaDjibouti,l.UTC_PLUS_3,o.EastAfricaTime;d.AfricaDouala,l.UTC_PLUS_1,o.WestAfricaTime;d.AfricaElAaiun,l.UTC_PLUS_1,o.WestAfricaTime;d.AfricaFreetown,l.UTC_0,o.CoordinatedUniversalTime;d.AfricaGaborone,l.UTC_PLUS_2,o.CentralAfricaTime;d.AfricaHarare,l.UTC_PLUS_2,o.CentralAfricaTime;d.AfricaJohannesburg,l.UTC_PLUS_2,o.SouthAfricanStandardTime;d.AfricaJuba,l.UTC_PLUS_3,o.EastAfricaTime;d.AfricaKampala,l.UTC_PLUS_3,o.EastAfricaTime;d.AfricaKhartoum,l.UTC_PLUS_2,o.EastAfricaTime;d.AfricaKigali,l.UTC_PLUS_2,o.CentralAfricaTime;d.AfricaKinshasa,l.UTC_PLUS_1,o.WestAfricaTime;d.AfricaLagos,l.UTC_PLUS_1,o.WestAfricaTime;d.AfricaLibreville,l.UTC_PLUS_1,o.WestAfricaTime;d.AfricaLome,l.UTC_0,o.CoordinatedUniversalTime;d.AfricaLuanda,l.UTC_PLUS_1,o.WestAfricaTime;d.AfricaLubumbashi,l.UTC_PLUS_2,o.CentralAfricaTime;d.AfricaLusaka,l.UTC_PLUS_2,o.CentralAfricaTime;d.AfricaMalabo,l.UTC_PLUS_1,o.WestAfricaTime;d.AfricaMaputo,l.UTC_PLUS_2,o.CentralAfricaTime;d.AfricaMaseru,l.UTC_PLUS_2,o.SouthAfricanStandardTime;d.AfricaMbabane,l.UTC_PLUS_2,o.SouthAfricanStandardTime;d.AfricaMogadishu,l.UTC_PLUS_3,o.EastAfricaTime;d.AfricaMonrovia,l.UTC_0,o.CoordinatedUniversalTime;d.AfricaNairobi,l.UTC_PLUS_3,o.EastAfricaTime;d.AfricaNdjamena,l.UTC_PLUS_1,o.WestAfricaTime;d.AfricaNiamey,l.UTC_PLUS_1,o.WestAfricaTime;d.AfricaNouakchott,l.UTC_0,o.GreenwichMeanTime;d.AfricaOuagadougou,l.UTC_0,o.CoordinatedUniversalTime;d.AfricaPortoNovo,l.UTC_PLUS_1,o.WestAfricaTime;d.AfricaSaoTome,l.UTC_0,o.CoordinatedUniversalTime;d.AfricaTripoli,l.UTC_0,o.CoordinatedUniversalTime;d.AfricaTunis,l.UTC_0,o.CoordinatedUniversalTime;d.AfricaWindhoek,l.UTC_PLUS_2,o.WestAfricaTime;d.AmericaAdak,l.UTC_PLUS_10,o.HawaiiAleutianStandardTime;d.AmericaAnchorage,l.UTC_PLUS_9,o.AlaskaStandardTime;d.AmericaAnguilla,l.UTC_0,o.AtlanticStandardTime;d.AmericaAntigua,l.UTC_0,o.AtlanticStandardTime;d.AmericaAraguaina,l.UTC_MINUS_3,o.BrasiliaTime;d.AmericaArgentinaBuenosAires,l.UTC_MINUS_3,o.ArgentinaTime;d.AmericaArgentinaCatamarca,l.UTC_MINUS_3,o.ArgentinaTime;d.AmericaArgentinaCordoba,l.UTC_MINUS_3,o.ArgentinaTime;d.AmericaArgentinaJujuy,l.UTC_MINUS_3,o.ArgentinaTime;d.AmericaArgentinaLaRioja,l.UTC_MINUS_3,o.ArgentinaTime;d.AmericaArgentinaMendoza,l.UTC_MINUS_3,o.ArgentinaTime;d.AmericaArgentinaRioGallegos,l.UTC_MINUS_3,o.ArgentinaTime;d.AmericaArgentinaSalta,l.UTC_MINUS_3,o.ArgentinaTime;d.AmericaArgentinaSanJuan,l.UTC_MINUS_3,o.ArgentinaTime;d.AmericaArgentinaSanLuis,l.UTC_MINUS_3,o.ArgentinaTime;d.AmericaArgentinaTucuman,l.UTC_MINUS_3,o.ArgentinaTime;d.AmericaArgentinaUshuaia,l.UTC_MINUS_3,o.ArgentinaTime;d.AmericaAruba,l.UTC_0,o.AtlanticStandardTime;d.AmericaAsuncion,l.UTC_MINUS_4,o.ParaguayTime;d.AmericaAtikokan,l.UTC_0,o.EasternStandardTime;d.AmericaAtka,l.UTC_MINUS_10,o.HawaiiAleutianStandardTime;d.AmericaBahia,l.UTC_MINUS_3,o.BrasiliaTime;d.AmericaBahiaBanderas,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaBarbados,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaBelem,l.UTC_MINUS_3,o.BrasiliaTime;d.AmericaBelize,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaBlancSablon,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaBoaVista,l.UTC_MINUS_4,o.AmazonTime;d.AmericaBogota,l.UTC_MINUS_5,o.ColombiaTime;d.AmericaBoise,l.UTC_MINUS_7,o.MountainStandardTime;d.AmericaCambridgeBay,l.UTC_MINUS_7,o.MountainStandardTime;d.AmericaCampoGrande,l.UTC_MINUS_4,o.AmazonTime;d.AmericaCancun,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaCaracas,l.UTC_MINUS_4,o.VenezuelaStandardTime;d.AmericaCayenne,l.UTC_MINUS_3,o.FrenchGuianaTime;d.AmericaCayman,l.UTC_0,o.AtlanticStandardTime;d.AmericaChicago,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaChihuahua,l.UTC_MINUS_7,o.MountainStandardTime;d.AmericaCoralHarbour,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaCordoba,l.UTC_MINUS_3,o.ArgentinaTime;d.AmericaCostaRica,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaCreston,l.UTC_MINUS_7,o.MountainStandardTime;d.AmericaCuiaba,l.UTC_MINUS_4,o.AmazonTime;d.AmericaCuracao,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaDanmarkshavn,l.UTC_0,o.GreenwichMeanTime;d.AmericaDawson,l.UTC_MINUS_8,o.PacificStandardTime;d.AmericaDawsonCreek,l.UTC_MINUS_8,o.PacificStandardTime;d.AmericaDenver,l.UTC_MINUS_7,o.MountainStandardTime;d.AmericaDetroit,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaDominica,l.UTC_0,o.AtlanticStandardTime;d.AmericaEdmonton,l.UTC_MINUS_7,o.MountainStandardTime;d.AmericaEirunepe,l.UTC_MINUS_5,o.AcreTime;d.AmericaElSalvador,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaFortaleza,l.UTC_MINUS_3,o.BrasiliaTime;d.AmericaGlaceBay,l.UTC_0,o.AtlanticStandardTime;d.AmericaGodthab,l.UTC_MINUS_3,o.WestGreenlandTime;d.AmericaGooseBay,l.UTC_0,o.AtlanticStandardTime;d.AmericaGrandTurk,l.UTC_0,o.AtlanticStandardTime;d.AmericaGrenada,l.UTC_0,o.AtlanticStandardTime;d.AmericaGuadeloupe,l.UTC_0,o.AtlanticStandardTime;d.AmericaGuatemala,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaGuayaquil,l.UTC_MINUS_5,o.EcuadorTime;d.AmericaGuyana,l.UTC_0,o.AtlanticStandardTime;d.AmericaHalifax,l.UTC_0,o.AtlanticStandardTime;d.AmericaHavana,l.UTC_MINUS_5,o.CubaStandardTime;d.AmericaHermosillo,l.UTC_MINUS_7,o.MountainStandardTime;d.AmericaIndianaIndianapolis,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaIndianaKnox,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaIndianaMarengo,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaIndianaPetersburg,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaIndianaTellCity,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaIndianaVevay,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaIndianaVincennes,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaIndianaWinamac,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaInuvik,l.UTC_MINUS_7,o.MountainStandardTime;d.AmericaIqaluit,l.UTC_0,o.EasternStandardTime;d.AmericaJamaica,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaJuneau,l.UTC_MINUS_9,o.AlaskaStandardTime;d.AmericaKentuckyLouisville,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaKentuckyMonticello,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaKralendijk,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaLaPaz,l.UTC_MINUS_4,o.BoliviaTime;d.AmericaLima,l.UTC_MINUS_5,o.PeruTime;d.AmericaLosAngeles,l.UTC_MINUS_8,o.PacificStandardTime;d.AmericaLouisville,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaLowerPrinces,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaMaceio,l.UTC_MINUS_3,o.BrasiliaTime;d.AmericaManagua,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaManaus,l.UTC_MINUS_4,o.AmazonTime;d.AmericaMarigot,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaMartinique,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaMatamoros,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaMazatlan,l.UTC_MINUS_7,o.MountainStandardTime;d.AmericaMenominee,l.UTC_MINUS_5,o.CentralStandardTime;d.AmericaMerida,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaMetlakatla,l.UTC_MINUS_9,o.AlaskaStandardTime;d.AmericaMexicoCity,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaMiquelon,l.UTC_MINUS_3,o.SaintPierreAndMiquelonStandardTime;d.AmericaMoncton,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaMonterrey,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaMontevideo,l.UTC_MINUS_3,o.UruguayStandardTime;d.AmericaMontreal,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaMontserrat,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaNassau,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaNewYork,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaNipigon,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaNome,l.UTC_MINUS_9,o.AlaskaStandardTime;d.AmericaNoronha,l.UTC_MINUS_2,o.FernandoDeNoronhaTime;d.AmericaNorthDakotaBeulah,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaNorthDakotaCenter,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaNorthDakotaNewSalem,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaOjinaga,l.UTC_MINUS_7,o.MountainStandardTime;d.AmericaPanama,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaPangnirtung,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaParamaribo,l.UTC_MINUS_3,o.SurinameTime;d.AmericaPhoenix,l.UTC_MINUS_7,o.MountainStandardTime;d.AmericaPortAuPrince,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaPortOfSpain,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaPortoVelho,l.UTC_MINUS_4,o.AmazonTime;d.AmericaPuertoRico,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaRainyRiver,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaRankinInlet,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaRecife,l.UTC_MINUS_3,o.BrasiliaTime;d.AmericaRegina,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaResolute,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaRioBranco,l.UTC_MINUS_5,o.AcreTime;d.AmericaSantaIsabel,l.UTC_MINUS_8,o.PacificStandardTime;d.AmericaSantarem,l.UTC_MINUS_3,o.BrasiliaTime;d.AmericaSantiago,l.UTC_MINUS_4,o.ChileStandardTime;d.AmericaSantoDomingo,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaSaoPaulo,l.UTC_MINUS_3,o.BrasiliaTime;d.AmericaScoresbysund,l.UTC_MINUS_1,o.EasternGreenlandTime;d.AmericaShiprock,l.UTC_MINUS_7,o.MountainStandardTime;d.AmericaSitka,l.UTC_MINUS_9,o.AlaskaStandardTime;d.AmericaStBarthelemy,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaStJohns,l.UTC_MINUS_3,o.NewfoundlandStandardTime;d.AmericaStKitts,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaStLucia,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaStThomas,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaStVincent,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaSwiftCurrent,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaTegucigalpa,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaThule,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaThunderBay,l.UTC_MINUS_4,o.EasternStandardTime;d.AmericaTijuana,l.UTC_MINUS_8,o.PacificStandardTime;d.AmericaToronto,l.UTC_MINUS_5,o.EasternStandardTime;d.AmericaTortola,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AmericaVancouver,l.UTC_MINUS_8,o.PacificStandardTime;d.AmericaWhitehorse,l.UTC_MINUS_8,o.PacificStandardTime;d.AmericaWinnipeg,l.UTC_MINUS_6,o.CentralStandardTime;d.AmericaYakutat,l.UTC_MINUS_9,o.AlaskaStandardTime;d.AmericaYellowknife,l.UTC_MINUS_6,o.MountainStandardTime;d.AntarcticaCasey,l.UTC_MINUS_8,o.WesternStandardTime;d.AntarcticaDavis,l.UTC_MINUS_7,o.NewfoundlandStandardTime;d.AntarcticaDumontDUrville,l.UTC_MINUS_10,o.CentralStandardTime;d.AntarcticaMacquarie,l.UTC_MINUS_11,o.CentralStandardTime;d.AntarcticaMawson,l.UTC_MINUS_6,o.CentralStandardTime;d.AntarcticaMcMurdo,l.UTC_MINUS_12,o.NewZealandStandardTime;d.AntarcticaPalmer,l.UTC_MINUS_4,o.ChathamStandardTime;d.AntarcticaRothera,l.UTC_MINUS_3,o.RotheraResearchStationTime;d.AntarcticaSyowa,l.UTC_MINUS_3,o.ShowaStationTime;d.AntarcticaTroll,l.UTC_MINUS_2,o.CentralStandardTime;d.AntarcticaVostok,l.UTC_MINUS_6,o.CentralStandardTime;d.ArcticLongyearbyen,l.UTC_MINUS_1,o.CentralEuropeanTime;d.AsiaAden,l.UTC_PLUS_3,o.ArabiaStandardTime;d.AsiaAlmaty,l.UTC_PLUS_6,o.AlmaAtaTime;d.AsiaAmman,l.UTC_PLUS_2,o.EasternEuropeanTime;d.AsiaAnadyr,l.UTC_PLUS_12,o.NewCaledoniaTime;d.AsiaAqtau,l.UTC_PLUS_5,o.AqtobeTime;d.AsiaAqtobe,l.UTC_PLUS_5,o.AqtobeTime;d.AsiaAshgabat,l.UTC_PLUS_5,o.TurkmenistanTime;d.AsiaBaghdad,l.UTC_PLUS_3,o.ArabiaStandardTime;d.AsiaBahrain,l.UTC_PLUS_3,o.ArabiaStandardTime;d.AsiaBaku,l.UTC_PLUS_4,o.AzerbaijanTime;d.AsiaBangkok,l.UTC_PLUS_7,o.IndochinaTime;d.AsiaBarnaul,l.UTC_PLUS_7,o.KrasnoyarskTime;d.AsiaBeirut,l.UTC_PLUS_2,o.EasternEuropeanTime;d.AsiaBishkek,l.UTC_PLUS_6,o.KyrgyzstanTime;d.AsiaBrunei,l.UTC_PLUS_8,o.BruneiTime;d.AsiaChita,l.UTC_PLUS_9,o.YakutskTime;d.AsiaChoibalsan,l.UTC_PLUS_8,o.ChoibalsanStandardTime;d.AsiaColombo,l.UTC_PLUS_5,o.IndianStandardTime;d.AsiaDamascus,l.UTC_PLUS_2,o.EasternEuropeanTime;d.AsiaDhaka,l.UTC_PLUS_6,o.BangladeshStandardTime;d.AsiaDili,l.UTC_PLUS_9,o.JapanStandardTime;d.AsiaDubai,l.UTC_PLUS_4,o.GulfStandardTime;d.AsiaDushanbe,l.UTC_PLUS_5,o.TajikistanTime;d.AsiaFamagusta,l.UTC_PLUS_2,o.EasternEuropeanTime;d.AsiaGaza,l.UTC_PLUS_2,o.EasternEuropeanTime;d.AsiaHebron,l.UTC_PLUS_2,o.EasternEuropeanTime;d.AsiaHoChiMinh,l.UTC_PLUS_7,o.IndochinaTime;d.AsiaHongKong,l.UTC_PLUS_8,o.HongKongTime;d.AsiaHovd,l.UTC_PLUS_7,o.HovdTime;d.AsiaIrkutsk,l.UTC_PLUS_8,o.IrkutskTime;d.AsiaJakarta,l.UTC_PLUS_7,o.WesternIndonesianTime;d.AsiaJayapura,l.UTC_PLUS_9,o.JapanStandardTime;d.AsiaJerusalem,l.UTC_PLUS_2,o.EasternEuropeanTime;d.AsiaKabul,l.UTC_PLUS_4,o.AfghanistanTime;d.AsiaKamchatka,l.UTC_PLUS_12,o.KamchatkaTime;d.AsiaKarachi,l.UTC_PLUS_5,o.PakistanStandardTime;d.AsiaKathmandu,l.UTC_PLUS_5,o.NepalTime;d.AsiaKhandyga,l.UTC_PLUS_9,o.YakutskTime;d.AsiaKolkata,l.UTC_PLUS_5,o.IndianStandardTime;d.AsiaKrasnoyarsk,l.UTC_PLUS_7,o.KrasnoyarskTime;d.AsiaKualaLumpur,l.UTC_PLUS_8,o.MalaysiaStandardTime;d.AsiaKuching,l.UTC_PLUS_8,o.MalaysiaStandardTime;d.AsiaKuwait,l.UTC_PLUS_3,o.ArabiaStandardTime;d.AsiaMacau,l.UTC_PLUS_8,o.ChinaStandardTime;d.AsiaMagadan,l.UTC_PLUS_11,o.MagadanTime;d.AsiaMakassar,l.UTC_PLUS_8,o.MalaysiaTime;d.AsiaManila,l.UTC_PLUS_8,o.PhilippineTime;d.AsiaMuscat,l.UTC_PLUS_4,o.GulfStandardTime;d.AsiaNovokuznetsk,l.UTC_PLUS_6,o.NovosibirskTime;d.AsiaNovosibirsk,l.UTC_PLUS_6,o.NovosibirskTime;d.AsiaOmsk,l.UTC_PLUS_6,o.OmskTime;d.AsiaOral,l.UTC_PLUS_5,o.OralTime;d.AsiaPhnomPenh,l.UTC_PLUS_7,o.IndochinaTime;d.AsiaPontianak,l.UTC_PLUS_7,o.WesternIndonesianTime;d.AsiaPyongyang,l.UTC_PLUS_9,o.KoreaStandardTime;d.AsiaQatar,l.UTC_PLUS_3,o.ArabiaStandardTime;d.AsiaQyzylorda,l.UTC_PLUS_5,o.WestKazakhstanTime;d.AsiaRangoon,l.UTC_PLUS_6,o.MyanmarStandardTime;d.AsiaRiyadh,l.UTC_PLUS_3,o.ArabiaStandardTime;d.AsiaSakhalin,l.UTC_PLUS_11,o.SakhalinIslandTime;d.AsiaSamarkand,l.UTC_PLUS_5,o.UzbekistanTime;d.AsiaSeoul,l.UTC_PLUS_9,o.KoreaStandardTime;d.AsiaShanghai,l.UTC_PLUS_8,o.ChinaStandardTime;d.AsiaSingapore,l.UTC_PLUS_8,o.SingaporeStandardTime;d.AsiaSrednekolymsk,l.UTC_PLUS_11,o.SrednekolymskTime;d.AsiaTaipei,l.UTC_PLUS_8,o.ChinaStandardTime;d.AsiaTashkent,l.UTC_PLUS_5,o.UzbekistanTime;d.AsiaTbilisi,l.UTC_PLUS_4,o.GeorgiaStandardTime;d.AsiaTehran,l.UTC_PLUS_3,o.IranStandardTime;d.AsiaThimphu,l.UTC_PLUS_6,o.BhutanTime;d.AsiaTokyo,l.UTC_PLUS_9,o.JapanStandardTime;d.AsiaTomsk,l.UTC_PLUS_6,o.KrasnoyarskTime;d.AsiaUlaanbaatar,l.UTC_PLUS_8,o.UlaanbaatarStandardTime;d.AsiaUrumqi,l.UTC_PLUS_8,o.ChinaStandardTime;d.AsiaUstNera,l.UTC_PLUS_10,o.VladivostokTime;d.AsiaVientiane,l.UTC_PLUS_7,o.IndochinaTime;d.AsiaVladivostok,l.UTC_PLUS_10,o.VladivostokTime;d.AsiaYakutsk,l.UTC_PLUS_9,o.YakutskTime;d.AsiaYekaterinburg,l.UTC_PLUS_5,o.YekaterinburgTime;d.AsiaYerevan,l.UTC_PLUS_4,o.ArmeniaTime;d.AtlanticAzores,l.UTC_MINUS_1,o.AzoresStandardTime;d.AtlanticBermuda,l.UTC_MINUS_4,o.AtlanticStandardTime;d.AtlanticCanary,l.UTC_MINUS_1,o.WesternEuropeanTime;d.AtlanticCapeVerde,l.UTC_0,o.CapeVerdeTime;d.AtlanticFaroe,l.UTC_0,o.GreenwichMeanTime;d.AtlanticMadeira,l.UTC_0,o.WesternEuropeanTime;d.AtlanticReykjavik,l.UTC_0,o.GreenwichMeanTime;d.AtlanticSouthGeorgia,l.UTC_0,o.CoordinatedUniversalTime;d.AtlanticStHelena,l.UTC_0,o.GreenwichMeanTime;d.AtlanticStanley,l.UTC_0,o.FalklandIslandsTime;d.AustraliaAdelaide,l.UTC_PLUS_9_30,o.AustralianCentralStandardTime;d.AustraliaBrisbane,l.UTC_PLUS_10,o.AustralianEasternStandardTime;d.AustraliaBrokenHill,l.UTC_PLUS_9_30,o.AustralianCentralStandardTime;d.AustraliaCanberra,l.UTC_PLUS_10,o.AustralianEasternStandardTime;d.AustraliaCurrie,l.UTC_PLUS_10,o.AustralianEasternStandardTime;d.AustraliaDarwin,l.UTC_PLUS_9_30,o.AustralianCentralStandardTime;d.AustraliaEucla,l.UTC_PLUS_8_45,o.AustralianCentralWesternStandardTime;d.AustraliaHobart,l.UTC_PLUS_10,o.AustralianEasternStandardTime;d.AustraliaLindeman,l.UTC_PLUS_10,o.AustralianEasternStandardTime;d.AustraliaLordHowe,l.UTC_PLUS_10_30,o.LordHoweStandardTime;d.AustraliaMelbourne,l.UTC_PLUS_10,o.AustralianEasternStandardTime;d.AustraliaPerth,l.UTC_PLUS_8,o.AustralianWesternStandardTime;d.AustraliaSydney,l.UTC_PLUS_10,o.AustralianEasternStandardTime;d.EuropeAmsterdam,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeAndorra,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeAthens,l.UTC_PLUS_2,o.EasternEuropeanTime;d.EuropeBelgrade,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeBerlin,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeBratislava,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeBrussels,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeBucharest,l.UTC_PLUS_2,o.EasternEuropeanTime;d.EuropeBudapest,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeBusingen,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeChisinau,l.UTC_PLUS_2,o.EasternEuropeanTime;d.EuropeCopenhagen,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeDublin,l.UTC_0,o.GreenwichMeanTime;d.EuropeGibraltar,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeGuernsey,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeHelsinki,l.UTC_PLUS_2,o.EasternEuropeanTime;d.EuropeIsleOfMan,l.UTC_0,o.GreenwichMeanTime;d.EuropeIstanbul,l.UTC_PLUS_3,o.EasternEuropeanTime;d.EuropeJersey,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeKaliningrad,l.UTC_PLUS_2,o.EasternEuropeanTime;d.EuropeKiev,l.UTC_PLUS_2,o.EasternEuropeanTime;d.EuropeLisbon,l.UTC_0,o.GreenwichMeanTime;d.EuropeLjubljana,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeLondon,l.UTC_0,o.GreenwichMeanTime;d.EuropeLuxembourg,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeMadrid,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeMalta,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeMariehamn,l.UTC_PLUS_2,o.EasternEuropeanTime;d.EuropeMinsk,l.UTC_PLUS_3,o.EasternEuropeanTime;d.EuropeMonaco,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeMoscow,l.UTC_PLUS_3,o.EasternEuropeanTime;d.EuropeOslo,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeParis,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropePodgorica,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropePrague,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeRiga,l.UTC_PLUS_2,o.EasternEuropeanTime;d.EuropeRome,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeSamara,l.UTC_PLUS_4,o.EasternEuropeanTime;d.EuropeSanMarino,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeSarajevo,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeSimferopol,l.UTC_PLUS_3,o.EasternEuropeanTime;d.EuropeSkopje,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeSofia,l.UTC_PLUS_2,o.EasternEuropeanTime;d.EuropeStockholm,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeTallinn,l.UTC_PLUS_2,o.EasternEuropeanTime;d.EuropeTirane,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeUzhgorod,l.UTC_PLUS_2,o.EasternEuropeanTime;d.EuropeVaduz,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeVatican,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeVienna,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeVilnius,l.UTC_PLUS_2,o.EasternEuropeanTime;d.EuropeVolgograd,l.UTC_PLUS_4,o.EasternEuropeanTime;d.EuropeWarsaw,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeZagreb,l.UTC_PLUS_1,o.CentralEuropeanTime;d.EuropeZaporozhye,l.UTC_PLUS_2,o.EasternEuropeanTime;d.EuropeZurich,l.UTC_PLUS_1,o.CentralEuropeanTime;d.IndianAntananarivo,l.UTC_PLUS_3,o.EastAfricaTime;d.IndianChagos,l.UTC_PLUS_6,o.IndianOceanTime;d.IndianChristmas,l.UTC_PLUS_7,o.ChristmasIslandTime;d.IndianCocos,l.UTC_PLUS_6,o.CocosIslandsTime;d.IndianComoro,l.UTC_PLUS_3,o.EastAfricaTime;d.IndianKerguelen,l.UTC_PLUS_5,o.FrenchSouthernAndAntarcticTime;d.IndianMahe,l.UTC_PLUS_4,o.SeychellesTime;d.IndianMaldives,l.UTC_PLUS_5,o.MaldivesTime;d.IndianMauritius,l.UTC_PLUS_4,o.MauritiusTime;d.IndianMayotte,l.UTC_PLUS_3,o.EastAfricaTime;d.IndianReunion,l.UTC_PLUS_4,o.ReunionTime;d.PacificApia,l.UTC_PLUS_13,o.SamoaStandardTime;d.PacificAuckland,l.UTC_PLUS_13,o.NewZealandStandardTime;d.PacificChatham,l.UTC_PLUS_13,o.ChathamStandardTime;d.PacificEaster,l.UTC_PLUS_6,o.EasterIslandStandardTime;d.PacificEfate,l.UTC_PLUS_11,o.VanuatuTime;d.PacificEnderbury,l.UTC_PLUS_13,o.TongaTime;d.PacificFakaofo,l.UTC_PLUS_13,o.TongaTime;d.PacificFiji,l.UTC_PLUS_12,o.FijiTime;d.PacificFunafuti,l.UTC_PLUS_12,o.TuvaluTime;d.PacificGalapagos,l.UTC_PLUS_6,o.GalapagosTime;d.PacificGambier,l.UTC_PLUS_9,o.GambierIslandTime;d.PacificGuadalcanal,l.UTC_PLUS_11,o.SolomonIslandsTime;d.PacificGuam,l.UTC_PLUS_10,o.ChamorroStandardTime;d.PacificHonolulu,l.UTC_PLUS_10,o.HawaiiAleutianStandardTime;d.PacificJohnston,l.UTC_PLUS_10,o.HawaiiAleutianStandardTime;d.PacificKiritimati,l.UTC_PLUS_14,o.LineIslandsTime;d.PacificKosrae,l.UTC_PLUS_11,o.KosraeTime;d.PacificKwajalein,l.UTC_PLUS_12,o.MarshallIslandsTime;d.PacificMajuro,l.UTC_PLUS_12,o.MarshallIslandsTime;d.PacificMarquesas,l.UTC_PLUS_9,o.MarquesasIslandsTime;d.PacificMidway,l.UTC_PLUS_11,o.SamoaStandardTime;d.PacificNauru,l.UTC_PLUS_12,o.NauruTime;d.PacificNiue,l.UTC_PLUS_11,o.NiueTime;d.PacificNorfolk,l.UTC_PLUS_11,o.NorfolkIslandTime;d.PacificNoumea,l.UTC_PLUS_11,o.NewCaledoniaTime;d.PacificPagoPago,l.UTC_PLUS_11,o.SamoaStandardTime;d.PacificPalau,l.UTC_PLUS_9,o.PalauTime;d.PacificPitcairn,l.UTC_PLUS_8,o.PitcairnTime;d.PacificPonape,l.UTC_PLUS_11,o.PohnpeiStandardTime;d.PacificPortMoresby,l.UTC_PLUS_10,o.PapuaNewGuineaTime;d.PacificRarotonga,l.UTC_PLUS_10,o.CookIslandTime;d.PacificSaipan,l.UTC_PLUS_10,o.ChamorroStandardTime;d.PacificTahiti,l.UTC_PLUS_10,o.TahitiTime;d.PacificTarawa,l.UTC_PLUS_12,o.GilbertIslandTime;d.PacificTongatapu,l.UTC_PLUS_13,o.TongaTime;d.PacificChuuk,l.UTC_PLUS_10,o.ChuukTime;d.PacificPohnpei,l.UTC_PLUS_11,o.PohnpeiStandardTime;d.PacificYap,l.UTC_PLUS_10,o.ChuukTime;var s0={id:"dev",type:De.Development,public:!1,name:"Development",description:"Development environment"},r0={id:"test",type:De.NonProduction,public:!1,name:"Test",description:"Test environment"},t0={id:"prod",type:De.Production,public:!0,name:"Production",description:"Production environment"};function u0(){let{NODE_ENV:a}={BASE_URL:"/",MODE:"production",DEV:!1,PROD:!0};return a==="dev"?s0:a==="prod"?t0:r0}var Xu;(function(a){a.Comment="comment",a.Create="create",a.Delete="delete",a.Edit="edit",a.Invoice="invoice",a.Message="message",a.PageView="pageView",a.Paid="paid",a.Payment="payment",a.Purchase="purchase",a.Referral="referral",a.Renewal="renewal",a.Signup="signup",a.Subscription="subscription",a.Upgrade="upgrade"})(Xu||(Xu={}));var Cu;(function(a){a.Business="business",a.Engineering="engineering",a.Exception="exception",a.LogMessage="log-message",a.Marketing="marketing",a.PageLeave="page-leave",a.PageView="page-view",a.Product="product",a.QualityManagement="quality-management",a.UserAccess="user-access",a.UserLogin="user-login",a.UserLogout="user-logout",a.UserSignup="user-signup",a.UserPreferencesChanged="user-preferences-changed",a.WebsiteVisit="website-visit"})(Cu||(Cu={}));var al;(function(a){a.CloseTab="close-tab",a.ExternalLink="external-link",a.NavigateAway="navigate-away",a.Unknown="unknown"})(al||(al={}));var el;(function(a){a.Ecs="Ecs"})(el||(el={}));var il;(function(a){a.Finished="Finished",a.Queued="Queued",a.Running="Running",a.Started="Started"})(il||(il={}));var nl;(function(a){a.Mobile="mobile",a.TV="tv",a.Watch="watch",a.Web="web"})(nl||(nl={}));var sl;(function(a){a.Development="Development",a.NonProduction="NonProduction",a.Production="Production"})(sl||(sl={}));var rl;(function(a){a.Completed="completed",a.Started="started",a.Uncompleted="uncompleted"})(rl||(rl={}));var tl;(function(a){a.Build="Build",a.Deployment="Deployment",a.Test="Test"})(tl||(tl={}));var ul;(function(a){a.Canceled="Canceled",a.Completed="Completed",a.Failed="Failed",a.Running="Running",a.Queued="Queued",a.Waiting="Waiting"})(ul||(ul={}));var ll;(function(a){a.Canceled="Canceled",a.Completed="Completed",a.Failed="Failed",a.Running="Running",a.Queued="Queued",a.Waiting="Waiting"})(ll||(ll={}));var ol;(function(a){a.ForgotPassword="forgot_password",a.Index="index",a.Login="login",a.PageNotFound="404",a.Signup="signup",a.VerifyCode="verify_code"})(ol||(ol={}));var ml;(function(a){a.Info="info",a.Warning="warning",a.Error="error",a.Success="success"})(ml||(ml={}));var cl;(function(a){a.Details="details",a.Dialog="dialog"})(cl||(cl={}));var Al;(function(a){a.Info="info",a.Warning="warning",a.Error="error",a.Success="success"})(Al||(Al={}));var dl;(function(a){a.AccountBalance="AccountBalance",a.UserAssets="UserAssets",a.UserCreditCardDebt="UserCreditCardDebt",a.UserCreditLimit="UserCreditLimit",a.UserCreditUtilization="UserCreditUtilization",a.UserDebt="UserDebt",a.UserInvestments="UserInvestments",a.UserRetirement="UserRetirement",a.UserSavings="UserSavings"})(dl||(dl={}));var fl;(function(a){a.DateTime="date_time",a.True="true",a.False="false",a.UniqueId="unique_id"})(fl||(fl={}));var gl;(function(a){a.DomainModel="domain_entity",a.GenericModel="generic_entity"})(gl||(gl={}));var hl;(function(a){a.AirportCode="airport-code",a.BankIDCode="bank-id-code",a.BitcoinAddress="bitcoin-address",a.Boolean="boolean",a.City="city",a.Color="color",a.CountryCode="country-code",a.CreditCard="credit-card",a.CurrencyAmount="currency-amount",a.CurrencyCode="currency-code",a.DataURI="data-uri",a.Date="date",a.DateRange="date-range",a.DateTime="date-time",a.DayOfMonth="day-of-month",a.DomainName="domain-name",a.EmailAddress="email-address",a.EthereumAddress="ethereum-address",a.EAN="european-article-number",a.EIN="employer-identification-number",a.Float="float",a.GeographicCoordinate="geographic-coordinate",a.GeographicCoordinates="geographic-coordinates",a.GitRepositoryURL="git-repository-url",a.HSLColor="hsl-color",a.HexColor="hex-color",a.Hexadecimal="hexadecimal",a.IBAN="international-bank-account-number",a.IMEI="international-mobile-equipment-identifier",a.IPAddress="ip-address",a.IPAddressRange="ip-address-range",a.ISBN="international-standard-book-number",a.ISIN="international-stock-number",a.ISMN="international-standard-music-number",a.ISSN="international-standard-serial-number",a.ISO8601="iso-8601",a.ISO31661Alpha2="iso-31661-alpha-2",a.ISO31661Alpha3="iso-31661-alpha-3",a.ISO4217="iso-4217",a.Image="image",a.Integer="integer",a.JSON="json",a.LanguageCode="language-code",a.LicensePlateNumber="license-plate-number",a.LongText="long-text",a.MD5="md5",a.Markdown="markdown",a.Menu="menu",a.Number="number",a.MACAddress="mac-address",a.MagnetURI="magnet-uri",a.MimeType="mime-type",a.Month="month",a.Password="password",a.PassportNumber="passport-number",a.Percent="percent",a.PhoneNumber="phone-number",a.Port="port",a.PostalCode="postal-code",a.Province="province",a.RFC3339="rfc-3339",a.RGBColor="rgb-color",a.SemanticVersion="semantic-version",a.SSN="social-security-number",a.State="state",a.StreetAddress="street-address",a.String="string",a.Tags="tags",a.TaxIDNumber="tax-id-number",a.Time="time",a.TimeOfDay="time-of-day",a.TimeRange="time-range",a.TimezoneRegion="timezone-region",a.URL="url",a.URLPath="url-path",a.UUID="uuid",a.VATIDNumber="value-added-tax-id-number",a.VerificationCode="verification-code",a.Video="video",a.Weekday="weekday",a.Year="year"})(hl||(hl={}));var _l;(function(a){a.Critical="Critical",a.Error="Error",a.Fatal="Fatal",a.Warning="Warning"})(_l||(_l={}));var r;(function(a){a.Contains="contains",a.HasCharacterCount="has-character-count",a.HasNumberCount="has-number-count",a.HasLetterCount="has-letter-count",a.HasLowercaseCount="has-lowercase-count",a.HasSpacesCount="has-spaces-count",a.HasSymbolCount="has-symbol-count",a.HasUppercaseCount="has-uppercase-count",a.IsAfter="is-after",a.IsAfterOrEqual="is-after-or-equal",a.IsAirport="is-airport",a.IsAlpha="is-alpha",a.IsAlphanumeric="is-alphanumeric",a.IsAlgorithmHash="is-algorithm-hash",a.IsAscii="is-ascii",a.IsBase64="is-base-64",a.IsBefore="is-before",a.IsBeforeOrAfter="is-before-or-after",a.IsBeforeOrEqual="is-before-or-equal",a.IsBetween="is-between",a.IsBIC="is-bic",a.IsBitcoinAddress="is-bitcoin-address",a.IsBoolean="is-boolean",a.IsColor="is-color",a.IsComplexEnough="is-complex-enough",a.IsCountry="is-country",a.IsCreditCard="is-credit-card",a.IsCurrency="is-currency",a.IsDataURI="is-data-uri",a.IsDate="is-date",a.IsDateRange="is-date-range",a.IsDateTime="is-date-time",a.IsDayOfMonth="is-day-of-month",a.IsDecimal="is-decimal",a.IsDivisibleBy="is-divisible-by",a.IsDomainName="is-domain-name",a.IsEmailAddress="is-email-address",a.IsEthereumAddress="is-ethereum-address",a.IsEAN="is-ean",a.IsEIN="is-ein",a.IsEqual="is-equal",a.IsEvenNumber="is-even-number",a.IsFloat="is-float",a.IsIBAN="is-iban",a.IsGreaterThan="greater-than",a.IsGreaterThanOrEqual="greater-than-or-equal",a.IsHSLColor="is-hsl-color",a.IsHexColor="is-hex-color",a.IsHexadecimal="is-hexadecimal",a.IsIdentityCardCode="is-identity-card-code",a.IsIMEI="is-imei",a.IsInIPAddressRange="is-in-ip-address-range",a.IsInList="is-in-list",a.IsInTheLast="is-in-the-last",a.IsInteger="is-integer",a.IsIPAddress="is-ip-address",a.IsIPAddressRange="is-ip-address-range",a.IsISBN="is-isbn",a.IsISIN="is-isin",a.IsISMN="is-ismn",a.IsISRC="is-isrc",a.IsISSN="is-issn",a.IsISO4217="is-iso-4217",a.IsISO8601="is-iso-8601",a.IsISO31661Alpha2="is-iso-31661-alpha-2",a.IsISO31661Alpha3="is-iso-31661-alpha-3",a.IsJSON="is-json",a.IsLanguage="is-language",a.IsLatitude="is-latitude",a.IsLongitude="is-longitude",a.IsLengthEqual="is-length-equal",a.IsLengthGreaterThan="is-length-greater-than",a.IsLengthGreaterThanOrEqual="is-length-great-than-or-equal",a.IsLengthLessThan="is-length-less-than",a.IsLengthLessThanOrEqual="is-length-less-than-or-equal",a.IsLessThan="less-than",a.IsLessThanOrEqual="less-than-or-equal",a.IsLicensePlateNumber="is-license-plate-number",a.IsLowercase="is-lowercase",a.IsOctal="is-octal",a.IsMACAddress="is-mac-address",a.IsMD5="is-md5",a.IsMagnetURI="is-magnet-uri",a.IsMarkdown="is-markdown",a.IsMimeType="is-mime-type",a.IsMonth="is-month",a.IsNegativeNumber="is-negative-number",a.IsNotDate="is-not-date",a.IsNotEqual="is-not-equal",a.IsNotInIPAddressRange="is-not-in-ip-address-range",a.IsNotInList="is-not-in-list",a.IsNotNull="is-not-null",a.IsNotRegexMatch="is-not-regex-match",a.IsNotToday="is-not-today",a.IsNumber="is-number",a.IsNumeric="is-numeric",a.IsOddNumber="is-odd-number",a.IsPassportNumber="is-passport-number",a.IsPhoneNumber="is-phone-number",a.IsPort="is-port",a.IsPositiveNumber="is-positive-number",a.IsPostalCode="is-postal-code",a.IsProvince="is-province",a.IsRGBColor="is-rgb-color",a.IsRegexMatch="is-regex-match",a.IsRequired="is-required",a.IsSemanticVersion="is-semantic-version",a.IsSlug="is-slug",a.IsSSN="is-ssn",a.IsState="is-state",a.IsStreetAddress="is-street-address",a.IsString="is-string",a.IsStrongPassword="is-strong-password",a.IsTags="is-tags",a.IsTaxIDNumber="is-tax-id-number",a.IsThisMonth="is-this-month",a.IsThisQuarter="is-this-quarter",a.IsThisWeek="is-this-week",a.IsThisWeekend="is-this-weekend",a.IsThisYear="is-this-year",a.IsTime="is-time",a.IsTimeOfDay="is-time-of-day",a.IsTimeRange="is-time-range",a.IsToday="is-today",a.IsURL="is-url",a.IsUUID="is-uuid",a.IsUppercase="is-uppercase",a.IsUsernameAvailable="is-username-available",a.IsValidStreetAddress="is-valid-street-address",a.IsVATIDNumber="is-vat-id-number",a.IsWeekday="is-weekday",a.IsWeekend="is-weekend",a.IsYear="is-year"})(r||(r={}));var Il;(function(a){a.IsAuthenticated="is-authenticated",a.IsNotAuthenticated="is-not-authenticated",a.IsUsernameAvailable="is-username-available",a.PasswordMismatch="password-mismatch"})(Il||(Il={}));var pl;(function(a){a[a.IsHSLColor=r.IsHSLColor]="IsHSLColor",a[a.IsHexColor=r.IsHexColor]="IsHexColor",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsRGBColor=r.IsRGBColor]="IsRGBColor",a[a.IsString=r.IsString]="IsString"})(pl||(pl={}));var Sl;(function(a){a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsCurrency=r.IsCurrency]="IsCurrency",a[a.IsDecimal=r.IsDecimal]="IsDecimal",a[a.IsDivisibleBy=r.IsDivisibleBy]="IsDivisibleBy",a[a.IsEvenNumber=r.IsEvenNumber]="IsEvenNumber",a[a.IsFloat=r.IsFloat]="IsFloat",a[a.IsGreaterThan=r.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=r.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=r.IsInteger]="IsInteger",a[a.IsISO8601=r.IsISO8601]="IsISO8601",a[a.IsLessThan=r.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=r.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNegativeNumber=r.IsNegativeNumber]="IsNegativeNumber",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsOddNumber=r.IsOddNumber]="IsOddNumber",a[a.IsPositiveNumber=r.IsPositiveNumber]="IsPositiveNumber"})(Sl||(Sl={}));var El;(function(a){a[a.IsBitcoinAddress=r.IsBitcoinAddress]="IsBitcoinAddress",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(El||(El={}));var Tl;(function(a){a[a.IsEthereumAddress=r.IsEthereumAddress]="IsEthereumAddress",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(Tl||(Tl={}));var vl;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsJSON=r.IsJSON]="IsJSON",a[a.IsLanguage=r.IsLanguage]="IsLanguage",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(vl||(vl={}));var bl;(function(a){a[a.IsAlpha=r.IsAlpha]="IsAlpha",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(bl||(bl={}));var Ul;(function(a){a[a.IsAlpha=r.IsAlpha]="IsAlpha",a[a.IsCountry=r.IsCountry]="IsCountry",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(Ul||(Ul={}));var Nl;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsFloat=r.IsFloat]="IsFloat",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNumeric=r.IsNumeric]="IsNumeric"})(Nl||(Nl={}));var Bl;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsFloat=r.IsFloat]="IsFloat",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNumeric=r.IsNumeric]="IsNumeric"})(Bl||(Bl={}));var Pl;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsPostalCode=r.IsPostalCode]="IsPostalCode",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(Pl||(Pl={}));var yl;(function(a){a[a.IsAlpha=r.IsAlpha]="IsAlpha",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsProvince=r.IsProvince]="IsProvince",a[a.IsString=r.IsString]="IsString"})(yl||(yl={}));var kl;(function(a){a[a.IsAlpha=r.IsAlpha]="IsAlpha",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsState=r.IsState]="IsState",a[a.IsString=r.IsString]="IsString"})(kl||(kl={}));var Ml;(function(a){a[a.IsAlphanumeric=r.IsAlphanumeric]="IsAlphanumeric",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString",a[a.IsStreetAddress=r.IsStreetAddress]="IsStreetAddress"})(Ml||(Ml={}));var Dl;(function(a){a[a.IsAirport=r.IsAirport]="IsAirport",a[a.IsAlpha=r.IsAlpha]="IsAlpha",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(Dl||(Dl={}));var xl;(function(a){a[a.IsAlgorithmHash=r.IsAlgorithmHash]="IsAlgorithmHash",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(xl||(xl={}));var Fl;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsSemanticVersion=r.IsSemanticVersion]="IsSemanticVersion",a[a.IsString=r.IsString]="IsString"})(Fl||(Fl={}));var Ll;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString",a[a.IsUUID=r.IsUUID]="IsUUID"})(Ll||(Ll={}));var wl;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsMD5=r.IsMD5]="IsMD5",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(wl||(wl={}));var Gl;(function(a){a[a.IsBoolean=r.IsBoolean]="IsBoolean",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(Gl||(Gl={}));var ql;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsAfterOrEqual=r.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=r.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsDate=r.IsDate]="IsDate",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotDate=r.IsNotDate]="IsNotDate",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNotToday=r.IsNotToday]="IsNotToday",a[a.IsThisWeek=r.IsThisWeek]="IsThisWeek",a[a.IsThisMonth=r.IsThisMonth]="IsThisMonth",a[a.IsThisQuarter=r.IsThisQuarter]="IsThisQuarter",a[a.IsThisYear=r.IsThisYear]="IsThisYear",a[a.IsToday=r.IsToday]="IsToday",a[a.IsWeekend=r.IsWeekend]="IsWeekend"})(ql||(ql={}));var Kl;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=r.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsDate=r.IsDate]="IsDate",a[a.IsDateRange=r.IsDateRange]="IsDateRange",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(Kl||(Kl={}));var Ol;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsAfterOrEqual=r.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=r.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsDate=r.IsDate]="IsDate",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotDate=r.IsNotDate]="IsNotDate",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNotToday=r.IsNotToday]="IsNotToday",a[a.IsThisWeek=r.IsThisWeek]="IsThisWeek",a[a.IsThisMonth=r.IsThisMonth]="IsThisMonth",a[a.IsThisQuarter=r.IsThisQuarter]="IsThisQuarter",a[a.IsThisYear=r.IsThisYear]="IsThisYear",a[a.IsToday=r.IsToday]="IsToday",a[a.IsWeekend=r.IsWeekend]="IsWeekend"})(Ol||(Ol={}));var jl;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsAfterOrEqual=r.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=r.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsDayOfMonth=r.IsDayOfMonth]="IsDayOfMonth",a[a.IsEvenNumber=r.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsGreaterThan=r.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=r.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=r.IsInteger]="IsInteger",a[a.IsLessThan=r.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=r.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsOddNumber=r.IsOddNumber]="IsOddNumber",a[a.IsToday=r.IsToday]="IsToday",a[a.IsWeekday=r.IsWeekday]="IsWeekday",a[a.IsWeekend=r.IsWeekend]="IsWeekend"})(jl||(jl={}));var Hl;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsAfterOrEqual=r.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=r.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsEvenNumber=r.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsGreaterThan=r.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=r.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=r.IsInteger]="IsInteger",a[a.IsLessThan=r.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=r.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsMonth=r.IsMonth]="IsMonth",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsOddNumber=r.IsOddNumber]="IsOddNumber",a[a.IsThisMonth=r.IsThisMonth]="IsThisMonth"})(Hl||(Hl={}));var Wl;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsAfterOrEqual=r.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=r.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsTime=r.IsTime]="IsTime"})(Wl||(Wl={}));var zl;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=r.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsTime=r.IsTime]="IsTime",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsTimeRange=r.IsTimeRange]="IsTimeRange"})(zl||(zl={}));var Vl;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrAfter=r.IsBeforeOrAfter]="IsBeforeOrAfter",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsTimeOfDay=r.IsTimeOfDay]="IsTimeOfDay",a[a.IsTimeRange=r.IsTimeRange]="IsTimeRange"})(Vl||(Vl={}));var Rl;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsAfterOrEqual=r.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=r.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsEvenNumber=r.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsGreaterThan=r.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=r.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=r.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=r.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsOddNumber=r.IsOddNumber]="IsOddNumber",a[a.IsWeekday=r.IsWeekday]="IsWeekday",a[a.IsWeekend=r.IsWeekend]="IsWeekend"})(Rl||(Rl={}));var Yl;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsAfterOrEqual=r.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=r.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsEvenNumber=r.IsEvenNumber]="IsEvenNumber",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsGreaterThan=r.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=r.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=r.IsInteger]="IsInteger",a[a.IsLessThan=r.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=r.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsOddNumber=r.IsOddNumber]="IsOddNumber",a[a.IsThisYear=r.IsThisYear]="IsThisYear",a[a.IsYear=r.IsYear]="IsYear"})(Yl||(Yl={}));var Jl;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsHexadecimal=r.IsHexadecimal]="IsHexadecimal",a[a.IsLengthEqual=r.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=r.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=r.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=r.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=r.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(Jl||(Jl={}));var Zl;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsJSON=r.IsJSON]="IsJSON",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(Zl||(Zl={}));var $l;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsMarkdown=r.IsMarkdown]="IsMarkdown",a[a.IsString=r.IsString]="IsString"})($l||($l={}));var Ql;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(Ql||(Ql={}));var Xl;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(Xl||(Xl={}));var Cl;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsDataURI=r.IsDataURI]="IsDataURI",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(Cl||(Cl={}));var ao;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsDomainName=r.IsDomainName]="IsDomainName",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(ao||(ao={}));var eo;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEmailAddress=r.IsEmailAddress]="IsEmailAddress",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(eo||(eo={}));var io;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsIPAddress=r.IsIPAddress]="IsIPAddress",a[a.IsInIPAddressRange=r.IsInIPAddressRange]="IsInIPAddressRange",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotInIPAddressRange=r.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(io||(io={}));var no;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsIPAddressRange=r.IsIPAddressRange]="IsIPAddressRange",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotInIPAddressRange=r.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(no||(no={}));var so;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsGreaterThan=r.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=r.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInteger=r.IsInteger]="IsInteger",a[a.IsLessThan=r.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=r.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull"})(so||(so={}));var ro;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsMACAddress=r.IsMACAddress]="IsMACAddress",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(ro||(ro={}));var to;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsMagnetURI=r.IsMagnetURI]="IsMagnetURI",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(to||(to={}));var uo;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsMimeType=r.IsMimeType]="IsMimeType",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(uo||(uo={}));var lo;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString",a[a.IsSlug=r.IsSlug]="IsSlug"})(lo||(lo={}));var oo;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString",a[a.IsURL=r.IsURL]="IsURL"})(oo||(oo={}));var mo;(function(a){a[a.IsAfter=r.IsAfter]="IsAfter",a[a.IsAfterOrEqual=r.IsAfterOrEqual]="IsAfterOrEqual",a[a.IsBefore=r.IsBefore]="IsBefore",a[a.IsBeforeOrEqual=r.IsBeforeOrEqual]="IsBeforeOrEqual",a[a.IsBetween=r.IsBetween]="IsBetween",a[a.IsDecimal=r.IsDecimal]="IsDecimal",a[a.IsDivisibleBy=r.IsDivisibleBy]="IsDivisibleBy",a[a.IsEAN=r.IsEAN]="IsEAN",a[a.IsEIN=r.IsEIN]="IsEIN",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsEvenNumber=r.IsEvenNumber]="IsEvenNumber",a[a.IsFloat=r.IsFloat]="IsFloat",a[a.IsGreaterThan=r.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=r.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsInt=r.IsInteger]="IsInt",a[a.IsISBN=r.IsISBN]="IsISBN",a[a.IsISMN=r.IsISMN]="IsISMN",a[a.IsISSN=r.IsISSN]="IsISSN",a[a.IsLatitude=r.IsLatitude]="IsLatitude",a[a.IsLongitude=r.IsLongitude]="IsLongitude",a[a.IsLessThan=r.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=r.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsMACAddress=r.IsMACAddress]="IsMACAddress",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsNegativeNumber=r.IsNegativeNumber]="IsNegativeNumber",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsOddNumber=r.IsOddNumber]="IsOddNumber",a[a.IsPassportNumber=r.IsPassportNumber]="IsPassportNumber",a[a.IsPhoneNumber=r.IsPhoneNumber]="IsPhoneNumber",a[a.IsPort=r.IsPort]="IsPort",a[a.IsPositiveNumber=r.IsPositiveNumber]="IsPositiveNumber",a[a.IsPostalCode=r.IsPostalCode]="IsPostalCode",a[a.IsSemanticVersion=r.IsSemanticVersion]="IsSemanticVersion",a[a.IsSSN=r.IsSSN]="IsSSN",a[a.IsTaxIDNumber=r.IsTaxIDNumber]="IsTaxIDNumber",a[a.IsUUID=r.IsUUID]="IsUUID",a[a.IsVATIDNumber=r.IsVATIDNumber]="IsVATIDNumber"})(mo||(mo={}));var co;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsFloat=r.IsFloat]="IsFloat",a[a.IsGreaterThan=r.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=r.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=r.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=r.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsNumeric=r.IsNumeric]="IsNumeric"})(co||(co={}));var Ao;(function(a){a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInteger=r.IsInteger]="IsInteger",a[a.IsGreaterThan=r.IsGreaterThan]="IsGreaterThan",a[a.IsGreaterThanOrEqual=r.IsGreaterThanOrEqual]="IsGreaterThanOrEqual",a[a.IsLessThan=r.IsLessThan]="IsLessThan",a[a.IsLessThanOrEqual=r.IsLessThanOrEqual]="IsLessThanOrEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsNumeric=r.IsNumeric]="IsNumeric"})(Ao||(Ao={}));var fo;(function(a){a[a.IsCreditCard=r.IsCreditCard]="IsCreditCard",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsLengthEqual=r.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=r.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=r.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=r.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=r.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsRegexMatch=r.IsRegexMatch]="IsRegexMatch",a[a.IsNotRegexMatch=r.IsNotRegexMatch]="IsNotRegexMatch"})(fo||(fo={}));var go;(function(a){a[a.isEmailAddress=r.IsEmailAddress]="isEmailAddress",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsLengthEqual=r.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=r.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=r.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=r.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=r.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsRegexMatch=r.IsRegexMatch]="IsRegexMatch",a[a.IsNotRegexMatch=r.IsNotRegexMatch]="IsNotRegexMatch"})(go||(go={}));var ho;(function(a){a[a.IsLicensePlateNumber=r.IsLicensePlateNumber]="IsLicensePlateNumber",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=r.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsString=r.IsString]="IsString",a[a.IsRegexMatch=r.IsRegexMatch]="IsRegexMatch"})(ho||(ho={}));var _o;(function(a){a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsPassportNumber=r.IsPassportNumber]="IsPassportNumber",a[a.IsString=r.IsString]="IsString",a[a.IsRegexMatch=r.IsRegexMatch]="IsRegexMatch"})(_o||(_o={}));var Io;(function(a){a[a.IsComplexEnough=r.IsComplexEnough]="IsComplexEnough",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=r.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsLengthGreaterThan=r.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=r.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=r.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=r.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsStrongPassword=r.IsStrongPassword]="IsStrongPassword",a[a.IsString=r.IsString]="IsString",a[a.IsRegexMatch=r.IsRegexMatch]="IsRegexMatch"})(Io||(Io={}));var po;(function(a){a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=r.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsPhoneNumber=r.IsPhoneNumber]="IsPhoneNumber",a[a.IsRegexMatch=r.IsRegexMatch]="IsRegexMatch"})(po||(po={}));var So;(function(a){a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsSSN=r.IsSSN]="IsSSN",a[a.IsString=r.IsString]="IsString",a[a.IsRegexMatch=r.IsRegexMatch]="IsRegexMatch"})(So||(So={}));var Eo;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsBIC=r.IsBIC]="IsBIC",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(Eo||(Eo={}));var To;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEAN=r.IsEAN]="IsEAN",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(To||(To={}));var vo;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEIN=r.IsEIN]="IsEIN",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(vo||(vo={}));var bo;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsIBAN=r.IsIBAN]="IsIBAN",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(bo||(bo={}));var Uo;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsISBN=r.IsISBN]="IsISBN",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(Uo||(Uo={}));var No;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsISIN=r.IsISIN]="IsISIN",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(No||(No={}));var Bo;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsISMN=r.IsISMN]="IsISMN",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(Bo||(Bo={}));var Po;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsISSN=r.IsISSN]="IsISSN",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString"})(Po||(Po={}));var yo;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString",a[a.IsTaxIDNumber=r.IsTaxIDNumber]="IsTaxIDNumber"})(yo||(yo={}));var ko;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsInList=r.IsInList]="IsInList",a[a.IsNotEqual=r.IsNotEqual]="IsNotEqual",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsString=r.IsString]="IsString",a[a.IsVATIDNumber=r.IsVATIDNumber]="IsVATIDNumber"})(ko||(ko={}));var Mo;(function(a){a[a.Contains=r.Contains]="Contains",a[a.HasNumberCount=r.HasNumberCount]="HasNumberCount",a[a.HasLowercaseCount=r.HasLowercaseCount]="HasLowercaseCount",a[a.HasLetterCount=r.HasLetterCount]="HasLetterCount",a[a.HasSpacesCount=r.HasSpacesCount]="HasSpacesCount",a[a.HasSymbolCount=r.HasSymbolCount]="HasSymbolCount",a[a.HasUppercaseCount=r.HasUppercaseCount]="HasUppercaseCount",a[a.IsAlpha=r.IsAlpha]="IsAlpha",a[a.IsAlphanumeric=r.IsAlphanumeric]="IsAlphanumeric",a[a.IsAscii=r.IsAscii]="IsAscii",a[a.IsBase64=r.IsBase64]="IsBase64",a[a.IsColor=r.IsColor]="IsColor",a[a.IsComplexEnough=r.IsComplexEnough]="IsComplexEnough",a[a.IsCreditCard=r.IsCreditCard]="IsCreditCard",a[a.IsDataURI=r.IsDataURI]="IsDataURI",a[a.IsDomainName=r.IsDomainName]="IsDomainName",a[a.IsEmailAddress=r.IsEmailAddress]="IsEmailAddress",a[a.IsEthereumAddress=r.IsEthereumAddress]="IsEthereumAddress",a[a.IsEAN=r.IsEAN]="IsEAN",a[a.IsEIN=r.IsEIN]="IsEIN",a[a.IsEqual=r.IsEqual]="IsEqual",a[a.IsIBAN=r.IsIBAN]="IsIBAN",a[a.IsHSLColor=r.IsHSLColor]="IsHSLColor",a[a.IsHexColor=r.IsHexColor]="IsHexColor",a[a.IsHexadecimal=r.IsHexadecimal]="IsHexadecimal",a[a.IsIdentityCardCode=r.IsIdentityCardCode]="IsIdentityCardCode",a[a.IsIMEI=r.IsIMEI]="IsIMEI",a[a.IsInList=r.IsInList]="IsInList",a[a.IsIPAddress=r.IsIPAddress]="IsIPAddress",a[a.IsInIPAddressRange=r.IsInIPAddressRange]="IsInIPAddressRange",a[a.IsISBN=r.IsISBN]="IsISBN",a[a.IsISIN=r.IsISIN]="IsISIN",a[a.IsISMN=r.IsISMN]="IsISMN",a[a.IsISRC=r.IsISRC]="IsISRC",a[a.IsISSN=r.IsISSN]="IsISSN",a[a.IsLanguage=r.IsLanguage]="IsLanguage",a[a.IsLatitude=r.IsLatitude]="IsLatitude",a[a.IsLongitude=r.IsLongitude]="IsLongitude",a[a.IsLengthEqual=r.IsLengthEqual]="IsLengthEqual",a[a.IsLengthGreaterThan=r.IsLengthGreaterThan]="IsLengthGreaterThan",a[a.IsLengthGreaterThanOrEqual=r.IsLengthGreaterThanOrEqual]="IsLengthGreaterThanOrEqual",a[a.IsLengthLessThan=r.IsLengthLessThan]="IsLengthLessThan",a[a.IsLengthLessThanOrEqual=r.IsLengthLessThanOrEqual]="IsLengthLessThanOrEqual",a[a.IsLicensePlateNumber=r.IsLicensePlateNumber]="IsLicensePlateNumber",a[a.IsLowercase=r.IsLowercase]="IsLowercase",a[a.IsOctal=r.IsOctal]="IsOctal",a[a.IsMACAddress=r.IsMACAddress]="IsMACAddress",a[a.IsMD5=r.IsMD5]="IsMD5",a[a.IsMagnetURI=r.IsMagnetURI]="IsMagnetURI",a[a.IsMarkdown=r.IsMarkdown]="IsMarkdown",a[a.IsMimeType=r.IsMimeType]="IsMimeType",a[a.IsMonth=r.IsMonth]="IsMonth",a[a.IsNotInIPAddressRange=r.IsNotInIPAddressRange]="IsNotInIPAddressRange",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNotNull=r.IsNotNull]="IsNotNull",a[a.IsNotRegexMatch=r.IsNotRegexMatch]="IsNotRegexMatch",a[a.IsNumber=r.IsNumber]="IsNumber",a[a.IsNumeric=r.IsNumeric]="IsNumeric",a[a.IsPassportNumber=r.IsPassportNumber]="IsPassportNumber",a[a.IsPhoneNumber=r.IsPhoneNumber]="IsPhoneNumber",a[a.IsPort=r.IsPort]="IsPort",a[a.IsPostalCode=r.IsPostalCode]="IsPostalCode",a[a.IsProvince=r.IsProvince]="IsProvince",a[a.IsRegexMatch=r.IsRegexMatch]="IsRegexMatch",a[a.IsSemanticVersion=r.IsSemanticVersion]="IsSemanticVersion",a[a.IsSlug=r.IsSlug]="IsSlug",a[a.IsSSN=r.IsSSN]="IsSSN",a[a.IsState=r.IsState]="IsState",a[a.IsStreetAddress=r.IsStreetAddress]="IsStreetAddress",a[a.IsString=r.IsString]="IsString",a[a.IsTaxIDNumber=r.IsTaxIDNumber]="IsTaxIDNumber",a[a.IsURL=r.IsURL]="IsURL",a[a.IsUUID=r.IsUUID]="IsUUID",a[a.IsUppercase=r.IsUppercase]="IsUppercase",a[a.IsVATIDNumber=r.IsVATIDNumber]="IsVATIDNumber",a[a.IsWeekday=r.IsWeekday]="IsWeekday",a[a.IsWeekend=r.IsWeekend]="IsWeekend",a[a.IsYear=r.IsYear]="IsYear"})(Mo||(Mo={}));var Do;(function(a){a[a.Contains=r.Contains]="Contains",a[a.IsAlpha=r.IsAlpha]="IsAlpha",a[a.IsAlphanumeric=r.IsAlphanumeric]="IsAlphanumeric",a[a.IsInList=r.IsInList]="IsInList",a[a.IsMarkdown=r.IsMarkdown]="IsMarkdown",a[a.IsNotInList=r.IsNotInList]="IsNotInList",a[a.IsNumeric=r.IsNumeric]="IsNumeric",a[a.IsLowercase=r.IsLowercase]="IsLowercase",a[a.IsString=r.IsString]="IsString",a[a.IsUppercase=r.IsUppercase]="IsUppercase"})(Do||(Do={}));var xo;(function(a){a.InvalidCharacters="invalid-characters",a.InvalidPattern="invalid-pattern",a.NotComplexEnough="not-complex-enough",a.NotUnique="not-unique",a.NotValidEmail="not-valid-email",a.TooLong="too-long",a.TooShort="too-short",a.Required="required"})(xo||(xo={}));var Fo;(function(a){a[a.Allowed=0]="Allowed",a[a.Blocked=1]="Blocked"})(Fo||(Fo={}));var Lo;(function(a){a.Canceled="Canceled",a.Completed="Completed",a.Created="Created",a.Faulted="Faulted",a.Queued="Queued",a.Running="Running",a.Waiting="Waiting"})(Lo||(Lo={}));var wo;(function(a){a.Archived="ARCHIVED",a.Compromised="COMPROMISED",a.Confirmed="CONFIRMED",a.ForcePasswordChange="FORCE_CHANGE_PASSWORD",a.ResetRequired="RESET_REQUIRED",a.Unconfirmed="UNCONFIRMED",a.Unknown="UNKNOWN"})(wo||(wo={}));var Go;(function(a){a.Code="code",a.Link="link"})(Go||(Go={}));var qo;(function(a){a.Owner="Owner",a.Admin="Admin",a.User="User",a.Visitor="Visitor"})(qo||(qo={}));var Ko;(function(a){a.RequiresPaymentMethod="requires_payment_method",a.RequiresConfirmation="requires_confirmation",a.RequiresAction="requires_action",a.Processing="processing",a.RequiresCapture="requires_capture",a.Canceled="canceled",a.Succeeded="succeeded"})(Ko||(Ko={}));var Oo;(function(a){a.Incomplete="incomplete",a.IncompleteExpired="incomplete_expired",a.Trialing="trialing",a.Active="active",a.PastDue="past_due",a.Canceled="canceled",a.Unpaid="unpaid"})(Oo||(Oo={}));var jo;(function(a){a.Monthly="monthly",a.Quarterly="quarterly",a.Yearly="yearly",a.Lifetime="lifetime"})(jo||(jo={}));var Ho;(function(a){a.Email="email",a.PhoneNumber="phone_number"})(Ho||(Ho={}));var R;(function(a){a.Analytics="analytics",a.Critical="critical",a.Debug="debug",a.Exception="exception",a.Http="http",a.Info="info",a.Warning="warning"})(R||(R={}));var Wo;(function(a){a.Delete="delete",a.Get="get",a.Head="head",a.Patch="patch",a.Post="post",a.Put="put"})(Wo||(Wo={}));var zo;(function(a){a[a.CONTINUE=100]="CONTINUE",a[a.SWITCHING_PROTOCOLS=101]="SWITCHING_PROTOCOLS",a[a.PROCESSING=102]="PROCESSING",a[a.OK=200]="OK",a[a.CREATED=201]="CREATED",a[a.ACCEPTED=202]="ACCEPTED",a[a.NON_AUTHORITATIVE_INFORMATION=203]="NON_AUTHORITATIVE_INFORMATION",a[a.NO_CONTENT=204]="NO_CONTENT",a[a.RESET_CONTENT=205]="RESET_CONTENT",a[a.PARTIAL_CONTENT=206]="PARTIAL_CONTENT",a[a.MULTI_STATUS=207]="MULTI_STATUS",a[a.ALREADY_REPORTED=208]="ALREADY_REPORTED",a[a.IM_USED=226]="IM_USED",a[a.MULTIPLE_CHOICES=300]="MULTIPLE_CHOICES",a[a.MOVED_PERMANENTLY=301]="MOVED_PERMANENTLY",a[a.FOUND=302]="FOUND",a[a.SEE_OTHER=303]="SEE_OTHER",a[a.NOT_MODIFIED=304]="NOT_MODIFIED",a[a.USE_PROXY=305]="USE_PROXY",a[a.SWITCH_PROXY=306]="SWITCH_PROXY",a[a.TEMPORARY_REDIRECT=307]="TEMPORARY_REDIRECT",a[a.PERMANENT_REDIRECT=308]="PERMANENT_REDIRECT",a[a.BAD_REQUEST=400]="BAD_REQUEST",a[a.UNAUTHORIZED=401]="UNAUTHORIZED",a[a.PAYMENT_REQUIRED=402]="PAYMENT_REQUIRED",a[a.FORBIDDEN=403]="FORBIDDEN",a[a.NOT_FOUND=404]="NOT_FOUND",a[a.METHOD_NOT_ALLOWED=405]="METHOD_NOT_ALLOWED",a[a.NOT_ACCEPTABLE=406]="NOT_ACCEPTABLE",a[a.PROXY_AUTHENTICATION_REQUIRED=407]="PROXY_AUTHENTICATION_REQUIRED",a[a.REQUEST_TIMEOUT=408]="REQUEST_TIMEOUT",a[a.CONFLICT=409]="CONFLICT",a[a.GONE=410]="GONE",a[a.LENGTH_REQUIRED=411]="LENGTH_REQUIRED",a[a.PRECONDITION_FAILED=412]="PRECONDITION_FAILED",a[a.PAYLOAD_TOO_LARGE=413]="PAYLOAD_TOO_LARGE",a[a.URI_TOO_LONG=414]="URI_TOO_LONG",a[a.UNSUPPORTED_MEDIA_TYPE=415]="UNSUPPORTED_MEDIA_TYPE",a[a.RANGE_NOT_SATISFIABLE=416]="RANGE_NOT_SATISFIABLE",a[a.EXPECTATION_FAILED=417]="EXPECTATION_FAILED",a[a.I_AM_A_TEAPOT=418]="I_AM_A_TEAPOT",a[a.MISDIRECTED_REQUEST=421]="MISDIRECTED_REQUEST",a[a.UNPROCESSABLE_ENTITY=422]="UNPROCESSABLE_ENTITY",a[a.LOCKED=423]="LOCKED",a[a.FAILED_DEPENDENCY=424]="FAILED_DEPENDENCY",a[a.TOO_EARLY=425]="TOO_EARLY",a[a.UPGRADE_REQUIRED=426]="UPGRADE_REQUIRED",a[a.PRECONDITION_REQUIRED=428]="PRECONDITION_REQUIRED",a[a.TOO_MANY_REQUESTS=429]="TOO_MANY_REQUESTS",a[a.REQUEST_HEADER_FIELDS_TOO_LARGE=431]="REQUEST_HEADER_FIELDS_TOO_LARGE",a[a.UNAVAILABLE_FOR_LEGAL_REASONS=451]="UNAVAILABLE_FOR_LEGAL_REASONS",a[a.INTERNAL_SERVER_ERROR=500]="INTERNAL_SERVER_ERROR",a[a.NOT_IMPLEMENTED=501]="NOT_IMPLEMENTED",a[a.BAD_GATEWAY=502]="BAD_GATEWAY",a[a.SERVICE_UNAVAILABLE=503]="SERVICE_UNAVAILABLE",a[a.GATEWAY_TIMEOUT=504]="GATEWAY_TIMEOUT",a[a.HTTP_VERSION_NOT_SUPPORTED=505]="HTTP_VERSION_NOT_SUPPORTED",a[a.VARIANT_ALSO_NEGOTIATES=506]="VARIANT_ALSO_NEGOTIATES",a[a.INSUFFICIENT_STORAGE=507]="INSUFFICIENT_STORAGE",a[a.LOOP_DETECTED=508]="LOOP_DETECTED",a[a.BANDWIDTH_LIMIT_EXCEEDED=509]="BANDWIDTH_LIMIT_EXCEEDED",a[a.NOT_EXTENDED=510]="NOT_EXTENDED",a[a.NETWORK_AUTHENTICATION_REQUIRED=511]="NETWORK_AUTHENTICATION_REQUIRED"})(zo||(zo={}));var _;(function(a){a.Afghanistan="AF",a.Albania="AL",a.Algeria="DZ",a.AmericanSamoa="AS",a.Andorra="AD",a.Angola="AO",a.Anguilla="AI",a.Antarctica="AQ",a.AntiguaAndBarbuda="AG",a.Argentina="AR",a.Armenia="AM",a.Aruba="AW",a.Australia="AU",a.Austria="AT",a.Azerbaijan="AZ",a.Bahamas="BS",a.Bahrain="BH",a.Bangladesh="BD",a.Barbados="BB",a.Belarus="BY",a.Belgium="BE",a.Belize="BZ",a.Benin="BJ",a.Bermuda="BM",a.Bhutan="BT",a.Bolivia="BO",a.BosniaAndHerzegovina="BA",a.Botswana="BW",a.BouvetIsland="BV",a.Brazil="BR",a.BritishIndianOceanTerritory="IO",a.Brunei="BN",a.Bulgaria="BG",a.BurkinaFaso="BF",a.Burundi="BI",a.Cambodia="KH",a.Cameroon="CM",a.Canada="CA",a.CapeVerde="CV",a.CaymanIslands="KY",a.CentralAfricanRepublic="CF",a.Chad="TD",a.Chile="CL",a.China="CN",a.ChristmasIsland="CX",a.CocosKeelingIslands="CC",a.Colombia="CO",a.Comoros="KM",a.Congo="CG",a.CongoTheDemocraticRepublicOfThe="CD",a.CookIslands="CK",a.CostaRica="CR",a.CoteDIvoire="CI",a.Croatia="HR",a.Cuba="CU",a.Cyprus="CY",a.CzechRepublic="CZ",a.Denmark="DK",a.Djibouti="DJ",a.Dominica="DM",a.DominicanRepublic="DO",a.Ecuador="EC",a.Egypt="EG",a.ElSalvador="SV",a.EquatorialGuinea="GQ",a.Eritrea="ER",a.Estonia="EE",a.Ethiopia="ET",a.FalklandIslands="FK",a.FaroeIslands="FO",a.Fiji="FJ",a.Finland="FI",a.France="FR",a.FrenchGuiana="GF",a.FrenchPolynesia="PF",a.FrenchSouthernTerritories="TF",a.Gabon="GA",a.Gambia="GM",a.Georgia="GE",a.Germany="DE",a.Ghana="GH",a.Gibraltar="GI",a.Greece="GR",a.Greenland="GL",a.Grenada="GD",a.Guadeloupe="GP",a.Guam="GU",a.Guatemala="GT",a.Guernsey="GG",a.Guinea="GN",a.GuineaBissau="GW",a.Guyana="GY",a.Haiti="HT",a.HeardIslandMcdonaldIslands="HM",a.HolySeeVaticanCityState="VA",a.Honduras="HN",a.HongKong="HK",a.Hungary="HU",a.Iceland="IS",a.India="IN",a.Indonesia="ID",a.Iran="IR",a.Iraq="IQ",a.Ireland="IE",a.IsleOfMan="IM",a.Israel="IL",a.Italy="IT",a.Jamaica="JM",a.Japan="JP",a.Jersey="JE",a.Jordan="JO",a.Kazakhstan="KZ",a.Kenya="KE",a.Kiribati="KI",a.Kuwait="KW",a.Kyrgyzstan="KG",a.Laos="LA",a.Latvia="LV",a.Lebanon="LB",a.Lesotho="LS",a.Liberia="LR",a.Libya="LY",a.Liechtenstein="LI",a.Lithuania="LT",a.Luxembourg="LU",a.Macau="MO",a.Madagascar="MG",a.Malawi="MW",a.Malaysia="MY",a.Maldives="MV",a.Mali="ML",a.Malta="MT",a.MarshallIslands="MH",a.Martinique="MQ",a.Mauritania="MR",a.Mauritius="MU",a.Mayotte="YT",a.Mexico="MX",a.MicronesiaFederatedStatesOf="FM",a.Moldova="MD",a.Monaco="MC",a.Mongolia="MN",a.Montenegro="ME",a.Montserrat="MS",a.Morocco="MA",a.Mozambique="MZ",a.Myanmar="MM",a.Namibia="NA",a.Nauru="NR",a.Nepal="NP",a.Netherlands="NL",a.NetherlandsAntilles="AN",a.NewCaledonia="NC",a.NewZealand="NZ",a.NorthKorea="KP",a.Nicaragua="NI",a.Niger="NE",a.Nigeria="NG",a.Niue="NU",a.NorfolkIsland="NF",a.NorthMacedonia="MK",a.NorthernMarianaIslands="MP",a.Norway="NO",a.Oman="OM",a.Pakistan="PK",a.Palau="PW",a.PalestinianTerritoryOccupied="PS",a.Panama="PA",a.PapuaNewGuinea="PG",a.Paraguay="PY",a.Peru="PE",a.Philippines="PH",a.Pitcairn="PN",a.Poland="PL",a.Portugal="PT",a.PuertoRico="PR",a.Qatar="QA",a.Reunion="RE",a.Romania="RO",a.RussianFederation="RU",a.Rwanda="RW",a.SaintBarthelemy="BL",a.SaintHelena="SH",a.SaintKittsAndNevis="KN",a.SaintLucia="LC",a.SaintMartin="MF",a.SaintPierreAndMiquelon="PM",a.SaintVincentAndTheGrenadines="VC",a.Samoa="WS",a.SanMarino="SM",a.SaoTomeAndPrincipe="ST",a.SaudiArabia="SA",a.Senegal="SN",a.Serbia="RS",a.SerbiaAndMontenegro="CS",a.Seychelles="SC",a.SierraLeone="SL",a.Singapore="SG",a.Slovakia="SK",a.Slovenia="SI",a.SolomonIslands="SB",a.Somalia="SO",a.SouthAfrica="ZA",a.SouthGeorgiaAndTheSouthSandwichIslands="GS",a.SouthKorea="KR",a.Spain="ES",a.SriLanka="LK",a.Sudan="SD",a.Suriname="SR",a.SvalbardAndJanMayen="SJ",a.Swaziland="SZ",a.Sweden="SE",a.Switzerland="CH",a.Syria="SY",a.Taiwan="TW",a.Tajikistan="TJ",a.Tanzania="TZ",a.Thailand="TH",a.TimorLeste="TL",a.Togo="TG",a.Tokelau="TK",a.Tonga="TO",a.TrinidadAndTobago="TT",a.Tunisia="TN",a.Turkey="TR",a.Turkmenistan="TM",a.TurksAndCaicosIslands="TC",a.Tuvalu="TV",a.Uganda="UG",a.Ukraine="UA",a.UnitedArabEmirates="AE",a.UnitedKingdom="GB",a.UnitedStates="US",a.UnitedStatesMinorOutlyingIslands="UM",a.Uruguay="UY",a.Uzbekistan="UZ",a.Vanuatu="VU",a.Venezuela="VE",a.Vietnam="VN",a.VirginIslandsBritish="VG",a.VirginIslandsUS="VI",a.WallisAndFutuna="WF",a.WesternSahara="EH",a.Yemen="YE",a.Zambia="ZM",a.Zimbabwe="ZW"})(_||(_={}));var M;(function(a){a.AfghanistanAfghani="AFN",a.AlbaniaLek="ALL",a.ArmeniaDram="AMD",a.AlgeriaDinar="DZD",a.AmericanSamoaTala="WST",a.AngolaKwanza="AOA",a.ArgentinaPeso="ARS",a.AustraliaDollar="AUD",a.ArubaFlorin="AWG",a.AzerbaijanNewManat="AZN",a.BosniaAndHerzegovinaConvertibleMark="BAM",a.BahrainDinar="BHD",a.BarbadosDollar="BBD",a.BangladeshTaka="BDT",a.BelgiumFranc="BGN",a.BermudaDollar="BMD",a.BruneiDollar="BND",a.BoliviaBoliviano="BOB",a.BrazilReal="BRL",a.BahamasDollar="BSD",a.BhutanNgultrum="BTN",a.BotswanaPula="BWP",a.BelarusRuble="BYN",a.BelizeDollar="BZD",a.BulgariaLev="BGN",a.BurundiFranc="BIF",a.BritishPound="GBP",a.CanadaDollar="CAD",a.CambodiaRiel="KHR",a.ComorosFranc="KMF",a.CaymanIslandsDollar="KYD",a.ChilePeso="CLP",a.ChinaYuan="CNY",a.ColombiaPeso="COP",a.CostaRicaColon="CRC",a.CroatiaKuna="HRK",a.CubaConvertiblePeso="CUC",a.CubaPeso="CUP",a.CapeVerdeEscudo="CVE",a.CyprusPound="CYP",a.CzechRepublicKoruna="CZK",a.DjiboutiFranc="DJF",a.DenmarkKrone="DKK",a.DominicaDollar="XCD",a.DominicanRepublicPeso="DOP",a.EastCaribbeanDollar="XCD",a.EgyptPound="EGP",a.ElSalvadorColon="SVC",a.EquatorialGuineaEkwele="GQE",a.EritreaNakfa="ERN",a.EstoniaKroon="EEK",a.EthiopiaBirr="ETB",a.Euro="EUR",a.FijiDollar="FJD",a.FalklandIslandsPound="FKP",a.GambiaDalasi="GMD",a.GabonFranc="GMD",a.GeorgiaLari="GEL",a.GhanaCedi="GHS",a.GibraltarPound="GIP",a.GuatemalaQuetzal="GTQ",a.GuernseyPound="GGP",a.GuineaBissauPeso="GWP",a.GuyanaDollar="GYD",a.HongKongDollar="HKD",a.HondurasLempira="HNL",a.HaitiGourde="HTG",a.HungaryForint="HUF",a.IndonesiaRupiah="IDR",a.IsleOfManPound="IMP",a.IsraelNewShekel="ILS",a.IndiaRupee="INR",a.IraqDinar="IQD",a.IranRial="IRR",a.IcelandKrona="ISK",a.JamaicaDollar="JMD",a.JapanYen="JPY",a.JerseyPound="JEP",a.JordanDinar="JOD",a.KazakhstanTenge="KZT",a.KenyaShilling="KES",a.KyrgyzstanSom="KGS",a.NorthKoreaWon="KPW",a.SouthKoreaWon="KRW",a.KuwaitDinar="KWD",a.LaosKip="LAK",a.LebanonPound="LBP",a.LiberiaDollar="LRD",a.LesothoLoti="LSL",a.LibyanDinar="LYD",a.LithuaniaLitas="LTL",a.LatviaLats="LVL",a.LibyaDinar="LYD",a.MacauPataca="MOP",a.MaldivesRufiyaa="MVR",a.MalawiKwacha="MWK",a.MaltaLira="MTL",a.MauritiusRupee="MUR",a.MongoliaTughrik="MNT",a.MoroccoDirham="MAD",a.MoldovaLeu="MDL",a.MozambiqueMetical="MZN",a.MadagascarAriary="MGA",a.MacedoniaDenar="MKD",a.MexicoPeso="MXN",a.MalaysiaRinggit="MYR",a.MyanmarKyat="MMK",a.MicronesiaFederatedStatesDollar="USD",a.NicaraguaCordoba="NIO",a.NamibiaDollar="NAD",a.NetherlandsAntillesGuilder="ANG",a.NewCaledoniaFranc="XPF",a.NigeriaNaira="NGN",a.NicaraguaCordobaOro="NIO",a.NigerCFAFranc="XOF",a.NorwayKrone="NOK",a.NepalRupee="NPR",a.NewZealandDollar="NZD",a.OmanRial="OMR",a.PanamaBalboa="PAB",a.PeruNuevoSol="PEN",a.PapuaNewGuineaKina="PGK",a.PhilippinesPeso="PHP",a.PakistanRupee="PKR",a.PeruNuevo="PEN",a.PolandZloty="PLN",a.ParaguayGuarani="PYG",a.QatarRial="QAR",a.RomaniaNewLeu="RON",a.SerbiaDinar="RSD",a.SriLankaRupee="LKR",a.RussiaRuble="RUB",a.RwandaFranc="RWF",a.SaudiArabiaRiyal="SAR",a.SlovakiaKoruna="SKK",a.SloveniaTolar="SIT",a.SolomonIslandsDollar="SBD",a.SeychellesRupee="SCR",a.SudanPound="SDG",a.SwedenKrona="SEK",a.SingaporeDollar="SGD",a.SaintHelenaPound="SHP",a.SierraLeoneLeone="SLL",a.SomaliaShilling="SOS",a.SurinameDollar="SRD",a.SintMaartenPound="SXD",a.SyriaPound="SYP",a.SwazilandLilangeni="SZL",a.SwitzerlandFranc="CHF",a.ThailandBaht="THB",a.TajikistanSomoni="TJS",a.TurkmenistanManat="TMT",a.TunisiaDinar="TND",a.TongaPaanga="TOP",a.TurkeyLira="TRY",a.TrinidadAndTobagoDollar="TTD",a.TaiwanNewDollar="TWD",a.TanzaniaShilling="TZS",a.UnitedArabEmiratesDirham="AED",a.UkraineHryvnia="UAH",a.UgandaShilling="UGX",a.UnitedKingdomPound="GBP",a.UnitedStatesDollar="USD",a.UruguayPeso="UYU",a.UzbekistanSom="UZS",a.VenezuelaBolivar="VEF",a.VietnamDong="VND",a.VanuatuVatu="VUV",a.SamoaTala="WST",a.YemenRial="YER",a.SouthAfricaRand="ZAR",a.ZambiaKwacha="ZMW",a.ZimbabweDollar="ZWL"})(M||(M={}));M.AfghanistanAfghani,_.Afghanistan,M.AlbaniaLek,_.Albania,M.AlgeriaDinar,_.Algeria,M.ArgentinaPeso,_.Argentina,M.ArmeniaDram,_.Armenia,M.ArubaFlorin,_.Aruba,M.AustraliaDollar,_.Australia,M.AzerbaijanNewManat,_.Azerbaijan,M.BahrainDinar,_.Bahrain,M.BangladeshTaka,_.Bangladesh,M.BarbadosDollar,_.Barbados,M.BelarusRuble,_.Belarus,M.BelizeDollar,_.Belize,M.BermudaDollar,_.Bermuda,M.BoliviaBoliviano,_.Bolivia,M.BosniaAndHerzegovinaConvertibleMark,_.BosniaAndHerzegovina,M.BotswanaPula,_.Botswana,M.BrazilReal,_.Brazil,M.BruneiDollar,_.Brunei,M.BulgariaLev,_.Bulgaria,M.BurundiFranc,_.Burundi,M.CambodiaRiel,_.Cambodia,M.CanadaDollar,_.Canada,M.CapeVerdeEscudo,_.CapeVerde,M.CaymanIslandsDollar,_.CaymanIslands,M.ChilePeso,_.Chile,M.ChinaYuan,_.China,M.ColombiaPeso,_.Colombia,M.ComorosFranc,_.Comoros,M.CostaRicaColon,_.CostaRica,M.CroatiaKuna,_.Croatia,M.CubaConvertiblePeso,_.Cuba,M.CubaPeso,_.Cuba,M.CyprusPound,_.Cyprus,M.CzechRepublicKoruna,_.CzechRepublic,M.DenmarkKrone,_.Denmark,M.DjiboutiFranc,_.Djibouti,M.DominicanRepublicPeso,_.DominicanRepublic,M.EastCaribbeanDollar,_.AntiguaAndBarbuda,_.Dominica,_.Grenada,_.SaintKittsAndNevis,_.SaintLucia,_.SaintVincentAndTheGrenadines,M.EgyptPound,_.Egypt,M.ElSalvadorColon,_.ElSalvador,M.EquatorialGuineaEkwele,_.EquatorialGuinea,M.EritreaNakfa,_.Eritrea,M.EstoniaKroon,_.Estonia,M.EthiopiaBirr,_.Ethiopia,M.Euro,_.Andorra,_.Austria,_.Belgium,_.Cyprus,_.Estonia,_.Finland,_.France,_.Germany,_.Greece,_.Ireland,_.Italy,_.Latvia,_.Lithuania,_.Luxembourg,_.Malta,_.Monaco,_.Netherlands,_.Portugal,_.Spain,_.Sweden,_.UnitedKingdom,M.FalklandIslandsPound,_.FalklandIslands,M.FijiDollar,_.Fiji,M.GambiaDalasi,_.Gambia,M.GeorgiaLari,_.Georgia,M.GhanaCedi,_.Ghana,M.GibraltarPound,_.Gibraltar,M.GuatemalaQuetzal,_.Guatemala,M.GuernseyPound,_.Guernsey,M.GuineaBissauPeso,_.GuineaBissau,M.GuyanaDollar,_.Guyana,M.HaitiGourde,_.Haiti,M.HondurasLempira,_.Honduras,M.HongKongDollar,_.HongKong,M.HungaryForint,_.Hungary,M.IcelandKrona,_.Iceland,M.IndiaRupee,_.India,_.Bhutan,M.IndonesiaRupiah,_.Indonesia,M.IranRial,_.Iran,M.IsleOfManPound,_.IsleOfMan,M.IsraelNewShekel,_.Israel,M.JamaicaDollar,_.Jamaica,M.JapanYen,_.Japan,M.JerseyPound,_.Jersey,M.JordanDinar,_.Jordan,M.KazakhstanTenge,_.Kazakhstan,M.KenyaShilling,_.Kenya,M.KuwaitDinar,_.Kuwait,M.KyrgyzstanSom,_.Kyrgyzstan,M.LaosKip,_.Laos,M.LatviaLats,_.Latvia,M.LebanonPound,_.Lebanon,M.LesothoLoti,_.Lesotho,M.LiberiaDollar,_.Liberia,M.LibyanDinar,_.Libya,M.LithuaniaLitas,_.Lithuania,M.MacauPataca,_.Macau,M.MacedoniaDenar,_.NorthMacedonia,M.MadagascarAriary,_.Madagascar,M.MalawiKwacha,_.Malawi,M.MalaysiaRinggit,_.Malaysia,M.MaldivesRufiyaa,_.Maldives,M.MaltaLira,_.Malta,M.MauritiusRupee,_.Mauritius,M.MexicoPeso,_.Mexico,M.MoldovaLeu,_.Moldova,M.MongoliaTughrik,_.Mongolia,M.MoroccoDirham,_.Morocco,M.MozambiqueMetical,_.Mozambique,M.MyanmarKyat,_.Myanmar,M.NamibiaDollar,_.Namibia,M.NepalRupee,_.Nepal,M.NetherlandsAntillesGuilder,_.NetherlandsAntilles,M.NewCaledoniaFranc,_.NewCaledonia,M.NewZealandDollar,_.NewZealand,M.NicaraguaCordoba,_.Nicaragua,M.NigerCFAFranc,_.Niger,M.NigeriaNaira,_.Nigeria,M.NorthKoreaWon,_.NorthKorea,M.NorwayKrone,_.Norway,M.OmanRial,_.Oman,M.PakistanRupee,_.Pakistan,M.PanamaBalboa,_.Panama,M.ParaguayGuarani,_.Paraguay,M.PeruNuevo,_.Peru,M.PhilippinesPeso,_.Philippines,M.PolandZloty,_.Poland,M.QatarRial,_.Qatar,M.RomaniaNewLeu,_.Romania,M.RussiaRuble,_.RussianFederation,M.RwandaFranc,_.Rwanda,M.SaudiArabiaRiyal,_.SaudiArabia,M.SerbiaDinar,_.Serbia,M.SeychellesRupee,_.Seychelles,M.SingaporeDollar,_.Singapore,M.SlovakiaKoruna,_.Slovakia,M.SloveniaTolar,_.Slovenia,M.SolomonIslandsDollar,_.SolomonIslands,M.SomaliaShilling,_.Somalia,M.SouthAfricaRand,_.SouthAfrica,M.SouthKoreaWon,_.SouthKorea,M.SriLankaRupee,_.SriLanka,M.SudanPound,_.Sudan,M.SurinameDollar,_.Suriname,M.SwazilandLilangeni,_.Swaziland,M.SwedenKrona,_.Sweden,M.SwitzerlandFranc,_.Switzerland,M.SyriaPound,_.Syria,M.TaiwanNewDollar,_.Taiwan,M.TajikistanSomoni,_.Tajikistan,M.TanzaniaShilling,_.Tanzania,M.ThailandBaht,_.Thailand,M.TunisiaDinar,_.Tunisia,M.TurkeyLira,_.Turkey,M.TurkmenistanManat,_.Turkmenistan,M.UgandaShilling,_.Uganda,M.UkraineHryvnia,_.Ukraine,M.UnitedArabEmiratesDirham,_.UnitedArabEmirates,M.UnitedKingdomPound,_.UnitedKingdom,M.UnitedStatesDollar,_.UnitedStates,M.UruguayPeso,_.Uruguay,M.UzbekistanSom,_.Uzbekistan,M.VanuatuVatu,_.Vanuatu,M.VenezuelaBolivar,_.Venezuela,M.VietnamDong,_.Vietnam,M.YemenRial,_.Yemen,M.ZambiaKwacha,_.Zambia,M.ZimbabweDollar,_.Zimbabwe;var Vo;(function(a){a.Bitcoin="BTC",a.Ethereum="ETH",a.Litecoin="LTC",a.Ripple="XRP",a.Dash="DASH",a.Zcash="ZEC",a.Dogecoin="DOGE",a.Monero="XMR",a.BitcoinCash="BCH",a.EOS="EOS",a.Binance="BNB",a.Stellar="XLM",a.Cardano="ADA",a.IOTA="IOTA",a.Tezos="XTZ",a.NEO="NEO",a.TRON="TRX",a.EOSClassic="EOSC",a.Ontology="ONT",a.VeChain="VEN",a.QTUM="QTUM",a.Lisk="LSK",a.Waves="WAVES",a.OmiseGO="OMG",a.Zilliqa="ZIL",a.BitcoinGold="BTG",a.Decred="DCR",a.Stratis="STRAT",a.Populous="PPT",a.Augur="REP",a.Golem="GNT",a.Siacoin="SC",a.BasicAttentionToken="BAT",a.ZCoin="XZC",a.StratisHedged="SNT",a.VeChainHedged="VEN",a.PowerLedger="POWR",a.WavesHedged="WAVE",a.ZilliqaHedged="ZRX",a.BitcoinDiamond="BCD",a.DigiByte="DGB",a.DigiByteHedged="DGB",a.Bytecoin="BCN",a.BytecoinHedged="BCN"})(Vo||(Vo={}));var v;(function(a){a.Afrikaans="af",a.Albanian="sq",a.Amharic="am",a.Arabic="ar",a.Armenian="hy",a.Azerbaijani="az",a.Bashkir="ba",a.Basque="eu",a.Belarusian="be",a.Bengali="bn",a.Berber="ber",a.Bhutani="dz",a.Bihari="bh",a.Bislama="bi",a.Bosnian="bs",a.Breten="br",a.Bulgarian="bg",a.Burmese="my",a.Cantonese="yue",a.Catalan="ca",a.Chinese="zh",a.Chuvash="cv",a.Corsican="co",a.Croatian="hr",a.Czech="cs",a.Danish="da",a.Dari="prs",a.Divehi="dv",a.Dutch="nl",a.English="en",a.Esperanto="eo",a.Estonian="et",a.Faroese="fo",a.Farsi="fa",a.Filipino="fil",a.Finnish="fi",a.French="fr",a.Frisian="fy",a.Galician="gl",a.Georgian="ka",a.German="de",a.Greek="el",a.Greenlandic="kl",a.Gujarati="gu",a.Haitian="ht",a.Hausa="ha",a.Hebrew="he",a.Hindi="hi",a.Hungarian="hu",a.Icelandic="is",a.Igbo="ig",a.Indonesian="id",a.Irish="ga",a.Italian="it",a.Japanese="ja",a.Javanese="jv",a.Kannada="kn",a.Karelian="krl",a.Kazakh="kk",a.Khmer="km",a.Komi="kv",a.Konkani="kok",a.Korean="ko",a.Kurdish="ku",a.Kyrgyz="ky",a.Lao="lo",a.Latin="la",a.Latvian="lv",a.Lithuanian="lt",a.Luxembourgish="lb",a.Ossetian="os",a.Macedonian="mk",a.Malagasy="mg",a.Malay="ms",a.Malayalam="ml",a.Maltese="mt",a.Maori="mi",a.Marathi="mr",a.Mari="mhr",a.Mongolian="mn",a.Montenegrin="me",a.Nepali="ne",a.NorthernSotho="nso",a.Norwegian="no",a.NorwegianBokmal="nb",a.NorwegianNynorsk="nn",a.Oriya="or",a.Pashto="ps",a.Persian="fa",a.Polish="pl",a.Portuguese="pt",a.Punjabi="pa",a.Quechua="qu",a.Romanian="ro",a.Russian="ru",a.Sakha="sah",a.Sami="se",a.Samoan="sm",a.Sanskrit="sa",a.Scots="gd",a.Serbian="sr",a.SerbianCyrillic="sr-Cyrl",a.Sesotho="st",a.Shona="sn",a.Sindhi="sd",a.Sinhala="si",a.Slovak="sk",a.Slovenian="sl",a.Somali="so",a.Spanish="es",a.Sudanese="su",a.Sutu="sx",a.Swahili="sw",a.Swedish="sv",a.Syriac="syr",a.Tagalog="tl",a.Tajik="tg",a.Tamazight="tmh",a.Tamil="ta",a.Tatar="tt",a.Telugu="te",a.Thai="th",a.Tibetan="bo",a.Tsonga="ts",a.Tswana="tn",a.Turkish="tr",a.Turkmen="tk",a.Ukrainian="uk",a.Urdu="ur",a.Uzbek="uz",a.Vietnamese="vi",a.Welsh="cy",a.Xhosa="xh",a.Yiddish="yi",a.Yoruba="yo",a.Zulu="zu"})(v||(v={}));var n;(function(a){a.Afrikaans="af",a.AfrikaansSouthAfrica="af-ZA",a.Albanian="sq",a.AlbanianAlbania="sq-AL",a.Amharic="am",a.AmharicEthiopia="am-ET",a.Arabic="ar",a.ArabicAlgeria="ar-DZ",a.ArabicBahrain="ar-BH",a.ArabicEgypt="ar-EG",a.ArabicIraq="ar-IQ",a.ArabicJordan="ar-JO",a.ArabicKuwait="ar-KW",a.ArabicLebanon="ar-LB",a.ArabicLibya="ar-LY",a.ArabicMorocco="ar-MA",a.ArabicOman="ar-OM",a.ArabicQatar="ar-QA",a.ArabicSaudiArabia="ar-SA",a.ArabicSyria="ar-SY",a.ArabicTunisia="ar-TN",a.ArabicUnitedArabEmirates="ar-AE",a.ArabicYemen="ar-YE",a.Armenian="hy",a.ArmenianArmenia="hy-AM",a.Azerbaijani="az",a.AzerbaijaniAzerbaijan="az-AZ",a.AzerbaijaniCyrillicAzerbaijan="az-Cyrl-AZ",a.Bashkir="ba",a.Basque="eu",a.BasqueSpain="eu-ES",a.Belarusian="be",a.BelarusianBelarus="be-BY",a.Bengali="bn",a.BengaliBangladesh="bn-BD",a.BengaliIndia="bn-IN",a.Berber="ber",a.Bhutani="dz",a.BhutaniBhutan="dz-BT",a.Bosnian="bs",a.BosnianBosniaAndHerzegovina="bs-BA",a.Breton="br",a.Bulgarian="bg",a.BulgarianBosniaAndHerzegovina="bg-BG",a.BulgarianBulgaria="bg-BG",a.Burmese="my",a.BurmeseMyanmar="my-MM",a.Cantonese="yue",a.CantoneseHongKong="yue-HK",a.Catalan="ca",a.CatalanSpain="ca-ES",a.Chechen="ce",a.Cherokee="chr",a.Chinese="zh",a.ChineseSimplified="zh-Hans",a.ChineseSimplifiedChina="zh-Hans-CN",a.ChineseSimplifiedHongKong="zh-Hans-HK",a.ChineseSimplifiedMacau="zh-Hans-MO",a.ChineseSimplifiedSingapore="zh-Hans-SG",a.ChineseTraditional="zh-Hant",a.ChineseTraditionalHongKong="zh-Hant-HK",a.ChineseTraditionalMacau="zh-Hant-MO",a.ChineseTraditionalSingapore="zh-Hant-SG",a.ChineseTraditionalTaiwan="zh-Hant-TW",a.Chuvash="cv",a.CorsicanFrance="co-FR",a.Croatian="hr",a.CroatianBosniaAndHerzegovina="hr-BA",a.CroatianCroatia="hr-HR",a.Czech="cs",a.CzechCzechRepublic="cs-CZ",a.Danish="da",a.DanishDenmark="da-DK",a.Dari="prs",a.DariAfghanistan="prs-AF",a.Divehi="dv",a.DivehiMaldives="dv-MV",a.Dutch="nl",a.DutchBelgium="nl-BE",a.DutchNetherlands="nl-NL",a.English="en",a.EnglishAustralia="en-AU",a.EnglishBelgium="en-BE",a.EnglishBelize="en-BZ",a.EnglishCanada="en-CA",a.EnglishCaribbean="en-029",a.EnglishIreland="en-IE",a.EnglishJamaica="en-JM",a.EnglishNewZealand="en-NZ",a.EnglishPhilippines="en-PH",a.EnglishSingapore="en-SG",a.EnglishSouthAfrica="en-ZA",a.EnglishTrinidadAndTobago="en-TT",a.EnglishUnitedKingdom="en-GB",a.EnglishUnitedStates="en-US",a.EnglishZimbabwe="en-ZW",a.Esperanto="eo",a.Estonian="et",a.EstonianEstonia="et-EE",a.Faroese="fo",a.FaroeseFaroeIslands="fo-FO",a.Farsi="fa",a.FarsiIran="fa-IR",a.Filipino="fil",a.FilipinoPhilippines="fil-PH",a.Finnish="fi",a.FinnishFinland="fi-FI",a.French="fr",a.FrenchBelgium="fr-BE",a.FrenchCanada="fr-CA",a.FrenchFrance="fr-FR",a.FrenchLuxembourg="fr-LU",a.FrenchMonaco="fr-MC",a.FrenchReunion="fr-RE",a.FrenchSwitzerland="fr-CH",a.Frisian="fy",a.FrisianNetherlands="fy-NL",a.Galician="gl",a.GalicianSpain="gl-ES",a.Georgian="ka",a.GeorgianGeorgia="ka-GE",a.German="de",a.GermanAustria="de-AT",a.GermanBelgium="de-BE",a.GermanGermany="de-DE",a.GermanLiechtenstein="de-LI",a.GermanLuxembourg="de-LU",a.GermanSwitzerland="de-CH",a.Greenlandic="kl",a.GreenlandicGreenland="kl-GL",a.Greek="el",a.GreekGreece="el-GR",a.Gujarati="gu",a.GujaratiIndia="gu-IN",a.Haitian="ht",a.Hausa="ha",a.HausaGhana="ha-GH",a.HausaNiger="ha-NE",a.HausaNigeria="ha-NG",a.Hebrew="he",a.HebrewIsrael="he-IL",a.Hindi="hi",a.HindiIndia="hi-IN",a.Hungarian="hu",a.HungarianHungary="hu-HU",a.Icelandic="is",a.IcelandicIceland="is-IS",a.Igbo="ig",a.IgboNigeria="ig-NG",a.Indonesian="id",a.IndonesianIndonesia="id-ID",a.Irish="ga",a.IrishIreland="ga-IE",a.Italian="it",a.ItalianItaly="it-IT",a.ItalianSwitzerland="it-CH",a.Japanese="ja",a.JapaneseJapan="ja-JP",a.Javanese="jv",a.Kannada="kn",a.KannadaIndia="kn-IN",a.Karelian="krl",a.Kazakh="kk",a.KazakhKazakhstan="kk-KZ",a.Khmer="km",a.KhmerCambodia="km-KH",a.KinyarwandaRwanda="rw-RW",a.Komi="kv",a.Konkani="kok",a.KonkaniIndia="kok-IN",a.Korean="ko",a.KoreanSouthKorea="ko-KR",a.Kurdish="ku",a.KurdishIraq="ku-IQ",a.KurdishTurkey="ku-TR",a.Kyrgyz="ky",a.KyrgyzKyrgyzstan="ky-KG",a.Lao="lo",a.LaoLaos="lo-LA",a.Latin="la",a.Latvian="lv",a.LatvianLatvia="lv-LV",a.Lithuanian="lt",a.LithuanianLithuania="lt-LT",a.Luxembourgish="lb",a.LuxembourgishBelgium="lb-LU",a.LuxembourgishLuxembourg="lb-LU",a.Macedonian="mk",a.MacedonianNorthMacedonia="mk-MK",a.Malagasy="mg",a.Malay="ms",a.MalayBrunei="ms-BN",a.MalayIndia="ms-IN",a.MalayMalaysia="ms-MY",a.MalaySingapore="ms-SG",a.Malayalam="ml",a.MalayalamIndia="ml-IN",a.Maltese="mt",a.MalteseMalta="mt-MT",a.Maori="mi",a.MaoriNewZealand="mi-NZ",a.Marathi="mr",a.MarathiIndia="mr-IN",a.Mari="chm",a.Mongolian="mn",a.MongolianMongolia="mn-MN",a.Montenegrin="me",a.MontenegrinMontenegro="me-ME",a.Nepali="ne",a.NepaliNepal="ne-NP",a.NorthernSotho="ns",a.NorthernSothoSouthAfrica="ns-ZA",a.Norwegian="nb",a.NorwegianBokmalNorway="nb-NO",a.NorwegianNynorskNorway="nn-NO",a.Oriya="or",a.OriyaIndia="or-IN",a.Ossetian="os",a.Pashto="ps",a.PashtoAfghanistan="ps-AF",a.Persian="fa",a.PersianIran="fa-IR",a.Polish="pl",a.PolishPoland="pl-PL",a.Portuguese="pt",a.PortugueseBrazil="pt-BR",a.PortuguesePortugal="pt-PT",a.Punjabi="pa",a.PunjabiIndia="pa-IN",a.PunjabiPakistan="pa-PK",a.Quechua="qu",a.QuechuaBolivia="qu-BO",a.QuechuaEcuador="qu-EC",a.QuechuaPeru="qu-PE",a.Romanian="ro",a.RomanianRomania="ro-RO",a.Russian="ru",a.RussianKazakhstan="ru-KZ",a.RussianKyrgyzstan="ru-KG",a.RussianRussia="ru-RU",a.RussianUkraine="ru-UA",a.Sakha="sah",a.Sanskrit="sa",a.SanskritIndia="sa-IN",a.Sami="se",a.SamiNorway="se-NO",a.SamiSweden="se-SE",a.SamiFinland="se-FI",a.Samoan="sm",a.SamoanSamoa="sm-WS",a.Scots="gd",a.Serbian="sr",a.SerbianBosniaAndHerzegovina="sr-BA",a.SerbianSerbiaAndMontenegro="sr-SP",a.SerbianCyrillic="sr-SP-Cyrl",a.SerbianCyrillicBosniaAndHerzegovina="sr-Cyrl-BA",a.SerbianCyrillicSerbiaAndMontenegro="sr-Cyrl-SP",a.Sesotho="st",a.SesothoSouthAfrica="st-ZA",a.Shona="sn",a.ShonaZimbabwe="sn-ZW",a.Sindhi="sd",a.SindhiPakistan="sd-PK",a.Sinhala="si",a.SinhalaSriLanka="si-LK",a.Slovak="sk",a.SlovakSlovakia="sk-SK",a.Slovenian="sl",a.SlovenianSlovenia="sl-SI",a.Somali="so",a.SomaliSomalia="so-SO",a.Spanish="es",a.SpanishArgentina="es-AR",a.SpanishBolivia="es-BO",a.SpanishChile="es-CL",a.SpanishColombia="es-CO",a.SpanishCostaRica="es-CR",a.SpanishCuba="es-CU",a.SpanishDominicanRepublic="es-DO",a.SpanishEcuador="es-EC",a.SpanishEquatorialGuinea="es-GQ",a.SpanishElSalvador="es-SV",a.SpanishGuatemala="es-GT",a.SpanishHonduras="es-HN",a.SpanishMexico="es-MX",a.SpanishNicaragua="es-NI",a.SpanishPanama="es-PA",a.SpanishParaguay="es-PY",a.SpanishPeru="es-PE",a.SpanishPuertoRico="es-PR",a.SpanishSpain="es-ES",a.SpanishUnitedStates="es-US",a.SpanishUruguay="es-UY",a.SpanishVenezuela="es-VE",a.Sudanese="su",a.Sutu="st",a.SutuSouthAfrica="st-ZA",a.Swahili="sw",a.SwahiliKenya="sw-KE",a.Swedish="sv",a.SwedishFinland="sv-FI",a.SwedishSweden="sv-SE",a.Syriac="syr",a.SyriacSyria="syr-SY",a.Tajik="tg",a.TajikTajikistan="tg-TJ",a.Tagalog="tl",a.TagalogPhilippines="tl-PH",a.Tamazight="tmh",a.Tamil="ta",a.TamilIndia="ta-IN",a.Tatar="tt",a.Telugu="te",a.TeluguIndia="te-IN",a.Thai="th",a.ThaiThailand="th-TH",a.Tibetan="bo",a.TibetanBhutan="bo-BT",a.TibetanChina="bo-CN",a.TibetanIndia="bo-IN",a.Tsonga="ts",a.Tswana="tn",a.TswanaSouthAfrica="tn-ZA",a.Turkish="tr",a.TurkishTurkey="tr-TR",a.Turkmen="tk",a.Ukrainian="uk",a.UkrainianUkraine="uk-UA",a.Urdu="ur",a.UrduAfghanistan="ur-AF",a.UrduIndia="ur-IN",a.UrduPakistan="ur-PK",a.Uzbek="uz",a.UzbekCyrillic="uz-Cyrl-UZ",a.UzbekLatin="uz-Latn-UZ",a.UzbekUzbekistan="uz-UZ",a.Vietnamese="vi",a.VietnameseVietnam="vi-VN",a.Welsh="cy",a.WelshUnitedKingdom="cy-GB",a.Xhosa="xh",a.XhosaSouthAfrica="xh-ZA",a.Yiddish="yi",a.Yoruba="yo",a.YorubaNigeria="yo-NG",a.ZhuyinMandarinChina="yue-Hant-CN",a.Zulu="zu",a.ZuluSouthAfrica="zu-ZA"})(n||(n={}));var f;(function(a){a.AfricaAbidjan="Africa/Abidjan",a.AfricaAccra="Africa/Accra",a.AfricaAddisAbaba="Africa/Addis_Ababa",a.AfricaAlgiers="Africa/Algiers",a.AfricaAsmara="Africa/Asmara",a.AfricaBamako="Africa/Bamako",a.AfricaBangui="Africa/Bangui",a.AfricaBanjul="Africa/Banjul",a.AfricaBissau="Africa/Bissau",a.AfricaBlantyre="Africa/Blantyre",a.AfricaBrazzaville="Africa/Brazzaville",a.AfricaBujumbura="Africa/Bujumbura",a.AfricaCairo="Africa/Cairo",a.AfricaCasablanca="Africa/Casablanca",a.AfricaCeuta="Africa/Ceuta",a.AfricaConakry="Africa/Conakry",a.AfricaDakar="Africa/Dakar",a.AfricaDarEsSalaam="Africa/Dar_es_Salaam",a.AfricaDjibouti="Africa/Djibouti",a.AfricaDouala="Africa/Douala",a.AfricaElAaiun="Africa/El_Aaiun",a.AfricaFreetown="Africa/Freetown",a.AfricaGaborone="Africa/Gaborone",a.AfricaHarare="Africa/Harare",a.AfricaJohannesburg="Africa/Johannesburg",a.AfricaJuba="Africa/Juba",a.AfricaKampala="Africa/Kampala",a.AfricaKhartoum="Africa/Khartoum",a.AfricaKigali="Africa/Kigali",a.AfricaKinshasa="Africa/Kinshasa",a.AfricaLagos="Africa/Lagos",a.AfricaLibreville="Africa/Libreville",a.AfricaLome="Africa/Lome",a.AfricaLuanda="Africa/Luanda",a.AfricaLubumbashi="Africa/Lubumbashi",a.AfricaLusaka="Africa/Lusaka",a.AfricaMalabo="Africa/Malabo",a.AfricaMaputo="Africa/Maputo",a.AfricaMaseru="Africa/Maseru",a.AfricaMbabane="Africa/Mbabane",a.AfricaMogadishu="Africa/Mogadishu",a.AfricaMonrovia="Africa/Monrovia",a.AfricaNairobi="Africa/Nairobi",a.AfricaNdjamena="Africa/Ndjamena",a.AfricaNiamey="Africa/Niamey",a.AfricaNouakchott="Africa/Nouakchott",a.AfricaOuagadougou="Africa/Ouagadougou",a.AfricaPortoNovo="Africa/Porto-Novo",a.AfricaSaoTome="Africa/Sao_Tome",a.AfricaTripoli="Africa/Tripoli",a.AfricaTunis="Africa/Tunis",a.AfricaWindhoek="Africa/Windhoek",a.AmericaAdak="America/Adak",a.AmericaAnchorage="America/Anchorage",a.AmericaAnguilla="America/Anguilla",a.AmericaAntigua="America/Antigua",a.AmericaAraguaina="America/Araguaina",a.AmericaArgentinaBuenosAires="America/Argentina/Buenos_Aires",a.AmericaArgentinaCatamarca="America/Argentina/Catamarca",a.AmericaArgentinaCordoba="America/Argentina/Cordoba",a.AmericaArgentinaJujuy="America/Argentina/Jujuy",a.AmericaArgentinaLaRioja="America/Argentina/La_Rioja",a.AmericaArgentinaMendoza="America/Argentina/Mendoza",a.AmericaArgentinaRioGallegos="America/Argentina/Rio_Gallegos",a.AmericaArgentinaSalta="America/Argentina/Salta",a.AmericaArgentinaSanJuan="America/Argentina/San_Juan",a.AmericaArgentinaSanLuis="America/Argentina/San_Luis",a.AmericaArgentinaTucuman="America/Argentina/Tucuman",a.AmericaArgentinaUshuaia="America/Argentina/Ushuaia",a.AmericaAruba="America/Aruba",a.AmericaAsuncion="America/Asuncion",a.AmericaAtikokan="America/Atikokan",a.AmericaAtka="America/Atka",a.AmericaBahia="America/Bahia",a.AmericaBahiaBanderas="America/Bahia_Banderas",a.AmericaBarbados="America/Barbados",a.AmericaBelem="America/Belem",a.AmericaBelize="America/Belize",a.AmericaBlancSablon="America/Blanc-Sablon",a.AmericaBoaVista="America/Boa_Vista",a.AmericaBogota="America/Bogota",a.AmericaBoise="America/Boise",a.AmericaCambridgeBay="America/Cambridge_Bay",a.AmericaCampoGrande="America/Campo_Grande",a.AmericaCancun="America/Cancun",a.AmericaCaracas="America/Caracas",a.AmericaCayenne="America/Cayenne",a.AmericaCayman="America/Cayman",a.AmericaChicago="America/Chicago",a.AmericaChihuahua="America/Chihuahua",a.AmericaCoralHarbour="America/Coral_Harbour",a.AmericaCordoba="America/Cordoba",a.AmericaCostaRica="America/Costa_Rica",a.AmericaCreston="America/Creston",a.AmericaCuiaba="America/Cuiaba",a.AmericaCuracao="America/Curacao",a.AmericaDanmarkshavn="America/Danmarkshavn",a.AmericaDawson="America/Dawson",a.AmericaDawsonCreek="America/Dawson_Creek",a.AmericaDenver="America/Denver",a.AmericaDetroit="America/Detroit",a.AmericaDominica="America/Dominica",a.AmericaEdmonton="America/Edmonton",a.AmericaEirunepe="America/Eirunepe",a.AmericaElSalvador="America/El_Salvador",a.AmericaFortaleza="America/Fortaleza",a.AmericaGlaceBay="America/Glace_Bay",a.AmericaGodthab="America/Godthab",a.AmericaGooseBay="America/Goose_Bay",a.AmericaGrandTurk="America/Grand_Turk",a.AmericaGrenada="America/Grenada",a.AmericaGuadeloupe="America/Guadeloupe",a.AmericaGuatemala="America/Guatemala",a.AmericaGuayaquil="America/Guayaquil",a.AmericaGuyana="America/Guyana",a.AmericaHalifax="America/Halifax",a.AmericaHavana="America/Havana",a.AmericaHermosillo="America/Hermosillo",a.AmericaIndianaIndianapolis="America/Indiana/Indianapolis",a.AmericaIndianaKnox="America/Indiana/Knox",a.AmericaIndianaMarengo="America/Indiana/Marengo",a.AmericaIndianaPetersburg="America/Indiana/Petersburg",a.AmericaIndianaTellCity="America/Indiana/Tell_City",a.AmericaIndianaVevay="America/Indiana/Vevay",a.AmericaIndianaVincennes="America/Indiana/Vincennes",a.AmericaIndianaWinamac="America/Indiana/Winamac",a.AmericaInuvik="America/Inuvik",a.AmericaIqaluit="America/Iqaluit",a.AmericaJamaica="America/Jamaica",a.AmericaJuneau="America/Juneau",a.AmericaKentuckyLouisville="America/Kentucky/Louisville",a.AmericaKentuckyMonticello="America/Kentucky/Monticello",a.AmericaKralendijk="America/Kralendijk",a.AmericaLaPaz="America/La_Paz",a.AmericaLima="America/Lima",a.AmericaLosAngeles="America/Los_Angeles",a.AmericaLouisville="America/Louisville",a.AmericaLowerPrinces="America/Lower_Princes",a.AmericaMaceio="America/Maceio",a.AmericaManagua="America/Managua",a.AmericaManaus="America/Manaus",a.AmericaMarigot="America/Marigot",a.AmericaMartinique="America/Martinique",a.AmericaMatamoros="America/Matamoros",a.AmericaMazatlan="America/Mazatlan",a.AmericaMenominee="America/Menominee",a.AmericaMerida="America/Merida",a.AmericaMetlakatla="America/Metlakatla",a.AmericaMexicoCity="America/Mexico_City",a.AmericaMiquelon="America/Miquelon",a.AmericaMoncton="America/Moncton",a.AmericaMonterrey="America/Monterrey",a.AmericaMontevideo="America/Montevideo",a.AmericaMontserrat="America/Montserrat",a.AmericaMontreal="America/Montreal",a.AmericaNassau="America/Nassau",a.AmericaNewYork="America/New_York",a.AmericaNipigon="America/Nipigon",a.AmericaNome="America/Nome",a.AmericaNoronha="America/Noronha",a.AmericaNorthDakotaBeulah="America/North_Dakota/Beulah",a.AmericaNorthDakotaCenter="America/North_Dakota/Center",a.AmericaNorthDakotaNewSalem="America/North_Dakota/New_Salem",a.AmericaOjinaga="America/Ojinaga",a.AmericaPanama="America/Panama",a.AmericaPangnirtung="America/Pangnirtung",a.AmericaParamaribo="America/Paramaribo",a.AmericaPhoenix="America/Phoenix",a.AmericaPortAuPrince="America/Port-au-Prince",a.AmericaPortOfSpain="America/Port_of_Spain",a.AmericaPortoVelho="America/Porto_Velho",a.AmericaPuertoRico="America/Puerto_Rico",a.AmericaRainyRiver="America/Rainy_River",a.AmericaRankinInlet="America/Rankin_Inlet",a.AmericaRecife="America/Recife",a.AmericaRegina="America/Regina",a.AmericaResolute="America/Resolute",a.AmericaRioBranco="America/Rio_Branco",a.AmericaSantaIsabel="America/Santa_Isabel",a.AmericaSantarem="America/Santarem",a.AmericaSantiago="America/Santiago",a.AmericaSantoDomingo="America/Santo_Domingo",a.AmericaSaoPaulo="America/Sao_Paulo",a.AmericaScoresbysund="America/Scoresbysund",a.AmericaShiprock="America/Shiprock",a.AmericaSitka="America/Sitka",a.AmericaStBarthelemy="America/St_Barthelemy",a.AmericaStJohns="America/St_Johns",a.AmericaStKitts="America/St_Kitts",a.AmericaStLucia="America/St_Lucia",a.AmericaStThomas="America/St_Thomas",a.AmericaStVincent="America/St_Vincent",a.AmericaSwiftCurrent="America/Swift_Current",a.AmericaTegucigalpa="America/Tegucigalpa",a.AmericaThule="America/Thule",a.AmericaThunderBay="America/Thunder_Bay",a.AmericaTijuana="America/Tijuana",a.AmericaToronto="America/Toronto",a.AmericaTortola="America/Tortola",a.AmericaVancouver="America/Vancouver",a.AmericaWhitehorse="America/Whitehorse",a.AmericaWinnipeg="America/Winnipeg",a.AmericaYakutat="America/Yakutat",a.AmericaYellowknife="America/Yellowknife",a.AntarcticaCasey="Antarctica/Casey",a.AntarcticaDavis="Antarctica/Davis",a.AntarcticaDumontDUrville="Antarctica/DumontDUrville",a.AntarcticaMacquarie="Antarctica/Macquarie",a.AntarcticaMawson="Antarctica/Mawson",a.AntarcticaMcMurdo="Antarctica/McMurdo",a.AntarcticaPalmer="Antarctica/Palmer",a.AntarcticaRothera="Antarctica/Rothera",a.AntarcticaSyowa="Antarctica/Syowa",a.AntarcticaTroll="Antarctica/Troll",a.AntarcticaVostok="Antarctica/Vostok",a.ArcticLongyearbyen="Arctic/Longyearbyen",a.AsiaAden="Asia/Aden",a.AsiaAlmaty="Asia/Almaty",a.AsiaAmman="Asia/Amman",a.AsiaAnadyr="Asia/Anadyr",a.AsiaAqtau="Asia/Aqtau",a.AsiaAqtobe="Asia/Aqtobe",a.AsiaAshgabat="Asia/Ashgabat",a.AsiaBaghdad="Asia/Baghdad",a.AsiaBahrain="Asia/Bahrain",a.AsiaBaku="Asia/Baku",a.AsiaBangkok="Asia/Bangkok",a.AsiaBarnaul="Asia/Barnaul",a.AsiaBeirut="Asia/Beirut",a.AsiaBishkek="Asia/Bishkek",a.AsiaBrunei="Asia/Brunei",a.AsiaChita="Asia/Chita",a.AsiaChoibalsan="Asia/Choibalsan",a.AsiaColombo="Asia/Colombo",a.AsiaDamascus="Asia/Damascus",a.AsiaDhaka="Asia/Dhaka",a.AsiaDili="Asia/Dili",a.AsiaDubai="Asia/Dubai",a.AsiaDushanbe="Asia/Dushanbe",a.AsiaFamagusta="Asia/Famagusta",a.AsiaGaza="Asia/Gaza",a.AsiaHebron="Asia/Hebron",a.AsiaHoChiMinh="Asia/Ho_Chi_Minh",a.AsiaHongKong="Asia/Hong_Kong",a.AsiaHovd="Asia/Hovd",a.AsiaIrkutsk="Asia/Irkutsk",a.AsiaJakarta="Asia/Jakarta",a.AsiaJayapura="Asia/Jayapura",a.AsiaJerusalem="Asia/Jerusalem",a.AsiaKabul="Asia/Kabul",a.AsiaKamchatka="Asia/Kamchatka",a.AsiaKarachi="Asia/Karachi",a.AsiaKathmandu="Asia/Kathmandu",a.AsiaKhandyga="Asia/Khandyga",a.AsiaKolkata="Asia/Kolkata",a.AsiaKrasnoyarsk="Asia/Krasnoyarsk",a.AsiaKualaLumpur="Asia/Kuala_Lumpur",a.AsiaKuching="Asia/Kuching",a.AsiaKuwait="Asia/Kuwait",a.AsiaMacau="Asia/Macau",a.AsiaMagadan="Asia/Magadan",a.AsiaMakassar="Asia/Makassar",a.AsiaManila="Asia/Manila",a.AsiaMuscat="Asia/Muscat",a.AsiaNicosia="Asia/Nicosia",a.AsiaNovokuznetsk="Asia/Novokuznetsk",a.AsiaNovosibirsk="Asia/Novosibirsk",a.AsiaOmsk="Asia/Omsk",a.AsiaOral="Asia/Oral",a.AsiaPhnomPenh="Asia/Phnom_Penh",a.AsiaPontianak="Asia/Pontianak",a.AsiaPyongyang="Asia/Pyongyang",a.AsiaQatar="Asia/Qatar",a.AsiaQyzylorda="Asia/Qyzylorda",a.AsiaRangoon="Asia/Rangoon",a.AsiaRiyadh="Asia/Riyadh",a.AsiaSakhalin="Asia/Sakhalin",a.AsiaSamarkand="Asia/Samarkand",a.AsiaSeoul="Asia/Seoul",a.AsiaShanghai="Asia/Shanghai",a.AsiaSingapore="Asia/Singapore",a.AsiaSrednekolymsk="Asia/Srednekolymsk",a.AsiaTaipei="Asia/Taipei",a.AsiaTashkent="Asia/Tashkent",a.AsiaTbilisi="Asia/Tbilisi",a.AsiaTehran="Asia/Tehran",a.AsiaThimphu="Asia/Thimphu",a.AsiaTokyo="Asia/Tokyo",a.AsiaTomsk="Asia/Tomsk",a.AsiaUlaanbaatar="Asia/Ulaanbaatar",a.AsiaUrumqi="Asia/Urumqi",a.AsiaUstNera="Asia/Ust-Nera",a.AsiaVientiane="Asia/Vientiane",a.AsiaVladivostok="Asia/Vladivostok",a.AsiaYakutsk="Asia/Yakutsk",a.AsiaYekaterinburg="Asia/Yekaterinburg",a.AsiaYerevan="Asia/Yerevan",a.AtlanticAzores="Atlantic/Azores",a.AtlanticBermuda="Atlantic/Bermuda",a.AtlanticCanary="Atlantic/Canary",a.AtlanticCapeVerde="Atlantic/Cape_Verde",a.AtlanticFaroe="Atlantic/Faroe",a.AtlanticMadeira="Atlantic/Madeira",a.AtlanticReykjavik="Atlantic/Reykjavik",a.AtlanticSouthGeorgia="Atlantic/South_Georgia",a.AtlanticStHelena="Atlantic/St_Helena",a.AtlanticStanley="Atlantic/Stanley",a.AustraliaAdelaide="Australia/Adelaide",a.AustraliaBrisbane="Australia/Brisbane",a.AustraliaBrokenHill="Australia/Broken_Hill",a.AustraliaCanberra="Australia/Canberra",a.AustraliaCurrie="Australia/Currie",a.AustraliaDarwin="Australia/Darwin",a.AustraliaEucla="Australia/Eucla",a.AustraliaHobart="Australia/Hobart",a.AustraliaLindeman="Australia/Lindeman",a.AustraliaLordHowe="Australia/Lord_Howe",a.AustraliaMelbourne="Australia/Melbourne",a.AustraliaPerth="Australia/Perth",a.AustraliaSydney="Australia/Sydney",a.EuropeAmsterdam="Europe/Amsterdam",a.EuropeAndorra="Europe/Andorra",a.EuropeAthens="Europe/Athens",a.EuropeBelgrade="Europe/Belgrade",a.EuropeBerlin="Europe/Berlin",a.EuropeBratislava="Europe/Bratislava",a.EuropeBrussels="Europe/Brussels",a.EuropeBucharest="Europe/Bucharest",a.EuropeBudapest="Europe/Budapest",a.EuropeBusingen="Europe/Busingen",a.EuropeChisinau="Europe/Chisinau",a.EuropeCopenhagen="Europe/Copenhagen",a.EuropeDublin="Europe/Dublin",a.EuropeGibraltar="Europe/Gibraltar",a.EuropeGuernsey="Europe/Guernsey",a.EuropeHelsinki="Europe/Helsinki",a.EuropeIsleOfMan="Europe/Isle_of_Man",a.EuropeIstanbul="Europe/Istanbul",a.EuropeJersey="Europe/Jersey",a.EuropeKaliningrad="Europe/Kaliningrad",a.EuropeKiev="Europe/Kiev",a.EuropeKirov="Europe/Kirov",a.EuropeLisbon="Europe/Lisbon",a.EuropeLjubljana="Europe/Ljubljana",a.EuropeLondon="Europe/London",a.EuropeLuxembourg="Europe/Luxembourg",a.EuropeMadrid="Europe/Madrid",a.EuropeMalta="Europe/Malta",a.EuropeMariehamn="Europe/Mariehamn",a.EuropeMinsk="Europe/Minsk",a.EuropeMonaco="Europe/Monaco",a.EuropeMoscow="Europe/Moscow",a.EuropeOslo="Europe/Oslo",a.EuropeParis="Europe/Paris",a.EuropePodgorica="Europe/Podgorica",a.EuropePrague="Europe/Prague",a.EuropeRiga="Europe/Riga",a.EuropeRome="Europe/Rome",a.EuropeSamara="Europe/Samara",a.EuropeSanMarino="Europe/San_Marino",a.EuropeSarajevo="Europe/Sarajevo",a.EuropeSimferopol="Europe/Simferopol",a.EuropeSkopje="Europe/Skopje",a.EuropeSofia="Europe/Sofia",a.EuropeStockholm="Europe/Stockholm",a.EuropeTallinn="Europe/Tallinn",a.EuropeTirane="Europe/Tirane",a.EuropeUzhgorod="Europe/Uzhgorod",a.EuropeVaduz="Europe/Vaduz",a.EuropeVatican="Europe/Vatican",a.EuropeVienna="Europe/Vienna",a.EuropeVilnius="Europe/Vilnius",a.EuropeVolgograd="Europe/Volgograd",a.EuropeWarsaw="Europe/Warsaw",a.EuropeZagreb="Europe/Zagreb",a.EuropeZaporozhye="Europe/Zaporozhye",a.EuropeZurich="Europe/Zurich",a.GMT="GMT",a.IndianAntananarivo="Indian/Antananarivo",a.IndianChagos="Indian/Chagos",a.IndianChristmas="Indian/Christmas",a.IndianCocos="Indian/Cocos",a.IndianComoro="Indian/Comoro",a.IndianKerguelen="Indian/Kerguelen",a.IndianMahe="Indian/Mahe",a.IndianMaldives="Indian/Maldives",a.IndianMauritius="Indian/Mauritius",a.IndianMayotte="Indian/Mayotte",a.IndianReunion="Indian/Reunion",a.PacificApia="Pacific/Apia",a.PacificAuckland="Pacific/Auckland",a.PacificBougainville="Pacific/Bougainville",a.PacificChatham="Pacific/Chatham",a.PacificChuuk="Pacific/Chuuk",a.PacificEaster="Pacific/Easter",a.PacificEfate="Pacific/Efate",a.PacificEnderbury="Pacific/Enderbury",a.PacificFakaofo="Pacific/Fakaofo",a.PacificFiji="Pacific/Fiji",a.PacificFunafuti="Pacific/Funafuti",a.PacificGalapagos="Pacific/Galapagos",a.PacificGambier="Pacific/Gambier",a.PacificGuadalcanal="Pacific/Guadalcanal",a.PacificGuam="Pacific/Guam",a.PacificHonolulu="Pacific/Honolulu",a.PacificJohnston="Pacific/Johnston",a.PacificKiritimati="Pacific/Kiritimati",a.PacificKosrae="Pacific/Kosrae",a.PacificKwajalein="Pacific/Kwajalein",a.PacificMajuro="Pacific/Majuro",a.PacificMarquesas="Pacific/Marquesas",a.PacificMidway="Pacific/Midway",a.PacificNauru="Pacific/Nauru",a.PacificNiue="Pacific/Niue",a.PacificNorfolk="Pacific/Norfolk",a.PacificNoumea="Pacific/Noumea",a.PacificPagoPago="Pacific/Pago_Pago",a.PacificPalau="Pacific/Palau",a.PacificPitcairn="Pacific/Pitcairn",a.PacificPohnpei="Pacific/Pohnpei",a.PacificPonape="Pacific/Ponape",a.PacificPortMoresby="Pacific/Port_Moresby",a.PacificRarotonga="Pacific/Rarotonga",a.PacificSaipan="Pacific/Saipan",a.PacificSamoa="Pacific/Samoa",a.PacificTahiti="Pacific/Tahiti",a.PacificTarawa="Pacific/Tarawa",a.PacificTongatapu="Pacific/Tongatapu",a.PacificTruk="Pacific/Truk",a.PacificWake="Pacific/Wake",a.PacificWallis="Pacific/Wallis",a.PacificYap="Pacific/Yap"})(f||(f={}));var m;(function(a){a.UTC_MINUS_12="UTC-12",a.UTC_MINUS_11_30="UTC-11:30",a.UTC_MINUS_11="UTC-11",a.UTC_MINUS_10_30="UTC-10:30",a.UTC_MINUS_10="UTC-10",a.UTC_MINUS_9_30="UTC-9:30",a.UTC_MINUS_9="UTC-09",a.UTC_MINUS_8_45="UTC-8:45",a.UTC_MINUS_8="UTC-08",a.UTC_MINUS_7="UTC-07",a.UTC_MINUS_6_30="UTC-6:30",a.UTC_MINUS_6="UTC-06",a.UTC_MINUS_5_45="UTC-5:45",a.UTC_MINUS_5_30="UTC-5:30",a.UTC_MINUS_5="UTC-05",a.UTC_MINUS_4_30="UTC-4:30",a.UTC_MINUS_4="UTC-04",a.UTC_MINUS_3_30="UTC-3:30",a.UTC_MINUS_3="UTC-03",a.UTC_MINUS_2_30="UTC-2:30",a.UTC_MINUS_2="UTC-02",a.UTC_MINUS_1="UTC-01",a.UTC_0="UTC+00",a.UTC_PLUS_1="UTC+01",a.UTC_PLUS_2="UTC+02",a.UTC_PLUS_3="UTC+03",a.UTC_PLUS_3_30="UTC+3:30",a.UTC_PLUS_4="UTC+04",a.UTC_PLUS_4_30="UTC+4:30",a.UTC_PLUS_5="UTC+05",a.UTC_PLUS_5_30="UTC+5:30",a.UTC_PLUS_5_45="UTC+5:45",a.UTC_PLUS_6="UTC+06",a.UTC_PLUS_6_30="UTC+6:30",a.UTC_PLUS_7="UTC+07",a.UTC_PLUS_8="UTC+08",a.UTC_PLUS_8_45="UTC+8:45",a.UTC_PLUS_9="UTC+09",a.UTC_PLUS_9_30="UTC+9:30",a.UTC_PLUS_10="UTC+10",a.UTC_PLUS_10_30="UTC+10:30",a.UTC_PLUS_11="UTC+11",a.UTC_PLUS_11_30="UTC+11:30",a.UTC_PLUS_12="UTC+12",a.UTC_PLUS_12_45="UTC+12:45",a.UTC_PLUS_13="UTC+13",a.UTC_PLUS_13_45="UTC+13:45",a.UTC_PLUS_14="UTC+14"})(m||(m={}));var c;(function(a){a.AcreTime="ACT",a.AfghanistanTime="AFT",a.AIXCentralEuropeanTime="DFT",a.AlaskaDaylightTime="AKDT",a.AlaskaStandardTime="AKST",a.AlmaAtaTime="ALMT",a.AmazonSummerTime="AMST",a.AmazonTime="AMT",a.AnadyrTime="ANAT",a.AqtobeTime="AQTT",a.ArabiaStandardTime="AST",a.ArgentinaTime="ART",a.ArmeniaTime="AMT",a.ASEANCommonTime="ASEAN",a.AtlanticDaylightTime="ADT",a.AtlanticStandardTime="AST",a.AustralianCentralDaylightSavingTime="ACDT",a.AustralianCentralStandardTime="ACST",a.AustralianCentralWesternStandardTime="ACWST",a.AustralianEasternDaylightSavingTime="AEDT",a.AustralianEasternStandardTime="AEST",a.AustralianEasternTime="AET",a.AustralianWesternStandardTime="AWST",a.AzerbaijanTime="AZT",a.AzoresStandardTime="AZOT",a.AzoresSummerTime="AZOST",a.BakerIslandTime="BIT",a.BangladeshStandardTime="BST",a.BhutanTime="BTT",a.BoliviaTime="BOT",a.BougainvilleStandardTime="BST",a.BrasiliaSummerTime="BRST",a.BrasiliaTime="BRT",a.BritishIndianOceanTime="BIOT",a.BritishSummerTime="BST",a.BruneiTime="BNT",a.CapeVerdeTime="CVT",a.CentralAfricaTime="CAT",a.CentralDaylightTime="CDT",a.CentralEuropeanSummerTime="CEST",a.CentralEuropeanTime="CET",a.CentralIndonesiaTime="WITA",a.CentralStandardTime="CST",a.CentralTime="CT",a.CentralWesternStandardTime="CWST",a.ChamorroStandardTime="CHST",a.ChathamDaylightTime="CHADT",a.ChathamStandardTime="CHAST",a.ChileStandardTime="CLT",a.ChileSummerTime="CLST",a.ChinaStandardTime="CST",a.ChoibalsanStandardTime="CHOT",a.ChoibalsanSummerTime="CHOST",a.ChristmasIslandTime="CXT",a.ChuukTime="CHUT",a.ClipptertonIslandStandardTime="CIST",a.CocosIslandsTime="CCT",a.ColombiaSummerTime="COST",a.ColombiaTime="COT",a.CookIslandTime="CKT",a.CoordinatedUniversalTime="UTC",a.CubaDaylightTime="CDT",a.CubaStandardTime="CST",a.DavisTime="DAVT",a.DumontDUrvilleTime="DDUT",a.EastAfricaTime="EAT",a.EasterIslandStandardTime="EAST",a.EasterIslandSummerTime="EASST",a.EasternCaribbeanTime="ECT",a.EasternDaylightTime="EDT",a.EasternEuropeanSummerTime="EEST",a.EasternEuropeanTime="EET",a.EasternGreenlandSummerTime="EGST",a.EasternGreenlandTime="EGT",a.EasternIndonesianTime="WIT",a.EasternStandardTime="EST",a.EasternTime="ET",a.EcuadorTime="ECT",a.FalklandIslandsSummerTime="FKST",a.FalklandIslandsTime="FKT",a.FernandoDeNoronhaTime="FNT",a.FijiTime="FJT",a.FrenchGuianaTime="GFT",a.FrenchSouthernAndAntarcticTime="TFT",a.FurtherEasternEuropeanTime="FET",a.GalapagosTime="GALT",a.GambierIslandTime="GIT",a.GambierIslandsTime="GAMT",a.GeorgiaStandardTime="GET",a.GilbertIslandTime="GILT",a.GreenwichMeanTime="GMT",a.GulfStandardTime="GST",a.GuyanaTime="GYT",a.HawaiiAleutianDaylightTime="HDT",a.HawaiiAleutianStandardTime="HST",a.HeardAndMcDonaldIslandsTime="HMT",a.HeureAvanceeDEuropeCentraleTime="HAEC",a.HongKongTime="HKT",a.HovdSummerTime="HOVST",a.HovdTime="HOVT",a.IndianOceanTime="IOT",a.IndianStandardTime="IST",a.IndochinaTime="ICT",a.InternationalDayLineWestTime="IDLW",a.IranDaylightTime="IRDT",a.IranStandardTime="IRST",a.IrishStandardTime="IST",a.IrkutskSummerTime="IRKST",a.IrkutskTime="IRKT",a.IsraelDaylightTime="IDT",a.IsraelStandardTime="IST",a.JapanStandardTime="JST",a.KaliningradTime="KALT",a.KamchatkaTime="KAMT",a.KoreaStandardTime="KST",a.KosraeTime="KOST",a.KrasnoyarskSummerTime="KRAST",a.KrasnoyarskTime="KRAT",a.KyrgyzstanTime="KGT",a.LineIslandsTime="LINT",a.KazakhstanStandardTime="KAST",a.LordHoweStandardTime="LHST",a.LordHoweSummerTime="LHST",a.MacquarieIslandStationTime="MIST",a.MagadanTime="MAGT",a.MalaysiaStandardTime="MST",a.MalaysiaTime="MYT",a.MaldivesTime="MVT",a.MarquesasIslandsTime="MART",a.MarshallIslandsTime="MHT",a.MauritiusTime="MUT",a.MawsonStationTime="MAWT",a.MiddleEuropeanSummerTime="MEDT",a.MiddleEuropeanTime="MET",a.MoscowTime="MSK",a.MountainDaylightTime="MDT",a.MountainStandardTime="MST",a.MyanmarStandardTime="MMT",a.NepalTime="NCT",a.NauruTime="NRT",a.NewCaledoniaTime="NCT",a.NewZealandDaylightTime="NZDT",a.NewZealandStandardTime="NZST",a.NewfoundlandDaylightTime="NDT",a.NewfoundlandStandardTime="NST",a.NewfoundlandTime="NT",a.NiueTime="NUT",a.NorfolkIslandTime="NFT",a.NovosibirskTime="NOVT",a.OmskTime="OMST",a.OralTime="ORAT",a.PacificDaylightTime="PDT",a.PacificStandardTime="PST",a.PakistanStandardTime="PKT",a.PalauTime="PWT",a.PapuaNewGuineaTime="PGT",a.ParaguaySummerTime="PYST",a.ParaguayTime="PYT",a.PeruTime="PET",a.PhilippineStandardTime="PHST",a.PhilippineTime="PHT",a.PhoenixIslandTime="PHOT",a.PitcairnTime="PST",a.PohnpeiStandardTime="PONT",a.ReunionTime="RET",a.RotheraResearchStationTime="ROTT",a.SaintPierreAndMiquelonDaylightTime="PMDT",a.SaintPierreAndMiquelonStandardTime="PMST",a.SakhalinIslandTime="SAKT",a.SamaraTime="SAMT",a.SamoaDaylightTime="SDT",a.SamoaStandardTime="SST",a.SeychellesTime="SCT",a.ShowaStationTime="SYOT",a.SingaporeStandardTime="SST",a.SingaporeTime="SGT",a.SolomonIslandsTime="SBT",a.SouthAfricanStandardTime="SAST",a.SouthGeorgiaAndTheSouthSandwichIslandsTime="GST",a.SrednekolymskTime="SRET",a.SriLankaStandardTime="SLST",a.SurinameTime="SRT",a.TahitiTime="TAHT",a.TajikistanTime="TJT",a.ThailandStandardTime="THA",a.TimorLesteTime="TLT",a.TokelauTime="TKT",a.TongaTime="TOT",a.TurkeyTime="TRT",a.TurkmenistanTime="TMT",a.TuvaluTime="TVT",a.UlaanbaatarStandardTime="ULAT",a.UlaanbaatarSummerTime="ULAST",a.UruguayStandardTime="UYT",a.UruguaySummerTime="UYST",a.UzbekistanTime="UZT",a.VanuatuTime="VUT",a.VenezuelaStandardTime="VET",a.VladivostokTime="VLAT",a.VolgogradTime="VOLT",a.VostokStationTime="VOST",a.WakeIslandTime="WAKT",a.WestAfricaSummerTime="WAST",a.WestAfricaTime="WAT",a.WestGreenlandSummerTime="WGST",a.WestGreenlandTime="WGT",a.WestKazakhstanTime="WKT",a.WesternEuropeanSummerTime="WEDT",a.WesternEuropeanTime="WET",a.WesternIndonesianTime="WIT",a.WesternStandardTime="WST",a.YakutskTime="YAKT",a.YekaterinburgTime="YEKT"})(c||(c={}));c.AcreTime,m.UTC_MINUS_5;c.AfghanistanTime,m.UTC_PLUS_4_30;c.AIXCentralEuropeanTime,m.UTC_PLUS_1;c.AlaskaDaylightTime,m.UTC_MINUS_8;c.AlaskaStandardTime,m.UTC_MINUS_9;c.AlmaAtaTime,m.UTC_PLUS_6;c.AmazonSummerTime,m.UTC_MINUS_3;c.AmazonTime,m.UTC_MINUS_4;c.AnadyrTime,m.UTC_PLUS_12;c.AqtobeTime,m.UTC_PLUS_5;c.ArabiaStandardTime,m.UTC_PLUS_3;c.ArgentinaTime,m.UTC_MINUS_3;c.ArmeniaTime,m.UTC_PLUS_4;c.AtlanticDaylightTime,m.UTC_MINUS_3;c.AtlanticStandardTime,m.UTC_MINUS_4;c.AustralianCentralDaylightSavingTime,m.UTC_PLUS_10_30;c.AustralianCentralStandardTime,m.UTC_PLUS_9_30;c.AustralianCentralWesternStandardTime,m.UTC_PLUS_8_45;c.AustralianEasternDaylightSavingTime,m.UTC_PLUS_11;c.AustralianEasternStandardTime,m.UTC_PLUS_10;c.AustralianEasternTime,m.UTC_PLUS_10;c.AustralianWesternStandardTime,m.UTC_PLUS_8;c.AzerbaijanTime,m.UTC_PLUS_4;c.AzoresStandardTime,m.UTC_MINUS_1;c.AzoresSummerTime,m.UTC_0;c.BakerIslandTime,m.UTC_MINUS_12;c.BangladeshStandardTime,m.UTC_PLUS_6;c.BhutanTime,m.UTC_PLUS_6;c.BoliviaTime,m.UTC_MINUS_4;c.BougainvilleStandardTime,m.UTC_PLUS_11;c.BrasiliaSummerTime,m.UTC_MINUS_2;c.BrasiliaTime,m.UTC_MINUS_3;c.BritishIndianOceanTime,m.UTC_PLUS_6;c.BritishSummerTime,m.UTC_PLUS_1;c.BruneiTime,m.UTC_PLUS_8;c.CapeVerdeTime,m.UTC_MINUS_1;c.CentralAfricaTime,m.UTC_PLUS_2;c.CentralDaylightTime,m.UTC_MINUS_5;c.CentralEuropeanSummerTime,m.UTC_PLUS_2;c.CentralEuropeanTime,m.UTC_PLUS_1;c.CentralIndonesiaTime,m.UTC_PLUS_8;c.CentralStandardTime,m.UTC_MINUS_6;c.CentralTime,m.UTC_MINUS_5;c.CentralWesternStandardTime,m.UTC_PLUS_8_45;c.ChamorroStandardTime,m.UTC_PLUS_10;c.ChathamDaylightTime,m.UTC_PLUS_13_45;c.ChathamStandardTime,m.UTC_PLUS_12_45;c.ChileStandardTime,m.UTC_MINUS_4;c.ChileSummerTime,m.UTC_MINUS_3;c.ChinaStandardTime,m.UTC_PLUS_8;c.ChoibalsanStandardTime,m.UTC_PLUS_8;c.ChoibalsanSummerTime,m.UTC_PLUS_9;c.ChristmasIslandTime,m.UTC_PLUS_7;c.ChuukTime,m.UTC_PLUS_10;c.ClipptertonIslandStandardTime,m.UTC_MINUS_8;c.CocosIslandsTime,m.UTC_PLUS_6_30;c.ColombiaSummerTime,m.UTC_MINUS_4;c.ColombiaTime,m.UTC_MINUS_5;c.CookIslandTime,m.UTC_MINUS_10;c.CoordinatedUniversalTime,m.UTC_0;c.CubaDaylightTime,m.UTC_MINUS_4;c.CubaStandardTime,m.UTC_MINUS_5;c.DavisTime,m.UTC_PLUS_7;c.DumontDUrvilleTime,m.UTC_PLUS_10;c.EastAfricaTime,m.UTC_PLUS_3;c.EasterIslandStandardTime,m.UTC_MINUS_6;c.EasterIslandSummerTime,m.UTC_MINUS_5;c.EasternCaribbeanTime,m.UTC_MINUS_4;c.EasternDaylightTime,m.UTC_MINUS_4;c.EasternEuropeanSummerTime,m.UTC_PLUS_3;c.EasternEuropeanTime,m.UTC_PLUS_2;c.EasternGreenlandSummerTime,m.UTC_0;c.EasternGreenlandTime,m.UTC_MINUS_1;c.EasternIndonesianTime,m.UTC_PLUS_9;c.EasternStandardTime,m.UTC_MINUS_5;c.EasternTime,m.UTC_MINUS_5;c.EcuadorTime,m.UTC_MINUS_5;c.FalklandIslandsSummerTime,m.UTC_MINUS_3;c.FalklandIslandsTime,m.UTC_MINUS_4;c.FernandoDeNoronhaTime,m.UTC_MINUS_2;c.FijiTime,m.UTC_PLUS_12;c.FrenchGuianaTime,m.UTC_MINUS_3;c.FrenchSouthernAndAntarcticTime,m.UTC_PLUS_5;c.FurtherEasternEuropeanTime,m.UTC_PLUS_3;c.GalapagosTime,m.UTC_MINUS_6;c.GambierIslandTime,m.UTC_MINUS_9;c.GambierIslandsTime,m.UTC_MINUS_9;c.GeorgiaStandardTime,m.UTC_PLUS_4;c.GilbertIslandTime,m.UTC_PLUS_12;c.GreenwichMeanTime,m.UTC_0;c.GulfStandardTime,m.UTC_PLUS_4;c.GuyanaTime,m.UTC_MINUS_4;c.HawaiiAleutianDaylightTime,m.UTC_MINUS_9;c.HawaiiAleutianStandardTime,m.UTC_MINUS_10;c.HeardAndMcDonaldIslandsTime,m.UTC_PLUS_5;c.HongKongTime,m.UTC_PLUS_8;c.HovdSummerTime,m.UTC_PLUS_8;c.HovdTime,m.UTC_PLUS_7;c.IndianOceanTime,m.UTC_PLUS_3;c.IndianStandardTime,m.UTC_PLUS_5_30;c.IndochinaTime,m.UTC_PLUS_7;c.InternationalDayLineWestTime,m.UTC_MINUS_12;c.IranDaylightTime,m.UTC_PLUS_4_30;c.IranStandardTime,m.UTC_PLUS_3_30;c.IrishStandardTime,m.UTC_PLUS_1;c.IrkutskTime,m.UTC_PLUS_8;c.IsraelDaylightTime,m.UTC_PLUS_3;c.IsraelStandardTime,m.UTC_PLUS_2;c.JapanStandardTime,m.UTC_PLUS_9;c.KaliningradTime,m.UTC_PLUS_2;c.KamchatkaTime,m.UTC_PLUS_12;c.KoreaStandardTime,m.UTC_PLUS_9;c.KosraeTime,m.UTC_PLUS_11;c.KrasnoyarskTime,m.UTC_PLUS_7;c.KyrgyzstanTime,m.UTC_PLUS_6;c.LineIslandsTime,m.UTC_PLUS_14;c.LordHoweStandardTime,m.UTC_PLUS_10_30;c.LordHoweSummerTime,m.UTC_PLUS_11;c.MacquarieIslandStationTime,m.UTC_PLUS_11;c.MagadanTime,m.UTC_PLUS_12;c.MalaysiaStandardTime,m.UTC_PLUS_8;c.MalaysiaTime,m.UTC_PLUS_8;c.MaldivesTime,m.UTC_PLUS_5;c.MarquesasIslandsTime,m.UTC_PLUS_9_30;c.MarshallIslandsTime,m.UTC_PLUS_12;c.MauritiusTime,m.UTC_PLUS_4;c.MawsonStationTime,m.UTC_PLUS_5;c.MiddleEuropeanSummerTime,m.UTC_PLUS_2;c.MiddleEuropeanTime,m.UTC_PLUS_1;c.MoscowTime,m.UTC_PLUS_3;c.MountainDaylightTime,m.UTC_MINUS_6;c.MountainStandardTime,m.UTC_MINUS_7;c.MyanmarStandardTime,m.UTC_PLUS_6_30;c.NepalTime,m.UTC_PLUS_5_45;c.NauruTime,m.UTC_PLUS_12;c.NewCaledoniaTime,m.UTC_PLUS_11;c.NewZealandDaylightTime,m.UTC_PLUS_13;c.NewZealandStandardTime,m.UTC_PLUS_12;c.NewfoundlandDaylightTime,m.UTC_MINUS_2_30;c.NewfoundlandTime,m.UTC_MINUS_3_30;c.NiueTime,m.UTC_MINUS_11;c.NorfolkIslandTime,m.UTC_PLUS_11;c.NovosibirskTime,m.UTC_PLUS_7;c.OmskTime,m.UTC_PLUS_6;c.OralTime,m.UTC_PLUS_5;c.PacificDaylightTime,m.UTC_MINUS_7;c.PacificStandardTime,m.UTC_MINUS_8;c.PakistanStandardTime,m.UTC_PLUS_5;c.PalauTime,m.UTC_PLUS_9;c.PapuaNewGuineaTime,m.UTC_PLUS_10;c.ParaguaySummerTime,m.UTC_MINUS_3;c.ParaguayTime,m.UTC_MINUS_4;c.PeruTime,m.UTC_MINUS_5;c.PhilippineStandardTime,m.UTC_PLUS_8;c.PhilippineTime,m.UTC_PLUS_8;c.PhoenixIslandTime,m.UTC_PLUS_13;c.PitcairnTime,m.UTC_MINUS_8;c.PohnpeiStandardTime,m.UTC_PLUS_11;c.ReunionTime,m.UTC_PLUS_4;c.RotheraResearchStationTime,m.UTC_MINUS_3;c.SaintPierreAndMiquelonDaylightTime,m.UTC_MINUS_2;c.SaintPierreAndMiquelonStandardTime,m.UTC_MINUS_3;c.SakhalinIslandTime,m.UTC_PLUS_11;c.SamaraTime,m.UTC_PLUS_4;c.SamoaDaylightTime,m.UTC_MINUS_10;c.SamoaStandardTime,m.UTC_MINUS_11;c.SeychellesTime,m.UTC_PLUS_4;c.ShowaStationTime,m.UTC_PLUS_3;c.SingaporeStandardTime,m.UTC_PLUS_8;c.SingaporeTime,m.UTC_PLUS_8;c.SolomonIslandsTime,m.UTC_PLUS_11;c.SouthAfricanStandardTime,m.UTC_PLUS_2;c.SouthGeorgiaAndTheSouthSandwichIslandsTime,m.UTC_MINUS_2;c.SrednekolymskTime,m.UTC_PLUS_11;c.SriLankaStandardTime,m.UTC_PLUS_5_30;c.SurinameTime,m.UTC_MINUS_3;c.TahitiTime,m.UTC_MINUS_10;c.TajikistanTime,m.UTC_PLUS_5;c.ThailandStandardTime,m.UTC_PLUS_7;c.TimorLesteTime,m.UTC_PLUS_9;c.TokelauTime,m.UTC_PLUS_13;c.TongaTime,m.UTC_PLUS_13;c.TurkeyTime,m.UTC_PLUS_3;c.TurkmenistanTime,m.UTC_PLUS_5;c.TuvaluTime,m.UTC_PLUS_12;c.UlaanbaatarStandardTime,m.UTC_PLUS_8;c.UlaanbaatarSummerTime,m.UTC_PLUS_9;c.UruguayStandardTime,m.UTC_MINUS_3;c.UruguaySummerTime,m.UTC_MINUS_2;c.UzbekistanTime,m.UTC_PLUS_5;c.VanuatuTime,m.UTC_PLUS_11;c.VenezuelaStandardTime,m.UTC_MINUS_4;c.VladivostokTime,m.UTC_PLUS_10;c.VolgogradTime,m.UTC_PLUS_4;c.VostokStationTime,m.UTC_PLUS_6;c.WakeIslandTime,m.UTC_PLUS_12;c.WestAfricaSummerTime,m.UTC_PLUS_2;c.WestAfricaTime,m.UTC_PLUS_1;c.WestGreenlandSummerTime,m.UTC_MINUS_2;c.WestGreenlandTime,m.UTC_MINUS_3;c.WestKazakhstanTime,m.UTC_PLUS_5;c.WesternEuropeanSummerTime,m.UTC_PLUS_1;c.WesternEuropeanTime,m.UTC_0;c.WesternIndonesianTime,m.UTC_PLUS_7;c.WesternStandardTime,m.UTC_PLUS_8;c.YakutskTime,m.UTC_PLUS_9;c.YekaterinburgTime,m.UTC_PLUS_5;var le;(function(a){a.Africa="Africa",a.Americas="Americas",a.Asia="Asia",a.Europe="Europe",a.Oceania="Oceania",a.Polar="Polar"})(le||(le={}));var oe;(function(a){a.CentralAmerica="Central America",a.EasternAsia="Eastern Asia",a.EasternEurope="Eastern Europe",a.EasternAfrica="Eastern Africa",a.MiddleAfrica="Middle Africa",a.MiddleEast="Middle East",a.NorthernAfrica="Northern Africa",a.NorthernAmerica="Northern America",a.NorthernEurope="Northern Europe",a.Polynesia="Polynesia",a.SouthAmerica="South America",a.SouthernAfrica="Southern Africa",a.SouthernAsia="Southern Asia",a.SouthernEurope="Southern Europe",a.WesternAfrica="Western Africa",a.WesternAsia="Western Asia",a.WesternEurope="Western Europe",a.WesternAustralia="Western Australia"})(oe||(oe={}));M.AfghanistanAfghani,n.Pashto,n.Dari,n.Turkmen,n.Uzbek,m.UTC_PLUS_4_30,f.AsiaKabul,c.AfghanistanTime,_.Afghanistan,_.Afghanistan,n.Afrikaans+"",n.Albanian+"",n.Amharic+"",n.Arabic+"",n.Armenian+"",n.Azerbaijani+"",n.Bashkir+"",n.Basque+"",n.Belarusian+"",n.Bengali+"",n.Berber+"",n.Bhutani+"",n.Bosnian+"",n.Breton+"",n.Bulgarian+"",n.Burmese+"",n.Catalan+"",n.Chinese+"",n.Croatian+"",n.Czech+"",n.Danish+"",n.Dutch+"",n.English+"",n.Esperanto+"",n.Estonian+"",n.Finnish+"",n.French+"",n.Frisian+"",n.Galician+"",n.Georgian+"",n.German+"",n.Greenlandic+"",n.Greek+"",n.Gujarati+"",n.Haitian+"",n.Hausa+"",n.Hebrew+"",n.Hindi+"",n.Hungarian+"",n.Icelandic+"",n.Igbo+"",n.Indonesian+"",n.Irish+"",n.Italian+"",n.Japanese+"",n.Javanese+"",n.Kannada+"",n.Kazakh+"",n.Khmer+"",n.Korean+"",n.Kurdish+"",n.Kyrgyz+"",n.Lao+"",n.Latin+"",n.Latvian+"",n.Lithuanian+"",n.Luxembourgish+"",n.Macedonian+"",n.Malagasy+"",n.Malay+"",n.Malayalam+"",n.Maltese+"",n.Maori+"",n.Marathi+"",n.Mongolian+"",n.Nepali+"",n.Norwegian+"",n.Pashto+"",n.Persian+"",n.Polish+"",n.Portuguese+"",n.Punjabi+"",n.Romanian+"",n.Polish+"",n.Russian+"",n.Samoan+"",n.Sanskrit+"",n.Scots+"",n.Serbian+"",n.Sesotho+"",n.Shona+"",n.Sindhi+"",n.Sinhala+"",n.Slovak+"",n.Slovenian+"",n.Somali+"",n.Spanish+"",n.Sudanese+"",n.Swahili+"",n.Swedish+"",n.Tagalog+"",n.Tajik+"",n.Tatar+"",n.Tamil+"",n.Telugu+"",n.Thai+"",n.Tibetan+"",n.Turkish+"",n.Ukrainian+"",n.Urdu+"",n.Uzbek+"",n.Vietnamese+"",n.Welsh+"",n.Xhosa+"",n.Yiddish+"",n.Yoruba+"",n.Zulu+"",le.Asia,oe.SouthernAsia,M.AlbaniaLek,n.Albanian,n.Greek,n.Turkish,m.UTC_PLUS_1,f.EuropeBrussels,c.CentralEuropeanTime,_.Albania,_.Albania,n.Afrikaans+"",n.Albanian+"",n.Amharic+"",n.Arabic+"",n.Armenian+"",n.Azerbaijani+"",n.Bashkir+"",n.Basque+"",n.Belarusian+"",n.Bengali+"",n.Berber+"",n.Bhutani+"",n.Bosnian+"",n.Breton+"",n.Bulgarian+"",n.Burmese+"",n.Catalan+"",n.Chinese+"",n.Croatian+"",n.Czech+"",n.Danish+"",n.Dutch+"",n.English+"",n.Esperanto+"",n.Estonian+"",n.Finnish+"",n.French+"",n.Frisian+"",n.Galician+"",n.Georgian+"",n.German+"",n.Greenlandic+"",n.Greek+"",n.Gujarati+"",n.Haitian+"",n.Hausa+"",n.Hebrew+"",n.Hindi+"",n.Hungarian+"",n.Icelandic+"",n.Igbo+"",n.Indonesian+"",n.Irish+"",n.Italian+"",n.Japanese+"",n.Javanese+"",n.Kannada+"",n.Kazakh+"",n.Khmer+"",n.Korean+"",n.Kurdish+"",n.Kyrgyz+"",n.Lao+"",n.Latin+"",n.Latvian+"",n.Lithuanian+"",n.Luxembourgish+"",n.Macedonian+"",n.Malagasy+"",n.Malay+"",n.Malayalam+"",n.Maltese+"",n.Maori+"",n.Marathi+"",n.Mongolian+"",n.Nepali+"",n.Norwegian+"",n.Pashto+"",n.Persian+"",n.Polish+"",n.Portuguese+"",n.Punjabi+"",n.Romanian+"",n.Russian+"",n.Samoan+"",n.Sanskrit+"",n.Scots+"",n.Serbian+"",n.Sesotho+"",n.Shona+"",n.Sindhi+"",n.Sinhala+"",n.Slovak+"",n.Slovenian+"",n.Somali+"",n.Spanish+"",n.Sudanese+"",n.Swahili+"",n.Swedish+"",n.Tagalog+"",n.Tajik+"",n.Tamil+"",n.Tatar+"",n.Telugu+"",n.Thai+"",n.Tibetan+"",n.Turkish+"",n.Ukrainian+"",n.Urdu+"",n.Uzbek+"",n.Vietnamese+"",n.Welsh+"",n.Xhosa+"",n.Yiddish+"",n.Yoruba+"",n.Zulu+"",le.Europe,oe.SouthernEurope,M.AlgeriaDinar,n.Arabic,n.French,n.Berber,n.Tamazight,m.UTC_PLUS_1,m.UTC_PLUS_2,f.AfricaAlgiers,c.CentralEuropeanTime,_.Algeria,_.Algeria,n.Afrikaans+"",n.Albanian+"",n.Amharic+"",n.Arabic+"",n.Armenian+"",n.Azerbaijani+"",n.Bashkir+"",n.Basque+"",n.Belarusian+"",n.Bengali+"",n.Berber+"",n.Bhutani+"",n.Bosnian+"",n.Breton+"",n.Bulgarian+"",n.Burmese+"",n.Catalan+"",n.Chinese+"",n.Croatian+"",n.Czech+"",n.Danish+"",n.Dutch+"",n.English+"",n.Esperanto+"",n.Estonian+"",n.Finnish+"",n.French+"",n.Frisian+"",n.Galician+"",n.Georgian+"",n.German+"",n.Greenlandic+"",n.Greek+"",n.Gujarati+"",n.Haitian+"",n.Hausa+"",n.Hebrew+"",n.Hindi+"",n.Hungarian+"",n.Icelandic+"",n.Igbo+"",n.Indonesian+"",n.Irish+"",n.Italian+"",n.Japanese+"",n.Javanese+"",n.Kannada+"",n.Kazakh+"",n.Khmer+"",n.Korean+"",n.Kurdish+"",n.Kyrgyz+"",n.Lao+"",n.Latin+"",n.Latvian+"",n.Lithuanian+"",n.Luxembourgish+"",n.Macedonian+"",n.Malagasy+"",n.Malay+"",n.Malayalam+"",n.Maltese+"",n.Maori+"",n.Marathi+"",n.Mongolian+"",n.Nepali+"",n.Norwegian+"",n.Pashto+"",n.Persian+"",n.Polish+"",n.Portuguese+"",n.Punjabi+"",n.Romanian+"",n.Russian+"",n.Samoan+"",n.Sanskrit+"",n.Scots+"",n.Serbian+"",n.Sesotho+"",n.Shona+"",n.Sindhi+"",n.Sinhala+"",n.Slovak+"",n.Slovenian+"",n.Somali+"",n.Spanish+"",n.Sudanese+"",n.Swahili+"",n.Swedish+"",n.Tagalog+"",n.Tajik+"",n.Tamil+"",n.Tatar+"",n.Telugu+"",n.Thai+"",n.Tibetan+"",n.Turkish+"",n.Ukrainian+"",n.Urdu+"",n.Uzbek+"",n.Vietnamese+"",n.Welsh+"",n.Xhosa+"",n.Yiddish+"",n.Yoruba+"",n.Zulu+"",le.Africa,oe.NorthernAfrica,M.AmericanSamoaTala,n.English,n.Samoan,m.UTC_MINUS_11,f.PacificSamoa,c.SamoaStandardTime,_.AmericanSamoa,_.AmericanSamoa,n.Afrikaans+"",n.Albanian+"",n.Amharic+"",n.Arabic+"",n.Armenian+"",n.Azerbaijani+"",n.Bashkir+"",n.Basque+"",n.Belarusian+"",n.Bengali+"",n.Berber+"",n.Bhutani+"",n.Bosnian+"",n.Breton+"",n.Bulgarian+"",n.Burmese+"",n.Catalan+"",n.Chinese+"",n.Croatian+"",n.Czech+"",n.Danish+"",n.Dutch+"",n.English+"",n.Esperanto+"",n.Estonian+"",n.Finnish+"",n.French+"",n.Frisian+"",n.Galician+"",n.Georgian+"",n.German+"",n.Greenlandic+"",n.Greek+"",n.Gujarati+"",n.Haitian+"",n.Hausa+"",n.Hebrew+"",n.Hindi+"",n.Hungarian+"",n.Icelandic+"",n.Igbo+"",n.Indonesian+"",n.Irish+"",n.Italian+"",n.Japanese+"",n.Javanese+"",n.Kannada+"",n.Kazakh+"",n.Khmer+"",n.Korean+"",n.Kurdish+"",n.Kyrgyz+"",n.Lao+"",n.Latin+"",n.Latvian+"",n.Lithuanian+"",n.Luxembourgish+"",n.Macedonian+"",n.Malagasy+"",n.Malay+"",n.Malayalam+"",n.Maltese+"",n.Maori+"",n.Marathi+"",n.Mongolian+"",n.Nepali+"",n.Norwegian+"",n.Pashto+"",n.Persian+"",n.Polish+"",n.Portuguese+"",n.Punjabi+"",n.Romanian+"",n.Russian+"",n.Samoan+"",n.Sanskrit+"",n.Scots+"",n.Serbian+"",n.Sesotho+"",n.Shona+"",n.Sindhi+"",n.Sinhala+"",n.Slovak+"",n.Slovenian+"",n.Somali+"",n.Spanish+"",n.Sudanese+"",n.Swahili+"",n.Swedish+"",n.Tagalog+"",n.Tajik+"",n.Tamil+"",n.Tatar+"",n.Telugu+"",n.Thai+"",n.Tibetan+"",n.Turkish+"",n.Ukrainian+"",n.Urdu+"",n.Uzbek+"",n.Vietnamese+"",n.Welsh+"",n.Xhosa+"",n.Yiddish+"",n.Yoruba+"",n.Zulu+"",le.Oceania,oe.Polynesia,M.Euro,n.Catalan,n.Spanish,m.UTC_PLUS_1,m.UTC_PLUS_2,f.EuropeAndorra,c.CentralEuropeanTime,_.Andorra,_.Andorra,n.Afrikaans+"",n.Albanian+"",n.Amharic+"",n.Arabic+"",n.Armenian+"",n.Azerbaijani+"",n.Bashkir+"",n.Basque+"",n.Belarusian+"",n.Bengali+"",n.Berber+"",n.Bhutani+"",n.Bosnian+"",n.Breton+"",n.Bulgarian+"",n.Burmese+"",n.Catalan+"",n.Chinese+"",n.Croatian+"",n.Czech+"",n.Danish+"",n.Dutch+"",n.English+"",n.Esperanto+"",n.Estonian+"",n.Finnish+"",n.French+"",n.Frisian+"",n.Galician+"",n.Georgian+"",n.German+"",n.Greek+"",n.Hebrew+"",n.Hindi+"",n.Hungarian+"",n.Icelandic+"",n.Igbo+"",n.Indonesian+"",n.Irish+"",n.Italian+"",n.Japanese+"",n.Javanese+"",n.Kannada+"",n.Kazakh+"",n.Khmer+"",n.Korean+"",n.Kurdish+"",n.Kyrgyz+"",n.Lao+"",n.Latin+"",n.Latvian+"",n.Lithuanian+"",n.Luxembourgish+"",n.Macedonian+"",n.Malagasy+"",n.Malay+"",n.Malayalam+"",n.Maltese+"",n.Maori+"",n.Marathi+"",n.Mongolian+"",n.Nepali+"",n.Norwegian+"",n.Pashto+"",n.Persian+"",n.Polish+"",n.Portuguese+"",n.Punjabi+"",n.Romanian+"",n.Russian+"",n.Samoan+"",n.Sanskrit+"",n.Scots+"",n.Serbian+"",n.Sesotho+"",n.Shona+"",n.Sindhi+"",n.Sinhala+"",n.Slovak+"",n.Slovenian+"",n.Somali+"",n.Spanish+"",n.Sudanese+"",n.Swahili+"",n.Swedish+"",n.Tagalog+"",n.Tajik+"",n.Tamil+"",n.Tatar+"",n.Telugu+"",n.Thai+"",n.Tibetan+"",n.Turkish+"",n.Ukrainian+"",n.Urdu+"",n.Uzbek+"",n.Vietnamese+"",n.Welsh+"",n.Xhosa+"",n.Yiddish+"",n.Yoruba+"",n.Zulu+"",le.Europe,oe.SouthernEurope,M.AngolaKwanza,n.Portuguese,n.Spanish,n.French,n.Italian,n.German,n.English,m.UTC_0,m.UTC_PLUS_1,m.UTC_PLUS_2,f.AfricaLuanda,c.WestAfricaTime,_.Angola,_.Angola,n.Afrikaans+"",n.Albanian+"",n.Amharic+"",n.Arabic+"",n.Armenian+"",n.Azerbaijani+"",n.Bashkir+"",n.Basque+"",n.Belarusian+"",n.Bengali+"",n.Berber+"",n.Bhutani+"",n.Bosnian+"",n.Breton+"",n.Bulgarian+"",n.Burmese+"",n.Catalan+"",n.Chinese+"",n.Croatian+"",n.Czech+"",n.Danish+"",n.Dutch+"",n.English+"",n.Esperanto+"",n.Estonian+"",n.Finnish+"",n.French+"",n.Frisian+"",n.Galician+"",n.Georgian+"",n.German+"",n.Greenlandic+"",n.Greek+"",n.Gujarati+"",n.Haitian+"",n.Hausa+"",n.Hebrew+"",n.Hindi+"",n.Hungarian+"",n.Icelandic+"",n.Igbo+"",n.Indonesian+"",n.Irish+"",n.Italian+"",n.Japanese+"",n.Javanese+"",n.Kannada+"",n.Kazakh+"",n.Khmer+"",n.Korean+"",n.Kurdish+"",n.Kyrgyz+"",n.Lao+"",n.Latin+"",n.Latvian+"",n.Lithuanian+"",n.Luxembourgish+"",n.Macedonian+"",n.Malagasy+"",n.Malay+"",n.Malayalam+"",n.Maltese+"",n.Maori+"",n.Marathi+"",n.Mongolian+"",n.Nepali+"",n.Norwegian+"",n.Pashto+"",n.Persian+"",n.Polish+"",n.Portuguese+"",n.Punjabi+"",n.Romanian+"",n.Russian+"",n.Samoan+"",n.Sanskrit+"",n.Scots+"",n.Serbian+"",n.Sesotho+"",n.Shona+"",n.Sindhi+"",n.Sinhala+"",n.Slovak+"",n.Slovenian+"",n.Somali+"",n.Spanish+"",n.Sudanese+"",n.Swahili+"",n.Swedish+"",n.Tagalog+"",n.Tajik+"",n.Tamil+"",n.Tatar+"",n.Telugu+"",n.Thai+"",n.Tibetan+"",n.Turkish+"",n.Ukrainian+"",n.Urdu+"",n.Uzbek+"",n.Vietnamese+"",n.Xhosa+"",n.Welsh+"",n.Yiddish+"",n.Yoruba+"",n.Zulu+"",M.DominicaDollar,M.EastCaribbeanDollar,M.Euro,M.UnitedStatesDollar,M.BritishPound,n.English,n.Spanish,m.UTC_MINUS_4,f.AmericaAnguilla,c.AtlanticStandardTime,_.Anguilla,_.Anguilla,n.Afrikaans+"",n.Albanian+"",n.Amharic+"",n.Arabic+"",n.Armenian+"",n.Azerbaijani+"",n.Bashkir+"",n.Basque+"",n.Belarusian+"",n.Bengali+"",n.Berber+"",n.Bhutani+"",n.Bosnian+"",n.Breton+"",n.Bulgarian+"",n.Burmese+"",n.Catalan+"",n.Chinese+"",n.Croatian+"",n.Czech+"",n.Danish+"",n.Dutch+"",n.English+"",n.Esperanto+"",n.Estonian+"",n.Finnish+"",n.French+"",n.Frisian+"",n.Galician+"",n.Georgian+"",n.German+"",n.Greenlandic+"",n.Greek+"",n.Gujarati+"",n.Haitian+"",n.Hausa+"",n.Hebrew+"",n.Hindi+"",n.Hungarian+"",n.Icelandic+"",n.Igbo+"",n.Indonesian+"",n.Irish+"",n.Italian+"",n.Japanese+"",n.Javanese+"",n.Kannada+"",n.Kazakh+"",n.Khmer+"",n.Korean+"",n.Kurdish+"",n.Kyrgyz+"",n.Lao+"",n.Latin+"",n.Latvian+"",n.Lithuanian+"",n.Luxembourgish+"",n.Macedonian+"",n.Malagasy+"",n.Malay+"",n.Malayalam+"",n.Maltese+"",n.Maori+"",n.Marathi+"",n.Mongolian+"",n.Nepali+"",n.Norwegian+"",n.Pashto+"",n.Persian+"",n.Polish+"",n.Portuguese+"",n.Punjabi+"",n.Romanian+"",n.Russian+"",n.Samoan+"",n.Sanskrit+"",n.Scots+"",n.Serbian+"",n.Sesotho+"",n.Shona+"",n.Sindhi+"",n.Sinhala+"",n.Slovak+"",n.Slovenian+"",n.Somali+"",n.Spanish+"",n.Sudanese+"",n.Swahili+"",n.Swedish+"",n.Tagalog+"",n.Tajik+"",n.Tamil+"",n.Tatar+"",n.Telugu+"",n.Thai+"",n.Tibetan+"",n.Turkish+"",n.Ukrainian+"",n.Urdu+"",n.Uzbek+"",n.Vietnamese+"",n.Welsh+"",n.Xhosa+"",n.Yiddish+"",n.Yoruba+"",n.Zulu+"",M.UnitedStatesDollar,M.Euro,n.English,n.Spanish,n.French,n.Portuguese,n.Italian,n.Dutch,n.German,n.Swedish,n.Norwegian,n.Danish,n.Finnish,m.UTC_PLUS_1,m.UTC_PLUS_2,f.AntarcticaCasey,f.AntarcticaDavis,f.AntarcticaMcMurdo,f.AntarcticaPalmer,f.AntarcticaRothera,c.AtlanticStandardTime,c.CentralTime,c.EasternTime,c.AtlanticStandardTime,c.AzoresStandardTime,c.NewfoundlandStandardTime,_.Antarctica,_.Antarctica,n.Afrikaans+"",n.Albanian+"",n.Amharic+"",n.Arabic+"",n.Armenian+"",n.Azerbaijani+"",n.Bashkir+"",n.Basque+"",n.Belarusian+"",n.Bengali+"",n.Berber+"",n.Bhutani+"",n.Bosnian+"",n.Breton+"",n.Bulgarian+"",n.Burmese+"",n.Catalan+"",n.Chinese+"",n.Croatian+"",n.Czech+"",n.Danish+"",n.Dutch+"",n.English+"",n.Esperanto+"",n.Estonian+"",n.Finnish+"",n.French+"",n.Frisian+"",n.Galician+"",n.Georgian+"",n.German+"",n.Greenlandic+"",n.Greek+"",n.Gujarati+"",n.Haitian+"",n.Hausa+"",n.Hebrew+"",n.Hindi+"",n.Hungarian+"",n.Icelandic+"",n.Igbo+"",n.Indonesian+"",n.Irish+"",n.Italian+"",n.Japanese+"",n.Javanese+"",n.Kannada+"",n.Kazakh+"",n.Khmer+"",n.Korean+"",n.Kurdish+"",n.Kyrgyz+"",n.Lao+"",n.Latin+"",n.Latvian+"",n.Lithuanian+"",n.Luxembourgish+"",n.Macedonian+"",n.Malagasy+"",n.Malay+"",n.Malayalam+"",n.Maltese+"",n.Maori+"",n.Marathi+"",n.Mongolian+"",n.Nepali+"",n.Norwegian+"",n.Pashto+"",n.Persian+"",n.Polish+"",n.Portuguese+"",n.Punjabi+"",n.Romanian+"",n.Russian+"",n.Samoan+"",n.Sanskrit+"",n.Scots+"",n.Serbian+"",n.Sesotho+"",n.Shona+"",n.Sindhi+"",n.Sinhala+"",n.Slovak+"",n.Slovenian+"",n.Somali+"",n.Spanish+"",n.Sudanese+"",n.Swahili+"",n.Swedish+"",n.Tagalog+"",n.Tajik+"",n.Tamil+"",n.Tatar+"",n.Telugu+"",n.Thai+"",n.Tibetan+"",n.Turkish+"",n.Ukrainian+"",n.Urdu+"",n.Uzbek+"",n.Vietnamese+"",n.Welsh+"",n.Xhosa+"",n.Yiddish+"",n.Yoruba+"",n.Zulu+"",M.ArmeniaDram,n.Armenian,m.UTC_PLUS_4,f.AsiaJakarta,c.ArmeniaTime,_.Armenia,_.Armenia,n.Afrikaans+"",n.Albanian+"",n.Amharic+"",n.Arabic+"",n.Armenian+"",n.Azerbaijani+"",n.Bashkir+"",n.Basque+"",n.Belarusian+"",n.Bengali+"",n.Berber+"",n.Bhutani+"",n.Bosnian+"",n.Breton+"",n.Bulgarian+"",n.Burmese+"",n.Catalan+"",n.Chinese+"",n.Croatian+"",n.Czech+"",n.Danish+"",n.Dutch+"",n.English+"",n.Esperanto+"",n.Estonian+"",n.Finnish+"",n.French+"",n.Frisian+"",n.Galician+"",n.Georgian+"",n.German+"",n.Greenlandic+"",n.Greek+"",n.Gujarati+"",n.Haitian+"",n.Hausa+"",n.Hebrew+"",n.Hindi+"",n.Hungarian+"",n.Icelandic+"",n.Igbo+"",n.Indonesian+"",n.Irish+"",n.Italian+"",n.Japanese+"",n.Javanese+"",n.Kannada+"",n.Kazakh+"",n.Khmer+"",n.Korean+"",n.Kurdish+"",n.Kyrgyz+"",n.Lao+"",n.Latin+"",n.Latvian+"",n.Lithuanian+"",n.Luxembourgish+"",n.Macedonian+"",n.Malagasy+"",n.Malay+"",n.Malayalam+"",n.Maltese+"",n.Maori+"",n.Marathi+"",n.Mongolian+"",n.Nepali+"",n.Norwegian+"",n.Pashto+"",n.Persian+"",n.Polish+"",n.Portuguese+"",n.Punjabi+"",n.Romanian+"",n.Russian+"",n.Samoan+"",n.Sanskrit+"",n.Scots+"",n.Serbian+"",n.Sesotho+"",n.Shona+"",n.Sindhi+"",n.Sinhala+"",n.Slovak+"",n.Slovenian+"",n.Somali+"",n.Spanish+"",n.Sudanese+"",n.Swahili+"",n.Swedish+"",n.Tagalog+"",n.Tajik+"",n.Tamil+"",n.Tatar+"",n.Telugu+"",n.Thai+"",n.Tibetan+"",n.Turkish+"",n.Ukrainian+"",n.Urdu+"",n.Uzbek+"",n.Vietnamese+"",n.Welsh+"",n.Xhosa+"",n.Yiddish+"",n.Yoruba+"",n.Zulu+"",_.AmericanSamoa,_.AmericanSamoa,n.Afrikaans+"",n.Albanian+"",n.Amharic+"",n.Arabic+"",n.Armenian+"",n.Azerbaijani+"",n.Bashkir+"",n.Basque+"",n.Belarusian+"",n.Bengali+"",n.Berber+"",n.Bhutani+"",n.Bosnian+"",n.Breton+"",n.Bulgarian+"",n.Burmese+"",n.Catalan+"",n.Chinese+"",n.Croatian+"",n.Czech+"",n.Danish+"",n.Dutch+"",n.English+"",n.Esperanto+"",n.Estonian+"",n.Finnish+"",n.French+"",n.Frisian+"",n.Galician+"",n.Georgian+"",n.German+"",n.Greenlandic+"",n.Greek+"",n.Gujarati+"",n.Haitian+"",n.Hausa+"",n.Hebrew+"",n.Hindi+"",n.Hungarian+"",n.Icelandic+"",n.Igbo+"",n.Indonesian+"",n.Irish+"",n.Italian+"",n.Japanese+"",n.Javanese+"",n.Kannada+"",n.Kazakh+"",n.Khmer+"",n.Korean+"",n.Kurdish+"",n.Kyrgyz+"",n.Lao+"",n.Latin+"",n.Latvian+"",n.Lithuanian+"",n.Luxembourgish+"",n.Macedonian+"",n.Malagasy+"",n.Malay+"",n.Malayalam+"",n.Maltese+"",n.Maori+"",n.Marathi+"",n.Mongolian+"",n.Nepali+"",n.Norwegian+"",n.Pashto+"",n.Persian+"",n.Polish+"",n.Portuguese+"",n.Punjabi+"",n.Romanian+"",n.Russian+"",n.Samoan+"",n.Sanskrit+"",n.Scots+"",n.Serbian+"",n.Sesotho+"",n.Shona+"",n.Sindhi+"",n.Sinhala+"",n.Slovak+"",n.Slovenian+"",n.Somali+"",n.Spanish+"",n.Sudanese+"",n.Swahili+"",n.Swedish+"",n.Tagalog+"",n.Tajik+"",n.Tamil+"",n.Tatar+"",n.Telugu+"",n.Thai+"",n.Tibetan+"",n.Turkish+"",n.Ukrainian+"",n.Urdu+"",n.Uzbek+"",n.Vietnamese+"",n.Welsh+"",n.Xhosa+"",n.Yiddish+"",n.Yoruba+"",n.Zulu+"";n.Afrikaans,v.Afrikaans;_.SouthAfrica,n.AfrikaansSouthAfrica,v.Afrikaans;n.Albanian,v.Albanian;_.Albania,n.AlbanianAlbania,v.Albanian;n.Amharic,v.Amharic;_.Ethiopia,n.AmharicEthiopia,v.Amharic;n.Arabic,v.Arabic;_.Algeria,n.ArabicAlgeria,v.Arabic;_.Bahrain,n.ArabicBahrain,v.Arabic;_.Egypt,n.ArabicEgypt,v.Arabic;_.Iraq,n.ArabicIraq,v.Arabic;_.Jordan,n.ArabicJordan,v.Arabic;_.Kuwait,n.ArabicKuwait,v.Arabic;_.Lebanon,n.ArabicLebanon,v.Arabic;_.Libya,n.ArabicLibya,v.Arabic;_.Morocco,n.ArabicMorocco,v.Arabic;_.Oman,n.ArabicOman,v.Arabic;_.Qatar,n.ArabicQatar,v.Arabic;_.SaudiArabia,n.ArabicSaudiArabia,v.Arabic;_.Tunisia,n.ArabicTunisia,v.Arabic;_.UnitedArabEmirates,n.ArabicUnitedArabEmirates,v.Arabic;_.Yemen,n.ArabicYemen,v.Arabic;n.Armenian,v.Armenian;_.Armenia,n.ArmenianArmenia,v.Armenian;n.Azerbaijani,v.Azerbaijani;_.Azerbaijan,n.AzerbaijaniAzerbaijan,v.Azerbaijani;n.Basque,v.Basque;_.Spain,n.BasqueSpain,v.Basque;n.Belarusian,v.Belarusian;_.Belarus,n.BelarusianBelarus,v.Belarusian;n.Bengali,v.Bengali;_.Bangladesh,n.BengaliBangladesh,v.Bengali;n.Bhutani,v.Bhutani;_.Bhutan,n.BhutaniBhutan,v.Bhutani;n.Bulgarian,v.Bulgarian;_.Bulgaria,n.BulgarianBulgaria,v.Bulgarian;n.Burmese,v.Burmese;_.Myanmar,n.BurmeseMyanmar,v.Burmese;n.Cantonese,v.Cantonese;_.HongKong,n.CantoneseHongKong,v.Cantonese;n.Catalan,v.Catalan;_.Spain,n.CatalanSpain,v.Catalan;n.ChineseSimplified,v.Chinese;_.China,n.ChineseSimplifiedChina,v.Chinese;_.HongKong,n.ChineseSimplifiedHongKong,v.Chinese;_.Macau,n.ChineseSimplifiedMacau,v.Chinese;_.Singapore,n.ChineseSimplifiedSingapore,v.Chinese;n.ChineseTraditional,v.Chinese;_.HongKong,n.ChineseTraditionalHongKong,v.Chinese;_.Macau,n.ChineseTraditionalMacau,v.Chinese;_.Singapore,n.ChineseTraditionalSingapore,v.Chinese;n.Croatian,v.Croatian;_.BosniaAndHerzegovina,n.CroatianBosniaAndHerzegovina,v.Croatian;_.Croatia,n.CroatianCroatia,v.Croatian;n.Czech,v.Czech;_.CzechRepublic,n.CzechCzechRepublic,v.Czech;n.Danish,v.Danish;_.Denmark,n.DanishDenmark,v.Danish;n.Divehi,v.Divehi;_.Maldives,n.DivehiMaldives,v.Divehi;n.Dutch,v.Dutch;_.Belgium,n.DutchBelgium,v.Dutch;_.Netherlands,n.DutchNetherlands,v.Dutch;n.English,v.English;_.Australia,n.EnglishAustralia,v.English;_.Belgium,n.EnglishBelgium,v.English;_.Canada,n.EnglishCanada,v.English;_.Ireland,n.EnglishIreland,v.English;_.Jamaica,n.EnglishJamaica,v.English;_.NewZealand,n.EnglishNewZealand,v.English;_.Philippines,n.EnglishPhilippines,v.English;_.Singapore,n.EnglishSingapore,v.English;_.SouthAfrica,n.EnglishSouthAfrica,v.English;_.TrinidadAndTobago,n.EnglishTrinidadAndTobago,v.English;_.UnitedKingdom,n.EnglishUnitedKingdom,v.English;_.UnitedStates,n.EnglishUnitedStates,v.English;_.Zimbabwe,n.EnglishZimbabwe,v.English;n.Esperanto,v.Esperanto;n.Estonian,v.Estonian;_.Estonia,n.EstonianEstonia,v.Estonian;n.Faroese,v.Faroese;_.FaroeIslands,n.FaroeseFaroeIslands,v.Faroese;n.Farsi,v.Farsi;_.Iran,n.FarsiIran,v.Farsi;n.Filipino,v.Filipino;_.Philippines,n.FilipinoPhilippines,v.Filipino;n.Finnish,v.Finnish;_.Finland,n.FinnishFinland,v.Finnish;n.French,v.French;_.Belgium,n.FrenchBelgium,v.French;_.Canada,n.FrenchCanada,v.French;_.France,n.FrenchFrance,v.French;_.Luxembourg,n.FrenchLuxembourg,v.French;_.Monaco,n.FrenchMonaco,v.French;_.Reunion,n.FrenchReunion,v.French;_.Switzerland,n.FrenchSwitzerland,v.French;n.Frisian,v.Frisian;_.Netherlands,n.FrisianNetherlands,v.Frisian;n.Galician,v.Galician;_.Spain,n.GalicianSpain,v.Galician;n.Georgian,v.Georgian;_.Georgia,n.GeorgianGeorgia,v.Georgian;n.German,v.German;_.Austria,n.GermanAustria,v.German;_.Belgium,n.GermanBelgium,v.German;_.Switzerland,n.GermanSwitzerland,v.German;_.Liechtenstein,n.GermanLiechtenstein,v.German;_.Luxembourg,n.GermanLuxembourg,v.German;n.Greek,v.Greek;_.Greece,n.GreekGreece,v.Greek;n.Greenlandic,v.Greenlandic;_.Greenland,n.GreenlandicGreenland,v.Greenlandic;n.Gujarati,v.Gujarati;_.India,n.GujaratiIndia,v.Gujarati;n.Hausa,v.Hausa;_.Ghana,n.HausaGhana,v.Hausa;_.Niger,n.HausaNiger,v.Hausa;_.Nigeria,n.HausaNigeria,v.Hausa;n.Hebrew,v.Hebrew;_.Israel,n.HebrewIsrael,v.Hebrew;n.Hindi,v.Hindi;_.India,n.HindiIndia,v.Hindi;n.Hungarian,v.Hungarian;_.Hungary,n.HungarianHungary,v.Hungarian;n.Icelandic,v.Icelandic;_.Iceland,n.IcelandicIceland,v.Icelandic;n.Igbo,v.Igbo;n.Indonesian,v.Indonesian;_.Indonesia,n.IndonesianIndonesia,v.Indonesian;n.Irish,v.Irish;_.Ireland,n.IrishIreland,v.Irish;n.Italian,v.Italian;_.Italy,n.ItalianItaly,v.Italian;_.Switzerland,n.ItalianSwitzerland,v.Italian;n.Japanese,v.Japanese;_.Japan,n.JapaneseJapan,v.Japanese;n.Kannada,v.Kannada;_.India,n.KannadaIndia,v.Kannada;n.Kazakh,v.Kazakh;_.Kazakhstan,n.KazakhKazakhstan,v.Kazakh;n.Khmer,v.Khmer;_.Cambodia,n.KhmerCambodia,v.Khmer;n.Konkani,v.Konkani;_.India,n.KonkaniIndia,v.Konkani;n.Korean,v.Korean;_.SouthKorea,n.KoreanSouthKorea,v.Korean;n.Kurdish,v.Kurdish;_.Iraq,n.KurdishIraq,v.Kurdish;_.Turkey,n.KurdishTurkey,v.Kurdish;n.Kyrgyz,v.Kyrgyz;_.Kyrgyzstan,n.KyrgyzKyrgyzstan,v.Kyrgyz;n.Lao,v.Lao;_.Laos,n.LaoLaos,v.Lao;n.Latvian,v.Latvian;_.Latvia,n.LatvianLatvia,v.Latvian;n.Lithuanian,v.Lithuanian;_.Lithuania,n.LithuanianLithuania,v.Lithuanian;n.Luxembourgish,v.Luxembourgish;_.Belgium,n.LuxembourgishBelgium,v.Luxembourgish;_.Luxembourg,n.LuxembourgishLuxembourg,v.Luxembourgish;n.Macedonian,v.Macedonian;_.NorthMacedonia,n.MacedonianNorthMacedonia,v.Macedonian;n.Malay,v.Malay;_.Brunei,n.MalayBrunei,v.Malay;_.Malaysia,n.MalayMalaysia,v.Malay;_.Singapore,n.MalaySingapore,v.Malay;_.India,n.MalayIndia,v.Malay;n.Maltese,v.Maltese;_.Malta,n.MalteseMalta,v.Maltese;n.Maori,v.Maori;_.NewZealand,n.MaoriNewZealand,v.Maori;n.Marathi,v.Marathi;_.India,n.MarathiIndia,v.Marathi;n.Mongolian,v.Mongolian;_.Mongolia,n.MongolianMongolia,v.Mongolian;n.Montenegrin,v.Montenegrin;_.Montenegro,n.MontenegrinMontenegro,v.Montenegrin;n.Nepali,v.Nepali;_.Nepal,n.NepaliNepal,v.Nepali;n.NorthernSotho,v.NorthernSotho;_.SouthAfrica,n.NorthernSothoSouthAfrica,v.NorthernSotho;n.Norwegian,v.Norwegian;_.Norway,n.NorwegianBokmalNorway,v.NorwegianBokmal;_.Norway,n.NorwegianNynorskNorway,v.NorwegianNynorsk;n.Oriya,v.Oriya;_.India,n.OriyaIndia,v.Oriya;n.Pashto,v.Pashto;_.Afghanistan,n.PashtoAfghanistan,v.Pashto;n.Persian,v.Persian;_.Iran,n.PersianIran,v.Persian;n.Polish,v.Polish;_.Poland,n.PolishPoland,v.Polish;n.Portuguese,v.Portuguese;_.Brazil,n.PortugueseBrazil,v.Portuguese;_.Portugal,n.PortuguesePortugal,v.Portuguese;n.Punjabi,v.Punjabi;_.Pakistan,n.PunjabiPakistan,v.Punjabi;_.India,n.PunjabiIndia,v.Punjabi;n.Quechua,v.Quechua;_.Bolivia,n.QuechuaBolivia,v.Quechua;_.Ecuador,n.QuechuaEcuador,v.Quechua;_.Peru,n.QuechuaPeru,v.Quechua;n.Romanian,v.Romanian;_.Romania,n.RomanianRomania,v.Romanian;n.Russian,v.Russian;_.RussianFederation,n.RussianRussia,v.Russian;_.Ukraine,n.RussianUkraine,v.Russian;_.Kazakhstan,n.RussianKazakhstan,v.Russian;_.Kyrgyzstan,n.RussianKyrgyzstan,v.Russian;n.Sanskrit,v.Sanskrit;_.India,n.SanskritIndia,v.Sanskrit;n.Sami,v.Sami;_.Finland,n.SamiFinland,v.Sami;_.Norway,n.SamiNorway,v.Sami;_.Sweden,n.SamiSweden,v.Sami;n.Samoan,v.Samoan;_.Samoa,n.SamoanSamoa,v.Samoan;n.Serbian,v.Serbian;_.BosniaAndHerzegovina,n.SerbianBosniaAndHerzegovina,v.Serbian;_.SerbiaAndMontenegro,n.SerbianSerbiaAndMontenegro,v.Serbian;n.SerbianCyrillic,v.SerbianCyrillic;_.BosniaAndHerzegovina,n.SerbianCyrillicBosniaAndHerzegovina,v.SerbianCyrillic;_.SerbiaAndMontenegro,n.SerbianCyrillicSerbiaAndMontenegro,v.SerbianCyrillic;n.Slovak,v.Slovak;_.Slovakia,n.SlovakSlovakia,v.Slovak;n.Slovenian,v.Slovenian;_.Slovenia,n.SlovenianSlovenia,v.Slovenian;n.Somali,v.Somali;_.Somalia,n.SomaliSomalia,v.Somali;n.Spanish,v.Spanish;_.Argentina,n.SpanishArgentina,v.Spanish;_.Bolivia,n.SpanishBolivia,v.Spanish;_.Chile,n.SpanishChile,v.Spanish;_.Colombia,n.SpanishColombia,v.Spanish;_.CostaRica,n.SpanishCostaRica,v.Spanish;_.Cuba,n.SpanishCuba,v.Spanish;_.DominicanRepublic,n.SpanishDominicanRepublic,v.Spanish;_.Ecuador,n.SpanishEcuador,v.Spanish;_.ElSalvador,n.SpanishElSalvador,v.Spanish;_.EquatorialGuinea,n.SpanishEquatorialGuinea,v.Spanish;_.Guatemala,n.SpanishGuatemala,v.Spanish;_.Honduras,n.SpanishHonduras,v.Spanish;_.Mexico,n.SpanishMexico,v.Spanish;_.Nicaragua,n.SpanishNicaragua,v.Spanish;_.Panama,n.SpanishPanama,v.Spanish;_.Paraguay,n.SpanishParaguay,v.Spanish;_.Peru,n.SpanishPeru,v.Spanish;_.PuertoRico,n.SpanishPuertoRico,v.Spanish;_.Uruguay,n.SpanishUruguay,v.Spanish;_.Venezuela,n.SpanishVenezuela,v.Spanish;_.SouthAfrica,n.SutuSouthAfrica,v.Sutu;n.Swahili,v.Swahili;_.Kenya,n.SwahiliKenya,v.Swahili;n.Swedish,v.Swedish;_.Finland,n.SwedishFinland,v.Swedish;_.Sweden,n.SwedishSweden,v.Swedish;n.Syriac,v.Syriac;_.Syria,n.SyriacSyria,v.Syriac;n.Tajik,v.Tajik;_.Tajikistan,n.TajikTajikistan,v.Tajik;n.Tagalog,v.Tagalog;_.Philippines,n.TagalogPhilippines,v.Tagalog;n.Tamil,v.Tamil;_.India,n.TamilIndia,v.Tamil;n.Telugu,v.Telugu;_.India,n.TeluguIndia,v.Telugu;n.Thai,v.Thai;_.Thailand,n.ThaiThailand,v.Thai;n.Tibetan,v.Tibetan;_.China,n.TibetanChina,v.Tibetan;_.Bhutan,n.TibetanBhutan,v.Tibetan;_.India,n.TibetanIndia,v.Tibetan;n.Tsonga,v.Tsonga;n.Tswana,v.Tswana;_.SouthAfrica,n.TswanaSouthAfrica,v.Tswana;n.Turkish,v.Turkish;_.Turkey,n.TurkishTurkey,v.Turkish;n.Ukrainian,v.Ukrainian;_.Ukraine,n.UkrainianUkraine,v.Ukrainian;n.Urdu,v.Urdu;_.Afghanistan,n.UrduAfghanistan,v.Urdu;_.India,n.UrduIndia,v.Urdu;_.Pakistan,n.UrduPakistan,v.Urdu;n.Uzbek,v.Uzbek;_.Uzbekistan,n.UzbekUzbekistan,v.Uzbek;_.Uzbekistan,n.UzbekCyrillic,v.Uzbek;n.Vietnamese,v.Vietnamese;_.Vietnam,n.VietnameseVietnam,v.Vietnamese;n.Welsh,v.Welsh;_.UnitedKingdom,n.WelshUnitedKingdom,v.Welsh;n.Xhosa,v.Xhosa;_.SouthAfrica,n.XhosaSouthAfrica,v.Xhosa;n.Yiddish,v.Yiddish;n.Yoruba,v.Yoruba;_.Nigeria,n.YorubaNigeria,v.Yoruba;n.Zulu,v.Zulu;_.SouthAfrica,n.ZuluSouthAfrica,v.Zulu;f.AfricaAbidjan,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaAccra,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaAddisAbaba,m.UTC_PLUS_3,c.EastAfricaTime;f.AfricaAlgiers,m.UTC_PLUS_1,c.CentralEuropeanTime;f.AfricaAsmara,m.UTC_PLUS_3,c.EastAfricaTime;f.AfricaBamako,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaBangui,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaBanjul,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaBissau,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaBlantyre,m.UTC_PLUS_2,c.CentralAfricaTime;f.AfricaBrazzaville,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaBujumbura,m.UTC_PLUS_2,c.CentralAfricaTime;f.AfricaCairo,m.UTC_PLUS_2,c.EasternEuropeanTime;f.AfricaCasablanca,m.UTC_PLUS_1,c.WesternEuropeanTime;f.AfricaCeuta,m.UTC_PLUS_1,c.CentralEuropeanTime;f.AfricaConakry,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaDakar,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaDarEsSalaam,m.UTC_PLUS_3,c.EastAfricaTime;f.AfricaDjibouti,m.UTC_PLUS_3,c.EastAfricaTime;f.AfricaDouala,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaElAaiun,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaFreetown,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaGaborone,m.UTC_PLUS_2,c.CentralAfricaTime;f.AfricaHarare,m.UTC_PLUS_2,c.CentralAfricaTime;f.AfricaJohannesburg,m.UTC_PLUS_2,c.SouthAfricanStandardTime;f.AfricaJuba,m.UTC_PLUS_3,c.EastAfricaTime;f.AfricaKampala,m.UTC_PLUS_3,c.EastAfricaTime;f.AfricaKhartoum,m.UTC_PLUS_2,c.EastAfricaTime;f.AfricaKigali,m.UTC_PLUS_2,c.CentralAfricaTime;f.AfricaKinshasa,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaLagos,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaLibreville,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaLome,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaLuanda,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaLubumbashi,m.UTC_PLUS_2,c.CentralAfricaTime;f.AfricaLusaka,m.UTC_PLUS_2,c.CentralAfricaTime;f.AfricaMalabo,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaMaputo,m.UTC_PLUS_2,c.CentralAfricaTime;f.AfricaMaseru,m.UTC_PLUS_2,c.SouthAfricanStandardTime;f.AfricaMbabane,m.UTC_PLUS_2,c.SouthAfricanStandardTime;f.AfricaMogadishu,m.UTC_PLUS_3,c.EastAfricaTime;f.AfricaMonrovia,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaNairobi,m.UTC_PLUS_3,c.EastAfricaTime;f.AfricaNdjamena,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaNiamey,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaNouakchott,m.UTC_0,c.GreenwichMeanTime;f.AfricaOuagadougou,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaPortoNovo,m.UTC_PLUS_1,c.WestAfricaTime;f.AfricaSaoTome,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaTripoli,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaTunis,m.UTC_0,c.CoordinatedUniversalTime;f.AfricaWindhoek,m.UTC_PLUS_2,c.WestAfricaTime;f.AmericaAdak,m.UTC_PLUS_10,c.HawaiiAleutianStandardTime;f.AmericaAnchorage,m.UTC_PLUS_9,c.AlaskaStandardTime;f.AmericaAnguilla,m.UTC_0,c.AtlanticStandardTime;f.AmericaAntigua,m.UTC_0,c.AtlanticStandardTime;f.AmericaAraguaina,m.UTC_MINUS_3,c.BrasiliaTime;f.AmericaArgentinaBuenosAires,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaCatamarca,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaCordoba,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaJujuy,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaLaRioja,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaMendoza,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaRioGallegos,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaSalta,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaSanJuan,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaSanLuis,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaTucuman,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaArgentinaUshuaia,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaAruba,m.UTC_0,c.AtlanticStandardTime;f.AmericaAsuncion,m.UTC_MINUS_4,c.ParaguayTime;f.AmericaAtikokan,m.UTC_0,c.EasternStandardTime;f.AmericaAtka,m.UTC_MINUS_10,c.HawaiiAleutianStandardTime;f.AmericaBahia,m.UTC_MINUS_3,c.BrasiliaTime;f.AmericaBahiaBanderas,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaBarbados,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaBelem,m.UTC_MINUS_3,c.BrasiliaTime;f.AmericaBelize,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaBlancSablon,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaBoaVista,m.UTC_MINUS_4,c.AmazonTime;f.AmericaBogota,m.UTC_MINUS_5,c.ColombiaTime;f.AmericaBoise,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaCambridgeBay,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaCampoGrande,m.UTC_MINUS_4,c.AmazonTime;f.AmericaCancun,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaCaracas,m.UTC_MINUS_4,c.VenezuelaStandardTime;f.AmericaCayenne,m.UTC_MINUS_3,c.FrenchGuianaTime;f.AmericaCayman,m.UTC_0,c.AtlanticStandardTime;f.AmericaChicago,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaChihuahua,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaCoralHarbour,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaCordoba,m.UTC_MINUS_3,c.ArgentinaTime;f.AmericaCostaRica,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaCreston,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaCuiaba,m.UTC_MINUS_4,c.AmazonTime;f.AmericaCuracao,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaDanmarkshavn,m.UTC_0,c.GreenwichMeanTime;f.AmericaDawson,m.UTC_MINUS_8,c.PacificStandardTime;f.AmericaDawsonCreek,m.UTC_MINUS_8,c.PacificStandardTime;f.AmericaDenver,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaDetroit,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaDominica,m.UTC_0,c.AtlanticStandardTime;f.AmericaEdmonton,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaEirunepe,m.UTC_MINUS_5,c.AcreTime;f.AmericaElSalvador,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaFortaleza,m.UTC_MINUS_3,c.BrasiliaTime;f.AmericaGlaceBay,m.UTC_0,c.AtlanticStandardTime;f.AmericaGodthab,m.UTC_MINUS_3,c.WestGreenlandTime;f.AmericaGooseBay,m.UTC_0,c.AtlanticStandardTime;f.AmericaGrandTurk,m.UTC_0,c.AtlanticStandardTime;f.AmericaGrenada,m.UTC_0,c.AtlanticStandardTime;f.AmericaGuadeloupe,m.UTC_0,c.AtlanticStandardTime;f.AmericaGuatemala,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaGuayaquil,m.UTC_MINUS_5,c.EcuadorTime;f.AmericaGuyana,m.UTC_0,c.AtlanticStandardTime;f.AmericaHalifax,m.UTC_0,c.AtlanticStandardTime;f.AmericaHavana,m.UTC_MINUS_5,c.CubaStandardTime;f.AmericaHermosillo,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaIndianaIndianapolis,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaIndianaKnox,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaIndianaMarengo,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaIndianaPetersburg,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaIndianaTellCity,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaIndianaVevay,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaIndianaVincennes,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaIndianaWinamac,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaInuvik,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaIqaluit,m.UTC_0,c.EasternStandardTime;f.AmericaJamaica,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaJuneau,m.UTC_MINUS_9,c.AlaskaStandardTime;f.AmericaKentuckyLouisville,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaKentuckyMonticello,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaKralendijk,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaLaPaz,m.UTC_MINUS_4,c.BoliviaTime;f.AmericaLima,m.UTC_MINUS_5,c.PeruTime;f.AmericaLosAngeles,m.UTC_MINUS_8,c.PacificStandardTime;f.AmericaLouisville,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaLowerPrinces,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaMaceio,m.UTC_MINUS_3,c.BrasiliaTime;f.AmericaManagua,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaManaus,m.UTC_MINUS_4,c.AmazonTime;f.AmericaMarigot,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaMartinique,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaMatamoros,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaMazatlan,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaMenominee,m.UTC_MINUS_5,c.CentralStandardTime;f.AmericaMerida,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaMetlakatla,m.UTC_MINUS_9,c.AlaskaStandardTime;f.AmericaMexicoCity,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaMiquelon,m.UTC_MINUS_3,c.SaintPierreAndMiquelonStandardTime;f.AmericaMoncton,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaMonterrey,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaMontevideo,m.UTC_MINUS_3,c.UruguayStandardTime;f.AmericaMontreal,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaMontserrat,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaNassau,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaNewYork,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaNipigon,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaNome,m.UTC_MINUS_9,c.AlaskaStandardTime;f.AmericaNoronha,m.UTC_MINUS_2,c.FernandoDeNoronhaTime;f.AmericaNorthDakotaBeulah,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaNorthDakotaCenter,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaNorthDakotaNewSalem,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaOjinaga,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaPanama,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaPangnirtung,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaParamaribo,m.UTC_MINUS_3,c.SurinameTime;f.AmericaPhoenix,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaPortAuPrince,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaPortOfSpain,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaPortoVelho,m.UTC_MINUS_4,c.AmazonTime;f.AmericaPuertoRico,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaRainyRiver,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaRankinInlet,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaRecife,m.UTC_MINUS_3,c.BrasiliaTime;f.AmericaRegina,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaResolute,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaRioBranco,m.UTC_MINUS_5,c.AcreTime;f.AmericaSantaIsabel,m.UTC_MINUS_8,c.PacificStandardTime;f.AmericaSantarem,m.UTC_MINUS_3,c.BrasiliaTime;f.AmericaSantiago,m.UTC_MINUS_4,c.ChileStandardTime;f.AmericaSantoDomingo,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaSaoPaulo,m.UTC_MINUS_3,c.BrasiliaTime;f.AmericaScoresbysund,m.UTC_MINUS_1,c.EasternGreenlandTime;f.AmericaShiprock,m.UTC_MINUS_7,c.MountainStandardTime;f.AmericaSitka,m.UTC_MINUS_9,c.AlaskaStandardTime;f.AmericaStBarthelemy,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaStJohns,m.UTC_MINUS_3,c.NewfoundlandStandardTime;f.AmericaStKitts,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaStLucia,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaStThomas,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaStVincent,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaSwiftCurrent,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaTegucigalpa,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaThule,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaThunderBay,m.UTC_MINUS_4,c.EasternStandardTime;f.AmericaTijuana,m.UTC_MINUS_8,c.PacificStandardTime;f.AmericaToronto,m.UTC_MINUS_5,c.EasternStandardTime;f.AmericaTortola,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AmericaVancouver,m.UTC_MINUS_8,c.PacificStandardTime;f.AmericaWhitehorse,m.UTC_MINUS_8,c.PacificStandardTime;f.AmericaWinnipeg,m.UTC_MINUS_6,c.CentralStandardTime;f.AmericaYakutat,m.UTC_MINUS_9,c.AlaskaStandardTime;f.AmericaYellowknife,m.UTC_MINUS_6,c.MountainStandardTime;f.AntarcticaCasey,m.UTC_MINUS_8,c.WesternStandardTime;f.AntarcticaDavis,m.UTC_MINUS_7,c.NewfoundlandStandardTime;f.AntarcticaDumontDUrville,m.UTC_MINUS_10,c.CentralStandardTime;f.AntarcticaMacquarie,m.UTC_MINUS_11,c.CentralStandardTime;f.AntarcticaMawson,m.UTC_MINUS_6,c.CentralStandardTime;f.AntarcticaMcMurdo,m.UTC_MINUS_12,c.NewZealandStandardTime;f.AntarcticaPalmer,m.UTC_MINUS_4,c.ChathamStandardTime;f.AntarcticaRothera,m.UTC_MINUS_3,c.RotheraResearchStationTime;f.AntarcticaSyowa,m.UTC_MINUS_3,c.ShowaStationTime;f.AntarcticaTroll,m.UTC_MINUS_2,c.CentralStandardTime;f.AntarcticaVostok,m.UTC_MINUS_6,c.CentralStandardTime;f.ArcticLongyearbyen,m.UTC_MINUS_1,c.CentralEuropeanTime;f.AsiaAden,m.UTC_PLUS_3,c.ArabiaStandardTime;f.AsiaAlmaty,m.UTC_PLUS_6,c.AlmaAtaTime;f.AsiaAmman,m.UTC_PLUS_2,c.EasternEuropeanTime;f.AsiaAnadyr,m.UTC_PLUS_12,c.NewCaledoniaTime;f.AsiaAqtau,m.UTC_PLUS_5,c.AqtobeTime;f.AsiaAqtobe,m.UTC_PLUS_5,c.AqtobeTime;f.AsiaAshgabat,m.UTC_PLUS_5,c.TurkmenistanTime;f.AsiaBaghdad,m.UTC_PLUS_3,c.ArabiaStandardTime;f.AsiaBahrain,m.UTC_PLUS_3,c.ArabiaStandardTime;f.AsiaBaku,m.UTC_PLUS_4,c.AzerbaijanTime;f.AsiaBangkok,m.UTC_PLUS_7,c.IndochinaTime;f.AsiaBarnaul,m.UTC_PLUS_7,c.KrasnoyarskTime;f.AsiaBeirut,m.UTC_PLUS_2,c.EasternEuropeanTime;f.AsiaBishkek,m.UTC_PLUS_6,c.KyrgyzstanTime;f.AsiaBrunei,m.UTC_PLUS_8,c.BruneiTime;f.AsiaChita,m.UTC_PLUS_9,c.YakutskTime;f.AsiaChoibalsan,m.UTC_PLUS_8,c.ChoibalsanStandardTime;f.AsiaColombo,m.UTC_PLUS_5,c.IndianStandardTime;f.AsiaDamascus,m.UTC_PLUS_2,c.EasternEuropeanTime;f.AsiaDhaka,m.UTC_PLUS_6,c.BangladeshStandardTime;f.AsiaDili,m.UTC_PLUS_9,c.JapanStandardTime;f.AsiaDubai,m.UTC_PLUS_4,c.GulfStandardTime;f.AsiaDushanbe,m.UTC_PLUS_5,c.TajikistanTime;f.AsiaFamagusta,m.UTC_PLUS_2,c.EasternEuropeanTime;f.AsiaGaza,m.UTC_PLUS_2,c.EasternEuropeanTime;f.AsiaHebron,m.UTC_PLUS_2,c.EasternEuropeanTime;f.AsiaHoChiMinh,m.UTC_PLUS_7,c.IndochinaTime;f.AsiaHongKong,m.UTC_PLUS_8,c.HongKongTime;f.AsiaHovd,m.UTC_PLUS_7,c.HovdTime;f.AsiaIrkutsk,m.UTC_PLUS_8,c.IrkutskTime;f.AsiaJakarta,m.UTC_PLUS_7,c.WesternIndonesianTime;f.AsiaJayapura,m.UTC_PLUS_9,c.JapanStandardTime;f.AsiaJerusalem,m.UTC_PLUS_2,c.EasternEuropeanTime;f.AsiaKabul,m.UTC_PLUS_4,c.AfghanistanTime;f.AsiaKamchatka,m.UTC_PLUS_12,c.KamchatkaTime;f.AsiaKarachi,m.UTC_PLUS_5,c.PakistanStandardTime;f.AsiaKathmandu,m.UTC_PLUS_5,c.NepalTime;f.AsiaKhandyga,m.UTC_PLUS_9,c.YakutskTime;f.AsiaKolkata,m.UTC_PLUS_5,c.IndianStandardTime;f.AsiaKrasnoyarsk,m.UTC_PLUS_7,c.KrasnoyarskTime;f.AsiaKualaLumpur,m.UTC_PLUS_8,c.MalaysiaStandardTime;f.AsiaKuching,m.UTC_PLUS_8,c.MalaysiaStandardTime;f.AsiaKuwait,m.UTC_PLUS_3,c.ArabiaStandardTime;f.AsiaMacau,m.UTC_PLUS_8,c.ChinaStandardTime;f.AsiaMagadan,m.UTC_PLUS_11,c.MagadanTime;f.AsiaMakassar,m.UTC_PLUS_8,c.MalaysiaTime;f.AsiaManila,m.UTC_PLUS_8,c.PhilippineTime;f.AsiaMuscat,m.UTC_PLUS_4,c.GulfStandardTime;f.AsiaNovokuznetsk,m.UTC_PLUS_6,c.NovosibirskTime;f.AsiaNovosibirsk,m.UTC_PLUS_6,c.NovosibirskTime;f.AsiaOmsk,m.UTC_PLUS_6,c.OmskTime;f.AsiaOral,m.UTC_PLUS_5,c.OralTime;f.AsiaPhnomPenh,m.UTC_PLUS_7,c.IndochinaTime;f.AsiaPontianak,m.UTC_PLUS_7,c.WesternIndonesianTime;f.AsiaPyongyang,m.UTC_PLUS_9,c.KoreaStandardTime;f.AsiaQatar,m.UTC_PLUS_3,c.ArabiaStandardTime;f.AsiaQyzylorda,m.UTC_PLUS_5,c.WestKazakhstanTime;f.AsiaRangoon,m.UTC_PLUS_6,c.MyanmarStandardTime;f.AsiaRiyadh,m.UTC_PLUS_3,c.ArabiaStandardTime;f.AsiaSakhalin,m.UTC_PLUS_11,c.SakhalinIslandTime;f.AsiaSamarkand,m.UTC_PLUS_5,c.UzbekistanTime;f.AsiaSeoul,m.UTC_PLUS_9,c.KoreaStandardTime;f.AsiaShanghai,m.UTC_PLUS_8,c.ChinaStandardTime;f.AsiaSingapore,m.UTC_PLUS_8,c.SingaporeStandardTime;f.AsiaSrednekolymsk,m.UTC_PLUS_11,c.SrednekolymskTime;f.AsiaTaipei,m.UTC_PLUS_8,c.ChinaStandardTime;f.AsiaTashkent,m.UTC_PLUS_5,c.UzbekistanTime;f.AsiaTbilisi,m.UTC_PLUS_4,c.GeorgiaStandardTime;f.AsiaTehran,m.UTC_PLUS_3,c.IranStandardTime;f.AsiaThimphu,m.UTC_PLUS_6,c.BhutanTime;f.AsiaTokyo,m.UTC_PLUS_9,c.JapanStandardTime;f.AsiaTomsk,m.UTC_PLUS_6,c.KrasnoyarskTime;f.AsiaUlaanbaatar,m.UTC_PLUS_8,c.UlaanbaatarStandardTime;f.AsiaUrumqi,m.UTC_PLUS_8,c.ChinaStandardTime;f.AsiaUstNera,m.UTC_PLUS_10,c.VladivostokTime;f.AsiaVientiane,m.UTC_PLUS_7,c.IndochinaTime;f.AsiaVladivostok,m.UTC_PLUS_10,c.VladivostokTime;f.AsiaYakutsk,m.UTC_PLUS_9,c.YakutskTime;f.AsiaYekaterinburg,m.UTC_PLUS_5,c.YekaterinburgTime;f.AsiaYerevan,m.UTC_PLUS_4,c.ArmeniaTime;f.AtlanticAzores,m.UTC_MINUS_1,c.AzoresStandardTime;f.AtlanticBermuda,m.UTC_MINUS_4,c.AtlanticStandardTime;f.AtlanticCanary,m.UTC_MINUS_1,c.WesternEuropeanTime;f.AtlanticCapeVerde,m.UTC_0,c.CapeVerdeTime;f.AtlanticFaroe,m.UTC_0,c.GreenwichMeanTime;f.AtlanticMadeira,m.UTC_0,c.WesternEuropeanTime;f.AtlanticReykjavik,m.UTC_0,c.GreenwichMeanTime;f.AtlanticSouthGeorgia,m.UTC_0,c.CoordinatedUniversalTime;f.AtlanticStHelena,m.UTC_0,c.GreenwichMeanTime;f.AtlanticStanley,m.UTC_0,c.FalklandIslandsTime;f.AustraliaAdelaide,m.UTC_PLUS_9_30,c.AustralianCentralStandardTime;f.AustraliaBrisbane,m.UTC_PLUS_10,c.AustralianEasternStandardTime;f.AustraliaBrokenHill,m.UTC_PLUS_9_30,c.AustralianCentralStandardTime;f.AustraliaCanberra,m.UTC_PLUS_10,c.AustralianEasternStandardTime;f.AustraliaCurrie,m.UTC_PLUS_10,c.AustralianEasternStandardTime;f.AustraliaDarwin,m.UTC_PLUS_9_30,c.AustralianCentralStandardTime;f.AustraliaEucla,m.UTC_PLUS_8_45,c.AustralianCentralWesternStandardTime;f.AustraliaHobart,m.UTC_PLUS_10,c.AustralianEasternStandardTime;f.AustraliaLindeman,m.UTC_PLUS_10,c.AustralianEasternStandardTime;f.AustraliaLordHowe,m.UTC_PLUS_10_30,c.LordHoweStandardTime;f.AustraliaMelbourne,m.UTC_PLUS_10,c.AustralianEasternStandardTime;f.AustraliaPerth,m.UTC_PLUS_8,c.AustralianWesternStandardTime;f.AustraliaSydney,m.UTC_PLUS_10,c.AustralianEasternStandardTime;f.EuropeAmsterdam,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeAndorra,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeAthens,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeBelgrade,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeBerlin,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeBratislava,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeBrussels,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeBucharest,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeBudapest,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeBusingen,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeChisinau,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeCopenhagen,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeDublin,m.UTC_0,c.GreenwichMeanTime;f.EuropeGibraltar,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeGuernsey,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeHelsinki,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeIsleOfMan,m.UTC_0,c.GreenwichMeanTime;f.EuropeIstanbul,m.UTC_PLUS_3,c.EasternEuropeanTime;f.EuropeJersey,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeKaliningrad,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeKiev,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeLisbon,m.UTC_0,c.GreenwichMeanTime;f.EuropeLjubljana,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeLondon,m.UTC_0,c.GreenwichMeanTime;f.EuropeLuxembourg,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeMadrid,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeMalta,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeMariehamn,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeMinsk,m.UTC_PLUS_3,c.EasternEuropeanTime;f.EuropeMonaco,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeMoscow,m.UTC_PLUS_3,c.EasternEuropeanTime;f.EuropeOslo,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeParis,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropePodgorica,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropePrague,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeRiga,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeRome,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeSamara,m.UTC_PLUS_4,c.EasternEuropeanTime;f.EuropeSanMarino,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeSarajevo,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeSimferopol,m.UTC_PLUS_3,c.EasternEuropeanTime;f.EuropeSkopje,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeSofia,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeStockholm,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeTallinn,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeTirane,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeUzhgorod,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeVaduz,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeVatican,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeVienna,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeVilnius,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeVolgograd,m.UTC_PLUS_4,c.EasternEuropeanTime;f.EuropeWarsaw,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeZagreb,m.UTC_PLUS_1,c.CentralEuropeanTime;f.EuropeZaporozhye,m.UTC_PLUS_2,c.EasternEuropeanTime;f.EuropeZurich,m.UTC_PLUS_1,c.CentralEuropeanTime;f.IndianAntananarivo,m.UTC_PLUS_3,c.EastAfricaTime;f.IndianChagos,m.UTC_PLUS_6,c.IndianOceanTime;f.IndianChristmas,m.UTC_PLUS_7,c.ChristmasIslandTime;f.IndianCocos,m.UTC_PLUS_6,c.CocosIslandsTime;f.IndianComoro,m.UTC_PLUS_3,c.EastAfricaTime;f.IndianKerguelen,m.UTC_PLUS_5,c.FrenchSouthernAndAntarcticTime;f.IndianMahe,m.UTC_PLUS_4,c.SeychellesTime;f.IndianMaldives,m.UTC_PLUS_5,c.MaldivesTime;f.IndianMauritius,m.UTC_PLUS_4,c.MauritiusTime;f.IndianMayotte,m.UTC_PLUS_3,c.EastAfricaTime;f.IndianReunion,m.UTC_PLUS_4,c.ReunionTime;f.PacificApia,m.UTC_PLUS_13,c.SamoaStandardTime;f.PacificAuckland,m.UTC_PLUS_13,c.NewZealandStandardTime;f.PacificChatham,m.UTC_PLUS_13,c.ChathamStandardTime;f.PacificEaster,m.UTC_PLUS_6,c.EasterIslandStandardTime;f.PacificEfate,m.UTC_PLUS_11,c.VanuatuTime;f.PacificEnderbury,m.UTC_PLUS_13,c.TongaTime;f.PacificFakaofo,m.UTC_PLUS_13,c.TongaTime;f.PacificFiji,m.UTC_PLUS_12,c.FijiTime;f.PacificFunafuti,m.UTC_PLUS_12,c.TuvaluTime;f.PacificGalapagos,m.UTC_PLUS_6,c.GalapagosTime;f.PacificGambier,m.UTC_PLUS_9,c.GambierIslandTime;f.PacificGuadalcanal,m.UTC_PLUS_11,c.SolomonIslandsTime;f.PacificGuam,m.UTC_PLUS_10,c.ChamorroStandardTime;f.PacificHonolulu,m.UTC_PLUS_10,c.HawaiiAleutianStandardTime;f.PacificJohnston,m.UTC_PLUS_10,c.HawaiiAleutianStandardTime;f.PacificKiritimati,m.UTC_PLUS_14,c.LineIslandsTime;f.PacificKosrae,m.UTC_PLUS_11,c.KosraeTime;f.PacificKwajalein,m.UTC_PLUS_12,c.MarshallIslandsTime;f.PacificMajuro,m.UTC_PLUS_12,c.MarshallIslandsTime;f.PacificMarquesas,m.UTC_PLUS_9,c.MarquesasIslandsTime;f.PacificMidway,m.UTC_PLUS_11,c.SamoaStandardTime;f.PacificNauru,m.UTC_PLUS_12,c.NauruTime;f.PacificNiue,m.UTC_PLUS_11,c.NiueTime;f.PacificNorfolk,m.UTC_PLUS_11,c.NorfolkIslandTime;f.PacificNoumea,m.UTC_PLUS_11,c.NewCaledoniaTime;f.PacificPagoPago,m.UTC_PLUS_11,c.SamoaStandardTime;f.PacificPalau,m.UTC_PLUS_9,c.PalauTime;f.PacificPitcairn,m.UTC_PLUS_8,c.PitcairnTime;f.PacificPonape,m.UTC_PLUS_11,c.PohnpeiStandardTime;f.PacificPortMoresby,m.UTC_PLUS_10,c.PapuaNewGuineaTime;f.PacificRarotonga,m.UTC_PLUS_10,c.CookIslandTime;f.PacificSaipan,m.UTC_PLUS_10,c.ChamorroStandardTime;f.PacificTahiti,m.UTC_PLUS_10,c.TahitiTime;f.PacificTarawa,m.UTC_PLUS_12,c.GilbertIslandTime;f.PacificTongatapu,m.UTC_PLUS_13,c.TongaTime;f.PacificChuuk,m.UTC_PLUS_10,c.ChuukTime;f.PacificPohnpei,m.UTC_PLUS_11,c.PohnpeiStandardTime;f.PacificYap,m.UTC_PLUS_10,c.ChuukTime;var l0=[{property:"name",enumerable:!1},{property:"message",enumerable:!1},{property:"stack",enumerable:!1},{property:"code",enumerable:!0}],tr=Symbol(".toJSON was called"),o0=a=>{a[tr]=!0;let b=a.toJSON();return delete a[tr],b},im=({from:a,seen:b,to_:N,forceEnumerable:x,maxDepth:L,depth:j})=>{let w=N||(Array.isArray(a)?[]:{});if(b.push(a),j>=L)return w;if(typeof a.toJSON=="function"&&a[tr]!==!0)return o0(a);for(let[O,$]of Object.entries(a)){if(typeof Buffer=="function"&&Buffer.isBuffer($)){w[O]="[object Buffer]";continue}if(typeof $!="function"){if(!$||typeof $!="object"){w[O]=$;continue}if(!b.includes(a[O])){j++,w[O]=im({from:a[O],seen:[...b],forceEnumerable:x,maxDepth:L,depth:j});continue}w[O]="[Circular]"}}for(let{property:O,enumerable:$}of l0)typeof a[O]=="string"&&Object.defineProperty(w,O,{value:a[O],enumerable:x?!0:$,configurable:!0,writable:!0});return w};function m0(a,b={}){let{maxDepth:N=Number.POSITIVE_INFINITY}=b;return typeof a=="object"&&a!==null?im({from:a,seen:[],forceEnumerable:!0,maxDepth:N,depth:0}):typeof a=="function"?`[Function: ${a.name||"anonymous"}]`:a}var D;(function(a){a[a.Warning=999]="Warning",a[a.Exception=1e3]="Exception",a[a.UnmanagedException=1001]="UnmanagedException",a[a.CaughtException=1002]="CaughtException",a[a.UncaughtException=1003]="UncaughtException",a[a.UnhandledPromiseRejectionException=1004]="UnhandledPromiseRejectionException",a[a.AuthenticationException=2e3]="AuthenticationException",a[a.AuthenticationExpiredAccessTokenException=2001]="AuthenticationExpiredAccessTokenException",a[a.AuthenticationInvalidAccessTokenException=2002]="AuthenticationInvalidAccessTokenException",a[a.AuthenticationMissingAccessTokenException=2003]="AuthenticationMissingAccessTokenException",a[a.AuthenticationExpiredRefreshTokenException=2004]="AuthenticationExpiredRefreshTokenException",a[a.AuthenticationInvalidRefreshTokenException=2005]="AuthenticationInvalidRefreshTokenException",a[a.AuthenticationMissingRefreshTokenException=2006]="AuthenticationMissingRefreshTokenException",a[a.AuthenticationMissingDeviceKeyException=2007]="AuthenticationMissingDeviceKeyException",a[a.AuthenticationUnAuthorizedAccessException=2008]="AuthenticationUnAuthorizedAccessException",a[a.AuthenticationCodeMismatchException=2009]="AuthenticationCodeMismatchException",a[a.AuthenticationExpiredCodeException=2010]="AuthenticationExpiredCodeException",a[a.AuthenticationLoginException=2011]="AuthenticationLoginException",a[a.AuthenticationLoginInvalidCredentialsException=2012]="AuthenticationLoginInvalidCredentialsException",a[a.AuthenticationLoginTooManyFailedAttemptsException=2013]="AuthenticationLoginTooManyFailedAttemptsException",a[a.AuthenticationLimitExceededException=2014]="AuthenticationLimitExceededException",a[a.AuthenticationUnauthorizedAccessException=2015]="AuthenticationUnauthorizedAccessException",a[a.AuthenticationTooManyRequestsException=2016]="AuthenticationTooManyRequestsException",a[a.AuthenticationUserNotFoundException=2017]="AuthenticationUserNotFoundException",a[a.AuthenticationSignupException=2018]="AuthenticationSignupException",a[a.AuthenticationUsernameAvailabilityCheckException=2019]="AuthenticationUsernameAvailabilityCheckException",a[a.AuthenticationUsernameExistsException=2020]="AuthenticationUsernameExistsException",a[a.AuthenticationAliasExistException=2021]="AuthenticationAliasExistException",a[a.AuthenticationCodeDeliveryFailureException=2022]="AuthenticationCodeDeliveryFailureException",a[a.AuthenticationMFAMethodNotFoundException=2023]="AuthenticationMFAMethodNotFoundException",a[a.AuthenticationNotAuthorizedException=2024]="AuthenticationNotAuthorizedException",a[a.AuthenticationPasswordResetRequiredException=2025]="AuthenticationPasswordResetRequiredException",a[a.AuthenticationUserNotConfirmedException=2026]="AuthenticationUserNotConfirmedException",a[a.DatabaseException=3e3]="DatabaseException",a[a.SequelizeNotInitializedException=3001]="SequelizeNotInitializedException",a[a.ProcessException=4e3]="ProcessException",a[a.ProcessWarningException=4001]="ProcessWarningException",a[a.KillProcessException=4002]="KillProcessException",a[a.FatalException=4003]="FatalException",a[a.ProcessSigTermException=4004]="ProcessSigTermException",a[a.ProcessSigIntException=4005]="ProcessSigIntException",a[a.MissingEnvironmentVariable=4006]="MissingEnvironmentVariable",a[a.NetworkException=5e3]="NetworkException",a[a.HttpException=5001]="HttpException",a[a.HttpRequestException=5002]="HttpRequestException",a[a.HttpRequestResourceNotFoundException=5003]="HttpRequestResourceNotFoundException",a[a.HttpResponseException=5004]="HttpResponseException",a[a.ServiceProviderException=6e3]="ServiceProviderException",a[a.AWSException=6001]="AWSException",a[a.AWSMissingAccessKeyException=6002]="AWSMissingAccessKeyException",a[a.AWSMissingSecretKeyException=6003]="AWSMissingSecretKeyException",a[a.CognitoException=6004]="CognitoException",a[a.CognitoInternalErrorException=6005]="CognitoInternalErrorException",a[a.CognitoInvalidEmailRoleAccessPolicyException=6006]="CognitoInvalidEmailRoleAccessPolicyException",a[a.CognitoInvalidLambdaResponseException=6007]="CognitoInvalidLambdaResponseException",a[a.CognitoUserLambdaValidationException=6008]="CognitoUserLambdaValidationException",a[a.CognitoInvalidParameterException=6009]="CognitoInvalidParameterException",a[a.CognitoInvalidSmsRoleAccessPolicyException=6010]="CognitoInvalidSmsRoleAccessPolicyException",a[a.CognitoInvalidSmsRoleTrustRelationshipException=6011]="CognitoInvalidSmsRoleTrustRelationshipException",a[a.CognitoInvalidUserPoolConfigurationException=6012]="CognitoInvalidUserPoolConfigurationException",a[a.CognitoResourceNotFoundException=6013]="CognitoResourceNotFoundException",a[a.CognitoMissingUserPoolClientIdException=6014]="CognitoMissingUserPoolClientIdException",a[a.CognitoMissingUserPoolIdException=6015]="CognitoMissingUserPoolIdException",a[a.CognitoUnexpectedLambdaException=6016]="CognitoUnexpectedLambdaException",a[a.StripeException=6017]="StripeException",a[a.StripeMissingSecretKeyException=6018]="StripeMissingSecretKeyException",a[a.StripeSubscriptionCreationFailedException=6019]="StripeSubscriptionCreationFailedException",a[a.StripePaymentMethodRequiredException=6020]="StripePaymentMethodRequiredException",a[a.UserException=7e3]="UserException",a[a.NullUserException=7001]="NullUserException",a[a.UserStateConflictException=7002]="UserStateConflictException",a[a.NullAccountException=7003]="NullAccountException",a[a.ValidationException=8e3]="ValidationException",a[a.InvalidTypeException=8001]="InvalidTypeException",a[a.MissingArgumentException=8002]="MissingArgumentException",a[a.MissingPropertyException=8003]="MissingPropertyException",a[a.InvalidArgumentException=8004]="InvalidArgumentException",a[a.InvalidPropertyException=8005]="InvalidPropertyException",a[a.MissingRequestBodyPropertyException=8006]="MissingRequestBodyPropertyException",a[a.MissingRequestUrlParameterException=8007]="MissingRequestUrlParameterException",a[a.MissingCookieException=8008]="MissingCookieException"})(D||(D={}));var c0=u0(),Ua=class extends Error{constructor(a,b){super(a);S(this,"cause"),S(this,"code",D.Exception),S(this,"context"),S(this,"created"),S(this,"data"),S(this,"description"),S(this,"model"),S(this,"environment",c0.id),S(this,"form"),S(this,"friendlyMessage","An unknown error has occurred. :("),S(this,"id"),S(this,"logLevel",R.Exception),S(this,"origin"),S(this,"pii"),S(this,"request"),S(this,"response"),S(this,"scope"),S(this,"remediation"),S(this,"tags"),S(this,"task"),S(this,"user"),S(this,"__proto__");var N,x,L,j;let w=new.target.prototype;if(this.__proto__=w,Error.captureStackTrace&&Error.captureStackTrace((N=b==null?void 0:b.cause)!=null?N:this,Ua),this.id=e0(),this.name=this.constructor.name,this.created=new Date().toString(),this.description=(x=b==null?void 0:b.description)!=null?x:this.description,this.remediation=(L=b==null?void 0:b.remediation)!=null?L:this.remediation,this.scope=(j=b==null?void 0:b.scope)!=null?j:this.scope,b){let{cause:O,context:$,data:C,model:da,form:ma,origin:ca,pii:va,request:ua,response:Z,tags:aa,task:Ia,user:fa}=b;this.cause=O,this.context=$,this.data=C,this.model=da,this.form=ma,this.origin=ca,this.pii=va,this.request=ua,this.response=Z,this.task=Ia,this.tags=aa,this.user=fa}}toJSON(){return m0(this)}},ba;(function(a){a.Simple="simple",a.ExponentialBackoff="exponential",a.CircuitBreaker="circuit_breaker"})(ba||(ba={}));var A0=class extends Ua{constructor(){super(...arguments);S(this,"code",D.UnmanagedException),S(this,"description",`An "Error" object that isn't managed by AppLab`),S(this,"friendlyMessage","An unknown error has occurred."),S(this,"remediation",{response:{code:500},retry:{limit:3}})}},d0=class extends Ua{constructor(){super(...arguments);S(this,"code",D.CaughtException),S(this,"description","An exception was caught within a try block."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3}})}},f0=class extends Ua{constructor(){super(...arguments);S(this,"code",D.UncaughtException),S(this,"description","An uncaught exception bubbled up and was caught automatically."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3}})}},g0=class extends Ua{constructor(){super(...arguments);S(this,"code",D.UnhandledPromiseRejectionException),S(this,"description","An unhandled promise rejection was caught automatically."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3}})}},me=class extends Ua{constructor(){super(...arguments);S(this,"code",D.ProcessException),S(this,"description","A exception was caught in a process."),S(this,"logLevel",R.Exception)}},h0=class extends me{constructor(){super(...arguments);S(this,"code",D.ProcessWarningException),S(this,"description","A warning was caught in a process."),S(this,"logLevel",R.Warning)}},_0=class extends me{constructor(){super(...arguments);S(this,"code",D.KillProcessException),S(this,"description",'Exception thrown to kill a Node.js "gracefully".'),S(this,"logLevel",R.Critical)}},I0=class extends me{constructor(){super(...arguments);S(this,"code",D.ProcessSigTermException),S(this,"description","Process received SIGTERM termination code."),S(this,"logLevel",R.Critical)}},p0=class extends me{constructor(){super(...arguments);S(this,"code",D.ProcessSigIntException),S(this,"description","Process received SIGINT termination code."),S(this,"logLevel",R.Critical)}},S0=class extends me{constructor(){super(...arguments);S(this,"code",D.FatalException),S(this,"description","An fatal exception occurred which has crashed the server."),S(this,"logLevel",R.Critical)}},E0=class extends me{constructor(){super(...arguments);S(this,"code",D.MissingEnvironmentVariable),S(this,"description","An environment variable is not set or unavailable."),S(this,"logLevel",R.Critical)}},v6=new Ja,Na=class extends Ua{constructor(){super(...arguments);S(this,"code",D.AuthenticationException),S(this,"description","Generic or unknown exceptions associated with user authentication."),S(this,"friendlyMessage","An unknown error occurred."),S(this,"logLevel",R.Warning),S(this,"remediation",{response:{code:401},retry:{limit:3,strategy:ba.CircuitBreaker}})}},T0=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationUnauthorizedAccessException),S(this,"description","User lacks permissions to access the requested resource."),S(this,"logLevel",R.Warning),S(this,"remediation",{response:{code:403},retry:!1})}},v0=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationLimitExceededException),S(this,"description","This exception is thrown when a user exceeds the limit for a requested AWS resource"),S(this,"friendlyMessage","You are trying to access this resource too often."),S(this,"logLevel",R.Warning),S(this,"remediation",{response:{code:429},retry:!1})}},b0=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationNotAuthorizedException),S(this,"description","The Auth user does not have permission to perform this action."),S(this,"friendlyMessage","You need to be logged in or have proper permissions to access this resource."),S(this,"logLevel",R.Warning),S(this,"remediation",{response:{code:403},retry:!1})}},U0=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationTooManyRequestsException),S(this,"description","This exception is thrown when the user has made too many requests for a given operation."),S(this,"friendlyMessage","You are trying to access this resource too often."),S(this,"logLevel",R.Warning),S(this,"remediation",{response:{code:429},retry:!1})}},N0=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationUserNotFoundException),S(this,"description","This exception is thrown when the Auth service cannot find a user with the provided username."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:!1})}},B0=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationPasswordResetRequiredException),S(this,"description","This exception is thrown when a password reset is required."),S(this,"friendlyMessage","A password reset is required in order to login."),S(this,"logLevel",R.Warning),S(this,"remediation",{response:{code:403},retry:!1})}},P0=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationLoginException),S(this,"description","An exception occurred while logging a user in."),S(this,"friendlyMessage","An unknown error occurred."),S(this,"logLevel",R.Critical),S(this,"remediation",{response:{code:500},retry:!0})}},y0=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationLoginInvalidCredentialsException),S(this,"description","Incorrect username or password provided."),S(this,"friendlyMessage","Incorrect username or password."),S(this,"logLevel",R.Info),S(this,"remediation",{response:{code:401},retry:!1})}},k0=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationLoginTooManyFailedAttemptsException),S(this,"description","This exception is thrown when the user has provided an incorrect username or password too many times."),S(this,"friendlyMessage","You've provided an incorrect username or password too many times."),S(this,"logLevel",R.Warning),S(this,"remediation",{response:{code:429},retry:!1})}},M0=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationMFAMethodNotFoundException),S(this,"description","This exception is thrown when the Auth service cannot find a multi-factor authentication (MFA) method."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:403},retry:{limit:3,strategy:ba.Simple}})}},D0=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationSignupException),S(this,"description","An exception occurred while signing up a user."),S(this,"friendlyMessage","An error occurred while signing up."),S(this,"logLevel",R.Critical),S(this,"remediation",{response:{code:500},retry:!0})}},mr=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationUsernameAvailabilityCheckException),S(this,"description","An exception occurred while checking if a username is available."),S(this,"friendlyMessage","An error occurred while checking if a username is available."),S(this,"logLevel",R.Critical),S(this,"remediation",{response:{code:500},retry:!0})}},x0=class extends mr{constructor(){super(...arguments);S(this,"code",D.AuthenticationUsernameExistsException),S(this,"description","User with email or phone number already exists."),S(this,"friendlyMessage","A user with that email already exists."),S(this,"logLevel",R.Warning),S(this,"remediation",{response:{code:400},retry:!1})}},F0=class extends mr{constructor(){super(...arguments);S(this,"code",D.AuthenticationAliasExistException),S(this,"description","This exception is thrown when a user tries to confirm the account with an email or phone number that has already been supplied as an alias from a different account. This exception tells user that an account with this email or phone already exists"),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:400},retry:!1})}},L0=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationExpiredRefreshTokenException),S(this,"description","The refresh token associated with a session has expired."),S(this,"logLevel",R.Warning),S(this,"remediation",{response:{code:401},retry:!1})}},w0=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationInvalidRefreshTokenException),S(this,"description","The refresh token associated with a session is invalid."),S(this,"logLevel",R.Warning),S(this,"remediation",{response:{code:401},retry:!1})}},Ro=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationMissingRefreshTokenException),S(this,"description","The refresh token associated with a session is missing."),S(this,"logLevel",R.Warning),S(this,"remediation",{response:{code:401},retry:!1})}},G0=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationCodeDeliveryFailureException),S(this,"description","This exception is thrown when a verification code fails to deliver successfully."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:ba.Simple}})}},q0=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationCodeMismatchException),S(this,"description","The verification code provided is incorrect"),S(this,"logLevel",R.Warning),S(this,"remediation",{response:{code:400},retry:!1})}},K0=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationExpiredCodeException),S(this,"description","The verification code provided has expired"),S(this,"logLevel",R.Warning),S(this,"remediation",{response:{code:403},retry:!1})}},O0=class extends Na{constructor(){super(...arguments);S(this,"code",D.AuthenticationUserNotConfirmedException),S(this,"description","This exception is thrown when a user who is not confirmed attempts to login."),S(this,"friendlyMessage","You haven't verified your email address or telephone number yet"),S(this,"logLevel",R.Warning),S(this,"remediation",{response:{code:403},retry:!1})}},nm=class extends Ua{constructor(){super(...arguments);S(this,"code",D.DatabaseException),S(this,"description","Generic or unknown database exceptions."),S(this,"logLevel",R.Exception)}},j0=class extends nm{constructor(){super(...arguments);S(this,"code",D.SequelizeNotInitializedException),S(this,"description","Generic or unknown database exceptions."),S(this,"logLevel",R.Exception)}},sm=class extends Ua{constructor(){super(...arguments);S(this,"code",D.NetworkException),S(this,"description","A network related issue has occurred."),S(this,"logLevel",R.Exception)}},cr=class extends sm{constructor(){super(...arguments);S(this,"code",D.HttpException),S(this,"description","A generic or unknown exception occurred related to an HTTP request."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:ba.CircuitBreaker}})}},xe=class extends cr{constructor(){super(...arguments);S(this,"code",D.HttpRequestException),S(this,"description","Base class for generic or unknown exceptions occuring during an HTTP request."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:ba.CircuitBreaker}})}},H0=class extends xe{constructor(){super(...arguments);S(this,"code",D.HttpRequestResourceNotFoundException),S(this,"description","The requested HTTP resource could not be found."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:404},retry:{limit:3,strategy:ba.CircuitBreaker}})}},W0=class extends xe{constructor(){super(...arguments);S(this,"code",D.MissingRequestBodyPropertyException),S(this,"description","HTTP request body is missing a required property."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:400},retry:!1})}},z0=class extends xe{constructor(){super(...arguments);S(this,"code",D.MissingRequestUrlParameterException),S(this,"description","HTTP request URL is missing a required parameter."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:400},retry:!1})}},V0=class extends xe{constructor(){super(...arguments);S(this,"code",D.MissingCookieException),S(this,"description","A required cookie is missing."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:!1})}},R0=class extends cr{constructor(){super(...arguments);S(this,"code",D.HttpRequestException),S(this,"description","Generic or unknown exceptions related to HTTP responses."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:!1})}},Ar=class extends Ua{constructor(){super(...arguments);S(this,"code",D.ServiceProviderException),S(this,"description","An error originating from a third-party or service provider occurred."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:ba.Simple}})}},dr=class extends Ar{constructor(){super(...arguments);S(this,"code",D.AWSException),S(this,"description","An exception originating from the AWS integration occurred."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:ba.Simple}})}},Yo=class extends dr{constructor(){super(...arguments);S(this,"code",D.StripeMissingSecretKeyException),S(this,"description","Missing AWS access key token."),S(this,"logLevel",R.Critical),S(this,"remediation",{response:{code:500},retry:!1})}},Ga=class extends dr{constructor(){super(...arguments);S(this,"code",D.AWSException),S(this,"description","An exception originating from the AWS Cognito integration occurred."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:ba.Simple}})}},Y0=class extends Ga{constructor(){super(...arguments);S(this,"code",D.CognitoInternalErrorException),S(this,"description","An internal error occurred originating from AWS Cognito."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:ba.Simple}})}},J0=class extends Ga{constructor(){super(...arguments);S(this,"code",D.CognitoInvalidUserPoolConfigurationException),S(this,"description","This exception is thrown when the user pool configuration is invalid."),S(this,"logLevel",R.Critical),S(this,"remediation",{response:{code:500},retry:!1})}},Z0=class extends Ga{constructor(){super(...arguments);S(this,"code",D.CognitoInvalidEmailRoleAccessPolicyException),S(this,"description","There is an access policy exception for the role provided for email configuration."),S(this,"logLevel",R.Critical),S(this,"remediation",{response:{code:500},retry:!1})}},$0=class extends Ga{constructor(){super(...arguments);S(this,"code",D.CognitoInvalidSmsRoleAccessPolicyException),S(this,"description","This exception is returned when the role provided for SMS configuration does not have permission to publish using Amazon SNS."),S(this,"logLevel",R.Critical),S(this,"remediation",{response:{code:500},retry:!1})}},Q0=class extends Ga{constructor(){super(...arguments);S(this,"code",D.CognitoInvalidSmsRoleTrustRelationshipException),S(this,"description","This exception is thrown when the trust relationship is invalid for the role provided for SMS configuration. This can happen if you do not trust -idp.amazonaws.com or the external ID provided in the role does not match what is provided in the SMS configuration for the user pool."),S(this,"logLevel",R.Critical),S(this,"remediation",{response:{code:500},retry:!1})}},X0=class extends Ga{constructor(){super(...arguments);S(this,"code",D.CognitoMissingUserPoolClientIdException),S(this,"description","Cognito user pool client ID configuration is missing."),S(this,"logLevel",R.Critical)}},C0=class extends Ga{constructor(){super(...arguments);S(this,"code",D.CognitoMissingUserPoolIdException),S(this,"description","Cognito user pool ID configuration is missing."),S(this,"logLevel",R.Critical)}},aA=class extends Ga{constructor(){super(...arguments);S(this,"code",D.CognitoUnexpectedLambdaException),S(this,"description","This exception is thrown when the Auth service encounters an unexpected exception with the AWS Lambda service."),S(this,"logLevel",R.Critical),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:ba.Simple}})}},eA=class extends Ga{constructor(){super(...arguments);S(this,"code",D.CognitoInvalidParameterException),S(this,"description","This exception is thrown when the Cognito service encounters an invalid parameter."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:ba.Simple}})}},iA=class extends Ga{constructor(){super(...arguments);S(this,"code",D.CognitoInvalidLambdaResponseException),S(this,"description","This exception is thrown when the Amazon service encounters an invalid AWS Lambda response."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:ba.Simple}})}},nA=class extends Ga{constructor(){super(...arguments);S(this,"code",D.CognitoResourceNotFoundException),S(this,"description","This exception is thrown when the Cognito service cannot find the requested resource."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:ba.Simple}})}},sA=class extends Ga{constructor(){super(...arguments);S(this,"code",D.CognitoUserLambdaValidationException),S(this,"description","This exception is thrown when the Cognito service encounters a user validation exception with the AWS Lambda service."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:ba.Simple}})}},zi=class extends Ar{constructor(){super(...arguments);S(this,"code",D.StripeException),S(this,"description","An exception occurred relating to Stripe."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:ba.Simple}})}},rA=class extends zi{constructor(){super(...arguments);S(this,"code",D.StripeMissingSecretKeyException),S(this,"description","The Stripe secret key token is missing."),S(this,"logLevel",R.Critical),S(this,"remediation",{response:{code:500},retry:!1})}},tA=class extends zi{constructor(){super(...arguments);S(this,"code",D.StripeSubscriptionCreationFailedException),S(this,"description","Stripe subscription creation failed."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:ba.Simple}})}},uA=class extends zi{constructor(){super(...arguments);S(this,"code",D.StripePaymentMethodRequiredException),S(this,"description","An updated payment method is required."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:500},retry:{limit:3,strategy:ba.Simple}})}},fr=class extends Ua{constructor(){super(...arguments);S(this,"code",D.UserException),S(this,"description","Generic or unknown exceptions related to a user."),S(this,"logLevel",R.Exception)}},lA=class extends fr{constructor(){super(...arguments);S(this,"code",D.NullUserException),S(this,"description","An operation was performed on behalf a user that cannot be found in the database."),S(this,"logLevel",R.Critical)}},oA=class extends fr{constructor(){super(...arguments);S(this,"code",D.UserStateConflictException),S(this,"description","Exception used for user state that exists in one system or another and isn't being actively managed, or synced between all systems, or at least differences accounted for."),S(this,"logLevel",R.Critical)}},mA=class extends Ua{constructor(){super(...arguments);S(this,"code",D.ValidationException),S(this,"description","Generic or otherwise unknown input validation exception."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:400},retry:!1})}},cA=class extends Ua{constructor(){super(...arguments);S(this,"code",D.InvalidTypeException),S(this,"description","Instance type is invalid."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:400},retry:!1})}},AA=class extends Ua{constructor(){super(...arguments);S(this,"code",D.MissingArgumentException),S(this,"description","A required argument is missing."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:400},retry:!1})}},dA=class extends Ua{constructor(){super(...arguments);S(this,"code",D.MissingPropertyException),S(this,"description","A required property is missing."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:400},retry:!1})}},fA=class extends Ua{constructor(){super(...arguments);S(this,"code",D.InvalidArgumentException),S(this,"description","An argument is invalid."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:400},retry:!1})}},gA=class extends Ua{constructor(){super(...arguments);S(this,"code",D.InvalidPropertyException),S(this,"description","An object property is invalid."),S(this,"logLevel",R.Exception),S(this,"remediation",{response:{code:400},retry:!1})}},b6={[D.Exception]:Ua,[D.UnmanagedException]:A0,[D.CaughtException]:d0,[D.UncaughtException]:f0,[D.UnhandledPromiseRejectionException]:g0,[D.AuthenticationException]:Na,[D.AuthenticationExpiredRefreshTokenException]:L0,[D.AuthenticationInvalidRefreshTokenException]:w0,[D.AuthenticationLoginException]:P0,[D.AuthenticationLoginInvalidCredentialsException]:y0,[D.AuthenticationLoginTooManyFailedAttemptsException]:k0,[D.AuthenticationMissingDeviceKeyException]:Ro,[D.AuthenticationMissingRefreshTokenException]:Ro,[D.AuthenticationUnauthorizedAccessException]:T0,[D.AuthenticationCodeMismatchException]:q0,[D.AuthenticationExpiredCodeException]:K0,[D.AuthenticationLimitExceededException]:v0,[D.AuthenticationNotAuthorizedException]:b0,[D.AuthenticationTooManyRequestsException]:U0,[D.AuthenticationUserNotFoundException]:N0,[D.AuthenticationSignupException]:D0,[D.AuthenticationUsernameAvailabilityCheckException]:mr,[D.AuthenticationAliasExistException]:F0,[D.AuthenticationUsernameExistsException]:x0,[D.AuthenticationCodeDeliveryFailureException]:G0,[D.AuthenticationMFAMethodNotFoundException]:M0,[D.AuthenticationPasswordResetRequiredException]:B0,[D.AuthenticationUserNotConfirmedException]:O0,[D.DatabaseException]:nm,[D.SequelizeNotInitializedException]:j0,[D.ServiceProviderException]:Ar,[D.AWSException]:dr,[D.AWSMissingAccessKeyException]:Yo,[D.AWSMissingSecretKeyException]:Yo,[D.CognitoException]:Ga,[D.CognitoInternalErrorException]:Y0,[D.CognitoInvalidEmailRoleAccessPolicyException]:Z0,[D.CognitoInvalidSmsRoleAccessPolicyException]:$0,[D.CognitoInvalidSmsRoleTrustRelationshipException]:Q0,[D.CognitoUnexpectedLambdaException]:aA,[D.CognitoInvalidUserPoolConfigurationException]:J0,[D.CognitoInvalidLambdaResponseException]:iA,[D.CognitoInvalidParameterException]:eA,[D.CognitoMissingUserPoolIdException]:C0,[D.CognitoMissingUserPoolClientIdException]:X0,[D.CognitoResourceNotFoundException]:nA,[D.CognitoUserLambdaValidationException]:sA,[D.StripeException]:zi,[D.StripeSubscriptionCreationFailedException]:tA,[D.StripeMissingSecretKeyException]:rA,[D.StripePaymentMethodRequiredException]:uA,[D.NetworkException]:sm,[D.HttpException]:cr,[D.HttpRequestException]:xe,[D.HttpRequestResourceNotFoundException]:H0,[D.HttpResponseException]:R0,[D.MissingRequestBodyPropertyException]:W0,[D.MissingRequestUrlParameterException]:z0,[D.MissingCookieException]:V0,[D.ValidationException]:mA,[D.InvalidArgumentException]:fA,[D.InvalidPropertyException]:gA,[D.InvalidTypeException]:cA,[D.MissingArgumentException]:AA,[D.MissingPropertyException]:dA,[D.ProcessException]:me,[D.ProcessWarningException]:h0,[D.ProcessSigTermException]:I0,[D.ProcessSigIntException]:p0,[D.FatalException]:S0,[D.MissingEnvironmentVariable]:E0,[D.KillProcessException]:_0,[D.UserException]:fr,[D.NullUserException]:lA,[D.UserStateConflictException]:oA};lr.default.config.update({region:process.env.AWS_REGION});var Jo=new Ja;async function hA(a){try{let b=new lr.default.SSM({region:process.env.AWS_REGION}),N={Names:a,WithDecryption:!1},x=await b.getParameters(N).promise();return Jo.debug({data:x.Parameters,message:"AWS SSM Parameters"}),x.Parameters}catch(b){let N=new Ua(`Error caught in getParameters(): ${b.name}`,{cause:b,tags:{file:""}});Jo.exception(N)}}var ne=$o(kc()),se=$o(Oc()),tm=class{constructor(a){this.db={},this.connection=a.connection,this.models=a.models}async getDbCluster(){var j,w,O;let a=await hA(["/app-lab-test/db/aurora-postgresql-cluster"]);if(!a)return;let b={DBClusterIdentifier:(j=a==null?void 0:a[0])==null?void 0:j.Value},L=(w=(await new rm.default.RDS().describeDBClusters(b).promise()).DBClusters)==null?void 0:w[0];if(L)return this.cluster={database:L.DatabaseName,host:L.Endpoint,password:(O=this.connection)==null?void 0:O.password,port:L.Port,username:L.MasterUsername},L}async getClient(){var a,b;if(!(!this.cluster||!this.cluster.database||!this.cluster.username||!this.cluster.password||!this.cluster.host)){this.client=new Vi.Sequelize(this.cluster.database,this.cluster.username,this.cluster.password,{dialect:"postgres",host:this.cluster.host,port:this.cluster.port,ssl:!0});for(let[N,x]of Object.entries(this.models)){let L=x(this.client,Vi.DataTypes);this.db[N]=L}for(let[N,x]of Object.entries(this.db))(b=(a=this.db[N])==null?void 0:a.associate)==null||b.call(a,this.db);return this.client}}async connect({alter:a=!1,force:b=!1}){var N,x;if(await this.getDbCluster(),await this.getClient(),this.cluster&&!((x=(N=this.connection)==null?void 0:N.bastion)==null?void 0:x.host))try{if(this.client)return this.client.sync({alter:a,force:b})}catch(L){console.error(L)}}async create(a,b){var x,L;let N="";if(Object.entries(this.db).forEach(([j,w])=>{j===(0,ne.singular)((0,se.pascalCase)(a))&&(N=j)}),!!N)return Array.isArray(b)?(x=this.db[N])==null?void 0:x.bulkCreate(b):(L=this.db[N])==null?void 0:L.create(b)}async deleteMany(a,b){var L,j;let N="";return Object.entries(this.db).forEach(([w,O])=>{w===(0,ne.singular)((0,se.pascalCase)(a))&&(N=w)}),N?await((j=(L=this.db)==null?void 0:L[N])==null?void 0:j.destroy({where:{id:b}})):void 0}async deleteOne(a,b){var L,j;let N="";return Object.entries(this.db).forEach(([w,O])=>{w===(0,ne.singular)((0,se.pascalCase)(a))&&(N=w)}),!N||!b?void 0:await((j=(L=this.db)==null?void 0:L[N])==null?void 0:j.destroy({where:{id:b}}))}async getOne(a,b){var x,L;let N="";if(Object.entries(this.db).forEach(([j,w])=>{j===(0,ne.singular)((0,se.pascalCase)(a))&&(N=j)}),!!N)return(L=(x=this.db)==null?void 0:x[N])==null?void 0:L.findOne({where:{id:b}})}async getMany(a,b){var x,L,j,w;let N="";if(Object.entries(this.db).forEach(([O,$])=>{O===(0,ne.singular)((0,se.pascalCase)(a))&&(N=O)}),!!N)return console.log("filters",b==null?void 0:b.filters),console.log("limit",b==null?void 0:b.limit),(b==null?void 0:b.filters)?(L=(x=this.db)==null?void 0:x[N])==null?void 0:L.findAll({where:b.filters}):(console.log("asdf"),(w=(j=this.db)==null?void 0:j[N])==null?void 0:w.findAll())}async updateMany(a,b){var L,j;let N="";return Object.entries(this.db).forEach(([w,O])=>{w===(0,ne.singular)((0,se.pascalCase)(a))&&(N=w)}),N?await((j=(L=this.db)==null?void 0:L[N])==null?void 0:j.upsert(b)):void 0}async updateOne(a,b,N){var j,w;let x="";if(Object.entries(this.db).forEach(([O,$])=>{O===(0,ne.singular)((0,se.pascalCase)(a))&&(x=O)}),!x)return;let L=await((w=(j=this.db)==null?void 0:j[x])==null?void 0:w.findOne({where:{id:b}}));if(!!L)return await L.update(N),L}};var um=new Ja,om=class{constructor(b){this.config=b}async start(){var N,x,L;if(um.info("Starting Core API Server"),!((N=this.config)==null?void 0:N.db.connection))throw new Aa("Core API Server config is missing connection");this.db=new tm({connection:this.config.db.connection,models:this.config.db.models}),new lm.HttpServer({endpoints:[{handler:Qa({aws:this.config.aws,dataClient:this.db}).create,method:Ka.Post,route:"/:model"},{handler:Qa({aws:this.config.aws,dataClient:this.db}).deleteMany,method:Ka.Delete,route:"/:model"},{handler:Qa({aws:this.config.aws,dataClient:this.db}).deleteOne,method:Ka.Delete,route:"/:model/:id"},{handler:Qa({aws:this.config.aws,dataClient:this.db}).getMany,method:Ka.Get,route:"/:model"},{handler:Qa({aws:this.config.aws,dataClient:this.db}).getOne,method:Ka.Get,route:"/:model/:id"},{handler:Qa({aws:this.config.aws,dataClient:this.db}).updateMany,method:Ka.Put,route:"/:model"},{handler:Qa({aws:this.config.aws,dataClient:this.db}).updateOne,method:Ka.Put,route:"/:model/:id"}],name:"core-api"}).listen(),await this.db.connect({alter:(x=this.config.db.alter)!=null?x:!1,force:(L=this.config.db.force)!=null?L:!1}),um.info("Core API Server started")}};module.exports=Ac(_A);0&&(module.exports={CoreAPIServer});
/*
object-assign
(c) Sindre Sorhus
@license MIT
*/
/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
/** @license React v17.0.2
 * react.development.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
/** @license React v17.0.2
 * react.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
//# sourceMappingURL=index.cjs.js.map
